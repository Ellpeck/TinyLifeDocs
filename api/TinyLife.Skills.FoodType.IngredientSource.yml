### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  id: FoodType.IngredientSource
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.FoodType.IngredientSource.Barbecue
  - TinyLife.Skills.FoodType.IngredientSource.Fridge
  - TinyLife.Skills.FoodType.IngredientSource.Other
  - TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  langs:
  - csharp
  - vb
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
  type: Enum
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: IngredientSource
    path: Skills/FoodType.cs
    startLine: 295
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn enumeration of possible sources that the ingredients for a <xref href=\"TinyLife.Skills.FoodType\" data-throw-if-not-resolved=\"false\"></xref> can be aquired by.\nFor custom food types like the base game&apos;s glasses of water, <xref href=\"TinyLife.Skills.FoodType.IngredientSource.Other\" data-throw-if-not-resolved=\"false\"></xref> should be used.\n"
  example: []
  syntax:
    content: public enum IngredientSource
    content.vb: Public Enum IngredientSource
  extensionMethods:
  - TinyLife.Skills.FoodType.IngredientSource.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Skills.FoodType.IngredientSource.Other
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Other
  id: Other
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Other
  nameWithType: FoodType.IngredientSource.Other
  fullName: TinyLife.Skills.FoodType.IngredientSource.Other
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Other
    path: Skills/FoodType.cs
    startLine: 300
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that don&apos;t match any of the other sources\n"
  example: []
  syntax:
    content: Other = 0
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Skills.FoodType.IngredientSource.Fridge
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Fridge
  id: Fridge
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Fridge
  nameWithType: FoodType.IngredientSource.Fridge
  fullName: TinyLife.Skills.FoodType.IngredientSource.Fridge
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Fridge
    path: Skills/FoodType.cs
    startLine: 304
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that are created using the <xref href=\"TinyLife.Actions.ActionType.GetIngredientsSingle\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.GetIngredientsFamily\" data-throw-if-not-resolved=\"false\"></xref> actions\n"
  example: []
  syntax:
    content: Fridge = 1
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  id: ProteinShakeMaker
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: ProteinShakeMaker
  nameWithType: FoodType.IngredientSource.ProteinShakeMaker
  fullName: TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: ProteinShakeMaker
    path: Skills/FoodType.cs
    startLine: 308
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that are created using the <xref href=\"TinyLife.Actions.ActionType.MixProteinShake\" data-throw-if-not-resolved=\"false\"></xref> action\n"
  example: []
  syntax:
    content: ProteinShakeMaker = 2
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Skills.FoodType.IngredientSource.Barbecue
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Barbecue
  id: Barbecue
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Barbecue
  nameWithType: FoodType.IngredientSource.Barbecue
  fullName: TinyLife.Skills.FoodType.IngredientSource.Barbecue
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Barbecue
    path: Skills/FoodType.cs
    startLine: 312
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that are created using the <xref href=\"TinyLife.Actions.ActionType.GrillFood\" data-throw-if-not-resolved=\"false\"></xref> action\n"
  example: []
  syntax:
    content: Barbecue = 3
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Skills.FoodType.IngredientSource.Other
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Other
  isExternal: true
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
- uid: TinyLife.Skills.FoodType.IngredientSource.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<FoodType.IngredientSource>()
  nameWithType: Extensions.JsonCopy<FoodType.IngredientSource>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.IngredientSource>()
  nameWithType.vb: Extensions.JsonCopy(Of FoodType.IngredientSource)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.IngredientSource)()
  name.vb: JsonCopy(Of FoodType.IngredientSource)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<FoodType.IngredientSource>
    nameWithType: Extensions.JsonCopy<FoodType.IngredientSource>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.IngredientSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of FoodType.IngredientSource)
    nameWithType: Extensions.JsonCopy(Of FoodType.IngredientSource)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.IngredientSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  parent: TinyLife.Skills
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  isExternal: true
- uid: TinyLife.Actions.ActionType.GetIngredientsFamily
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsFamily
  isExternal: true
- uid: TinyLife.Actions.ActionType.MixProteinShake
  commentId: F:TinyLife.Actions.ActionType.MixProteinShake
  isExternal: true
- uid: TinyLife.Actions.ActionType.GrillFood
  commentId: F:TinyLife.Actions.ActionType.GrillFood
  isExternal: true
