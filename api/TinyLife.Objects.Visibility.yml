### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Visibility
  commentId: T:TinyLife.Objects.Visibility
  id: Visibility
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Visibility.HideZoomedOut
  - TinyLife.Objects.Visibility.WhenVisible
  - TinyLife.Objects.Visibility.WhenVisibleExt
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: Visibility
  fullName: TinyLife.Objects.Visibility
  type: Enum
  source:
    remote:
      path: TinyLife/Objects/MapObject.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Visibility
    path: Objects/MapObject.cs
    startLine: 582
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn enumeration that represents visibility settings for <xref href=\"TinyLife.Objects.MapObject\" data-throw-if-not-resolved=\"false\"></xref> objects\n"
  example: []
  syntax:
    content: public enum Visibility
    content.vb: Public Enum Visibility
  extensionMethods:
  - TinyLife.Objects.Visibility.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Objects.Visibility.WhenVisible
  commentId: F:TinyLife.Objects.Visibility.WhenVisible
  id: WhenVisible
  parent: TinyLife.Objects.Visibility
  langs:
  - csharp
  - vb
  name: WhenVisible
  nameWithType: Visibility.WhenVisible
  fullName: TinyLife.Objects.Visibility.WhenVisible
  type: Field
  source:
    remote:
      path: TinyLife/Objects/MapObject.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: WhenVisible
    path: Objects/MapObject.cs
    startLine: 587
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA visibility setting that causes the object to be visible only when the <xref href=\"TinyLife.World.MapSection\" data-throw-if-not-resolved=\"false\"></xref> it is in is in view\n"
  example: []
  syntax:
    content: WhenVisible = 0
    return:
      type: TinyLife.Objects.Visibility
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Objects.Visibility.WhenVisibleExt
  commentId: F:TinyLife.Objects.Visibility.WhenVisibleExt
  id: WhenVisibleExt
  parent: TinyLife.Objects.Visibility
  langs:
  - csharp
  - vb
  name: WhenVisibleExt
  nameWithType: Visibility.WhenVisibleExt
  fullName: TinyLife.Objects.Visibility.WhenVisibleExt
  type: Field
  source:
    remote:
      path: TinyLife/Objects/MapObject.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: WhenVisibleExt
    path: Objects/MapObject.cs
    startLine: 591
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA visibility setting that causes the object to be visible when the <xref href=\"TinyLife.World.MapSection\" data-throw-if-not-resolved=\"false\"></xref> it is in, or any adjacent map section, is in view\n"
  example: []
  syntax:
    content: WhenVisibleExt = 1
    return:
      type: TinyLife.Objects.Visibility
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Objects.Visibility.HideZoomedOut
  commentId: F:TinyLife.Objects.Visibility.HideZoomedOut
  id: HideZoomedOut
  parent: TinyLife.Objects.Visibility
  langs:
  - csharp
  - vb
  name: HideZoomedOut
  nameWithType: Visibility.HideZoomedOut
  fullName: TinyLife.Objects.Visibility.HideZoomedOut
  type: Field
  source:
    remote:
      path: TinyLife/Objects/MapObject.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: HideZoomedOut
    path: Objects/MapObject.cs
    startLine: 595
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA visibility setting that causes the object to be visible when the <xref href=\"TinyLife.World.MapSection\" data-throw-if-not-resolved=\"false\"></xref> it is in is in view, but only if the game <xref href=\"MLEM.Cameras.Camera\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"MLEM.Cameras.Camera.Scale\" data-throw-if-not-resolved=\"false\"></xref> is greather than 1\n"
  example: []
  syntax:
    content: HideZoomedOut = 2
    return:
      type: TinyLife.Objects.Visibility
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Objects.Visibility.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Visibility>()
  nameWithType: Extensions.JsonCopy<Visibility>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Visibility>()
  nameWithType.vb: Extensions.JsonCopy(Of Visibility)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Visibility)()
  name.vb: JsonCopy(Of Visibility)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Visibility>
    nameWithType: Extensions.JsonCopy<Visibility>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Visibility>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Visibility)
    nameWithType: Extensions.JsonCopy(Of Visibility)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Visibility)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.MapSection
  commentId: T:TinyLife.World.MapSection
  parent: TinyLife.World
  name: MapSection
  nameWithType: MapSection
  fullName: TinyLife.World.MapSection
- uid: TinyLife.Objects.Visibility
  commentId: T:TinyLife.Objects.Visibility
  parent: TinyLife.Objects
  name: Visibility
  nameWithType: Visibility
  fullName: TinyLife.Objects.Visibility
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: MLEM.Cameras.Camera
  commentId: T:MLEM.Cameras.Camera
  parent: MLEM.Cameras
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: MLEM.Cameras.Camera
- uid: MLEM.Cameras.Camera.Scale
  commentId: P:MLEM.Cameras.Camera.Scale
  isExternal: true
- uid: MLEM.Cameras
  commentId: N:MLEM.Cameras
  isExternal: true
  name: MLEM.Cameras
  nameWithType: MLEM.Cameras
  fullName: MLEM.Cameras
