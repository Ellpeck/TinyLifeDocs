### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.Menus
  commentId: T:TinyLife.Uis.Menus
  id: Menus
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.Menus.CreateCoveringUi(System.Boolean,System.Func{System.Boolean},System.Boolean)
  langs:
  - csharp
  - vb
  name: Menus
  nameWithType: Menus
  fullName: TinyLife.Uis.Menus
  type: Class
  source:
    remote:
      path: TinyLife/Uis/Menus.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Menus
    path: Uis/Menus.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nA set of static methods to deal with <xref href=\"MLEM.Ui\" data-throw-if-not-resolved=\"false\"></xref> and in-game menus\n"
  example: []
  syntax:
    content: public static class Menus
    content.vb: Public Module Menus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TinyLife.Uis.Menus.CreateCoveringUi(System.Boolean,System.Func{System.Boolean},System.Boolean)
  commentId: M:TinyLife.Uis.Menus.CreateCoveringUi(System.Boolean,System.Func{System.Boolean},System.Boolean)
  id: CreateCoveringUi(System.Boolean,System.Func{System.Boolean},System.Boolean)
  parent: TinyLife.Uis.Menus
  langs:
  - csharp
  - vb
  name: CreateCoveringUi(Boolean, Func<Boolean>, Boolean)
  nameWithType: Menus.CreateCoveringUi(Boolean, Func<Boolean>, Boolean)
  fullName: TinyLife.Uis.Menus.CreateCoveringUi(System.Boolean, System.Func<System.Boolean>, System.Boolean)
  type: Method
  source:
    remote:
      path: TinyLife/Uis/Menus.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateCoveringUi
    path: Uis/Menus.cs
    startLine: 49
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nCreates a <xref href=\"MLEM.Ui.Elements.Group\" data-throw-if-not-resolved=\"false\"></xref> with an optional gradient background that disallows clicking on ui elements and in-world objects below it.\nAdditionally, a close button can be added to any <xref href=\"MLEM.Ui.Elements.Panel\" data-throw-if-not-resolved=\"false\"></xref> objects added to this group automatically.\n"
  example: []
  syntax:
    content: public static Group CreateCoveringUi(bool background = true, Func<bool> exitCondition = null, bool hasCloseButton = true)
    parameters:
    - id: background
      type: System.Boolean
      description: Whether a gradient background should be displayed
    - id: exitCondition
      type: System.Func{System.Boolean}
      description: A condition that determines whether clicking on the background closes the ui. If this is null, the ui can always be closed.
    - id: hasCloseButton
      type: System.Boolean
      description: Whether a close button should be added to the first <xref href="MLEM.Ui.Elements.Panel" data-throw-if-not-resolved="false"></xref> that is added to the group as a child
    return:
      type: MLEM.Ui.Elements.Group
      description: A covering ui group
    content.vb: Public Shared Function CreateCoveringUi(background As Boolean = True, exitCondition As Func(Of Boolean) = Nothing, hasCloseButton As Boolean = True) As Group
  overload: TinyLife.Uis.Menus.CreateCoveringUi*
  nameWithType.vb: Menus.CreateCoveringUi(Boolean, Func(Of Boolean), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TinyLife.Uis.Menus.CreateCoveringUi(System.Boolean, System.Func(Of System.Boolean), System.Boolean)
  name.vb: CreateCoveringUi(Boolean, Func(Of Boolean), Boolean)
references:
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  isExternal: true
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: MLEM.Ui.Elements.Panel
  commentId: T:MLEM.Ui.Elements.Panel
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Panel
  nameWithType: Panel
  fullName: MLEM.Ui.Elements.Panel
- uid: TinyLife.Uis.Menus.CreateCoveringUi*
  commentId: Overload:TinyLife.Uis.Menus.CreateCoveringUi
  name: CreateCoveringUi
  nameWithType: Menus.CreateCoveringUi
  fullName: TinyLife.Uis.Menus.CreateCoveringUi
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
