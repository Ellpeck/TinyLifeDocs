### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.StudentJobType
  commentId: T:TinyLife.Goals.StudentJobType
  id: StudentJobType
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.StudentJobType.#ctor(System.String,System.Single,MonoGame.Extended.Range{System.Int32},System.DayOfWeek[])
  - TinyLife.Goals.StudentJobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  - TinyLife.Goals.StudentJobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  langs:
  - csharp
  - vb
  name: StudentJobType
  nameWithType: StudentJobType
  fullName: TinyLife.Goals.StudentJobType
  type: Class
  source:
    remote:
      path: TinyLife/Goals/StudentJobType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StudentJobType
    path: Goals/StudentJobType.cs
    startLine: 10
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA <xref href=\"TinyLife.Goals.JobType\" data-throw-if-not-resolved=\"false\"></xref> for school students\n"
  example: []
  syntax:
    content: 'public class StudentJobType : JobType, IGenericDataHolder'
    content.vb: >-
      Public Class StudentJobType
          Inherits JobType
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  - TinyLife.Goals.JobType
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Goals.JobType.Types
  - TinyLife.Goals.JobType.Name
  - TinyLife.Goals.JobType.HourlyPay
  - TinyLife.Goals.JobType.WorkHours
  - TinyLife.Goals.JobType.OffWorkDays
  - TinyLife.Goals.JobType.RequiredPromotionSkills
  - TinyLife.Goals.JobType.MaxLevel
  - TinyLife.Goals.JobType.HasSpecialLocalization
  - TinyLife.Goals.JobType.RequiredAges
  - TinyLife.Goals.JobType.CanQuitOrBeFired
  - TinyLife.Goals.JobType.DailyTasks
  - TinyLife.Goals.JobType.DailyTaskImportance
  - TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
  - TinyLife.Goals.JobType.IsTimeToWork(System.Nullable{System.TimeSpan})
  - TinyLife.Goals.JobType.ToScheduleString
  - TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
  - TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  - TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  - TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.StudentJobType.TinyLife.Utilities.Extensions.JsonCopy``1
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Goals.StudentJobType.#ctor(System.String,System.Single,MonoGame.Extended.Range{System.Int32},System.DayOfWeek[])
  commentId: M:TinyLife.Goals.StudentJobType.#ctor(System.String,System.Single,MonoGame.Extended.Range{System.Int32},System.DayOfWeek[])
  id: '#ctor(System.String,System.Single,MonoGame.Extended.Range{System.Int32},System.DayOfWeek[])'
  parent: TinyLife.Goals.StudentJobType
  langs:
  - csharp
  - vb
  name: StudentJobType(String, Single, Range<Int32>, DayOfWeek[])
  nameWithType: StudentJobType.StudentJobType(String, Single, Range<Int32>, DayOfWeek[])
  fullName: TinyLife.Goals.StudentJobType.StudentJobType(System.String, System.Single, MonoGame.Extended.Range<System.Int32>, System.DayOfWeek[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/StudentJobType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: Goals/StudentJobType.cs
    startLine: 13
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCreates a new job type with the given settings\n"
  example: []
  syntax:
    content: public StudentJobType(string name, float hourlyPay, Range<int> workHours, params DayOfWeek[] offWorkDays)
    parameters:
    - id: name
      type: System.String
      description: The name of the job
    - id: hourlyPay
      type: System.Single
      description: The hourly wage that this job yields
    - id: workHours
      type: MonoGame.Extended.Range{System.Int32}
      description: A range of hours to work each day
    - id: offWorkDays
      type: System.DayOfWeek[]
      description: The days of the week that are off work
    content.vb: Public Sub New(name As String, hourlyPay As Single, workHours As Range(Of Integer), ParamArray offWorkDays As DayOfWeek())
  overload: TinyLife.Goals.StudentJobType.#ctor*
  nameWithType.vb: StudentJobType.StudentJobType(String, Single, Range(Of Int32), DayOfWeek())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Goals.StudentJobType.StudentJobType(System.String, System.Single, MonoGame.Extended.Range(Of System.Int32), System.DayOfWeek())
  name.vb: StudentJobType(String, Single, Range(Of Int32), DayOfWeek())
- uid: TinyLife.Goals.StudentJobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  commentId: M:TinyLife.Goals.StudentJobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  id: OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  parent: TinyLife.Goals.StudentJobType
  langs:
  - csharp
  - vb
  name: OnWorkFinished(Job, WorkAction)
  nameWithType: StudentJobType.OnWorkFinished(Job, WorkAction)
  fullName: TinyLife.Goals.StudentJobType.OnWorkFinished(TinyLife.Goals.Job, TinyLife.Actions.WorkAction)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/StudentJobType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnWorkFinished
    path: Goals/StudentJobType.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA method that is called when a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> finishes a <xref href=\"TinyLife.Actions.WorkAction\" data-throw-if-not-resolved=\"false\"></xref> for this job.\nBy default, some emotion modifiers are randomly applied.\n"
  example: []
  syntax:
    content: public override void OnWorkFinished(Job job, WorkAction action)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    - id: action
      type: TinyLife.Actions.WorkAction
      description: The work action that was completed
    content.vb: Public Overrides Sub OnWorkFinished(job As Job, action As WorkAction)
  overridden: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  overload: TinyLife.Goals.StudentJobType.OnWorkFinished*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Goals.StudentJobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  commentId: M:TinyLife.Goals.StudentJobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  id: OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  parent: TinyLife.Goals.StudentJobType
  langs:
  - csharp
  - vb
  name: OnLevelChanged(Job, Int32)
  nameWithType: StudentJobType.OnLevelChanged(Job, Int32)
  fullName: TinyLife.Goals.StudentJobType.OnLevelChanged(TinyLife.Goals.Job, System.Int32)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/StudentJobType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnLevelChanged
    path: Goals/StudentJobType.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA method that is called when a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> is promoted or demoted for this job.\nBy default, some emotion modifiers are applied.\n"
  example: []
  syntax:
    content: public override void OnLevelChanged(Job job, int levelDifference)
    parameters:
    - id: job
      type: TinyLife.Goals.Job
      description: The job instance
    - id: levelDifference
      type: System.Int32
      description: The level difference that was applied. If the person was demoted, this value is -1, else it is 1.
    content.vb: Public Overrides Sub OnLevelChanged(job As Job, levelDifference As Integer)
  overridden: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  overload: TinyLife.Goals.StudentJobType.OnLevelChanged*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  parent: TinyLife.Goals
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Goals.JobType.Types
  commentId: F:TinyLife.Goals.JobType.Types
  parent: TinyLife.Goals.JobType
  name: Types
  nameWithType: JobType.Types
  fullName: TinyLife.Goals.JobType.Types
- uid: TinyLife.Goals.JobType.Name
  commentId: F:TinyLife.Goals.JobType.Name
  parent: TinyLife.Goals.JobType
  name: Name
  nameWithType: JobType.Name
  fullName: TinyLife.Goals.JobType.Name
- uid: TinyLife.Goals.JobType.HourlyPay
  commentId: F:TinyLife.Goals.JobType.HourlyPay
  parent: TinyLife.Goals.JobType
  name: HourlyPay
  nameWithType: JobType.HourlyPay
  fullName: TinyLife.Goals.JobType.HourlyPay
- uid: TinyLife.Goals.JobType.WorkHours
  commentId: F:TinyLife.Goals.JobType.WorkHours
  parent: TinyLife.Goals.JobType
  name: WorkHours
  nameWithType: JobType.WorkHours
  fullName: TinyLife.Goals.JobType.WorkHours
- uid: TinyLife.Goals.JobType.OffWorkDays
  commentId: F:TinyLife.Goals.JobType.OffWorkDays
  parent: TinyLife.Goals.JobType
  name: OffWorkDays
  nameWithType: JobType.OffWorkDays
  fullName: TinyLife.Goals.JobType.OffWorkDays
- uid: TinyLife.Goals.JobType.RequiredPromotionSkills
  commentId: P:TinyLife.Goals.JobType.RequiredPromotionSkills
  parent: TinyLife.Goals.JobType
  name: RequiredPromotionSkills
  nameWithType: JobType.RequiredPromotionSkills
  fullName: TinyLife.Goals.JobType.RequiredPromotionSkills
- uid: TinyLife.Goals.JobType.MaxLevel
  commentId: P:TinyLife.Goals.JobType.MaxLevel
  parent: TinyLife.Goals.JobType
  name: MaxLevel
  nameWithType: JobType.MaxLevel
  fullName: TinyLife.Goals.JobType.MaxLevel
- uid: TinyLife.Goals.JobType.HasSpecialLocalization
  commentId: P:TinyLife.Goals.JobType.HasSpecialLocalization
  parent: TinyLife.Goals.JobType
  name: HasSpecialLocalization
  nameWithType: JobType.HasSpecialLocalization
  fullName: TinyLife.Goals.JobType.HasSpecialLocalization
- uid: TinyLife.Goals.JobType.RequiredAges
  commentId: P:TinyLife.Goals.JobType.RequiredAges
  parent: TinyLife.Goals.JobType
  name: RequiredAges
  nameWithType: JobType.RequiredAges
  fullName: TinyLife.Goals.JobType.RequiredAges
- uid: TinyLife.Goals.JobType.CanQuitOrBeFired
  commentId: P:TinyLife.Goals.JobType.CanQuitOrBeFired
  parent: TinyLife.Goals.JobType
  name: CanQuitOrBeFired
  nameWithType: JobType.CanQuitOrBeFired
  fullName: TinyLife.Goals.JobType.CanQuitOrBeFired
- uid: TinyLife.Goals.JobType.DailyTasks
  commentId: P:TinyLife.Goals.JobType.DailyTasks
  parent: TinyLife.Goals.JobType
  name: DailyTasks
  nameWithType: JobType.DailyTasks
  fullName: TinyLife.Goals.JobType.DailyTasks
- uid: TinyLife.Goals.JobType.DailyTaskImportance
  commentId: P:TinyLife.Goals.JobType.DailyTaskImportance
  parent: TinyLife.Goals.JobType
  name: DailyTaskImportance
  nameWithType: JobType.DailyTaskImportance
  fullName: TinyLife.Goals.JobType.DailyTaskImportance
- uid: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
  commentId: M:TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
  parent: TinyLife.Goals.JobType
  isExternal: true
  name: Construct(Person, Int32)
  nameWithType: JobType.Construct(Person, Int32)
  fullName: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person, System.Int32)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
    name: Construct
    nameWithType: JobType.Construct
    fullName: TinyLife.Goals.JobType.Construct
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.Construct(TinyLife.Objects.Person,System.Int32)
    name: Construct
    nameWithType: JobType.Construct
    fullName: TinyLife.Goals.JobType.Construct
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.IsTimeToWork(System.Nullable{System.TimeSpan})
  commentId: M:TinyLife.Goals.JobType.IsTimeToWork(System.Nullable{System.TimeSpan})
  parent: TinyLife.Goals.JobType
  isExternal: true
  name: IsTimeToWork(Nullable<TimeSpan>)
  nameWithType: JobType.IsTimeToWork(Nullable<TimeSpan>)
  fullName: TinyLife.Goals.JobType.IsTimeToWork(System.Nullable<System.TimeSpan>)
  nameWithType.vb: JobType.IsTimeToWork(Nullable(Of TimeSpan))
  fullName.vb: TinyLife.Goals.JobType.IsTimeToWork(System.Nullable(Of System.TimeSpan))
  name.vb: IsTimeToWork(Nullable(Of TimeSpan))
  spec.csharp:
  - uid: TinyLife.Goals.JobType.IsTimeToWork(System.Nullable{System.TimeSpan})
    name: IsTimeToWork
    nameWithType: JobType.IsTimeToWork
    fullName: TinyLife.Goals.JobType.IsTimeToWork
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.IsTimeToWork(System.Nullable{System.TimeSpan})
    name: IsTimeToWork
    nameWithType: JobType.IsTimeToWork
    fullName: TinyLife.Goals.JobType.IsTimeToWork
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.ToScheduleString
  commentId: M:TinyLife.Goals.JobType.ToScheduleString
  parent: TinyLife.Goals.JobType
  name: ToScheduleString()
  nameWithType: JobType.ToScheduleString()
  fullName: TinyLife.Goals.JobType.ToScheduleString()
  spec.csharp:
  - uid: TinyLife.Goals.JobType.ToScheduleString
    name: ToScheduleString
    nameWithType: JobType.ToScheduleString
    fullName: TinyLife.Goals.JobType.ToScheduleString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.ToScheduleString
    name: ToScheduleString
    nameWithType: JobType.ToScheduleString
    fullName: TinyLife.Goals.JobType.ToScheduleString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
  commentId: M:TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
  parent: TinyLife.Goals.JobType
  isExternal: true
  name: GetDisplayName(Nullable<Int32>)
  nameWithType: JobType.GetDisplayName(Nullable<Int32>)
  fullName: TinyLife.Goals.JobType.GetDisplayName(System.Nullable<System.Int32>)
  nameWithType.vb: JobType.GetDisplayName(Nullable(Of Int32))
  fullName.vb: TinyLife.Goals.JobType.GetDisplayName(System.Nullable(Of System.Int32))
  name.vb: GetDisplayName(Nullable(Of Int32))
  spec.csharp:
  - uid: TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
    name: GetDisplayName
    nameWithType: JobType.GetDisplayName
    fullName: TinyLife.Goals.JobType.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.GetDisplayName(System.Nullable{System.Int32})
    name: GetDisplayName
    nameWithType: JobType.GetDisplayName
    fullName: TinyLife.Goals.JobType.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  name: GetRequiredPromotionSkills(Job)
  nameWithType: JobType.GetRequiredPromotionSkills(Job)
  fullName: TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
    name: GetRequiredPromotionSkills
    nameWithType: JobType.GetRequiredPromotionSkills
    fullName: TinyLife.Goals.JobType.GetRequiredPromotionSkills
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.GetRequiredPromotionSkills(TinyLife.Goals.Job)
    name: GetRequiredPromotionSkills
    nameWithType: JobType.GetRequiredPromotionSkills
    fullName: TinyLife.Goals.JobType.GetRequiredPromotionSkills
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  name: OnWorkStartsInAnHour(Job)
  nameWithType: JobType.OnWorkStartsInAnHour(Job)
  fullName: TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
    name: OnWorkStartsInAnHour
    nameWithType: JobType.OnWorkStartsInAnHour
    fullName: TinyLife.Goals.JobType.OnWorkStartsInAnHour
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.OnWorkStartsInAnHour(TinyLife.Goals.Job)
    name: OnWorkStartsInAnHour
    nameWithType: JobType.OnWorkStartsInAnHour
    fullName: TinyLife.Goals.JobType.OnWorkStartsInAnHour
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  commentId: M:TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  parent: TinyLife.Goals.JobType
  name: OnWorkHoursOver(Job)
  nameWithType: JobType.OnWorkHoursOver(Job)
  fullName: TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
    name: OnWorkHoursOver
    nameWithType: JobType.OnWorkHoursOver
    fullName: TinyLife.Goals.JobType.OnWorkHoursOver
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.OnWorkHoursOver(TinyLife.Goals.Job)
    name: OnWorkHoursOver
    nameWithType: JobType.OnWorkHoursOver
    fullName: TinyLife.Goals.JobType.OnWorkHoursOver
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  commentId: M:TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  parent: TinyLife.Goals.JobType
  name: OnWorkStarted(Job, WorkAction)
  nameWithType: JobType.OnWorkStarted(Job, WorkAction)
  fullName: TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job, TinyLife.Actions.WorkAction)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
    name: OnWorkStarted
    nameWithType: JobType.OnWorkStarted
    fullName: TinyLife.Goals.JobType.OnWorkStarted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.WorkAction
    name: WorkAction
    nameWithType: WorkAction
    fullName: TinyLife.Actions.WorkAction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.OnWorkStarted(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
    name: OnWorkStarted
    nameWithType: JobType.OnWorkStarted
    fullName: TinyLife.Goals.JobType.OnWorkStarted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.WorkAction
    name: WorkAction
    nameWithType: WorkAction
    fullName: TinyLife.Actions.WorkAction
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  commentId: M:TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  parent: TinyLife.Goals.JobType
  name: Register(JobType)
  nameWithType: JobType.Register(JobType)
  fullName: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
    name: Register
    nameWithType: JobType.Register
    fullName: TinyLife.Goals.JobType.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.JobType
    name: JobType
    nameWithType: JobType
    fullName: TinyLife.Goals.JobType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.Register(TinyLife.Goals.JobType)
    name: Register
    nameWithType: JobType.Register
    fullName: TinyLife.Goals.JobType.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.JobType
    name: JobType
    nameWithType: JobType
    fullName: TinyLife.Goals.JobType
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.StudentJobType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<StudentJobType>()
  nameWithType: Extensions.JsonCopy<StudentJobType>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.StudentJobType>()
  nameWithType.vb: Extensions.JsonCopy(Of StudentJobType)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.StudentJobType)()
  name.vb: JsonCopy(Of StudentJobType)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<StudentJobType>
    nameWithType: Extensions.JsonCopy<StudentJobType>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.StudentJobType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of StudentJobType)
    nameWithType: Extensions.JsonCopy(Of StudentJobType)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.StudentJobType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  name: GetTimeSpan(String)
  nameWithType: Extensions.GetTimeSpan(String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  name: SetTimeSpan(String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  isExternal: true
  name: GetTimeSpan(IGenericDataHolder, String)
  nameWithType: Extensions.GetTimeSpan(IGenericDataHolder, String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  isExternal: true
  name: SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Goals.StudentJobType.#ctor*
  commentId: Overload:TinyLife.Goals.StudentJobType.#ctor
  name: StudentJobType
  nameWithType: StudentJobType.StudentJobType
  fullName: TinyLife.Goals.StudentJobType.StudentJobType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MonoGame.Extended.Range{System.Int32}
  commentId: T:MonoGame.Extended.Range{System.Int32}
  parent: MonoGame.Extended
  definition: MonoGame.Extended.Range`1
  name: Range<Int32>
  nameWithType: Range<Int32>
  fullName: MonoGame.Extended.Range<System.Int32>
  nameWithType.vb: Range(Of Int32)
  fullName.vb: MonoGame.Extended.Range(Of System.Int32)
  name.vb: Range(Of Int32)
  spec.csharp:
  - uid: MonoGame.Extended.Range`1
    name: Range
    nameWithType: Range
    fullName: MonoGame.Extended.Range
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MonoGame.Extended.Range`1
    name: Range
    nameWithType: Range
    fullName: MonoGame.Extended.Range
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DayOfWeek[]
  isExternal: true
  name: DayOfWeek[]
  nameWithType: DayOfWeek[]
  fullName: System.DayOfWeek[]
  nameWithType.vb: DayOfWeek()
  fullName.vb: System.DayOfWeek()
  name.vb: DayOfWeek()
  spec.csharp:
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DayOfWeek
    name: DayOfWeek
    nameWithType: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MonoGame.Extended.Range`1
  commentId: T:MonoGame.Extended.Range`1
  isExternal: true
  name: Range<T>
  nameWithType: Range<T>
  fullName: MonoGame.Extended.Range<T>
  nameWithType.vb: Range(Of T)
  fullName.vb: MonoGame.Extended.Range(Of T)
  name.vb: Range(Of T)
  spec.csharp:
  - uid: MonoGame.Extended.Range`1
    name: Range
    nameWithType: Range
    fullName: MonoGame.Extended.Range
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MonoGame.Extended.Range`1
    name: Range
    nameWithType: Range
    fullName: MonoGame.Extended.Range
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MonoGame.Extended
  commentId: N:MonoGame.Extended
  isExternal: true
  name: MonoGame.Extended
  nameWithType: MonoGame.Extended
  fullName: MonoGame.Extended
- uid: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  commentId: M:TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
  parent: TinyLife.Goals.JobType
  name: OnWorkFinished(Job, WorkAction)
  nameWithType: JobType.OnWorkFinished(Job, WorkAction)
  fullName: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job, TinyLife.Actions.WorkAction)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
    name: OnWorkFinished
    nameWithType: JobType.OnWorkFinished
    fullName: TinyLife.Goals.JobType.OnWorkFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.WorkAction
    name: WorkAction
    nameWithType: WorkAction
    fullName: TinyLife.Actions.WorkAction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.OnWorkFinished(TinyLife.Goals.Job,TinyLife.Actions.WorkAction)
    name: OnWorkFinished
    nameWithType: JobType.OnWorkFinished
    fullName: TinyLife.Goals.JobType.OnWorkFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.WorkAction
    name: WorkAction
    nameWithType: WorkAction
    fullName: TinyLife.Actions.WorkAction
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.StudentJobType.OnWorkFinished*
  commentId: Overload:TinyLife.Goals.StudentJobType.OnWorkFinished
  name: OnWorkFinished
  nameWithType: StudentJobType.OnWorkFinished
  fullName: TinyLife.Goals.StudentJobType.OnWorkFinished
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.Actions.WorkAction
  commentId: T:TinyLife.Actions.WorkAction
  parent: TinyLife.Actions
  name: WorkAction
  nameWithType: WorkAction
  fullName: TinyLife.Actions.WorkAction
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  commentId: M:TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
  parent: TinyLife.Goals.JobType
  isExternal: true
  name: OnLevelChanged(Job, Int32)
  nameWithType: JobType.OnLevelChanged(Job, Int32)
  fullName: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job, System.Int32)
  spec.csharp:
  - uid: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
    name: OnLevelChanged
    nameWithType: JobType.OnLevelChanged
    fullName: TinyLife.Goals.JobType.OnLevelChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.JobType.OnLevelChanged(TinyLife.Goals.Job,System.Int32)
    name: OnLevelChanged
    nameWithType: JobType.OnLevelChanged
    fullName: TinyLife.Goals.JobType.OnLevelChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.Job
    name: Job
    nameWithType: Job
    fullName: TinyLife.Goals.Job
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.StudentJobType.OnLevelChanged*
  commentId: Overload:TinyLife.Goals.StudentJobType.OnLevelChanged
  name: OnLevelChanged
  nameWithType: StudentJobType.OnLevelChanged
  fullName: TinyLife.Goals.StudentJobType.OnLevelChanged
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
