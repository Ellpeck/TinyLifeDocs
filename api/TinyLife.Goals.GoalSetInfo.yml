### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.GoalSetInfo
  commentId: T:TinyLife.Goals.GoalSetInfo
  id: GoalSetInfo
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.GoalSetInfo.#ctor(TinyLife.Goals.GoalInfo[])
  - TinyLife.Goals.GoalSetInfo.Configurations
  - TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)
  langs:
  - csharp
  - vb
  name: GoalSetInfo
  nameWithType: GoalSetInfo
  fullName: TinyLife.Goals.GoalSetInfo
  type: Class
  source:
    remote:
      path: TinyLife/Goals/GoalSet.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GoalSetInfo
    path: Goals/GoalSet.cs
    startLine: 14
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal set info is the information required to construct a <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref> instance\n"
  example: []
  syntax:
    content: 'public class GoalSetInfo : GenericDataHolder, IGenericDataHolder'
    content.vb: >-
      Public Class GoalSetInfo
          Inherits GenericDataHolder
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.GoalSetInfo.TinyLife.Utilities.Extensions.JsonCopy``1
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Goals.GoalSetInfo.Configurations
  commentId: F:TinyLife.Goals.GoalSetInfo.Configurations
  id: Configurations
  parent: TinyLife.Goals.GoalSetInfo
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: GoalSetInfo.Configurations
  fullName: TinyLife.Goals.GoalSetInfo.Configurations
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalSet.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Configurations
    path: Goals/GoalSet.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe <xref href=\"TinyLife.Goals.GoalInfo\" data-throw-if-not-resolved=\"false\"></xref> configurations that determine which <xref href=\"TinyLife.Goals.Goal\" data-throw-if-not-resolved=\"false\"></xref> instances will be constructed in <xref href=\"TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public readonly Dictionary<string, GoalInfo> Configurations
    return:
      type: System.Collections.Generic.Dictionary{System.String,TinyLife.Goals.GoalInfo}
    content.vb: Public ReadOnly Configurations As Dictionary(Of String, GoalInfo)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.GoalSetInfo.#ctor(TinyLife.Goals.GoalInfo[])
  commentId: M:TinyLife.Goals.GoalSetInfo.#ctor(TinyLife.Goals.GoalInfo[])
  id: '#ctor(TinyLife.Goals.GoalInfo[])'
  parent: TinyLife.Goals.GoalSetInfo
  langs:
  - csharp
  - vb
  name: GoalSetInfo(GoalInfo[])
  nameWithType: GoalSetInfo.GoalSetInfo(GoalInfo[])
  fullName: TinyLife.Goals.GoalSetInfo.GoalSetInfo(TinyLife.Goals.GoalInfo[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/GoalSet.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: .ctor
    path: Goals/GoalSet.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCreates a new goal set info with the given goal informations\n"
  example: []
  syntax:
    content: public GoalSetInfo(params GoalInfo[] configurations)
    parameters:
    - id: configurations
      type: TinyLife.Goals.GoalInfo[]
      description: The goal information
    content.vb: Public Sub New(ParamArray configurations As GoalInfo())
  overload: TinyLife.Goals.GoalSetInfo.#ctor*
  nameWithType.vb: GoalSetInfo.GoalSetInfo(GoalInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Goals.GoalSetInfo.GoalSetInfo(TinyLife.Goals.GoalInfo())
  name.vb: GoalSetInfo(GoalInfo())
- uid: TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)
  id: Construct(TinyLife.Objects.Person)
  parent: TinyLife.Goals.GoalSetInfo
  langs:
  - csharp
  - vb
  name: Construct(Person)
  nameWithType: GoalSetInfo.Construct(Person)
  fullName: TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/GoalSet.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Construct
    path: Goals/GoalSet.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nConstructs a new goal set from this goal set information\n"
  example: []
  syntax:
    content: public GoalSet Construct(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person to construct the goal set for
    return:
      type: TinyLife.Goals.GoalSet
      description: The goal set
    content.vb: Public Function Construct(person As Person) As GoalSet
  overload: TinyLife.Goals.GoalSetInfo.Construct*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.GoalSetInfo.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GoalSetInfo>()
  nameWithType: Extensions.JsonCopy<GoalSetInfo>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalSetInfo>()
  nameWithType.vb: Extensions.JsonCopy(Of GoalSetInfo)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalSetInfo)()
  name.vb: JsonCopy(Of GoalSetInfo)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<GoalSetInfo>
    nameWithType: Extensions.JsonCopy<GoalSetInfo>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalSetInfo>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of GoalSetInfo)
    nameWithType: Extensions.JsonCopy(Of GoalSetInfo)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalSetInfo)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  name: GetTimeSpan(String)
  nameWithType: Extensions.GetTimeSpan(String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  name: SetTimeSpan(String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  isExternal: true
  name: GetTimeSpan(IGenericDataHolder, String)
  nameWithType: Extensions.GetTimeSpan(IGenericDataHolder, String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  isExternal: true
  name: SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Goals.GoalInfo
  commentId: T:TinyLife.Goals.GoalInfo
  parent: TinyLife.Goals
  name: GoalInfo
  nameWithType: GoalInfo
  fullName: TinyLife.Goals.GoalInfo
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  parent: TinyLife.Goals
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
- uid: TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.GoalSetInfo.Construct(TinyLife.Objects.Person)
  isExternal: true
- uid: System.Collections.Generic.Dictionary{System.String,TinyLife.Goals.GoalInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,TinyLife.Goals.GoalInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, GoalInfo>
  nameWithType: Dictionary<String, GoalInfo>
  fullName: System.Collections.Generic.Dictionary<System.String, TinyLife.Goals.GoalInfo>
  nameWithType.vb: Dictionary(Of String, GoalInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, TinyLife.Goals.GoalInfo)
  name.vb: Dictionary(Of String, GoalInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalInfo
    name: GoalInfo
    nameWithType: GoalInfo
    fullName: TinyLife.Goals.GoalInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalInfo
    name: GoalInfo
    nameWithType: GoalInfo
    fullName: TinyLife.Goals.GoalInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Goals.GoalSetInfo.#ctor*
  commentId: Overload:TinyLife.Goals.GoalSetInfo.#ctor
  name: GoalSetInfo
  nameWithType: GoalSetInfo.GoalSetInfo
  fullName: TinyLife.Goals.GoalSetInfo.GoalSetInfo
- uid: TinyLife.Goals.GoalInfo[]
  isExternal: true
  name: GoalInfo[]
  nameWithType: GoalInfo[]
  fullName: TinyLife.Goals.GoalInfo[]
  nameWithType.vb: GoalInfo()
  fullName.vb: TinyLife.Goals.GoalInfo()
  name.vb: GoalInfo()
  spec.csharp:
  - uid: TinyLife.Goals.GoalInfo
    name: GoalInfo
    nameWithType: GoalInfo
    fullName: TinyLife.Goals.GoalInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.Goals.GoalInfo
    name: GoalInfo
    nameWithType: GoalInfo
    fullName: TinyLife.Goals.GoalInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TinyLife.Goals.GoalSetInfo.Construct*
  commentId: Overload:TinyLife.Goals.GoalSetInfo.Construct
  name: Construct
  nameWithType: GoalSetInfo.Construct
  fullName: TinyLife.Goals.GoalSetInfo.Construct
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
