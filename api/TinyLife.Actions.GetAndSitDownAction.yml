### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.GetAndSitDownAction
  commentId: T:TinyLife.Actions.GetAndSitDownAction
  id: GetAndSitDownAction
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.GetAndSitDownAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk
  - TinyLife.Actions.GetAndSitDownAction.AndThenInitialize
  - TinyLife.Actions.GetAndSitDownAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  - TinyLife.Actions.GetAndSitDownAction.CreateFirstActions
  - TinyLife.Actions.GetAndSitDownAction.ForceTable
  - TinyLife.Actions.GetAndSitDownAction.GetIconObject
  - TinyLife.Actions.GetAndSitDownAction.GetInteractingItem``1
  - TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  - TinyLife.Actions.GetAndSitDownAction.GetNextAction(TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.GetAndSitDownAction.WorkItems
  langs:
  - csharp
  - vb
  name: GetAndSitDownAction
  nameWithType: GetAndSitDownAction
  fullName: TinyLife.Actions.GetAndSitDownAction
  type: Class
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetAndSitDownAction
    path: Actions/GetAndSitDownAction.cs
    startLine: 13
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA get-and-sit-down action is an action where a person gets an action object that can be picked up (like a plate of food) and interacts with it on a chair or at a standing desk.\nThis action considers a multitude of possible circumstances for the action, including the item being on a counter, on the ground, already on a valid table, in the person&apos;s hand, and more.\nNote that <xref href=\"TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction%60%601(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.FurnitureType%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> should be used to ensure that the correct interaction item is returned in every circumstance.\n"
  example: []
  syntax:
    content: 'public abstract class GetAndSitDownAction : MultiAction, IGenericDataHolder'
    content.vb: >-
      Public MustInherit Class GetAndSitDownAction
          Inherits MultiAction
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  - TinyLife.Actions.Action
  - TinyLife.Actions.MultiAction
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Actions.MultiAction.FirstActions
  - TinyLife.Actions.MultiAction.MainElapsedTime
  - TinyLife.Actions.MultiAction.NextActions
  - TinyLife.Actions.MultiAction.AndThenIsCompleted
  - TinyLife.Actions.MultiAction.CreateNextActions(TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.MultiAction.ShouldFail(TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.MultiAction.OnBetweenActions(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed,TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.MultiAction.Initialize
  - TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  - TinyLife.Actions.MultiAction.IsCompleted
  - TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  - TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  - TinyLife.Actions.MultiAction.GetInProgressTime
  - TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  - TinyLife.Actions.Action.Random
  - TinyLife.Actions.Action.Type
  - TinyLife.Actions.Action.Info
  - TinyLife.Actions.Action.StartedAutomatically
  - TinyLife.Actions.Action.IsUnderlying
  - TinyLife.Actions.Action.Map
  - TinyLife.Actions.Action.Person
  - TinyLife.Actions.Action.ElapsedTime
  - TinyLife.Actions.Action.ForceFail
  - TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  - TinyLife.Actions.Action.CausesExtremelyFastSpeed
  - TinyLife.Actions.Action.GetDisplayName
  - TinyLife.Actions.Action.TryForceFail(TinyLife.Actions.ActionType.CanExecuteResult)
  - TinyLife.Actions.Action.IsFullyInProgress
  - TinyLife.Actions.Action.ApplyVariety(TinyLife.Actions.ActionVariety)
  - TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  - TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Actions.Action.CompletionType)
  - TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType[])
  - TinyLife.Actions.Action.GetPlaceDirection(TinyLife.Objects.FurnitureType)
  - TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,TinyLife.GameSpeed,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Action.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  - TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,MLEM.Ui.Elements.Element[])
  - TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action)
  - TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule)
  - TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,TinyLife.GameSpeed,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  - TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  - TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType,TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
  - TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  - TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.GetAndSitDownAction.TinyLife.Utilities.Extensions.JsonCopy``1
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TinyLife.Actions.GetAndSitDownAction.WorkItems
  commentId: P:TinyLife.Actions.GetAndSitDownAction.WorkItems
  id: WorkItems
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: WorkItems
  nameWithType: GetAndSitDownAction.WorkItems
  fullName: TinyLife.Actions.GetAndSitDownAction.WorkItems
  type: Property
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WorkItems
    path: Actions/GetAndSitDownAction.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn array of <xref href=\"TinyLife.Objects.FurnitureType\" data-throw-if-not-resolved=\"false\"></xref> instances that represents all ietms which can be gotten and sat down with.\nThis array is used to check the validity of a person&apos;s held item and items on tables.\n"
  example: []
  syntax:
    content: protected abstract FurnitureType[] WorkItems { get; }
    parameters: []
    return:
      type: TinyLife.Objects.FurnitureType[]
    content.vb: Protected MustOverride ReadOnly Property WorkItems As FurnitureType()
  overload: TinyLife.Actions.GetAndSitDownAction.WorkItems*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: TinyLife.Actions.GetAndSitDownAction.ForceTable
  commentId: P:TinyLife.Actions.GetAndSitDownAction.ForceTable
  id: ForceTable
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: ForceTable
  nameWithType: GetAndSitDownAction.ForceTable
  fullName: TinyLife.Actions.GetAndSitDownAction.ForceTable
  type: Property
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ForceTable
    path: Actions/GetAndSitDownAction.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA property that determines whether this action requires a table to be executed.\nIf this value is false, the person is able to sit down on a chair or a bench without a table if there is none present.\n"
  example: []
  syntax:
    content: protected abstract bool ForceTable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property ForceTable As Boolean
  overload: TinyLife.Actions.GetAndSitDownAction.ForceTable*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk
  commentId: P:TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk
  id: AllowStandingDesk
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: AllowStandingDesk
  nameWithType: GetAndSitDownAction.AllowStandingDesk
  fullName: TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk
  type: Property
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AllowStandingDesk
    path: Actions/GetAndSitDownAction.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA property that determines whether this action can be executed at a <xref href=\"TinyLife.Objects.ObjectCategory.StandingDesk\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected abstract bool AllowStandingDesk { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected MustOverride ReadOnly Property AllowStandingDesk As Boolean
  overload: TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: TinyLife.Actions.GetAndSitDownAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.GetAndSitDownAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
  id: '#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)'
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: GetAndSitDownAction(ActionType, ActionInfo)
  nameWithType: GetAndSitDownAction.GetAndSitDownAction(ActionType, ActionInfo)
  fullName: TinyLife.Actions.GetAndSitDownAction.GetAndSitDownAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: Actions/GetAndSitDownAction.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new action from the given <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected GetAndSitDownAction(ActionType type, ActionInfo info)
    parameters:
    - id: type
      type: TinyLife.Actions.ActionType
      description: The type to create this action from
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The information for this action
    content.vb: Protected Sub New(type As ActionType, info As ActionInfo)
  overload: TinyLife.Actions.GetAndSitDownAction.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TinyLife.Actions.GetAndSitDownAction.CreateFirstActions
  commentId: M:TinyLife.Actions.GetAndSitDownAction.CreateFirstActions
  id: CreateFirstActions
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: CreateFirstActions()
  nameWithType: GetAndSitDownAction.CreateFirstActions()
  fullName: TinyLife.Actions.GetAndSitDownAction.CreateFirstActions()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateFirstActions
    path: Actions/GetAndSitDownAction.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturn a set of actions that should be executed before this action.\nEven if the yield statement is used, all actions will be collected into a list at the start of this action&apos;s invocation.\nIf no action gets returned in this function, this action fails.\nIf a null action is returned as the first item, no first actions will be executed.\n"
  example: []
  syntax:
    content: protected override IEnumerable<Action> CreateFirstActions()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
      description: A set of actions that sohuld run before this action
    content.vb: Protected Overrides Function CreateFirstActions As IEnumerable(Of Action)
  overridden: TinyLife.Actions.MultiAction.CreateFirstActions
  overload: TinyLife.Actions.GetAndSitDownAction.CreateFirstActions*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.Actions.GetAndSitDownAction.AndThenInitialize
  commentId: M:TinyLife.Actions.GetAndSitDownAction.AndThenInitialize
  id: AndThenInitialize
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: AndThenInitialize()
  nameWithType: GetAndSitDownAction.AndThenInitialize()
  fullName: TinyLife.Actions.GetAndSitDownAction.AndThenInitialize()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenInitialize
    path: Actions/GetAndSitDownAction.cs
    startLine: 92
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nInitializes the main action.\nThis method is called after <xref href=\"TinyLife.Actions.MultiAction.FirstActions\" data-throw-if-not-resolved=\"false\"></xref> have all completed.\n"
  example: []
  syntax:
    content: protected override void AndThenInitialize()
    content.vb: Protected Overrides Sub AndThenInitialize
  overridden: TinyLife.Actions.MultiAction.AndThenInitialize
  overload: TinyLife.Actions.GetAndSitDownAction.AndThenInitialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.Actions.GetAndSitDownAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  commentId: M:TinyLife.Actions.GetAndSitDownAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  id: AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: AndThenUpdate(GameTime, TimeSpan, GameSpeed)
  nameWithType: GetAndSitDownAction.AndThenUpdate(GameTime, TimeSpan, GameSpeed)
  fullName: TinyLife.Actions.GetAndSitDownAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, TinyLife.GameSpeed)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenUpdate
    path: Actions/GetAndSitDownAction.cs
    startLine: 105
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nMultiAction version of <xref href=\"TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cTinyLife.GameSpeed)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is called every update frame while the main action is active.\nBy default, only <xref href=\"TinyLife.Actions.MultiAction.MainElapsedTime\" data-throw-if-not-resolved=\"false\"></xref> is increased.\n"
  example: []
  syntax:
    content: protected override void AndThenUpdate(GameTime time, TimeSpan passedInGame, GameSpeed speed)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed, in game time
    - id: speed
      type: TinyLife.GameSpeed
      description: The game&apos;s speed
    content.vb: Protected Overrides Sub AndThenUpdate(time As GameTime, passedInGame As TimeSpan, speed As GameSpeed)
  overridden: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  overload: TinyLife.Actions.GetAndSitDownAction.AndThenUpdate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.Actions.GetAndSitDownAction.GetIconObject
  commentId: M:TinyLife.Actions.GetAndSitDownAction.GetIconObject
  id: GetIconObject
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: GetIconObject()
  nameWithType: GetAndSitDownAction.GetIconObject()
  fullName: TinyLife.Actions.GetAndSitDownAction.GetIconObject()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetIconObject
    path: Actions/GetAndSitDownAction.cs
    startLine: 124
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the map object that is displayed in the action queue in the top left of the screen.\nNote that this value is ignored if this action&apos;s type has a <xref href=\"TinyLife.Actions.ActionType.TypeSettings.Texture\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, the <xref href=\"TinyLife.Actions.ActionInfo.GetActionObject%60%601\" data-throw-if-not-resolved=\"false\"></xref> is returned.\n"
  example: []
  syntax:
    content: public override MapObject GetIconObject()
    return:
      type: TinyLife.Objects.MapObject
      description: The icon object
    content.vb: Public Overrides Function GetIconObject As MapObject
  overridden: TinyLife.Actions.Action.GetIconObject
  overload: TinyLife.Actions.GetAndSitDownAction.GetIconObject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.GetAndSitDownAction.GetNextAction(TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.GetAndSitDownAction.GetNextAction(TinyLife.Actions.Action.CompletionType)
  id: GetNextAction(TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: GetNextAction(Action.CompletionType)
  nameWithType: GetAndSitDownAction.GetNextAction(Action.CompletionType)
  fullName: TinyLife.Actions.GetAndSitDownAction.GetNextAction(TinyLife.Actions.Action.CompletionType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetNextAction
    path: Actions/GetAndSitDownAction.cs
    startLine: 129
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns an action that should be queued up immediately after this action completes.\nThe queued up action is immediately started in the slot that this action occupied.\nCan be null, and is null by default.\n"
  example: []
  syntax:
    content: public override Action GetNextAction(Action.CompletionType completion)
    parameters:
    - id: completion
      type: TinyLife.Actions.Action.CompletionType
      description: The type that this action completed with
    return:
      type: TinyLife.Actions.Action
      description: The follow-up action
    content.vb: Public Overrides Function GetNextAction(completion As Action.CompletionType) As Action
  overridden: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.Action.CompletionType)
  overload: TinyLife.Actions.GetAndSitDownAction.GetNextAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem``1
  commentId: M:TinyLife.Actions.GetAndSitDownAction.GetInteractingItem``1
  id: GetInteractingItem``1
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: GetInteractingItem<T>()
  nameWithType: GetAndSitDownAction.GetInteractingItem<T>()
  fullName: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem<T>()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetInteractingItem
    path: Actions/GetAndSitDownAction.cs
    startLine: 143
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method that returns the item instance that is currently being interacted with in this action.\nSince this action type is rather complex, this is the favored way over <xref href=\"TinyLife.Actions.ActionInfo.GetActionObject%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      protected T GetInteractingItem<T>()
          where T : Furniture
    typeParameters:
    - id: T
      description: The type that the object is expected to be
    return:
      type: '{T}'
      description: The object, or null if there is none
    content.vb: Protected Function GetInteractingItem(Of T As Furniture) As T
  overload: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem*
  nameWithType.vb: GetAndSitDownAction.GetInteractingItem(Of T)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem(Of T)()
  name.vb: GetInteractingItem(Of T)()
- uid: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  commentId: M:TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  id: GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  parent: TinyLife.Actions.GetAndSitDownAction
  langs:
  - csharp
  - vb
  name: GetInteractingItemForAction<T>(ActionInfo, FurnitureType[])
  nameWithType: GetAndSitDownAction.GetInteractingItemForAction<T>(ActionInfo, FurnitureType[])
  fullName: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction<T>(TinyLife.Actions.ActionInfo, TinyLife.Objects.FurnitureType[])
  type: Method
  source:
    remote:
      path: TinyLife/Actions/GetAndSitDownAction.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetInteractingItemForAction
    path: Actions/GetAndSitDownAction.cs
    startLine: 169
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method that returns the item instance that is currently being interacted with in this action.\nSince this action type is rather complex, this is the favored way over <xref href=\"TinyLife.Actions.ActionInfo.GetActionObject%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      public static T GetInteractingItemForAction<T>(ActionInfo info, params FurnitureType[] workItems)
          where T : Furniture
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
    - id: workItems
      type: TinyLife.Objects.FurnitureType[]
    typeParameters:
    - id: T
      description: The type that the object is expected to be
    return:
      type: '{T}'
      description: The object, or null if there is none
    content.vb: Public Shared Function GetInteractingItemForAction(Of T As Furniture)(info As ActionInfo, ParamArray workItems As FurnitureType()) As T
  overload: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction*
  nameWithType.vb: GetAndSitDownAction.GetInteractingItemForAction(Of T)(ActionInfo, FurnitureType())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction(Of T)(TinyLife.Actions.ActionInfo, TinyLife.Objects.FurnitureType())
  name.vb: GetInteractingItemForAction(Of T)(ActionInfo, FurnitureType())
references:
- uid: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  commentId: M:TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  isExternal: true
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.MultiAction
  commentId: T:TinyLife.Actions.MultiAction
  parent: TinyLife.Actions
  name: MultiAction
  nameWithType: MultiAction
  fullName: TinyLife.Actions.MultiAction
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Actions.MultiAction.FirstActions
  commentId: P:TinyLife.Actions.MultiAction.FirstActions
  parent: TinyLife.Actions.MultiAction
  name: FirstActions
  nameWithType: MultiAction.FirstActions
  fullName: TinyLife.Actions.MultiAction.FirstActions
- uid: TinyLife.Actions.MultiAction.MainElapsedTime
  commentId: P:TinyLife.Actions.MultiAction.MainElapsedTime
  parent: TinyLife.Actions.MultiAction
  name: MainElapsedTime
  nameWithType: MultiAction.MainElapsedTime
  fullName: TinyLife.Actions.MultiAction.MainElapsedTime
- uid: TinyLife.Actions.MultiAction.NextActions
  commentId: P:TinyLife.Actions.MultiAction.NextActions
  parent: TinyLife.Actions.MultiAction
  name: NextActions
  nameWithType: MultiAction.NextActions
  fullName: TinyLife.Actions.MultiAction.NextActions
- uid: TinyLife.Actions.MultiAction.AndThenIsCompleted
  commentId: M:TinyLife.Actions.MultiAction.AndThenIsCompleted
  parent: TinyLife.Actions.MultiAction
  name: AndThenIsCompleted()
  nameWithType: MultiAction.AndThenIsCompleted()
  fullName: TinyLife.Actions.MultiAction.AndThenIsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenIsCompleted
    name: AndThenIsCompleted
    nameWithType: MultiAction.AndThenIsCompleted
    fullName: TinyLife.Actions.MultiAction.AndThenIsCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenIsCompleted
    name: AndThenIsCompleted
    nameWithType: MultiAction.AndThenIsCompleted
    fullName: TinyLife.Actions.MultiAction.AndThenIsCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.CreateNextActions(TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.CreateNextActions(TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: CreateNextActions(Action.CompletionType)
  nameWithType: MultiAction.CreateNextActions(Action.CompletionType)
  fullName: TinyLife.Actions.MultiAction.CreateNextActions(TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CreateNextActions(TinyLife.Actions.Action.CompletionType)
    name: CreateNextActions
    nameWithType: MultiAction.CreateNextActions
    fullName: TinyLife.Actions.MultiAction.CreateNextActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CreateNextActions(TinyLife.Actions.Action.CompletionType)
    name: CreateNextActions
    nameWithType: MultiAction.CreateNextActions
    fullName: TinyLife.Actions.MultiAction.CreateNextActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: AndThenOnCompleted(Action.CompletionType)
  nameWithType: MultiAction.AndThenOnCompleted(Action.CompletionType)
  fullName: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.Action.CompletionType)
    name: AndThenOnCompleted
    nameWithType: MultiAction.AndThenOnCompleted
    fullName: TinyLife.Actions.MultiAction.AndThenOnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.Action.CompletionType)
    name: AndThenOnCompleted
    nameWithType: MultiAction.AndThenOnCompleted
    fullName: TinyLife.Actions.MultiAction.AndThenOnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.ShouldFail(TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.ShouldFail(TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: ShouldFail(Action, Action.CompletionType)
  nameWithType: MultiAction.ShouldFail(Action, Action.CompletionType)
  fullName: TinyLife.Actions.MultiAction.ShouldFail(TinyLife.Actions.Action, TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.ShouldFail(TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
    name: ShouldFail
    nameWithType: MultiAction.ShouldFail
    fullName: TinyLife.Actions.MultiAction.ShouldFail
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.ShouldFail(TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
    name: ShouldFail
    nameWithType: MultiAction.ShouldFail
    fullName: TinyLife.Actions.MultiAction.ShouldFail
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.OnBetweenActions(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed,TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.OnBetweenActions(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed,TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.MultiAction
  isExternal: true
  name: OnBetweenActions(GameTime, TimeSpan, GameSpeed, Action, Action.CompletionType)
  nameWithType: MultiAction.OnBetweenActions(GameTime, TimeSpan, GameSpeed, Action, Action.CompletionType)
  fullName: TinyLife.Actions.MultiAction.OnBetweenActions(Microsoft.Xna.Framework.GameTime, System.TimeSpan, TinyLife.GameSpeed, TinyLife.Actions.Action, TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.OnBetweenActions(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed,TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
    name: OnBetweenActions
    nameWithType: MultiAction.OnBetweenActions
    fullName: TinyLife.Actions.MultiAction.OnBetweenActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.OnBetweenActions(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed,TinyLife.Actions.Action,TinyLife.Actions.Action.CompletionType)
    name: OnBetweenActions
    nameWithType: MultiAction.OnBetweenActions
    fullName: TinyLife.Actions.MultiAction.OnBetweenActions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.Initialize
  commentId: M:TinyLife.Actions.MultiAction.Initialize
  parent: TinyLife.Actions.MultiAction
  name: Initialize()
  nameWithType: MultiAction.Initialize()
  fullName: TinyLife.Actions.MultiAction.Initialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Initialize
    name: Initialize
    nameWithType: MultiAction.Initialize
    fullName: TinyLife.Actions.MultiAction.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Initialize
    name: Initialize
    nameWithType: MultiAction.Initialize
    fullName: TinyLife.Actions.MultiAction.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  commentId: M:TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  parent: TinyLife.Actions.MultiAction
  isExternal: true
  name: Update(GameTime, TimeSpan, GameSpeed)
  nameWithType: MultiAction.Update(GameTime, TimeSpan, GameSpeed)
  fullName: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, TinyLife.GameSpeed)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
    name: Update
    nameWithType: MultiAction.Update
    fullName: TinyLife.Actions.MultiAction.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
    name: Update
    nameWithType: MultiAction.Update
    fullName: TinyLife.Actions.MultiAction.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.IsCompleted
  commentId: M:TinyLife.Actions.MultiAction.IsCompleted
  parent: TinyLife.Actions.MultiAction
  name: IsCompleted()
  nameWithType: MultiAction.IsCompleted()
  fullName: TinyLife.Actions.MultiAction.IsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.IsCompleted
    name: IsCompleted
    nameWithType: MultiAction.IsCompleted
    fullName: TinyLife.Actions.MultiAction.IsCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.IsCompleted
    name: IsCompleted
    nameWithType: MultiAction.IsCompleted
    fullName: TinyLife.Actions.MultiAction.IsCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: OnCompleted(Action.CompletionType)
  nameWithType: MultiAction.OnCompleted(Action.CompletionType)
  fullName: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.Action.CompletionType)
    name: OnCompleted
    nameWithType: MultiAction.OnCompleted
    fullName: TinyLife.Actions.MultiAction.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.Action.CompletionType)
    name: OnCompleted
    nameWithType: MultiAction.OnCompleted
    fullName: TinyLife.Actions.MultiAction.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  parent: TinyLife.Actions.MultiAction
  name: Validate(Person)
  nameWithType: MultiAction.Validate(Person)
  fullName: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
    name: Validate
    nameWithType: MultiAction.Validate
    fullName: TinyLife.Actions.MultiAction.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
    name: Validate
    nameWithType: MultiAction.Validate
    fullName: TinyLife.Actions.MultiAction.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  parent: TinyLife.Actions.MultiAction
  name: CanCancel(Action)
  nameWithType: MultiAction.CanCancel(Action)
  fullName: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
    name: CanCancel
    nameWithType: MultiAction.CanCancel
    fullName: TinyLife.Actions.MultiAction.CanCancel
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
    name: CanCancel
    nameWithType: MultiAction.CanCancel
    fullName: TinyLife.Actions.MultiAction.CanCancel
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.GetInProgressTime
  commentId: M:TinyLife.Actions.MultiAction.GetInProgressTime
  parent: TinyLife.Actions.MultiAction
  name: GetInProgressTime()
  nameWithType: MultiAction.GetInProgressTime()
  fullName: TinyLife.Actions.MultiAction.GetInProgressTime()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.GetInProgressTime
    name: GetInProgressTime
    nameWithType: MultiAction.GetInProgressTime
    fullName: TinyLife.Actions.MultiAction.GetInProgressTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.GetInProgressTime
    name: GetInProgressTime
    nameWithType: MultiAction.GetInProgressTime
    fullName: TinyLife.Actions.MultiAction.GetInProgressTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Actions.MultiAction
  name: GoToActionLocation(ObjectCategory)
  nameWithType: MultiAction.GoToActionLocation(ObjectCategory)
  fullName: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
    name: GoToActionLocation
    nameWithType: MultiAction.GoToActionLocation
    fullName: TinyLife.Actions.MultiAction.GoToActionLocation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
    name: GoToActionLocation
    nameWithType: MultiAction.GoToActionLocation
    fullName: TinyLife.Actions.MultiAction.GoToActionLocation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.Random
  commentId: F:TinyLife.Actions.Action.Random
  parent: TinyLife.Actions.Action
  name: Random
  nameWithType: Action.Random
  fullName: TinyLife.Actions.Action.Random
- uid: TinyLife.Actions.Action.Type
  commentId: F:TinyLife.Actions.Action.Type
  parent: TinyLife.Actions.Action
  name: Type
  nameWithType: Action.Type
  fullName: TinyLife.Actions.Action.Type
- uid: TinyLife.Actions.Action.Info
  commentId: F:TinyLife.Actions.Action.Info
  parent: TinyLife.Actions.Action
  name: Info
  nameWithType: Action.Info
  fullName: TinyLife.Actions.Action.Info
- uid: TinyLife.Actions.Action.StartedAutomatically
  commentId: P:TinyLife.Actions.Action.StartedAutomatically
  parent: TinyLife.Actions.Action
  name: StartedAutomatically
  nameWithType: Action.StartedAutomatically
  fullName: TinyLife.Actions.Action.StartedAutomatically
- uid: TinyLife.Actions.Action.IsUnderlying
  commentId: P:TinyLife.Actions.Action.IsUnderlying
  parent: TinyLife.Actions.Action
  name: IsUnderlying
  nameWithType: Action.IsUnderlying
  fullName: TinyLife.Actions.Action.IsUnderlying
- uid: TinyLife.Actions.Action.Map
  commentId: P:TinyLife.Actions.Action.Map
  parent: TinyLife.Actions.Action
  name: Map
  nameWithType: Action.Map
  fullName: TinyLife.Actions.Action.Map
- uid: TinyLife.Actions.Action.Person
  commentId: P:TinyLife.Actions.Action.Person
  parent: TinyLife.Actions.Action
  name: Person
  nameWithType: Action.Person
  fullName: TinyLife.Actions.Action.Person
- uid: TinyLife.Actions.Action.ElapsedTime
  commentId: P:TinyLife.Actions.Action.ElapsedTime
  parent: TinyLife.Actions.Action
  name: ElapsedTime
  nameWithType: Action.ElapsedTime
  fullName: TinyLife.Actions.Action.ElapsedTime
- uid: TinyLife.Actions.Action.ForceFail
  commentId: F:TinyLife.Actions.Action.ForceFail
  parent: TinyLife.Actions.Action
  name: ForceFail
  nameWithType: Action.ForceFail
  fullName: TinyLife.Actions.Action.ForceFail
- uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  parent: TinyLife.Actions.Action
  name: CanMultitask(Action)
  nameWithType: Action.CanMultitask(Action)
  fullName: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
    nameWithType: Action.CanMultitask
    fullName: TinyLife.Actions.Action.CanMultitask
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
    nameWithType: Action.CanMultitask
    fullName: TinyLife.Actions.Action.CanMultitask
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
  commentId: M:TinyLife.Actions.Action.CausesExtremelyFastSpeed
  parent: TinyLife.Actions.Action
  name: CausesExtremelyFastSpeed()
  nameWithType: Action.CausesExtremelyFastSpeed()
  fullName: TinyLife.Actions.Action.CausesExtremelyFastSpeed()
  spec.csharp:
  - uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
    name: CausesExtremelyFastSpeed
    nameWithType: Action.CausesExtremelyFastSpeed
    fullName: TinyLife.Actions.Action.CausesExtremelyFastSpeed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
    name: CausesExtremelyFastSpeed
    nameWithType: Action.CausesExtremelyFastSpeed
    fullName: TinyLife.Actions.Action.CausesExtremelyFastSpeed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.GetDisplayName
  commentId: M:TinyLife.Actions.Action.GetDisplayName
  parent: TinyLife.Actions.Action
  name: GetDisplayName()
  nameWithType: Action.GetDisplayName()
  fullName: TinyLife.Actions.Action.GetDisplayName()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetDisplayName
    name: GetDisplayName
    nameWithType: Action.GetDisplayName
    fullName: TinyLife.Actions.Action.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetDisplayName
    name: GetDisplayName
    nameWithType: Action.GetDisplayName
    fullName: TinyLife.Actions.Action.GetDisplayName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.TryForceFail(TinyLife.Actions.ActionType.CanExecuteResult)
  commentId: M:TinyLife.Actions.Action.TryForceFail(TinyLife.Actions.ActionType.CanExecuteResult)
  parent: TinyLife.Actions.Action
  name: TryForceFail(ActionType.CanExecuteResult)
  nameWithType: Action.TryForceFail(ActionType.CanExecuteResult)
  fullName: TinyLife.Actions.Action.TryForceFail(TinyLife.Actions.ActionType.CanExecuteResult)
  spec.csharp:
  - uid: TinyLife.Actions.Action.TryForceFail(TinyLife.Actions.ActionType.CanExecuteResult)
    name: TryForceFail
    nameWithType: Action.TryForceFail
    fullName: TinyLife.Actions.Action.TryForceFail
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionType.CanExecuteResult
    name: ActionType.CanExecuteResult
    nameWithType: ActionType.CanExecuteResult
    fullName: TinyLife.Actions.ActionType.CanExecuteResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.TryForceFail(TinyLife.Actions.ActionType.CanExecuteResult)
    name: TryForceFail
    nameWithType: Action.TryForceFail
    fullName: TinyLife.Actions.Action.TryForceFail
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionType.CanExecuteResult
    name: ActionType.CanExecuteResult
    nameWithType: ActionType.CanExecuteResult
    fullName: TinyLife.Actions.ActionType.CanExecuteResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.IsFullyInProgress
  commentId: M:TinyLife.Actions.Action.IsFullyInProgress
  parent: TinyLife.Actions.Action
  name: IsFullyInProgress()
  nameWithType: Action.IsFullyInProgress()
  fullName: TinyLife.Actions.Action.IsFullyInProgress()
  spec.csharp:
  - uid: TinyLife.Actions.Action.IsFullyInProgress
    name: IsFullyInProgress
    nameWithType: Action.IsFullyInProgress
    fullName: TinyLife.Actions.Action.IsFullyInProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.IsFullyInProgress
    name: IsFullyInProgress
    nameWithType: Action.IsFullyInProgress
    fullName: TinyLife.Actions.Action.IsFullyInProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.ApplyVariety(TinyLife.Actions.ActionVariety)
  commentId: M:TinyLife.Actions.Action.ApplyVariety(TinyLife.Actions.ActionVariety)
  parent: TinyLife.Actions.Action
  name: ApplyVariety(ActionVariety)
  nameWithType: Action.ApplyVariety(ActionVariety)
  fullName: TinyLife.Actions.Action.ApplyVariety(TinyLife.Actions.ActionVariety)
  spec.csharp:
  - uid: TinyLife.Actions.Action.ApplyVariety(TinyLife.Actions.ActionVariety)
    name: ApplyVariety
    nameWithType: Action.ApplyVariety
    fullName: TinyLife.Actions.Action.ApplyVariety
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
    nameWithType: ActionVariety
    fullName: TinyLife.Actions.ActionVariety
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.ApplyVariety(TinyLife.Actions.ActionVariety)
    name: ApplyVariety
    nameWithType: Action.ApplyVariety
    fullName: TinyLife.Actions.Action.ApplyVariety
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
    nameWithType: ActionVariety
    fullName: TinyLife.Actions.ActionVariety
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  commentId: M:TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  parent: TinyLife.Actions.Action
  name: CanEnqueueConversation(Person, ActionType)
  nameWithType: Action.CanEnqueueConversation(Person, ActionType)
  fullName: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person, TinyLife.Actions.ActionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
    name: CanEnqueueConversation
    nameWithType: Action.CanEnqueueConversation
    fullName: TinyLife.Actions.Action.CanEnqueueConversation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
    name: CanEnqueueConversation
    nameWithType: Action.CanEnqueueConversation
    fullName: TinyLife.Actions.Action.CanEnqueueConversation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.Action
  name: CompleteIfNeedFull(NeedType, Action.CompletionType)
  nameWithType: Action.CompleteIfNeedFull(NeedType, Action.CompletionType)
  fullName: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType, TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Actions.Action.CompletionType)
    name: CompleteIfNeedFull
    nameWithType: Action.CompleteIfNeedFull
    fullName: TinyLife.Actions.Action.CompleteIfNeedFull
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.NeedType
    name: NeedType
    nameWithType: NeedType
    fullName: TinyLife.NeedType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Actions.Action.CompletionType)
    name: CompleteIfNeedFull
    nameWithType: Action.CompleteIfNeedFull
    fullName: TinyLife.Actions.Action.CompleteIfNeedFull
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.NeedType
    name: NeedType
    nameWithType: NeedType
    fullName: TinyLife.NeedType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType[])
  commentId: M:TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType[])
  parent: TinyLife.Actions.Action
  name: PutDownOrGoTo(ObjectCategory, FurnitureType[])
  nameWithType: Action.PutDownOrGoTo(ObjectCategory, FurnitureType[])
  fullName: TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType[])
  nameWithType.vb: Action.PutDownOrGoTo(ObjectCategory, FurnitureType())
  fullName.vb: TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType())
  name.vb: PutDownOrGoTo(ObjectCategory, FurnitureType())
  spec.csharp:
  - uid: TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType[])
    name: PutDownOrGoTo
    nameWithType: Action.PutDownOrGoTo
    fullName: TinyLife.Actions.Action.PutDownOrGoTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.PutDownOrGoTo(TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType[])
    name: PutDownOrGoTo
    nameWithType: Action.PutDownOrGoTo
    fullName: TinyLife.Actions.Action.PutDownOrGoTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.GetPlaceDirection(TinyLife.Objects.FurnitureType)
  commentId: M:TinyLife.Actions.Action.GetPlaceDirection(TinyLife.Objects.FurnitureType)
  parent: TinyLife.Actions.Action
  name: GetPlaceDirection(FurnitureType)
  nameWithType: Action.GetPlaceDirection(FurnitureType)
  fullName: TinyLife.Actions.Action.GetPlaceDirection(TinyLife.Objects.FurnitureType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetPlaceDirection(TinyLife.Objects.FurnitureType)
    name: GetPlaceDirection
    nameWithType: Action.GetPlaceDirection
    fullName: TinyLife.Actions.Action.GetPlaceDirection
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetPlaceDirection(TinyLife.Objects.FurnitureType)
    name: GetPlaceDirection
    nameWithType: Action.GetPlaceDirection
    fullName: TinyLife.Actions.Action.GetPlaceDirection
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,TinyLife.GameSpeed,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,TinyLife.GameSpeed,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Action
  name: Sit(Furniture, GameSpeed, ActionSpot)
  nameWithType: Action.Sit(Furniture, GameSpeed, ActionSpot)
  fullName: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture, TinyLife.GameSpeed, TinyLife.Objects.ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,TinyLife.GameSpeed,TinyLife.Objects.ActionSpot)
    name: Sit
    nameWithType: Action.Sit
    fullName: TinyLife.Actions.Action.Sit
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,TinyLife.GameSpeed,TinyLife.Objects.ActionSpot)
    name: Sit
    nameWithType: Action.Sit
    fullName: TinyLife.Actions.Action.Sit
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  commentId: M:TinyLife.Actions.Action.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: CompleteInTime(TimeSpan, Boolean, SkillType, Single, Boolean)
  nameWithType: Action.CompleteInTime(TimeSpan, Boolean, SkillType, Single, Boolean)
  fullName: TinyLife.Actions.Action.CompleteInTime(System.TimeSpan, System.Boolean, TinyLife.Skills.SkillType, System.Single, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteInTime
    nameWithType: Action.CompleteInTime
    fullName: TinyLife.Actions.Action.CompleteInTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    nameWithType: SkillType
    fullName: TinyLife.Skills.SkillType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteInTime
    nameWithType: Action.CompleteInTime
    fullName: TinyLife.Actions.Action.CompleteInTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    nameWithType: SkillType
    fullName: TinyLife.Skills.SkillType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,MLEM.Ui.Elements.Element[])
  commentId: M:TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,MLEM.Ui.Elements.Element[])
  parent: TinyLife.Actions.Action
  isExternal: true
  name: OpenPlayerPrompt(String, Predicate<Panel>, Action<Panel>, Boolean, Element[])
  nameWithType: Action.OpenPlayerPrompt(String, Predicate<Panel>, Action<Panel>, Boolean, Element[])
  fullName: TinyLife.Actions.Action.OpenPlayerPrompt(System.String, System.Predicate<MLEM.Ui.Elements.Panel>, System.Action<MLEM.Ui.Elements.Panel>, System.Boolean, MLEM.Ui.Elements.Element[])
  nameWithType.vb: Action.OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Element())
  fullName.vb: TinyLife.Actions.Action.OpenPlayerPrompt(System.String, System.Predicate(Of MLEM.Ui.Elements.Panel), System.Action(Of MLEM.Ui.Elements.Panel), System.Boolean, MLEM.Ui.Elements.Element())
  name.vb: OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Element())
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,MLEM.Ui.Elements.Element[])
    name: OpenPlayerPrompt
    nameWithType: Action.OpenPlayerPrompt
    fullName: TinyLife.Actions.Action.OpenPlayerPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,MLEM.Ui.Elements.Element[])
    name: OpenPlayerPrompt
    nameWithType: Action.OpenPlayerPrompt
    fullName: TinyLife.Actions.Action.OpenPlayerPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action)
  commentId: M:TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: OpenYesNoPrompt(String, Action, Action)
  nameWithType: Action.OpenYesNoPrompt(String, Action, Action)
  fullName: TinyLife.Actions.Action.OpenYesNoPrompt(System.String, System.Action, System.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action)
    name: OpenYesNoPrompt
    nameWithType: Action.OpenYesNoPrompt
    fullName: TinyLife.Actions.Action.OpenYesNoPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action)
    name: OpenYesNoPrompt
    nameWithType: Action.OpenYesNoPrompt
    fullName: TinyLife.Actions.Action.OpenYesNoPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule)
  commentId: M:TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: OpenTextPrompt(String, Action<String>, Predicate<String>, TextField.Rule)
  nameWithType: Action.OpenTextPrompt(String, Action<String>, Predicate<String>, TextField.Rule)
  fullName: TinyLife.Actions.Action.OpenTextPrompt(System.String, System.Action<System.String>, System.Predicate<System.String>, MLEM.Ui.Elements.TextField.Rule)
  nameWithType.vb: Action.OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule)
  fullName.vb: TinyLife.Actions.Action.OpenTextPrompt(System.String, System.Action(Of System.String), System.Predicate(Of System.String), MLEM.Ui.Elements.TextField.Rule)
  name.vb: OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule)
    name: OpenTextPrompt
    nameWithType: Action.OpenTextPrompt
    fullName: TinyLife.Actions.Action.OpenTextPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: TextField.Rule
    nameWithType: TextField.Rule
    fullName: MLEM.Ui.Elements.TextField.Rule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule)
    name: OpenTextPrompt
    nameWithType: Action.OpenTextPrompt
    fullName: TinyLife.Actions.Action.OpenTextPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: TextField.Rule
    nameWithType: TextField.Rule
    fullName: MLEM.Ui.Elements.TextField.Rule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,TinyLife.GameSpeed,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  commentId: M:TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,TinyLife.GameSpeed,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: SpeakAlone(GameTime, GameSpeed, EmoteCategory, SpeakStyle, Int32)
  nameWithType: Action.SpeakAlone(GameTime, GameSpeed, EmoteCategory, SpeakStyle, Int32)
  fullName: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime, TinyLife.GameSpeed, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, System.Int32)
  spec.csharp:
  - uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,TinyLife.GameSpeed,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
    name: SpeakAlone
    nameWithType: Action.SpeakAlone
    fullName: TinyLife.Actions.Action.SpeakAlone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,TinyLife.GameSpeed,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
    name: SpeakAlone
    nameWithType: Action.SpeakAlone
    fullName: TinyLife.Actions.Action.SpeakAlone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  parent: TinyLife.Actions.Action
  name: GetFreeChair(Person, Furniture)
  nameWithType: Action.GetFreeChair(Person, Furniture)
  fullName: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person, TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
    nameWithType: Action.GetFreeChair
    fullName: TinyLife.Actions.Action.GetFreeChair
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
    nameWithType: Action.GetFreeChair
    fullName: TinyLife.Actions.Action.GetFreeChair
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType,TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType,TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindAllFreePeople(ActionType, Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  nameWithType: Action.FindAllFreePeople(ActionType, Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  fullName: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType, TinyLife.Objects.Person, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean)
  nameWithType.vb: Action.FindAllFreePeople(ActionType, Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType, TinyLife.Objects.Person, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean)
  name.vb: FindAllFreePeople(ActionType, Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType,TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreePeople
    nameWithType: Action.FindAllFreePeople
    fullName: TinyLife.Actions.Action.FindAllFreePeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Actions.ActionType,TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreePeople
    nameWithType: Action.FindAllFreePeople
    fullName: TinyLife.Actions.Action.FindAllFreePeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable<Vector2>, Nullable<Single>, Boolean, Boolean)
  nameWithType: Action.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable<Vector2>, Nullable<Single>, Boolean, Boolean)
  fullName: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Boolean, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean, System.Boolean)
  nameWithType.vb: Action.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable(Of Vector2), Nullable(Of Single), Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Boolean, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean, System.Boolean)
  name.vb: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable(Of Vector2), Nullable(Of Single), Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
    nameWithType: Action.FindAllFreeFurniture
    fullName: TinyLife.Actions.Action.FindAllFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
    nameWithType: Action.FindAllFreeFurniture
    fullName: TinyLife.Actions.Action.FindAllFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindAllFreeWalls(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  nameWithType: Action.FindAllFreeWalls(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  fullName: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean)
  nameWithType.vb: Action.FindAllFreeWalls(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean)
  name.vb: FindAllFreeWalls(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
    nameWithType: Action.FindAllFreeWalls
    fullName: TinyLife.Actions.Action.FindAllFreeWalls
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
    nameWithType: Action.FindAllFreeWalls
    fullName: TinyLife.Actions.Action.FindAllFreeWalls
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindAllFreeGround(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  nameWithType: Action.FindAllFreeGround(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  fullName: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean)
  nameWithType.vb: Action.FindAllFreeGround(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean)
  name.vb: FindAllFreeGround(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
    nameWithType: Action.FindAllFreeGround
    fullName: TinyLife.Actions.Action.FindAllFreeGround
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
    nameWithType: Action.FindAllFreeGround
    fullName: TinyLife.Actions.Action.FindAllFreeGround
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable<Vector2>, Boolean)
  nameWithType: Action.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable<Vector2>, Boolean)
  fullName: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Boolean)
  nameWithType.vb: Action.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable(Of Vector2), Boolean)
  fullName.vb: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Boolean)
  name.vb: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable(Of Vector2), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
    name: FindFreeFurniture
    nameWithType: Action.FindFreeFurniture
    fullName: TinyLife.Actions.Action.FindFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
    name: FindFreeFurniture
    nameWithType: Action.FindFreeFurniture
    fullName: TinyLife.Actions.Action.FindFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  parent: TinyLife.Actions.Action
  name: CanMultitask(Action, Action)
  nameWithType: Action.CanMultitask(Action, Action)
  fullName: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action, TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
    name: CanMultitask
    nameWithType: Action.CanMultitask
    fullName: TinyLife.Actions.Action.CanMultitask
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
    name: CanMultitask
    nameWithType: Action.CanMultitask
    fullName: TinyLife.Actions.Action.CanMultitask
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Action
  name: GetTableSpot(Furniture, ActionSpot)
  nameWithType: Action.GetTableSpot(Furniture, ActionSpot)
  fullName: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture, TinyLife.Objects.ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
    nameWithType: Action.GetTableSpot
    fullName: TinyLife.Actions.Action.GetTableSpot
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
    nameWithType: Action.GetTableSpot
    fullName: TinyLife.Actions.Action.GetTableSpot
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.GetAndSitDownAction.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GetAndSitDownAction>()
  nameWithType: Extensions.JsonCopy<GetAndSitDownAction>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.GetAndSitDownAction>()
  nameWithType.vb: Extensions.JsonCopy(Of GetAndSitDownAction)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.GetAndSitDownAction)()
  name.vb: JsonCopy(Of GetAndSitDownAction)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<GetAndSitDownAction>
    nameWithType: Extensions.JsonCopy<GetAndSitDownAction>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.GetAndSitDownAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of GetAndSitDownAction)
    nameWithType: Extensions.JsonCopy(Of GetAndSitDownAction)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.GetAndSitDownAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  name: GetTimeSpan(String)
  nameWithType: Extensions.GetTimeSpan(String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  name: SetTimeSpan(String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  isExternal: true
  name: GetTimeSpan(IGenericDataHolder, String)
  nameWithType: Extensions.GetTimeSpan(IGenericDataHolder, String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  isExternal: true
  name: SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Actions.GetAndSitDownAction.WorkItems*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.WorkItems
  name: WorkItems
  nameWithType: GetAndSitDownAction.WorkItems
  fullName: TinyLife.Actions.GetAndSitDownAction.WorkItems
- uid: TinyLife.Objects.FurnitureType[]
  isExternal: true
  name: FurnitureType[]
  nameWithType: FurnitureType[]
  fullName: TinyLife.Objects.FurnitureType[]
  nameWithType.vb: FurnitureType()
  fullName.vb: TinyLife.Objects.FurnitureType()
  name.vb: FurnitureType()
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Actions.GetAndSitDownAction.ForceTable*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.ForceTable
  name: ForceTable
  nameWithType: GetAndSitDownAction.ForceTable
  fullName: TinyLife.Actions.GetAndSitDownAction.ForceTable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Objects.ObjectCategory.StandingDesk
  commentId: F:TinyLife.Objects.ObjectCategory.StandingDesk
  isExternal: true
- uid: TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk
  name: AllowStandingDesk
  nameWithType: GetAndSitDownAction.AllowStandingDesk
  fullName: TinyLife.Actions.GetAndSitDownAction.AllowStandingDesk
- uid: TinyLife.Actions.GetAndSitDownAction.#ctor*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.#ctor
  name: GetAndSitDownAction
  nameWithType: GetAndSitDownAction.GetAndSitDownAction
  fullName: TinyLife.Actions.GetAndSitDownAction.GetAndSitDownAction
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.MultiAction.CreateFirstActions
  commentId: M:TinyLife.Actions.MultiAction.CreateFirstActions
  parent: TinyLife.Actions.MultiAction
  name: CreateFirstActions()
  nameWithType: MultiAction.CreateFirstActions()
  fullName: TinyLife.Actions.MultiAction.CreateFirstActions()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CreateFirstActions
    name: CreateFirstActions
    nameWithType: MultiAction.CreateFirstActions
    fullName: TinyLife.Actions.MultiAction.CreateFirstActions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CreateFirstActions
    name: CreateFirstActions
    nameWithType: MultiAction.CreateFirstActions
    fullName: TinyLife.Actions.MultiAction.CreateFirstActions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.GetAndSitDownAction.CreateFirstActions*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.CreateFirstActions
  name: CreateFirstActions
  nameWithType: GetAndSitDownAction.CreateFirstActions
  fullName: TinyLife.Actions.GetAndSitDownAction.CreateFirstActions
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Action>
  nameWithType: IEnumerable<Action>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Action>
  nameWithType.vb: IEnumerable(Of Action)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Action)
  name.vb: IEnumerable(Of Action)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Actions.MultiAction.AndThenInitialize
  commentId: M:TinyLife.Actions.MultiAction.AndThenInitialize
  parent: TinyLife.Actions.MultiAction
  name: AndThenInitialize()
  nameWithType: MultiAction.AndThenInitialize()
  fullName: TinyLife.Actions.MultiAction.AndThenInitialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenInitialize
    name: AndThenInitialize
    nameWithType: MultiAction.AndThenInitialize
    fullName: TinyLife.Actions.MultiAction.AndThenInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenInitialize
    name: AndThenInitialize
    nameWithType: MultiAction.AndThenInitialize
    fullName: TinyLife.Actions.MultiAction.AndThenInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.GetAndSitDownAction.AndThenInitialize*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.AndThenInitialize
  name: AndThenInitialize
  nameWithType: GetAndSitDownAction.AndThenInitialize
  fullName: TinyLife.Actions.GetAndSitDownAction.AndThenInitialize
- uid: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  commentId: M:TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
  parent: TinyLife.Actions.MultiAction
  isExternal: true
  name: AndThenUpdate(GameTime, TimeSpan, GameSpeed)
  nameWithType: MultiAction.AndThenUpdate(GameTime, TimeSpan, GameSpeed)
  fullName: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, TinyLife.GameSpeed)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
    name: AndThenUpdate
    nameWithType: MultiAction.AndThenUpdate
    fullName: TinyLife.Actions.MultiAction.AndThenUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,TinyLife.GameSpeed)
    name: AndThenUpdate
    nameWithType: MultiAction.AndThenUpdate
    fullName: TinyLife.Actions.MultiAction.AndThenUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.GetAndSitDownAction.AndThenUpdate*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.AndThenUpdate
  name: AndThenUpdate
  nameWithType: GetAndSitDownAction.AndThenUpdate
  fullName: TinyLife.Actions.GetAndSitDownAction.AndThenUpdate
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.GameSpeed
  commentId: T:TinyLife.GameSpeed
  parent: TinyLife
  name: GameSpeed
  nameWithType: GameSpeed
  fullName: TinyLife.GameSpeed
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Actions.Action.GetIconObject
  commentId: M:TinyLife.Actions.Action.GetIconObject
  parent: TinyLife.Actions.Action
  name: GetIconObject()
  nameWithType: Action.GetIconObject()
  fullName: TinyLife.Actions.Action.GetIconObject()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetIconObject
    name: GetIconObject
    nameWithType: Action.GetIconObject
    fullName: TinyLife.Actions.Action.GetIconObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetIconObject
    name: GetIconObject
    nameWithType: Action.GetIconObject
    fullName: TinyLife.Actions.Action.GetIconObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.GetAndSitDownAction.GetIconObject*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.GetIconObject
  name: GetIconObject
  nameWithType: GetAndSitDownAction.GetIconObject
  fullName: TinyLife.Actions.GetAndSitDownAction.GetIconObject
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.Action.CompletionType)
  commentId: M:TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.Action.CompletionType)
  parent: TinyLife.Actions.Action
  name: GetNextAction(Action.CompletionType)
  nameWithType: Action.GetNextAction(Action.CompletionType)
  fullName: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.Action.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.Action.CompletionType)
    name: GetNextAction
    nameWithType: Action.GetNextAction
    fullName: TinyLife.Actions.Action.GetNextAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.Action.CompletionType)
    name: GetNextAction
    nameWithType: Action.GetNextAction
    fullName: TinyLife.Actions.Action.GetNextAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.GetAndSitDownAction.GetNextAction*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.GetNextAction
  name: GetNextAction
  nameWithType: GetAndSitDownAction.GetNextAction
  fullName: TinyLife.Actions.GetAndSitDownAction.GetNextAction
- uid: TinyLife.Actions.Action.CompletionType
  commentId: T:TinyLife.Actions.Action.CompletionType
  parent: TinyLife.Actions
  name: Action.CompletionType
  nameWithType: Action.CompletionType
  fullName: TinyLife.Actions.Action.CompletionType
- uid: TinyLife.Actions.ActionInfo.GetActionObject``1
  commentId: M:TinyLife.Actions.ActionInfo.GetActionObject``1
  isExternal: true
- uid: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.GetInteractingItem
  name: GetInteractingItem
  nameWithType: GetAndSitDownAction.GetInteractingItem
  fullName: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Actions.GetAndSitDownAction.GetInteractingItem``1
  commentId: M:TinyLife.Actions.GetAndSitDownAction.GetInteractingItem``1
  isExternal: true
- uid: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction*
  commentId: Overload:TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction
  name: GetInteractingItemForAction
  nameWithType: GetAndSitDownAction.GetInteractingItemForAction
  fullName: TinyLife.Actions.GetAndSitDownAction.GetInteractingItemForAction
