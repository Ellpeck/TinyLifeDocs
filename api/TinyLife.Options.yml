### YamlMime:ManagedReference
items:
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  id: Options
  parent: TinyLife
  children:
  - TinyLife.Options.Apply
  - TinyLife.Options.AutoSaveIntervalSeconds
  - TinyLife.Options.BrightnessIncrease
  - TinyLife.Options.CameraRotation
  - TinyLife.Options.CopyFurnitureKeybind
  - TinyLife.Options.DisplayedHints
  - TinyLife.Options.Fullscreen
  - TinyLife.Options.GameSpeeds
  - TinyLife.Options.HideHangingObjects
  - TinyLife.Options.Instance
  - TinyLife.Options.InteractKeybind
  - TinyLife.Options.Keybinds
  - TinyLife.Options.KeyboardLighting
  - TinyLife.Options.Language
  - TinyLife.Options.MoveCameraKeybind
  - TinyLife.Options.PauseGameKeybind
  - TinyLife.Options.RotateCameraKeybind
  - TinyLife.Options.RotateKeybind
  - TinyLife.Options.Save
  - TinyLife.Options.SellHeldObjectKeybind
  - TinyLife.Options.SoundVolume
  - TinyLife.Options.SpeechVolume
  - TinyLife.Options.StingVolume
  - TinyLife.Options.StoreInHouseholdKeybind
  - TinyLife.Options.SwitchPersonKeybind
  - TinyLife.Options.TakeScreenshotKeybind
  - TinyLife.Options.UiScale
  - TinyLife.Options.VSync
  - TinyLife.Options.WallDisplays
  - TinyLife.Options.WallMode
  - TinyLife.Options.WorldSoundVolume
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
  type: Class
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Options
    path: Options.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s options, which are displayed in the <xref href=\"TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> menu and saved to disk\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Options : GenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Options
          Inherits GenericDataHolder
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Options.TinyLife.Utilities.Extensions.JsonCopy``1
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Options.WallDisplays
  commentId: F:TinyLife.Options.WallDisplays
  id: WallDisplays
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WallDisplays
  nameWithType: Options.WallDisplays
  fullName: TinyLife.Options.WallDisplays
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallDisplays
    path: Options.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn array of all defined <xref href=\"TinyLife.WallDisplay\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: public static readonly WallDisplay[] WallDisplays
    return:
      type: TinyLife.WallDisplay[]
    content.vb: Public Shared ReadOnly WallDisplays As WallDisplay()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Options.GameSpeeds
  commentId: F:TinyLife.Options.GameSpeeds
  id: GameSpeeds
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GameSpeeds
  nameWithType: Options.GameSpeeds
  fullName: TinyLife.Options.GameSpeeds
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GameSpeeds
    path: Options.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn array of all defined <xref href=\"TinyLife.GameSpeed\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: public static readonly GameSpeed[] GameSpeeds
    return:
      type: TinyLife.GameSpeed[]
    content.vb: Public Shared ReadOnly GameSpeeds As GameSpeed()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Options.Keybinds
  commentId: F:TinyLife.Options.Keybinds
  id: Keybinds
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Keybinds
  nameWithType: Options.Keybinds
  fullName: TinyLife.Options.Keybinds
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Keybinds
    path: Options.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn array that contains all of the fields of type <xref href=\"MLEM.Input.Keybind\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"TinyLife.Options\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public static readonly FieldInfo[] Keybinds
    return:
      type: System.Reflection.FieldInfo[]
    content.vb: Public Shared ReadOnly Keybinds As FieldInfo()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Options.Instance
  commentId: P:TinyLife.Options.Instance
  id: Instance
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Options.Instance
  fullName: TinyLife.Options.Instance
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Instance
    path: Options.cs
    startLine: 44
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe static singleton instance of <xref href=\"TinyLife.Options\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static Options Instance { get; }
    parameters: []
    return:
      type: TinyLife.Options
    content.vb: Public Shared ReadOnly Property Instance As Options
  overload: TinyLife.Options.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Options.InteractKeybind
  commentId: F:TinyLife.Options.InteractKeybind
  id: InteractKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: InteractKeybind
  nameWithType: Options.InteractKeybind
  fullName: TinyLife.Options.InteractKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InteractKeybind
    path: Options.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind InteractKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly InteractKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.MoveCameraKeybind
  commentId: F:TinyLife.Options.MoveCameraKeybind
  id: MoveCameraKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: MoveCameraKeybind
  nameWithType: Options.MoveCameraKeybind
  fullName: TinyLife.Options.MoveCameraKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MoveCameraKeybind
    path: Options.cs
    startLine: 50
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind MoveCameraKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly MoveCameraKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.CopyFurnitureKeybind
  commentId: F:TinyLife.Options.CopyFurnitureKeybind
  id: CopyFurnitureKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CopyFurnitureKeybind
  nameWithType: Options.CopyFurnitureKeybind
  fullName: TinyLife.Options.CopyFurnitureKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CopyFurnitureKeybind
    path: Options.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind CopyFurnitureKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly CopyFurnitureKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.StoreInHouseholdKeybind
  commentId: F:TinyLife.Options.StoreInHouseholdKeybind
  id: StoreInHouseholdKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: StoreInHouseholdKeybind
  nameWithType: Options.StoreInHouseholdKeybind
  fullName: TinyLife.Options.StoreInHouseholdKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StoreInHouseholdKeybind
    path: Options.cs
    startLine: 54
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind StoreInHouseholdKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly StoreInHouseholdKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.RotateKeybind
  commentId: F:TinyLife.Options.RotateKeybind
  id: RotateKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: RotateKeybind
  nameWithType: Options.RotateKeybind
  fullName: TinyLife.Options.RotateKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RotateKeybind
    path: Options.cs
    startLine: 56
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind RotateKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly RotateKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.SwitchPersonKeybind
  commentId: F:TinyLife.Options.SwitchPersonKeybind
  id: SwitchPersonKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SwitchPersonKeybind
  nameWithType: Options.SwitchPersonKeybind
  fullName: TinyLife.Options.SwitchPersonKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SwitchPersonKeybind
    path: Options.cs
    startLine: 58
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind SwitchPersonKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly SwitchPersonKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.PauseGameKeybind
  commentId: F:TinyLife.Options.PauseGameKeybind
  id: PauseGameKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: PauseGameKeybind
  nameWithType: Options.PauseGameKeybind
  fullName: TinyLife.Options.PauseGameKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PauseGameKeybind
    path: Options.cs
    startLine: 60
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind PauseGameKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly PauseGameKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.TakeScreenshotKeybind
  commentId: F:TinyLife.Options.TakeScreenshotKeybind
  id: TakeScreenshotKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: TakeScreenshotKeybind
  nameWithType: Options.TakeScreenshotKeybind
  fullName: TinyLife.Options.TakeScreenshotKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeScreenshotKeybind
    path: Options.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind TakeScreenshotKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly TakeScreenshotKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.SellHeldObjectKeybind
  commentId: F:TinyLife.Options.SellHeldObjectKeybind
  id: SellHeldObjectKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SellHeldObjectKeybind
  nameWithType: Options.SellHeldObjectKeybind
  fullName: TinyLife.Options.SellHeldObjectKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SellHeldObjectKeybind
    path: Options.cs
    startLine: 64
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind SellHeldObjectKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly SellHeldObjectKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.RotateCameraKeybind
  commentId: F:TinyLife.Options.RotateCameraKeybind
  id: RotateCameraKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: RotateCameraKeybind
  nameWithType: Options.RotateCameraKeybind
  fullName: TinyLife.Options.RotateCameraKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RotateCameraKeybind
    path: Options.cs
    startLine: 66
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind RotateCameraKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly RotateCameraKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.DisplayedHints
  commentId: F:TinyLife.Options.DisplayedHints
  id: DisplayedHints
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: DisplayedHints
  nameWithType: Options.DisplayedHints
  fullName: TinyLife.Options.DisplayedHints
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DisplayedHints
    path: Options.cs
    startLine: 73
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe <xref href=\"TinyLife.Uis.InGameHint\" data-throw-if-not-resolved=\"false\"></xref> objects that have already been displayed\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly HashSet<InGameHint> DisplayedHints
    return:
      type: System.Collections.Generic.HashSet{TinyLife.Uis.InGameHint}
    content.vb: >-
      <DataMember>

      Public ReadOnly DisplayedHints As HashSet(Of InGameHint)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Options.WallMode
  commentId: P:TinyLife.Options.WallMode
  id: WallMode
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WallMode
  nameWithType: Options.WallMode
  fullName: TinyLife.Options.WallMode
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallMode
    path: Options.cs
    startLine: 81
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe currently selected <xref href=\"TinyLife.Options.WallMode\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that this value does not always return the wall mode that has been selected by the user:\nIf <xref href=\"TinyLife.GameImpl.Mode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"TinyLife.GameImpl.GameMode.SelectHousehold\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.WallDisplay.Roofs\" data-throw-if-not-resolved=\"false\"></xref> is returned.\nIf the <xref href=\"TinyLife.GameImpl.CurrentTool\" data-throw-if-not-resolved=\"false\"></xref> overrides <xref href=\"TinyLife.Tools.Tool.ForceWallsUp\" data-throw-if-not-resolved=\"false\"></xref>, that value is returned.\n"
  example: []
  syntax:
    content: public WallDisplay WallMode { get; set; }
    parameters: []
    return:
      type: TinyLife.WallDisplay
    content.vb: Public Property WallMode As WallDisplay
  overload: TinyLife.Options.WallMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TinyLife.Options.Fullscreen
  commentId: F:TinyLife.Options.Fullscreen
  id: Fullscreen
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Fullscreen
  nameWithType: Options.Fullscreen
  fullName: TinyLife.Options.Fullscreen
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Fullscreen
    path: Options.cs
    startLine: 96
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the game is currently in fullscreen mode\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool Fullscreen
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Fullscreen As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.VSync
  commentId: F:TinyLife.Options.VSync
  id: VSync
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: VSync
  nameWithType: Options.VSync
  fullName: TinyLife.Options.VSync
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: VSync
    path: Options.cs
    startLine: 101
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether vertical synchronization is currently turned on\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool VSync
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public VSync As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.Language
  commentId: F:TinyLife.Options.Language
  id: Language
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: Options.Language
  fullName: TinyLife.Options.Language
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Language
    path: Options.cs
    startLine: 107
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe currently selected language&apos;s language code.\nDetermines the language used by <xref href=\"TinyLife.Localization\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Language
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Language As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.UiScale
  commentId: F:TinyLife.Options.UiScale
  id: UiScale
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: UiScale
  nameWithType: Options.UiScale
  fullName: TinyLife.Options.UiScale
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UiScale
    path: Options.cs
    startLine: 112
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA modifier that is applied to the game&apos;s <xref href=\"MLEM.Ui.UiSystem\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"MLEM.Ui.UiSystem.GlobalScale\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float UiScale
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public UiScale As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.SoundVolume
  commentId: F:TinyLife.Options.SoundVolume
  id: SoundVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SoundVolume
  nameWithType: Options.SoundVolume
  fullName: TinyLife.Options.SoundVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SoundVolume
    path: Options.cs
    startLine: 117
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe current sound volume as a percentage, ranging from 0 to 1\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float SoundVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public SoundVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.WorldSoundVolume
  commentId: F:TinyLife.Options.WorldSoundVolume
  id: WorldSoundVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WorldSoundVolume
  nameWithType: Options.WorldSoundVolume
  fullName: TinyLife.Options.WorldSoundVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WorldSoundVolume
    path: Options.cs
    startLine: 123
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe volume of in-world sounds, used by <xref href=\"TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and its overloads.\nNote that the world sound volume is still multiplied with the sound master volume <xref href=\"TinyLife.Options.SoundVolume\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float WorldSoundVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public WorldSoundVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.SpeechVolume
  commentId: F:TinyLife.Options.SpeechVolume
  id: SpeechVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SpeechVolume
  nameWithType: Options.SpeechVolume
  fullName: TinyLife.Options.SpeechVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpeechVolume
    path: Options.cs
    startLine: 129
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe volume of speech sounds, used by <xref href=\"TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that the speech sound volume is still multiplied with the sound master volume <xref href=\"TinyLife.Options.SoundVolume\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float SpeechVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public SpeechVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.StingVolume
  commentId: F:TinyLife.Options.StingVolume
  id: StingVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: StingVolume
  nameWithType: Options.StingVolume
  fullName: TinyLife.Options.StingVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StingVolume
    path: Options.cs
    startLine: 131
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public float StingVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public StingVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.AutoSaveIntervalSeconds
  commentId: F:TinyLife.Options.AutoSaveIntervalSeconds
  id: AutoSaveIntervalSeconds
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: AutoSaveIntervalSeconds
  nameWithType: Options.AutoSaveIntervalSeconds
  fullName: TinyLife.Options.AutoSaveIntervalSeconds
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AutoSaveIntervalSeconds
    path: Options.cs
    startLine: 137
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe auto-save interval in seconds.\nNote that this value should be set to 30, 60, 180, 300 or 600, as otherwise, the options menu will display it incorrectly.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int AutoSaveIntervalSeconds
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public AutoSaveIntervalSeconds As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.KeyboardLighting
  commentId: F:TinyLife.Options.KeyboardLighting
  id: KeyboardLighting
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: KeyboardLighting
  nameWithType: Options.KeyboardLighting
  fullName: TinyLife.Options.KeyboardLighting
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: KeyboardLighting
    path: Options.cs
    startLine: 143
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether keyboard lighting should be enabled.\nThis setting defaults to false, but can be enabled regardless of whether keyboard lighting is supported by the user&apos;s devices.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool KeyboardLighting
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public KeyboardLighting As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.CameraRotation
  commentId: F:TinyLife.Options.CameraRotation
  id: CameraRotation
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CameraRotation
  nameWithType: Options.CameraRotation
  fullName: TinyLife.Options.CameraRotation
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraRotation
    path: Options.cs
    startLine: 150
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s camera rotation.\nTo use this value effectively, you can use <xref href=\"TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2%2cSystem.Boolean%2cSystem.Nullable%7bMLEM.Misc.Direction2%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2%2cSystem.Nullable%7bMLEM.Misc.Direction2%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen changing this value, <xref href=\"TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2%2cMLEM.Misc.Direction2)\" data-throw-if-not-resolved=\"false\"></xref> should be called for the game&apos;s <xref href=\"TinyLife.GameImpl.Map\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 CameraRotation
    return:
      type: MLEM.Misc.Direction2
    content.vb: >-
      <DataMember>

      Public CameraRotation As Direction2
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.BrightnessIncrease
  commentId: F:TinyLife.Options.BrightnessIncrease
  id: BrightnessIncrease
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: BrightnessIncrease
  nameWithType: Options.BrightnessIncrease
  fullName: TinyLife.Options.BrightnessIncrease
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BrightnessIncrease
    path: Options.cs
    startLine: 155
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA percentage that the game&apos;s world&apos;s brightness is increased by, mainly intended for users with darker screens\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float BrightnessIncrease
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public BrightnessIncrease As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.HideHangingObjects
  commentId: F:TinyLife.Options.HideHangingObjects
  id: HideHangingObjects
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: HideHangingObjects
  nameWithType: Options.HideHangingObjects
  fullName: TinyLife.Options.HideHangingObjects
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HideHangingObjects
    path: Options.cs
    startLine: 161
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether hanging objects should be hidden in the world if walls are down.\nThis property is automatically evaluated in <xref href=\"TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HideHangingObjects
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HideHangingObjects As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.Apply
  commentId: M:TinyLife.Options.Apply
  id: Apply
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Apply()
  nameWithType: Options.Apply()
  fullName: TinyLife.Options.Apply()
  type: Method
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Apply
    path: Options.cs
    startLine: 169
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nApplies the currently selected options of this instance to the game\n"
  example: []
  syntax:
    content: public void Apply()
    content.vb: Public Sub Apply
  overload: TinyLife.Options.Apply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Options.Save
  commentId: M:TinyLife.Options.Save
  id: Save
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: Options.Save()
  fullName: TinyLife.Options.Save()
  type: Method
  source:
    remote:
      path: TinyLife/Options.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Save
    path: Options.cs
    startLine: 190
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nSaves the options to the default options file path\n"
  example: []
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: TinyLife.Options.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean,System.Boolean)
  isExternal: true
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Options.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Options>()
  nameWithType: Extensions.JsonCopy<Options>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Options>()
  nameWithType.vb: Extensions.JsonCopy(Of Options)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Options)()
  name.vb: JsonCopy(Of Options)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Options>
    nameWithType: Extensions.JsonCopy<Options>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Options>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Options)
    nameWithType: Extensions.JsonCopy(Of Options)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Options)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  name: GetTimeSpan(String)
  nameWithType: Extensions.GetTimeSpan(String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  name: SetTimeSpan(String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  isExternal: true
  name: GetTimeSpan(IGenericDataHolder, String)
  nameWithType: Extensions.GetTimeSpan(IGenericDataHolder, String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  isExternal: true
  name: SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.WallDisplay
  commentId: T:TinyLife.WallDisplay
  parent: TinyLife
  name: WallDisplay
  nameWithType: WallDisplay
  fullName: TinyLife.WallDisplay
- uid: TinyLife.WallDisplay[]
  isExternal: true
  name: WallDisplay[]
  nameWithType: WallDisplay[]
  fullName: TinyLife.WallDisplay[]
  nameWithType.vb: WallDisplay()
  fullName.vb: TinyLife.WallDisplay()
  name.vb: WallDisplay()
  spec.csharp:
  - uid: TinyLife.WallDisplay
    name: WallDisplay
    nameWithType: WallDisplay
    fullName: TinyLife.WallDisplay
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.WallDisplay
    name: WallDisplay
    nameWithType: WallDisplay
    fullName: TinyLife.WallDisplay
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TinyLife.GameSpeed
  commentId: T:TinyLife.GameSpeed
  parent: TinyLife
  name: GameSpeed
  nameWithType: GameSpeed
  fullName: TinyLife.GameSpeed
- uid: TinyLife.GameSpeed[]
  isExternal: true
  name: GameSpeed[]
  nameWithType: GameSpeed[]
  fullName: TinyLife.GameSpeed[]
  nameWithType.vb: GameSpeed()
  fullName.vb: TinyLife.GameSpeed()
  name.vb: GameSpeed()
  spec.csharp:
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.GameSpeed
    name: GameSpeed
    nameWithType: GameSpeed
    fullName: TinyLife.GameSpeed
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MLEM.Input.Keybind
  commentId: T:MLEM.Input.Keybind
  parent: MLEM.Input
  isExternal: true
  name: Keybind
  nameWithType: Keybind
  fullName: MLEM.Input.Keybind
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  parent: TinyLife
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
- uid: System.Reflection.FieldInfo[]
  isExternal: true
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: System.Reflection.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MLEM.Input
  commentId: N:MLEM.Input
  isExternal: true
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
- uid: TinyLife.Options.Instance*
  commentId: Overload:TinyLife.Options.Instance
  name: Instance
  nameWithType: Options.Instance
  fullName: TinyLife.Options.Instance
- uid: TinyLife.Uis.InGameHint
  commentId: T:TinyLife.Uis.InGameHint
  parent: TinyLife.Uis
  name: InGameHint
  nameWithType: InGameHint
  fullName: TinyLife.Uis.InGameHint
- uid: System.Collections.Generic.HashSet{TinyLife.Uis.InGameHint}
  commentId: T:System.Collections.Generic.HashSet{TinyLife.Uis.InGameHint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<InGameHint>
  nameWithType: HashSet<InGameHint>
  fullName: System.Collections.Generic.HashSet<TinyLife.Uis.InGameHint>
  nameWithType.vb: HashSet(Of InGameHint)
  fullName.vb: System.Collections.Generic.HashSet(Of TinyLife.Uis.InGameHint)
  name.vb: HashSet(Of InGameHint)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    nameWithType: InGameHint
    fullName: TinyLife.Uis.InGameHint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    nameWithType: InGameHint
    fullName: TinyLife.Uis.InGameHint
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Options.WallMode
  commentId: P:TinyLife.Options.WallMode
  isExternal: true
- uid: TinyLife.GameImpl.Mode
  commentId: P:TinyLife.GameImpl.Mode
  isExternal: true
- uid: TinyLife.GameImpl.GameMode.SelectHousehold
  commentId: F:TinyLife.GameImpl.GameMode.SelectHousehold
  isExternal: true
- uid: TinyLife.WallDisplay.Roofs
  commentId: F:TinyLife.WallDisplay.Roofs
  isExternal: true
- uid: TinyLife.GameImpl.CurrentTool
  commentId: P:TinyLife.GameImpl.CurrentTool
  isExternal: true
- uid: TinyLife.Tools.Tool.ForceWallsUp
  commentId: M:TinyLife.Tools.Tool.ForceWallsUp
  parent: TinyLife.Tools.Tool
  name: ForceWallsUp()
  nameWithType: Tool.ForceWallsUp()
  fullName: TinyLife.Tools.Tool.ForceWallsUp()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.ForceWallsUp
    name: ForceWallsUp
    nameWithType: Tool.ForceWallsUp
    fullName: TinyLife.Tools.Tool.ForceWallsUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.ForceWallsUp
    name: ForceWallsUp
    nameWithType: Tool.ForceWallsUp
    fullName: TinyLife.Tools.Tool.ForceWallsUp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Options.WallMode*
  commentId: Overload:TinyLife.Options.WallMode
  name: WallMode
  nameWithType: Options.WallMode
  fullName: TinyLife.Options.WallMode
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  isExternal: true
- uid: MLEM.Ui.UiSystem.GlobalScale
  commentId: P:MLEM.Ui.UiSystem.GlobalScale
  isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean)
  isExternal: true
- uid: TinyLife.Options.SoundVolume
  commentId: F:TinyLife.Options.SoundVolume
  isExternal: true
- uid: TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle,System.Single,System.Single)
  commentId: M:TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle,System.Single,System.Single)
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  isExternal: true
- uid: TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Nullable{MLEM.Misc.Direction2})
  commentId: M:TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Nullable{MLEM.Misc.Direction2})
  isExternal: true
- uid: TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2,System.Nullable{MLEM.Misc.Direction2})
  commentId: M:TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2,System.Nullable{MLEM.Misc.Direction2})
  isExternal: true
- uid: TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  commentId: M:TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  isExternal: true
- uid: TinyLife.GameImpl.Map
  commentId: P:TinyLife.GameImpl.Map
  isExternal: true
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.Objects.Furniture
  isExternal: true
  name: Draw(GameTime, SpriteBatch, Vector2, Nullable<Color>)
  nameWithType: Furniture.Draw(GameTime, SpriteBatch, Vector2, Nullable<Color>)
  fullName: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, System.Nullable<Microsoft.Xna.Framework.Color>)
  nameWithType.vb: Furniture.Draw(GameTime, SpriteBatch, Vector2, Nullable(Of Color))
  fullName.vb: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, System.Nullable(Of Microsoft.Xna.Framework.Color))
  name.vb: Draw(GameTime, SpriteBatch, Vector2, Nullable(Of Color))
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
    nameWithType: Furniture.Draw
    fullName: TinyLife.Objects.Furniture.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
    nameWithType: Furniture.Draw
    fullName: TinyLife.Objects.Furniture.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Options.Apply*
  commentId: Overload:TinyLife.Options.Apply
  name: Apply
  nameWithType: Options.Apply
  fullName: TinyLife.Options.Apply
- uid: TinyLife.Options.Save*
  commentId: Overload:TinyLife.Options.Save
  name: Save
  nameWithType: Options.Save
  fullName: TinyLife.Options.Save
