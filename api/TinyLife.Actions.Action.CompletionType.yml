### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Action.CompletionType
  commentId: T:TinyLife.Actions.Action.CompletionType
  id: Action.CompletionType
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.Action.CompletionType.Active
  - TinyLife.Actions.Action.CompletionType.Canceled
  - TinyLife.Actions.Action.CompletionType.Completed
  - TinyLife.Actions.Action.CompletionType.Failed
  langs:
  - csharp
  - vb
  name: Action.CompletionType
  nameWithType: Action.CompletionType
  fullName: TinyLife.Actions.Action.CompletionType
  type: Enum
  source:
    remote:
      path: TinyLife/Actions/Action.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CompletionType
    path: Actions/Action.cs
    startLine: 632
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn enumeration that represents the various states that an <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> can be in.\n"
  example: []
  syntax:
    content: public enum CompletionType
    content.vb: Public Enum CompletionType
  extensionMethods:
  - TinyLife.Actions.Action.CompletionType.TinyLife.Utilities.Extensions.JsonCopy``1
  - TinyLife.Actions.Action.CompletionType.TinyLife.Utilities.Extensions.BothCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
  - TinyLife.Actions.Action.CompletionType.TinyLife.Utilities.Extensions.OneCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Actions.Action.CompletionType.Active
  commentId: F:TinyLife.Actions.Action.CompletionType.Active
  id: Active
  parent: TinyLife.Actions.Action.CompletionType
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: Action.CompletionType.Active
  fullName: TinyLife.Actions.Action.CompletionType.Active
  type: Field
  source:
    remote:
      path: TinyLife/Actions/Action.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Active
    path: Actions/Action.cs
    startLine: 637
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA completion type that represents an active action\n"
  example: []
  syntax:
    content: Active = 0
    return:
      type: TinyLife.Actions.Action.CompletionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Actions.Action.CompletionType.Completed
  commentId: F:TinyLife.Actions.Action.CompletionType.Completed
  id: Completed
  parent: TinyLife.Actions.Action.CompletionType
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: Action.CompletionType.Completed
  fullName: TinyLife.Actions.Action.CompletionType.Completed
  type: Field
  source:
    remote:
      path: TinyLife/Actions/Action.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Completed
    path: Actions/Action.cs
    startLine: 641
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA completion type that represents a completed action\n"
  example: []
  syntax:
    content: Completed = 1
    return:
      type: TinyLife.Actions.Action.CompletionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Actions.Action.CompletionType.Failed
  commentId: F:TinyLife.Actions.Action.CompletionType.Failed
  id: Failed
  parent: TinyLife.Actions.Action.CompletionType
  langs:
  - csharp
  - vb
  name: Failed
  nameWithType: Action.CompletionType.Failed
  fullName: TinyLife.Actions.Action.CompletionType.Failed
  type: Field
  source:
    remote:
      path: TinyLife/Actions/Action.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Failed
    path: Actions/Action.cs
    startLine: 645
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA completion type that represents an action that has failed to complete\n"
  example: []
  syntax:
    content: Failed = 2
    return:
      type: TinyLife.Actions.Action.CompletionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Actions.Action.CompletionType.Canceled
  commentId: F:TinyLife.Actions.Action.CompletionType.Canceled
  id: Canceled
  parent: TinyLife.Actions.Action.CompletionType
  langs:
  - csharp
  - vb
  name: Canceled
  nameWithType: Action.CompletionType.Canceled
  fullName: TinyLife.Actions.Action.CompletionType.Canceled
  type: Field
  source:
    remote:
      path: TinyLife/Actions/Action.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Canceled
    path: Actions/Action.cs
    startLine: 649
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA completion type that represents an action that has been canceled by an outside source\n"
  example: []
  syntax:
    content: Canceled = 3
    return:
      type: TinyLife.Actions.Action.CompletionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Actions.Action.CompletionType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Action.CompletionType>()
  nameWithType: Extensions.JsonCopy<Action.CompletionType>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Action.CompletionType>()
  nameWithType.vb: Extensions.JsonCopy(Of Action.CompletionType)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Action.CompletionType)()
  name.vb: JsonCopy(Of Action.CompletionType)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Action.CompletionType>
    nameWithType: Extensions.JsonCopy<Action.CompletionType>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Action.CompletionType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Action.CompletionType)
    nameWithType: Extensions.JsonCopy(Of Action.CompletionType)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Action.CompletionType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CompletionType.TinyLife.Utilities.Extensions.BothCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
  commentId: M:TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  name: BothCompleted(Func<Action.CompletionType>)
  nameWithType: Extensions.BothCompleted(Func<Action.CompletionType>)
  fullName: TinyLife.Utilities.Extensions.BothCompleted(System.Func<TinyLife.Actions.Action.CompletionType>)
  nameWithType.vb: Extensions.BothCompleted(Func(Of Action.CompletionType))
  fullName.vb: TinyLife.Utilities.Extensions.BothCompleted(System.Func(Of TinyLife.Actions.Action.CompletionType))
  name.vb: BothCompleted(Func(Of Action.CompletionType))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.BothCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
    name: BothCompleted
    nameWithType: Extensions.BothCompleted
    fullName: TinyLife.Utilities.Extensions.BothCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.BothCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
    name: BothCompleted
    nameWithType: Extensions.BothCompleted
    fullName: TinyLife.Utilities.Extensions.BothCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Action.CompletionType.TinyLife.Utilities.Extensions.OneCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
  commentId: M:TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  name: OneCompleted(Func<Action.CompletionType>)
  nameWithType: Extensions.OneCompleted(Func<Action.CompletionType>)
  fullName: TinyLife.Utilities.Extensions.OneCompleted(System.Func<TinyLife.Actions.Action.CompletionType>)
  nameWithType.vb: Extensions.OneCompleted(Func(Of Action.CompletionType))
  fullName.vb: TinyLife.Utilities.Extensions.OneCompleted(System.Func(Of TinyLife.Actions.Action.CompletionType))
  name.vb: OneCompleted(Func(Of Action.CompletionType))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.OneCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
    name: OneCompleted
    nameWithType: Extensions.OneCompleted
    fullName: TinyLife.Utilities.Extensions.OneCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.OneCompleted(System.Func{TinyLife.Actions.Action.CompletionType})
    name: OneCompleted
    nameWithType: Extensions.OneCompleted
    fullName: TinyLife.Utilities.Extensions.OneCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  commentId: M:TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  isExternal: true
  name: BothCompleted(Action.CompletionType, Func<Action.CompletionType>)
  nameWithType: Extensions.BothCompleted(Action.CompletionType, Func<Action.CompletionType>)
  fullName: TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType, System.Func<TinyLife.Actions.Action.CompletionType>)
  nameWithType.vb: Extensions.BothCompleted(Action.CompletionType, Func(Of Action.CompletionType))
  fullName.vb: TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType, System.Func(Of TinyLife.Actions.Action.CompletionType))
  name.vb: BothCompleted(Action.CompletionType, Func(Of Action.CompletionType))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
    name: BothCompleted
    nameWithType: Extensions.BothCompleted
    fullName: TinyLife.Utilities.Extensions.BothCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.BothCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
    name: BothCompleted
    nameWithType: Extensions.BothCompleted
    fullName: TinyLife.Utilities.Extensions.BothCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  commentId: M:TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
  isExternal: true
  name: OneCompleted(Action.CompletionType, Func<Action.CompletionType>)
  nameWithType: Extensions.OneCompleted(Action.CompletionType, Func<Action.CompletionType>)
  fullName: TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType, System.Func<TinyLife.Actions.Action.CompletionType>)
  nameWithType.vb: Extensions.OneCompleted(Action.CompletionType, Func(Of Action.CompletionType))
  fullName.vb: TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType, System.Func(Of TinyLife.Actions.Action.CompletionType))
  name.vb: OneCompleted(Action.CompletionType, Func(Of Action.CompletionType))
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
    name: OneCompleted
    nameWithType: Extensions.OneCompleted
    fullName: TinyLife.Utilities.Extensions.OneCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.OneCompleted(TinyLife.Actions.Action.CompletionType,System.Func{TinyLife.Actions.Action.CompletionType})
    name: OneCompleted
    nameWithType: Extensions.OneCompleted
    fullName: TinyLife.Utilities.Extensions.OneCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action.CompletionType
    name: Action.CompletionType
    nameWithType: Action.CompletionType
    fullName: TinyLife.Actions.Action.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Actions.Action.CompletionType
  commentId: T:TinyLife.Actions.Action.CompletionType
  parent: TinyLife.Actions
  name: Action.CompletionType
  nameWithType: Action.CompletionType
  fullName: TinyLife.Actions.Action.CompletionType
