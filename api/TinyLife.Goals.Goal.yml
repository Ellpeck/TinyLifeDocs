### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  id: Goal
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.Goal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)
  - TinyLife.Goals.Goal.GetDisplayedProgress
  - TinyLife.Goals.Goal.GetProgress
  - TinyLife.Goals.Goal.Info
  - TinyLife.Goals.Goal.Name
  - TinyLife.Goals.Goal.Reset
  - TinyLife.Goals.Goal.Set
  - TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  langs:
  - csharp
  - vb
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
  type: Class
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Goal
    path: Goals/Goal.cs
    startLine: 8
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal is a component of a <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref> which can be completed.\nA goal has an underlying <xref href=\"TinyLife.Goals.GoalInfo\" data-throw-if-not-resolved=\"false\"></xref> that it is constructed from.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public abstract class Goal : GenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public MustInherit Class Goal
          Inherits GenericDataHolder
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  derivedClasses:
  - TinyLife.Goals.AutoTriggerGoal`1
  - TinyLife.Goals.ManualProgressGoal
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.Goal.TinyLife.Utilities.Extensions.JsonCopy``1
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TinyLife.Goals.Goal.Name
  commentId: F:TinyLife.Goals.Goal.Name
  id: Name
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Goal.Name
  fullName: TinyLife.Goals.Goal.Name
  type: Field
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Name
    path: Goals/Goal.cs
    startLine: 15
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe name of this goal, based on the underlying <xref href=\"TinyLife.Goals.GoalInfo\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly string Name
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public ReadOnly Name As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.Goal.Set
  commentId: P:TinyLife.Goals.Goal.Set
  id: Set
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: Set
  nameWithType: Goal.Set
  fullName: TinyLife.Goals.Goal.Set
  type: Property
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Set
    path: Goals/Goal.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe goal set that this goal is a part of\n"
  example: []
  syntax:
    content: public GoalSet Set { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSet
    content.vb: Public ReadOnly Property Set As GoalSet
  overload: TinyLife.Goals.Goal.Set*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.Goal.Info
  commentId: P:TinyLife.Goals.Goal.Info
  id: Info
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: Goal.Info
  fullName: TinyLife.Goals.Goal.Info
  type: Property
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Info
    path: Goals/Goal.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe underlying goal info that this goal has been constructed from\n"
  example: []
  syntax:
    content: public GoalInfo Info { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalInfo
    content.vb: Public ReadOnly Property Info As GoalInfo
  overload: TinyLife.Goals.Goal.Info*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.Goal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)
  commentId: M:TinyLife.Goals.Goal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)
  id: '#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)'
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: Goal(GoalSet, GoalInfo)
  nameWithType: Goal.Goal(GoalSet, GoalInfo)
  fullName: TinyLife.Goals.Goal.Goal(TinyLife.Goals.GoalSet, TinyLife.Goals.GoalInfo)
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: .ctor
    path: Goals/Goal.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCreates a new goal with the given settings\n"
  example: []
  syntax:
    content: protected Goal(GoalSet set, GoalInfo info)
    parameters:
    - id: set
      type: TinyLife.Goals.GoalSet
      description: The goal set that this goal is a part of
    - id: info
      type: TinyLife.Goals.GoalInfo
      description: The underlying goal info that this goal has been constructed from
    content.vb: Protected Sub New(set As GoalSet, info As GoalInfo)
  overload: TinyLife.Goals.Goal.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TinyLife.Goals.Goal.GetProgress
  commentId: M:TinyLife.Goals.Goal.GetProgress
  id: GetProgress
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: GetProgress()
  nameWithType: Goal.GetProgress()
  fullName: TinyLife.Goals.Goal.GetProgress()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GetProgress
    path: Goals/Goal.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns the progress percentage (between 0 and 1) that this goal has\n"
  example: []
  syntax:
    content: public abstract float GetProgress()
    return:
      type: System.Single
      description: The progress percentage
    content.vb: Public MustOverride Function GetProgress As Single
  overload: TinyLife.Goals.Goal.GetProgress*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TinyLife.Goals.Goal.Reset
  commentId: M:TinyLife.Goals.Goal.Reset
  id: Reset
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Goal.Reset()
  fullName: TinyLife.Goals.Goal.Reset()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Reset
    path: Goals/Goal.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nResets this goal to the default values, which should cause 0 to be returned on <xref href=\"TinyLife.Goals.Goal.GetProgress\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public abstract void Reset()
    content.vb: Public MustOverride Sub Reset
  overload: TinyLife.Goals.Goal.Reset*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TinyLife.Goals.Goal.GetDisplayedProgress
  commentId: M:TinyLife.Goals.Goal.GetDisplayedProgress
  id: GetDisplayedProgress
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: GetDisplayedProgress()
  nameWithType: Goal.GetDisplayedProgress()
  fullName: TinyLife.Goals.Goal.GetDisplayedProgress()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GetDisplayedProgress
    path: Goals/Goal.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns a string that is used in a goal set&apos;s displayed ui information that determines the progress of this goal.\nBy default, the <xref href=\"TinyLife.Goals.Goal.GetProgress\" data-throw-if-not-resolved=\"false\"></xref> percentage is displayed as a percentage between 0 and 100.\n"
  example: []
  syntax:
    content: public virtual string GetDisplayedProgress()
    return:
      type: System.String
      description: The displayed goal progress
    content.vb: Public Overridable Function GetDisplayedProgress As String
  overload: TinyLife.Goals.Goal.GetDisplayedProgress*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  id: Validate(TinyLife.Goals.GoalSet)
  parent: TinyLife.Goals.Goal
  langs:
  - csharp
  - vb
  name: Validate(GoalSet)
  nameWithType: Goal.Validate(GoalSet)
  fullName: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/Goal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Validate
    path: Goals/Goal.cs
    startLine: 61
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nValidates this goal when loading the underlying <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref> from disk\n"
  example: []
  syntax:
    content: public virtual bool Validate(GoalSet set)
    parameters:
    - id: set
      type: TinyLife.Goals.GoalSet
      description: The underlying goal set
    return:
      type: System.Boolean
      description: Whether this goal is considered to be valid
    content.vb: Public Overridable Function Validate(set As GoalSet) As Boolean
  overload: TinyLife.Goals.Goal.Validate*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.GoalInfo
  commentId: T:TinyLife.Goals.GoalInfo
  parent: TinyLife.Goals
  name: GoalInfo
  nameWithType: GoalInfo
  fullName: TinyLife.Goals.GoalInfo
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: GenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: GenericDataHolder.SetData
    fullName: MLEM.Misc.GenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: GenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: GenericDataHolder.GetData<T>
    fullName: MLEM.Misc.GenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: GenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.GenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: GenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.GenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Goal>()
  nameWithType: Extensions.JsonCopy<Goal>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Goal>()
  nameWithType.vb: Extensions.JsonCopy(Of Goal)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Goal)()
  name.vb: JsonCopy(Of Goal)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Goal>
    nameWithType: Extensions.JsonCopy<Goal>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Goal>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Goal)
    nameWithType: Extensions.JsonCopy(Of Goal)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Goal)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  name: GetTimeSpan(String)
  nameWithType: Extensions.GetTimeSpan(String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  name: SetTimeSpan(String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  isExternal: true
  name: GetTimeSpan(IGenericDataHolder, String)
  nameWithType: Extensions.GetTimeSpan(IGenericDataHolder, String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  isExternal: true
  name: SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.Goals.Goal.Set*
  commentId: Overload:TinyLife.Goals.Goal.Set
  name: Set
  nameWithType: Goal.Set
  fullName: TinyLife.Goals.Goal.Set
- uid: TinyLife.Goals.Goal.Info*
  commentId: Overload:TinyLife.Goals.Goal.Info
  name: Info
  nameWithType: Goal.Info
  fullName: TinyLife.Goals.Goal.Info
- uid: TinyLife.Goals.Goal.#ctor*
  commentId: Overload:TinyLife.Goals.Goal.#ctor
  name: Goal
  nameWithType: Goal.Goal
  fullName: TinyLife.Goals.Goal.Goal
- uid: TinyLife.Goals.Goal.GetProgress*
  commentId: Overload:TinyLife.Goals.Goal.GetProgress
  name: GetProgress
  nameWithType: Goal.GetProgress
  fullName: TinyLife.Goals.Goal.GetProgress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Goals.Goal.GetProgress
  commentId: M:TinyLife.Goals.Goal.GetProgress
  parent: TinyLife.Goals.Goal
  name: GetProgress()
  nameWithType: Goal.GetProgress()
  fullName: TinyLife.Goals.Goal.GetProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.Reset*
  commentId: Overload:TinyLife.Goals.Goal.Reset
  name: Reset
  nameWithType: Goal.Reset
  fullName: TinyLife.Goals.Goal.Reset
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  parent: TinyLife.Goals
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
- uid: TinyLife.Goals.Goal.GetDisplayedProgress*
  commentId: Overload:TinyLife.Goals.Goal.GetDisplayedProgress
  name: GetDisplayedProgress
  nameWithType: Goal.GetDisplayedProgress
  fullName: TinyLife.Goals.Goal.GetDisplayedProgress
- uid: TinyLife.Goals.Goal.Validate*
  commentId: Overload:TinyLife.Goals.Goal.Validate
  name: Validate
  nameWithType: Goal.Validate
  fullName: TinyLife.Goals.Goal.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
