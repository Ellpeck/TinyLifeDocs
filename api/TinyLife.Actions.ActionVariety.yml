### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ActionVariety
  commentId: T:TinyLife.Actions.ActionVariety
  id: ActionVariety
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ActionVariety.#ctor(System.String)
  - TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionVariety.CanExecute
  - TinyLife.Actions.ActionVariety.CustomLayout
  - TinyLife.Actions.ActionVariety.Description
  - TinyLife.Actions.ActionVariety.DisplayName
  - TinyLife.Actions.ActionVariety.GetData``1(System.String)
  - TinyLife.Actions.ActionVariety.GetDataKeys
  - TinyLife.Actions.ActionVariety.GetDisplayName
  - TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  - TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  - TinyLife.Actions.ActionVariety.Name
  - TinyLife.Actions.ActionVariety.PassivePriority
  - TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  - TinyLife.Actions.ActionVariety.SetData(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: ActionVariety
  nameWithType: ActionVariety
  fullName: TinyLife.Actions.ActionVariety
  type: Struct
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: ActionVariety
    path: Actions/ActionVariety.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action variety is a modification to a <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> that represents a slightly changed version of the generic action type.\nAction varieties are used, for example, by <xref href=\"TinyLife.Actions.ActionType.PrepareFood\" data-throw-if-not-resolved=\"false\"></xref> to determine the kind of food that should be prepared.\n"
  example: []
  syntax:
    content: 'public struct ActionVariety : IGenericDataHolder'
    content.vb: >-
      Public Structure ActionVariety
          Implements IGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Actions.ActionVariety.TinyLife.Utilities.Extensions.JsonCopy``1
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  - MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: TinyLife.Actions.ActionVariety.Name
  commentId: F:TinyLife.Actions.ActionVariety.Name
  id: Name
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ActionVariety.Name
  fullName: TinyLife.Actions.ActionVariety.Name
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Name
    path: Actions/ActionVariety.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe name of this action variety\n"
  example: []
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.PassivePriority
  commentId: F:TinyLife.Actions.ActionVariety.PassivePriority
  id: PassivePriority
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: PassivePriority
  nameWithType: ActionVariety.PassivePriority
  fullName: TinyLife.Actions.ActionVariety.PassivePriority
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: PassivePriority
    path: Actions/ActionVariety.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that returns the passive priority of this action variety.\nThis is an extension of <xref href=\"TinyLife.Actions.ActionType.AiSettings.PassivePriority\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Func<Person, int> PassivePriority
    return:
      type: System.Func{TinyLife.Objects.Person,System.Int32}
    content.vb: Public PassivePriority As Func(Of Person, Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.CanExecute
  commentId: F:TinyLife.Actions.ActionVariety.CanExecute
  id: CanExecute
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: CanExecute
  nameWithType: ActionVariety.CanExecute
  fullName: TinyLife.Actions.ActionVariety.CanExecute
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CanExecute
    path: Actions/ActionVariety.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that returns whether or not this action variety can currently be chosen.\nThis is an extension of <xref href=\"TinyLife.Actions.ActionType.TypeSettings.CanExecute\" data-throw-if-not-resolved=\"false\"></xref>.\nTo query this delegate effectively, use <xref href=\"TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionType.CanExecuteDelegate CanExecute
    return:
      type: TinyLife.Actions.ActionType.CanExecuteDelegate
    content.vb: Public CanExecute As ActionType.CanExecuteDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.DisplayName
  commentId: F:TinyLife.Actions.ActionVariety.DisplayName
  id: DisplayName
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ActionVariety.DisplayName
  fullName: TinyLife.Actions.ActionVariety.DisplayName
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: DisplayName
    path: Actions/ActionVariety.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that is called to describe this action variety.\nThis is used in the menu that pops up when the underlying <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> is picked.\n"
  example: []
  syntax:
    content: public Func<string> DisplayName
    return:
      type: System.Func{System.String}
    content.vb: Public DisplayName As Func(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.Description
  commentId: F:TinyLife.Actions.ActionVariety.Description
  id: Description
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ActionVariety.Description
  fullName: TinyLife.Actions.ActionVariety.Description
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Description
    path: Actions/ActionVariety.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that is called to describe this action variety in more detail.\nThis is used in the menu that pops up when the underlying <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> is picked.\n"
  example: []
  syntax:
    content: public Func<string> Description
    return:
      type: System.Func{System.String}
    content.vb: Public Description As Func(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.CustomLayout
  commentId: F:TinyLife.Actions.ActionVariety.CustomLayout
  id: CustomLayout
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: CustomLayout
  nameWithType: ActionVariety.CustomLayout
  fullName: TinyLife.Actions.ActionVariety.CustomLayout
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CustomLayout
    path: Actions/ActionVariety.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action that is invoked when this action variety is added to a play mode ui.\nIf this action is set, the <xref href=\"MLEM.Ui.Elements.Button\" data-throw-if-not-resolved=\"false\"></xref> that is passed can be modified to look different based on this variety.\nPredefined custom layouts such as <xref href=\"TinyLife.Actions.ActionVariety.ImageLayout(System.Single%2cMLEM.Ui.Elements.Element.DrawCallback%2cMLEM.Misc.Padding)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)\" data-throw-if-not-resolved=\"false\"></xref> can be found statically in this class.\n"
  example: []
  syntax:
    content: public Action<Button> CustomLayout
    return:
      type: System.Action{MLEM.Ui.Elements.Button}
    content.vb: Public CustomLayout As Action(Of Button)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.#ctor(System.String)
  commentId: M:TinyLife.Actions.ActionVariety.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: ActionVariety(String)
  nameWithType: ActionVariety.ActionVariety(String)
  fullName: TinyLife.Actions.ActionVariety.ActionVariety(System.String)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: .ctor
    path: Actions/ActionVariety.cs
    startLine: 56
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new action variety with the given name\n"
  example: []
  syntax:
    content: public ActionVariety(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of this action variety
    content.vb: Public Sub New(name As String)
  overload: TinyLife.Actions.ActionVariety.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.GetDisplayName
  commentId: M:TinyLife.Actions.ActionVariety.GetDisplayName
  id: GetDisplayName
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: GetDisplayName()
  nameWithType: ActionVariety.GetDisplayName()
  fullName: TinyLife.Actions.ActionVariety.GetDisplayName()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GetDisplayName
    path: Actions/ActionVariety.cs
    startLine: 64
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the display name of this action varietiy, which is either the value returned by <xref href=\"TinyLife.Actions.ActionVariety.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> or a default localized display name\n"
  example: []
  syntax:
    content: public string GetDisplayName()
    return:
      type: System.String
      description: This action variety&apos;s display name
    content.vb: Public Function GetDisplayName As String
  overload: TinyLife.Actions.ActionVariety.GetDisplayName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: CanBeExecuted(ActionInfo, Boolean)
  nameWithType: ActionVariety.CanBeExecuted(ActionInfo, Boolean)
  fullName: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CanBeExecuted
    path: Actions/ActionVariety.cs
    startLine: 75
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns whether this action variety can be executed using the provided <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>.\nThis returns the result of <xref href=\"TinyLife.Actions.ActionVariety.CanExecute\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"TinyLife.Actions.ActionType.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> if it is null.\n"
  example: []
  syntax:
    content: public ActionType.CanExecuteResult CanBeExecuted(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic
    return:
      type: TinyLife.Actions.ActionType.CanExecuteResult
      description: Whether this variety can currently be executed
    content.vb: Public Function CanBeExecuted(info As ActionInfo, automatic As Boolean) As ActionType.CanExecuteResult
  overload: TinyLife.Actions.ActionVariety.CanBeExecuted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  id: GetPassivePriority(TinyLife.Objects.Person)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: GetPassivePriority(Person)
  nameWithType: ActionVariety.GetPassivePriority(Person)
  fullName: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GetPassivePriority
    path: Actions/ActionVariety.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the passive priority of this action variety, which is based on <xref href=\"TinyLife.Actions.ActionVariety.PassivePriority\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public int GetPassivePriority(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person for whom to return the passive priority
    return:
      type: System.Int32
      description: The passive priority of this action variety
    content.vb: Public Function GetPassivePriority(person As Person) As Integer
  overload: TinyLife.Actions.ActionVariety.GetPassivePriority*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.SetData(System.String,System.Object)
  commentId: M:TinyLife.Actions.ActionVariety.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: SetData(String, Object)
  nameWithType: ActionVariety.SetData(String, Object)
  fullName: TinyLife.Actions.ActionVariety.SetData(System.String, System.Object)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: SetData
    path: Actions/ActionVariety.cs
    startLine: 96
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  example: []
  syntax:
    content: public void SetData(string key, object data)
    parameters:
    - id: key
      type: System.String
    - id: data
      type: System.Object
    content.vb: Public Sub SetData(key As String, data As Object)
  overload: TinyLife.Actions.ActionVariety.SetData*
  implements:
  - MLEM.Misc.IGenericDataHolder.SetData(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.GetData``1(System.String)
  commentId: M:TinyLife.Actions.ActionVariety.GetData``1(System.String)
  id: GetData``1(System.String)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: GetData<T>(String)
  nameWithType: ActionVariety.GetData<T>(String)
  fullName: TinyLife.Actions.ActionVariety.GetData<T>(System.String)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GetData
    path: Actions/ActionVariety.cs
    startLine: 102
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  example: []
  syntax:
    content: public T GetData<T>(string key)
    parameters:
    - id: key
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetData(Of T)(key As String) As T
  overload: TinyLife.Actions.ActionVariety.GetData*
  implements:
  - MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  nameWithType.vb: ActionVariety.GetData(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Actions.ActionVariety.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
- uid: TinyLife.Actions.ActionVariety.GetDataKeys
  commentId: M:TinyLife.Actions.ActionVariety.GetDataKeys
  id: GetDataKeys
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: GetDataKeys()
  nameWithType: ActionVariety.GetDataKeys()
  fullName: TinyLife.Actions.ActionVariety.GetDataKeys()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GetDataKeys
    path: Actions/ActionVariety.cs
    startLine: 107
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  example: []
  syntax:
    content: public IReadOnlyCollection<string> GetDataKeys()
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: Public Function GetDataKeys As IReadOnlyCollection(Of String)
  overload: TinyLife.Actions.ActionVariety.GetDataKeys*
  implements:
  - MLEM.Misc.IGenericDataHolder.GetDataKeys
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  commentId: M:TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  id: ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: ImageLayout(Single, Element.DrawCallback, Padding)
  nameWithType: ActionVariety.ImageLayout(Single, Element.DrawCallback, Padding)
  fullName: TinyLife.Actions.ActionVariety.ImageLayout(System.Single, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Misc.Padding)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: ImageLayout
    path: Actions/ActionVariety.cs
    startLine: 121
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionVariety.CustomLayout\" data-throw-if-not-resolved=\"false\"></xref> that creates a layout with large, rectangular variety buttons that can draw something on themselves.\nThis layout is used by actions like <xref href=\"TinyLife.Actions.ActionType.GetIngredientsSingle\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.ChangeOutfit\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Action<Button> ImageLayout(float height, Element.DrawCallback draw, Padding padding = default(Padding))
    parameters:
    - id: height
      type: System.Single
      description: The height that each button should have
    - id: draw
      type: MLEM.Ui.Elements.Element.DrawCallback
      description: A <xref href="MLEM.Ui.Elements.Element.DrawCallback" data-throw-if-not-resolved="false"></xref> that can be used to draw onto the button
    - id: padding
      type: MLEM.Misc.Padding
      description: The padding that the group that the image is displayed on should have, defaults to no padding
    return:
      type: System.Action{MLEM.Ui.Elements.Button}
      description: An action that can be fed into <xref href="TinyLife.Actions.ActionVariety.CustomLayout" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function ImageLayout(height As Single, draw As Element.DrawCallback, padding As Padding = Nothing) As Action(Of Button)
  overload: TinyLife.Actions.ActionVariety.ImageLayout*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  id: PortraitLayout(TinyLife.Objects.Person)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: PortraitLayout(Person)
  nameWithType: ActionVariety.PortraitLayout(Person)
  fullName: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: PortraitLayout
    path: Actions/ActionVariety.cs
    startLine: 140
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionVariety.CustomLayout\" data-throw-if-not-resolved=\"false\"></xref> that creates a layout with the same, rectangular buttons as the default layout, but with the <xref href=\"TinyLife.Objects.Person.Portrait\" data-throw-if-not-resolved=\"false\"></xref> of the given <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> on the left\n"
  example: []
  syntax:
    content: public static Action<Button> PortraitLayout(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person to create the portrait layout for
    return:
      type: System.Action{MLEM.Ui.Elements.Button}
      description: An action that can be fed into <xref href="TinyLife.Actions.ActionVariety.CustomLayout" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function PortraitLayout(person As Person) As Action(Of Button)
  overload: TinyLife.Actions.ActionVariety.PortraitLayout*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionType.PrepareFood
  commentId: F:TinyLife.Actions.ActionType.PrepareFood
  isExternal: true
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.ActionVariety.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ActionVariety>()
  nameWithType: Extensions.JsonCopy<ActionVariety>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionVariety>()
  nameWithType.vb: Extensions.JsonCopy(Of ActionVariety)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionVariety)()
  name.vb: JsonCopy(Of ActionVariety)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<ActionVariety>
    nameWithType: Extensions.JsonCopy<ActionVariety>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionVariety>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of ActionVariety)
    nameWithType: Extensions.JsonCopy(Of ActionVariety)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionVariety)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  name: GetTimeSpan(String)
  nameWithType: Extensions.GetTimeSpan(String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder.TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  name: SetTimeSpan(String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  commentId: M:TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
  isExternal: true
  name: GetTimeSpan(IGenericDataHolder, String)
  nameWithType: Extensions.GetTimeSpan(IGenericDataHolder, String)
  fullName: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String)
    name: GetTimeSpan
    nameWithType: Extensions.GetTimeSpan
    fullName: TinyLife.Utilities.Extensions.GetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  commentId: M:TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
  isExternal: true
  name: SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  nameWithType: Extensions.SetTimeSpan(IGenericDataHolder, String, TimeSpan)
  fullName: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder, System.String, System.TimeSpan)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.SetTimeSpan(MLEM.Misc.IGenericDataHolder,System.String,System.TimeSpan)
    name: SetTimeSpan
    nameWithType: Extensions.SetTimeSpan
    fullName: TinyLife.Utilities.Extensions.SetTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.IGenericDataHolder
    name: IGenericDataHolder
    nameWithType: IGenericDataHolder
    fullName: MLEM.Misc.IGenericDataHolder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  commentId: F:TinyLife.Actions.ActionType.AiSettings.PassivePriority
  isExternal: true
- uid: System.Func{TinyLife.Objects.Person,System.Int32}
  commentId: T:System.Func{TinyLife.Objects.Person,System.Int32}
  parent: System
  definition: System.Func`2
  name: Func<Person, Int32>
  nameWithType: Func<Person, Int32>
  fullName: System.Func<TinyLife.Objects.Person, System.Int32>
  nameWithType.vb: Func(Of Person, Int32)
  fullName.vb: System.Func(Of TinyLife.Objects.Person, System.Int32)
  name.vb: Func(Of Person, Int32)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.ActionType.TypeSettings.CanExecute
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.CanExecute
  isExternal: true
- uid: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements.Button
  commentId: T:MLEM.Ui.Elements.Button
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: MLEM.Ui.Elements.Button
- uid: TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  commentId: M:TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  isExternal: true
- uid: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  isExternal: true
- uid: System.Action{MLEM.Ui.Elements.Button}
  commentId: T:System.Action{MLEM.Ui.Elements.Button}
  parent: System
  definition: System.Action`1
  name: Action<Button>
  nameWithType: Action<Button>
  fullName: System.Action<MLEM.Ui.Elements.Button>
  nameWithType.vb: Action(Of Button)
  fullName.vb: System.Action(Of MLEM.Ui.Elements.Button)
  name.vb: Action(Of Button)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Button
    name: Button
    nameWithType: Button
    fullName: MLEM.Ui.Elements.Button
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Button
    name: Button
    nameWithType: Button
    fullName: MLEM.Ui.Elements.Button
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.ActionVariety.#ctor*
  commentId: Overload:TinyLife.Actions.ActionVariety.#ctor
  name: ActionVariety
  nameWithType: ActionVariety.ActionVariety
  fullName: TinyLife.Actions.ActionVariety.ActionVariety
- uid: TinyLife.Actions.ActionVariety.DisplayName
  commentId: F:TinyLife.Actions.ActionVariety.DisplayName
  isExternal: true
- uid: TinyLife.Actions.ActionVariety.GetDisplayName*
  commentId: Overload:TinyLife.Actions.ActionVariety.GetDisplayName
  name: GetDisplayName
  nameWithType: ActionVariety.GetDisplayName
  fullName: TinyLife.Actions.ActionVariety.GetDisplayName
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.ActionVariety.CanExecute
  commentId: F:TinyLife.Actions.ActionVariety.CanExecute
  isExternal: true
- uid: TinyLife.Actions.ActionType.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.ActionType.CanExecuteResult.Valid
  isExternal: true
- uid: TinyLife.Actions.ActionVariety.CanBeExecuted*
  commentId: Overload:TinyLife.Actions.ActionVariety.CanBeExecuted
  name: CanBeExecuted
  nameWithType: ActionVariety.CanBeExecuted
  fullName: TinyLife.Actions.ActionVariety.CanBeExecuted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Actions.ActionType.CanExecuteResult
  commentId: T:TinyLife.Actions.ActionType.CanExecuteResult
  parent: TinyLife.Actions
  name: ActionType.CanExecuteResult
  nameWithType: ActionType.CanExecuteResult
  fullName: TinyLife.Actions.ActionType.CanExecuteResult
- uid: TinyLife.Actions.ActionVariety.PassivePriority
  commentId: F:TinyLife.Actions.ActionVariety.PassivePriority
  isExternal: true
- uid: TinyLife.Actions.ActionVariety.GetPassivePriority*
  commentId: Overload:TinyLife.Actions.ActionVariety.GetPassivePriority
  name: GetPassivePriority
  nameWithType: ActionVariety.GetPassivePriority
  fullName: TinyLife.Actions.ActionVariety.GetPassivePriority
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Actions.ActionVariety.SetData*
  commentId: Overload:TinyLife.Actions.ActionVariety.SetData
  name: SetData
  nameWithType: ActionVariety.SetData
  fullName: TinyLife.Actions.ActionVariety.SetData
- uid: MLEM.Misc.IGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.IGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.IGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: IGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Misc.IGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: IGenericDataHolder.SetData
    fullName: MLEM.Misc.IGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: IGenericDataHolder.SetData
    fullName: MLEM.Misc.IGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.ActionVariety.GetData*
  commentId: Overload:TinyLife.Actions.ActionVariety.GetData
  name: GetData
  nameWithType: ActionVariety.GetData
  fullName: TinyLife.Actions.ActionVariety.GetData
- uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.IGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: IGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Misc.IGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: IGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.IGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: IGenericDataHolder.GetData<T>
    fullName: MLEM.Misc.IGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: IGenericDataHolder.GetData(Of T)
    fullName: MLEM.Misc.IGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Actions.ActionVariety.GetDataKeys*
  commentId: Overload:TinyLife.Actions.ActionVariety.GetDataKeys
  name: GetDataKeys
  nameWithType: ActionVariety.GetDataKeys
  fullName: TinyLife.Actions.ActionVariety.GetDataKeys
- uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.IGenericDataHolder.GetDataKeys
  parent: MLEM.Misc.IGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: IGenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.IGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: IGenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.IGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: IGenericDataHolder.GetDataKeys
    fullName: MLEM.Misc.IGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<String>
  nameWithType: IReadOnlyCollection<String>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.String>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Actions.ActionVariety.CustomLayout
  commentId: F:TinyLife.Actions.ActionVariety.CustomLayout
  isExternal: true
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  isExternal: true
- uid: TinyLife.Actions.ActionType.ChangeOutfit
  commentId: F:TinyLife.Actions.ActionType.ChangeOutfit
  isExternal: true
- uid: MLEM.Ui.Elements.Element.DrawCallback
  commentId: T:MLEM.Ui.Elements.Element.DrawCallback
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element.DrawCallback
  nameWithType: Element.DrawCallback
  fullName: MLEM.Ui.Elements.Element.DrawCallback
- uid: TinyLife.Actions.ActionVariety.ImageLayout*
  commentId: Overload:TinyLife.Actions.ActionVariety.ImageLayout
  name: ImageLayout
  nameWithType: ActionVariety.ImageLayout
  fullName: TinyLife.Actions.ActionVariety.ImageLayout
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MLEM.Misc.Padding
  commentId: T:MLEM.Misc.Padding
  parent: MLEM.Misc
  isExternal: true
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Misc.Padding
- uid: TinyLife.Objects.Person.Portrait
  commentId: F:TinyLife.Objects.Person.Portrait
  isExternal: true
- uid: TinyLife.Actions.ActionVariety.PortraitLayout*
  commentId: Overload:TinyLife.Actions.ActionVariety.PortraitLayout
  name: PortraitLayout
  nameWithType: ActionVariety.PortraitLayout
  fullName: TinyLife.Actions.ActionVariety.PortraitLayout
