### YamlMime:ManagedReference
items:
- uid: TinyLife.Emotions.EmotionType.TypeCategory
  commentId: T:TinyLife.Emotions.EmotionType.TypeCategory
  id: EmotionType.TypeCategory
  parent: TinyLife.Emotions
  children:
  - TinyLife.Emotions.EmotionType.TypeCategory.Negative
  - TinyLife.Emotions.EmotionType.TypeCategory.Neutral
  - TinyLife.Emotions.EmotionType.TypeCategory.Positive
  langs:
  - csharp
  - vb
  name: EmotionType.TypeCategory
  nameWithType: EmotionType.TypeCategory
  fullName: TinyLife.Emotions.EmotionType.TypeCategory
  type: Enum
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TypeCategory
    path: Emotions/EmotionType.cs
    startLine: 90
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nAn enumeration used for <xref href=\"TinyLife.Emotions.EmotionType.Category\" data-throw-if-not-resolved=\"false\"></xref> that represents a general category an emotion can fit into.\nThe values are ordered in a way such that, if two emotion amounts sum to the same value, the one with the lower category will be chosen.\n"
  example: []
  syntax:
    content: public enum TypeCategory
    content.vb: Public Enum TypeCategory
  extensionMethods:
  - TinyLife.Emotions.EmotionType.TypeCategory.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Emotions.EmotionType.TypeCategory.Negative
  commentId: F:TinyLife.Emotions.EmotionType.TypeCategory.Negative
  id: Negative
  parent: TinyLife.Emotions.EmotionType.TypeCategory
  langs:
  - csharp
  - vb
  name: Negative
  nameWithType: EmotionType.TypeCategory.Negative
  fullName: TinyLife.Emotions.EmotionType.TypeCategory.Negative
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Negative
    path: Emotions/EmotionType.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA negative emotion, like <xref href=\"TinyLife.Emotions.EmotionType.Sad\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Emotions.EmotionType.Embarrassed\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Negative = 0
    return:
      type: TinyLife.Emotions.EmotionType.TypeCategory
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Emotions.EmotionType.TypeCategory.Positive
  commentId: F:TinyLife.Emotions.EmotionType.TypeCategory.Positive
  id: Positive
  parent: TinyLife.Emotions.EmotionType.TypeCategory
  langs:
  - csharp
  - vb
  name: Positive
  nameWithType: EmotionType.TypeCategory.Positive
  fullName: TinyLife.Emotions.EmotionType.TypeCategory.Positive
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Positive
    path: Emotions/EmotionType.cs
    startLine: 99
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA positive emotion, like <xref href=\"TinyLife.Emotions.EmotionType.Happy\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Positive = 1
    return:
      type: TinyLife.Emotions.EmotionType.TypeCategory
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Emotions.EmotionType.TypeCategory.Neutral
  commentId: F:TinyLife.Emotions.EmotionType.TypeCategory.Neutral
  id: Neutral
  parent: TinyLife.Emotions.EmotionType.TypeCategory
  langs:
  - csharp
  - vb
  name: Neutral
  nameWithType: EmotionType.TypeCategory.Neutral
  fullName: TinyLife.Emotions.EmotionType.TypeCategory.Neutral
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Neutral
    path: Emotions/EmotionType.cs
    startLine: 103
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA neutral emotion, like <xref href=\"TinyLife.Emotions.EmotionType.Fine\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Emotions.EmotionType.Asleep\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Neutral = 2
    return:
      type: TinyLife.Emotions.EmotionType.TypeCategory
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Emotions.EmotionType.Category
  commentId: F:TinyLife.Emotions.EmotionType.Category
  isExternal: true
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
- uid: TinyLife.Emotions.EmotionType.TypeCategory.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<EmotionType.TypeCategory>()
  nameWithType: Extensions.JsonCopy<EmotionType.TypeCategory>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.EmotionType.TypeCategory>()
  nameWithType.vb: Extensions.JsonCopy(Of EmotionType.TypeCategory)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.EmotionType.TypeCategory)()
  name.vb: JsonCopy(Of EmotionType.TypeCategory)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<EmotionType.TypeCategory>
    nameWithType: Extensions.JsonCopy<EmotionType.TypeCategory>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.EmotionType.TypeCategory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of EmotionType.TypeCategory)
    nameWithType: Extensions.JsonCopy(Of EmotionType.TypeCategory)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.EmotionType.TypeCategory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Emotions.EmotionType.Sad
  commentId: F:TinyLife.Emotions.EmotionType.Sad
  isExternal: true
- uid: TinyLife.Emotions.EmotionType.Embarrassed
  commentId: F:TinyLife.Emotions.EmotionType.Embarrassed
  isExternal: true
- uid: TinyLife.Emotions.EmotionType.TypeCategory
  commentId: T:TinyLife.Emotions.EmotionType.TypeCategory
  parent: TinyLife.Emotions
  name: EmotionType.TypeCategory
  nameWithType: EmotionType.TypeCategory
  fullName: TinyLife.Emotions.EmotionType.TypeCategory
- uid: TinyLife.Emotions.EmotionType.Happy
  commentId: F:TinyLife.Emotions.EmotionType.Happy
  isExternal: true
- uid: TinyLife.Emotions.EmotionType.Fine
  commentId: F:TinyLife.Emotions.EmotionType.Fine
  isExternal: true
- uid: TinyLife.Emotions.EmotionType.Asleep
  commentId: F:TinyLife.Emotions.EmotionType.Asleep
  isExternal: true
