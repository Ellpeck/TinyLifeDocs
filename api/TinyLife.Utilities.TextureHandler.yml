### YamlMime:ManagedReference
items:
- uid: TinyLife.Utilities.TextureHandler
  commentId: T:TinyLife.Utilities.TextureHandler
  id: TextureHandler
  parent: TinyLife.Utilities
  children:
  - TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,System.Action{MLEM.Textures.UniformTextureAtlas})
  langs:
  - csharp
  - vb
  name: TextureHandler
  nameWithType: TextureHandler
  fullName: TinyLife.Utilities.TextureHandler
  type: Class
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: TextureHandler
    path: Utilities/TextureHandler.cs
    startLine: 17
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nThe texture handler stores data for the game&apos;s textures, including all of the game&apos;s internal textures and various utility methods.\nIt also stores the game&apos;s <xref href=\"MLEM.Data.RuntimeTexturePacker\" data-throw-if-not-resolved=\"false\"></xref> which is used to pack all textures into a big texture for performance.\n"
  example: []
  syntax:
    content: public static class TextureHandler
    content.vb: Public Module TextureHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,System.Action{MLEM.Textures.UniformTextureAtlas})
  commentId: M:TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,System.Action{MLEM.Textures.UniformTextureAtlas})
  id: ApplyWallpaperMasks(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,System.Action{MLEM.Textures.UniformTextureAtlas})
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: ApplyWallpaperMasks(Texture2D, Int32, Int32, Action<UniformTextureAtlas>)
  nameWithType: TextureHandler.ApplyWallpaperMasks(Texture2D, Int32, Int32, Action<UniformTextureAtlas>)
  fullName: TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks(Microsoft.Xna.Framework.Graphics.Texture2D, System.Int32, System.Int32, System.Action<MLEM.Textures.UniformTextureAtlas>)
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: ApplyWallpaperMasks
    path: Utilities/TextureHandler.cs
    startLine: 68
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nApplies the game&apos;s predefined wallpaper maskings (based on <xref href=\"TinyLife.World.WallMode\" data-throw-if-not-resolved=\"false\"></xref>) to the given wallpaper texture.\nWhen adding custom <xref href=\"TinyLife.World.Wallpaper\" data-throw-if-not-resolved=\"false\"></xref> types, this method should be used.\nNote that, as part of this method, the resulting texture is implicitly added onto the game&apos;s <xref href=\"MLEM.Data.RuntimeTexturePacker\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void ApplyWallpaperMasks(Texture2D wallpapers, int regionAmountX, int regionAmountY, Action<UniformTextureAtlas> result)
    parameters:
    - id: wallpapers
      type: Microsoft.Xna.Framework.Graphics.Texture2D
      description: The texture to mask
    - id: regionAmountX
      type: System.Int32
      description: The amount of texture regions on the x axis
    - id: regionAmountY
      type: System.Int32
      description: The amount of texture regions on the y axis
    - id: result
      type: System.Action{MLEM.Textures.UniformTextureAtlas}
      description: A function that is called when the <xref href="MLEM.Data.RuntimeTexturePacker" data-throw-if-not-resolved="false"></xref> packed the masked texture, which yields the resulting texture atlas
    content.vb: Public Shared Sub ApplyWallpaperMasks(wallpapers As Texture2D, regionAmountX As Integer, regionAmountY As Integer, result As Action(Of UniformTextureAtlas))
  overload: TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks*
  nameWithType.vb: TextureHandler.ApplyWallpaperMasks(Texture2D, Int32, Int32, Action(Of UniformTextureAtlas))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks(Microsoft.Xna.Framework.Graphics.Texture2D, System.Int32, System.Int32, System.Action(Of MLEM.Textures.UniformTextureAtlas))
  name.vb: ApplyWallpaperMasks(Texture2D, Int32, Int32, Action(Of UniformTextureAtlas))
references:
- uid: MLEM.Data.RuntimeTexturePacker
  commentId: T:MLEM.Data.RuntimeTexturePacker
  parent: MLEM.Data
  isExternal: true
  name: RuntimeTexturePacker
  nameWithType: RuntimeTexturePacker
  fullName: MLEM.Data.RuntimeTexturePacker
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data
  commentId: N:MLEM.Data
  isExternal: true
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.World.WallMode
  commentId: T:TinyLife.World.WallMode
  parent: TinyLife.World
  name: WallMode
  nameWithType: WallMode
  fullName: TinyLife.World.WallMode
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks*
  commentId: Overload:TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks
  name: ApplyWallpaperMasks
  nameWithType: TextureHandler.ApplyWallpaperMasks
  fullName: TinyLife.Utilities.TextureHandler.ApplyWallpaperMasks
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{MLEM.Textures.UniformTextureAtlas}
  commentId: T:System.Action{MLEM.Textures.UniformTextureAtlas}
  parent: System
  definition: System.Action`1
  name: Action<UniformTextureAtlas>
  nameWithType: Action<UniformTextureAtlas>
  fullName: System.Action<MLEM.Textures.UniformTextureAtlas>
  nameWithType.vb: Action(Of UniformTextureAtlas)
  fullName.vb: System.Action(Of MLEM.Textures.UniformTextureAtlas)
  name.vb: Action(Of UniformTextureAtlas)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Textures.UniformTextureAtlas
    name: UniformTextureAtlas
    nameWithType: UniformTextureAtlas
    fullName: MLEM.Textures.UniformTextureAtlas
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Textures.UniformTextureAtlas
    name: UniformTextureAtlas
    nameWithType: UniformTextureAtlas
    fullName: MLEM.Textures.UniformTextureAtlas
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
