### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.WoodworkingRecipe
  commentId: T:TinyLife.Skills.WoodworkingRecipe
  id: WoodworkingRecipe
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.WoodworkingRecipe.#ctor(TinyLife.Objects.FurnitureType,System.Int32,System.Single,System.TimeSpan)
  - TinyLife.Skills.WoodworkingRecipe.CraftingTime
  - TinyLife.Skills.WoodworkingRecipe.Name
  - TinyLife.Skills.WoodworkingRecipe.Output
  - TinyLife.Skills.WoodworkingRecipe.PriceMultiplier
  - TinyLife.Skills.WoodworkingRecipe.Recipes
  - TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)
  - TinyLife.Skills.WoodworkingRecipe.RequiredLevel
  langs:
  - csharp
  - vb
  name: WoodworkingRecipe
  nameWithType: WoodworkingRecipe
  fullName: TinyLife.Skills.WoodworkingRecipe
  type: Class
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: WoodworkingRecipe
    path: Skills/WoodworkingRecipe.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA woodworking recipe stores information about what items can be crafted at a <xref href=\"TinyLife.Objects.FurnitureType.WoodworkingTable\" data-throw-if-not-resolved=\"false\"></xref>.\nNew woodworking recipes for custom (or built-in) furniture items can be registered using <xref href=\"TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(StaticJsonConverter<WoodworkingRecipe>), new object[]{typeof(WoodworkingRecipe), "PrivateRecipes"})]

      public class WoodworkingRecipe
    content.vb: >-
      <JsonConverter(GetType(StaticJsonConverter(Of WoodworkingRecipe)), New Object() {GetType(WoodworkingRecipe), "PrivateRecipes"})>

      Public Class WoodworkingRecipe
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.WoodworkingRecipe.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Skills.WoodworkingRecipe.Recipes
  commentId: F:TinyLife.Skills.WoodworkingRecipe.Recipes
  id: Recipes
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: Recipes
  nameWithType: WoodworkingRecipe.Recipes
  fullName: TinyLife.Skills.WoodworkingRecipe.Recipes
  type: Field
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Recipes
    path: Skills/WoodworkingRecipe.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA registry of all of the recipes that have been registered using <xref href=\"TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static readonly IDictionary<string, WoodworkingRecipe> Recipes
    return:
      type: System.Collections.Generic.IDictionary{System.String,TinyLife.Skills.WoodworkingRecipe}
    content.vb: Public Shared ReadOnly Recipes As IDictionary(Of String, WoodworkingRecipe)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Skills.WoodworkingRecipe.Output
  commentId: F:TinyLife.Skills.WoodworkingRecipe.Output
  id: Output
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: Output
  nameWithType: WoodworkingRecipe.Output
  fullName: TinyLife.Skills.WoodworkingRecipe.Output
  type: Field
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Output
    path: Skills/WoodworkingRecipe.cs
    startLine: 61
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nThe <xref href=\"TinyLife.Objects.FurnitureType\" data-throw-if-not-resolved=\"false\"></xref> that this woodworking recipe produces\n"
  example: []
  syntax:
    content: public readonly FurnitureType Output
    return:
      type: TinyLife.Objects.FurnitureType
    content.vb: Public ReadOnly Output As FurnitureType
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Skills.WoodworkingRecipe.RequiredLevel
  commentId: F:TinyLife.Skills.WoodworkingRecipe.RequiredLevel
  id: RequiredLevel
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: RequiredLevel
  nameWithType: WoodworkingRecipe.RequiredLevel
  fullName: TinyLife.Skills.WoodworkingRecipe.RequiredLevel
  type: Field
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: RequiredLevel
    path: Skills/WoodworkingRecipe.cs
    startLine: 65
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nThe required level of the <xref href=\"TinyLife.Skills.SkillType.Woodworking\" data-throw-if-not-resolved=\"false\"></xref> skill\n"
  example: []
  syntax:
    content: public readonly int RequiredLevel
    return:
      type: System.Int32
    content.vb: Public ReadOnly RequiredLevel As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Skills.WoodworkingRecipe.PriceMultiplier
  commentId: F:TinyLife.Skills.WoodworkingRecipe.PriceMultiplier
  id: PriceMultiplier
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: PriceMultiplier
  nameWithType: WoodworkingRecipe.PriceMultiplier
  fullName: TinyLife.Skills.WoodworkingRecipe.PriceMultiplier
  type: Field
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: PriceMultiplier
    path: Skills/WoodworkingRecipe.cs
    startLine: 69
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA value that is multiplied with the <xref href=\"TinyLife.Skills.WoodworkingRecipe.Output\" data-throw-if-not-resolved=\"false\"></xref>&apos;s regular price to determine the price of crafting this woodworking recipe\n"
  example: []
  syntax:
    content: public readonly float PriceMultiplier
    return:
      type: System.Single
    content.vb: Public ReadOnly PriceMultiplier As Single
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Skills.WoodworkingRecipe.CraftingTime
  commentId: F:TinyLife.Skills.WoodworkingRecipe.CraftingTime
  id: CraftingTime
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: CraftingTime
  nameWithType: WoodworkingRecipe.CraftingTime
  fullName: TinyLife.Skills.WoodworkingRecipe.CraftingTime
  type: Field
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CraftingTime
    path: Skills/WoodworkingRecipe.cs
    startLine: 74
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nThe amount of in-game time that it takes (an unskilled person) to craft this woodwork.\nThe higher the <xref href=\"TinyLife.Skills.SkillType.Woodworking\" data-throw-if-not-resolved=\"false\"></xref> level of the person, the more this time is reduced, based on <xref href=\"TinyLife.Objects.Person.GetEfficiencyModifier(TinyLife.Skills.SkillType%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly TimeSpan CraftingTime
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly CraftingTime As TimeSpan
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Skills.WoodworkingRecipe.Name
  commentId: P:TinyLife.Skills.WoodworkingRecipe.Name
  id: Name
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WoodworkingRecipe.Name
  fullName: TinyLife.Skills.WoodworkingRecipe.Name
  type: Property
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Name
    path: Skills/WoodworkingRecipe.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nThe name of this woodworking recipe, which is always the <xref href=\"TinyLife.Skills.WoodworkingRecipe.Output\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Objects.FurnitureType.TypeSettings.Name\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: TinyLife.Skills.WoodworkingRecipe.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Skills.WoodworkingRecipe.#ctor(TinyLife.Objects.FurnitureType,System.Int32,System.Single,System.TimeSpan)
  commentId: M:TinyLife.Skills.WoodworkingRecipe.#ctor(TinyLife.Objects.FurnitureType,System.Int32,System.Single,System.TimeSpan)
  id: '#ctor(TinyLife.Objects.FurnitureType,System.Int32,System.Single,System.TimeSpan)'
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: WoodworkingRecipe(FurnitureType, Int32, Single, TimeSpan)
  nameWithType: WoodworkingRecipe.WoodworkingRecipe(FurnitureType, Int32, Single, TimeSpan)
  fullName: TinyLife.Skills.WoodworkingRecipe.WoodworkingRecipe(TinyLife.Objects.FurnitureType, System.Int32, System.Single, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: .ctor
    path: Skills/WoodworkingRecipe.cs
    startLine: 88
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nCreates a new woodworking recipe with the given settings\n"
  example: []
  syntax:
    content: public WoodworkingRecipe(FurnitureType output, int requiredLevel, float priceMultiplier, TimeSpan craftingTime)
    parameters:
    - id: output
      type: TinyLife.Objects.FurnitureType
      description: The recipe&apos;s output
    - id: requiredLevel
      type: System.Int32
      description: The required <xref href="TinyLife.Skills.SkillType.Woodworking" data-throw-if-not-resolved="false"></xref> skill level
    - id: priceMultiplier
      type: System.Single
      description: A value that is multiplied with the <xref href="TinyLife.Skills.WoodworkingRecipe.Output" data-throw-if-not-resolved="false"></xref>&apos;s regular price to determine the price of crafting this woodworking recipe
    - id: craftingTime
      type: System.TimeSpan
      description: The amount of in-game time that it takes (an unskilled person) to craft this woodwork
    content.vb: Public Sub New(output As FurnitureType, requiredLevel As Integer, priceMultiplier As Single, craftingTime As TimeSpan)
  overload: TinyLife.Skills.WoodworkingRecipe.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)
  commentId: M:TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)
  id: Register(TinyLife.Skills.WoodworkingRecipe)
  parent: TinyLife.Skills.WoodworkingRecipe
  langs:
  - csharp
  - vb
  name: Register(WoodworkingRecipe)
  nameWithType: WoodworkingRecipe.Register(WoodworkingRecipe)
  fullName: TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)
  type: Method
  source:
    remote:
      path: TinyLife/Skills/WoodworkingRecipe.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Register
    path: Skills/WoodworkingRecipe.cs
    startLine: 100
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nRegisters a new woodworking recipe to the <xref href=\"TinyLife.Objects.FurnitureType.Types\" data-throw-if-not-resolved=\"false\"></xref> registry\n"
  example: []
  syntax:
    content: public static WoodworkingRecipe Register(WoodworkingRecipe recipe)
    parameters:
    - id: recipe
      type: TinyLife.Skills.WoodworkingRecipe
      description: The recipe to register
    return:
      type: TinyLife.Skills.WoodworkingRecipe
      description: The <code data-dev-comment-type="paramref" class="paramref">recipe</code> passed, for chaining
    content.vb: Public Shared Function Register(recipe As WoodworkingRecipe) As WoodworkingRecipe
  overload: TinyLife.Skills.WoodworkingRecipe.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.Objects.FurnitureType.WoodworkingTable
  commentId: F:TinyLife.Objects.FurnitureType.WoodworkingTable
  isExternal: true
- uid: TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)
  commentId: M:TinyLife.Skills.WoodworkingRecipe.Register(TinyLife.Skills.WoodworkingRecipe)
  isExternal: true
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Skills.WoodworkingRecipe.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<WoodworkingRecipe>()
  nameWithType: Extensions.JsonCopy<WoodworkingRecipe>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.WoodworkingRecipe>()
  nameWithType.vb: Extensions.JsonCopy(Of WoodworkingRecipe)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.WoodworkingRecipe)()
  name.vb: JsonCopy(Of WoodworkingRecipe)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<WoodworkingRecipe>
    nameWithType: Extensions.JsonCopy<WoodworkingRecipe>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.WoodworkingRecipe>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of WoodworkingRecipe)
    nameWithType: Extensions.JsonCopy(Of WoodworkingRecipe)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.WoodworkingRecipe)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.Collections.Generic.IDictionary{System.String,TinyLife.Skills.WoodworkingRecipe}
  commentId: T:System.Collections.Generic.IDictionary{System.String,TinyLife.Skills.WoodworkingRecipe}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, WoodworkingRecipe>
  nameWithType: IDictionary<String, WoodworkingRecipe>
  fullName: System.Collections.Generic.IDictionary<System.String, TinyLife.Skills.WoodworkingRecipe>
  nameWithType.vb: IDictionary(Of String, WoodworkingRecipe)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TinyLife.Skills.WoodworkingRecipe)
  name.vb: IDictionary(Of String, WoodworkingRecipe)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.WoodworkingRecipe
    name: WoodworkingRecipe
    nameWithType: WoodworkingRecipe
    fullName: TinyLife.Skills.WoodworkingRecipe
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.WoodworkingRecipe
    name: WoodworkingRecipe
    nameWithType: WoodworkingRecipe
    fullName: TinyLife.Skills.WoodworkingRecipe
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Skills.SkillType.Woodworking
  commentId: F:TinyLife.Skills.SkillType.Woodworking
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.Skills.WoodworkingRecipe.Output
  commentId: F:TinyLife.Skills.WoodworkingRecipe.Output
  isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Objects.Person.GetEfficiencyModifier(TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.Person.GetEfficiencyModifier(TinyLife.Skills.SkillType,System.Single)
  isExternal: true
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Objects.FurnitureType.TypeSettings.Name
  commentId: F:TinyLife.Objects.FurnitureType.TypeSettings.Name
  isExternal: true
- uid: TinyLife.Skills.WoodworkingRecipe.Name*
  commentId: Overload:TinyLife.Skills.WoodworkingRecipe.Name
  name: Name
  nameWithType: WoodworkingRecipe.Name
  fullName: TinyLife.Skills.WoodworkingRecipe.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.Skills.WoodworkingRecipe.#ctor*
  commentId: Overload:TinyLife.Skills.WoodworkingRecipe.#ctor
  name: WoodworkingRecipe
  nameWithType: WoodworkingRecipe.WoodworkingRecipe
  fullName: TinyLife.Skills.WoodworkingRecipe.WoodworkingRecipe
- uid: TinyLife.Objects.FurnitureType.Types
  commentId: F:TinyLife.Objects.FurnitureType.Types
  isExternal: true
- uid: TinyLife.Skills.WoodworkingRecipe.Register*
  commentId: Overload:TinyLife.Skills.WoodworkingRecipe.Register
  name: Register
  nameWithType: WoodworkingRecipe.Register
  fullName: TinyLife.Skills.WoodworkingRecipe.Register
- uid: TinyLife.Skills.WoodworkingRecipe
  commentId: T:TinyLife.Skills.WoodworkingRecipe
  parent: TinyLife.Skills
  name: WoodworkingRecipe
  nameWithType: WoodworkingRecipe
  fullName: TinyLife.Skills.WoodworkingRecipe
