### YamlMime:ManagedReference
items:
- uid: TinyLife.RelationshipType
  commentId: T:TinyLife.RelationshipType
  id: RelationshipType
  parent: TinyLife
  children:
  - TinyLife.RelationshipType.Acquaintances
  - TinyLife.RelationshipType.Disliked
  - TinyLife.RelationshipType.Enemies
  - TinyLife.RelationshipType.Friends
  - TinyLife.RelationshipType.GoodFriends
  langs:
  - csharp
  - vb
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: TinyLife.RelationshipType
  type: Enum
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RelationshipType
    path: Relationship.cs
    startLine: 215
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn enumeration type that represents the type that a <xref href=\"TinyLife.Relationship\" data-throw-if-not-resolved=\"false\"></xref> can have.\nThese are ordered by their &quot;goodness&quot;, with closer and more familiar relationship types having higher values.\n"
  example: []
  syntax:
    content: public enum RelationshipType
    content.vb: Public Enum RelationshipType
  extensionMethods:
  - TinyLife.RelationshipType.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.RelationshipType.Enemies
  commentId: F:TinyLife.RelationshipType.Enemies
  id: Enemies
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Enemies
  nameWithType: RelationshipType.Enemies
  fullName: TinyLife.RelationshipType.Enemies
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Enemies
    path: Relationship.cs
    startLine: 220
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA relationship type that represents two people that hate each other\n"
  example: []
  syntax:
    content: Enemies = 0
    return:
      type: TinyLife.RelationshipType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.RelationshipType.Disliked
  commentId: F:TinyLife.RelationshipType.Disliked
  id: Disliked
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Disliked
  nameWithType: RelationshipType.Disliked
  fullName: TinyLife.RelationshipType.Disliked
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Disliked
    path: Relationship.cs
    startLine: 224
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA relationship type that represents two people that dislike each other\n"
  example: []
  syntax:
    content: Disliked = 1
    return:
      type: TinyLife.RelationshipType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.RelationshipType.Acquaintances
  commentId: F:TinyLife.RelationshipType.Acquaintances
  id: Acquaintances
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Acquaintances
  nameWithType: RelationshipType.Acquaintances
  fullName: TinyLife.RelationshipType.Acquaintances
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Acquaintances
    path: Relationship.cs
    startLine: 228
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA relationship type that represents two people that don&apos;t know each other well\n"
  example: []
  syntax:
    content: Acquaintances = 2
    return:
      type: TinyLife.RelationshipType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.RelationshipType.Friends
  commentId: F:TinyLife.RelationshipType.Friends
  id: Friends
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: Friends
  nameWithType: RelationshipType.Friends
  fullName: TinyLife.RelationshipType.Friends
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Friends
    path: Relationship.cs
    startLine: 232
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA relationship type that represents two people that know each other well\n"
  example: []
  syntax:
    content: Friends = 3
    return:
      type: TinyLife.RelationshipType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.RelationshipType.GoodFriends
  commentId: F:TinyLife.RelationshipType.GoodFriends
  id: GoodFriends
  parent: TinyLife.RelationshipType
  langs:
  - csharp
  - vb
  name: GoodFriends
  nameWithType: RelationshipType.GoodFriends
  fullName: TinyLife.RelationshipType.GoodFriends
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoodFriends
    path: Relationship.cs
    startLine: 236
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA relationship type that represents two people that know each other very well\n"
  example: []
  syntax:
    content: GoodFriends = 4
    return:
      type: TinyLife.RelationshipType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Relationship
  commentId: T:TinyLife.Relationship
  parent: TinyLife
  name: Relationship
  nameWithType: Relationship
  fullName: TinyLife.Relationship
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.RelationshipType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<RelationshipType>()
  nameWithType: Extensions.JsonCopy<RelationshipType>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.RelationshipType>()
  nameWithType.vb: Extensions.JsonCopy(Of RelationshipType)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.RelationshipType)()
  name.vb: JsonCopy(Of RelationshipType)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<RelationshipType>
    nameWithType: Extensions.JsonCopy<RelationshipType>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.RelationshipType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of RelationshipType)
    nameWithType: Extensions.JsonCopy(Of RelationshipType)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.RelationshipType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.RelationshipType
  commentId: T:TinyLife.RelationshipType
  parent: TinyLife
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: TinyLife.RelationshipType
