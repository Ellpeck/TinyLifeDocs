### YamlMime:ManagedReference
items:
- uid: TinyLife.World.BillsMail
  commentId: T:TinyLife.World.BillsMail
  id: BillsMail
  parent: TinyLife.World
  children:
  - TinyLife.World.BillsMail.#ctor(System.Guid,System.Single)
  - TinyLife.World.BillsMail.Amount
  - TinyLife.World.BillsMail.OnReceived(TinyLife.World.Map)
  langs:
  - csharp
  - vb
  name: BillsMail
  nameWithType: BillsMail
  fullName: TinyLife.World.BillsMail
  type: Class
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: BillsMail
    path: World/Mail.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA <xref href=\"TinyLife.World.Mail\" data-throw-if-not-resolved=\"false\"></xref> type that represents bills for a <xref href=\"TinyLife.World.Household\" data-throw-if-not-resolved=\"false\"></xref> to pay\n"
  example: []
  syntax:
    content: 'public class BillsMail : Mail, IGenericDataHolder'
    content.vb: >-
      Public Class BillsMail
          Inherits Mail
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.World.Mail
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.World.Mail.Id
  - TinyLife.World.Mail.SentTime
  - TinyLife.World.Mail.GetReceivingLot(TinyLife.World.Map)
  - TinyLife.World.Mail.GetReceivingMailbox(TinyLife.World.Map)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.BillsMail.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.World.BillsMail.Amount
  commentId: F:TinyLife.World.BillsMail.Amount
  id: Amount
  parent: TinyLife.World.BillsMail
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: BillsMail.Amount
  fullName: TinyLife.World.BillsMail.Amount
  type: Field
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Amount
    path: World/Mail.cs
    startLine: 78
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe amount of tiny bucks that needs to be paid by the receiving household\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly float Amount
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly Amount As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.World.BillsMail.#ctor(System.Guid,System.Single)
  commentId: M:TinyLife.World.BillsMail.#ctor(System.Guid,System.Single)
  id: '#ctor(System.Guid,System.Single)'
  parent: TinyLife.World.BillsMail
  langs:
  - csharp
  - vb
  name: BillsMail(Guid, Single)
  nameWithType: BillsMail.BillsMail(Guid, Single)
  fullName: TinyLife.World.BillsMail.BillsMail(System.Guid, System.Single)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: .ctor
    path: World/Mail.cs
    startLine: 85
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new bills mail with the given settings\n"
  example: []
  syntax:
    content: public BillsMail(Guid receivingLot, float amount)
    parameters:
    - id: receivingLot
      type: System.Guid
      description: The <xref href="TinyLife.World.Lot.Id" data-throw-if-not-resolved="false"></xref> of the lot that should receive this mail
    - id: amount
      type: System.Single
      description: The amount of tiny bucks that needs to be paid by the receiving household
    content.vb: Public Sub New(receivingLot As Guid, amount As Single)
  overload: TinyLife.World.BillsMail.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.World.BillsMail.OnReceived(TinyLife.World.Map)
  commentId: M:TinyLife.World.BillsMail.OnReceived(TinyLife.World.Map)
  id: OnReceived(TinyLife.World.Map)
  parent: TinyLife.World.BillsMail
  langs:
  - csharp
  - vb
  name: OnReceived(Map)
  nameWithType: BillsMail.OnReceived(Map)
  fullName: TinyLife.World.BillsMail.OnReceived(TinyLife.World.Map)
  type: Method
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: OnReceived
    path: World/Mail.cs
    startLine: 90
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThis method is called automatically when this mail item is received by the receiving lot.\nA custom mail instance can execute its custom action in this method.\n"
  example: []
  syntax:
    content: public override void OnReceived(Map map)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map
    content.vb: Public Overrides Sub OnReceived(map As Map)
  overridden: TinyLife.World.Mail.OnReceived(TinyLife.World.Map)
  overload: TinyLife.World.BillsMail.OnReceived*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TinyLife.World.Mail
  commentId: T:TinyLife.World.Mail
  parent: TinyLife.World
  name: Mail
  nameWithType: Mail
  fullName: TinyLife.World.Mail
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.World.Mail.Id
  commentId: F:TinyLife.World.Mail.Id
  parent: TinyLife.World.Mail
  name: Id
  nameWithType: Mail.Id
  fullName: TinyLife.World.Mail.Id
- uid: TinyLife.World.Mail.SentTime
  commentId: F:TinyLife.World.Mail.SentTime
  parent: TinyLife.World.Mail
  name: SentTime
  nameWithType: Mail.SentTime
  fullName: TinyLife.World.Mail.SentTime
- uid: TinyLife.World.Mail.GetReceivingLot(TinyLife.World.Map)
  commentId: M:TinyLife.World.Mail.GetReceivingLot(TinyLife.World.Map)
  parent: TinyLife.World.Mail
  name: GetReceivingLot(Map)
  nameWithType: Mail.GetReceivingLot(Map)
  fullName: TinyLife.World.Mail.GetReceivingLot(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.Mail.GetReceivingLot(TinyLife.World.Map)
    name: GetReceivingLot
    nameWithType: Mail.GetReceivingLot
    fullName: TinyLife.World.Mail.GetReceivingLot
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.GetReceivingLot(TinyLife.World.Map)
    name: GetReceivingLot
    nameWithType: Mail.GetReceivingLot
    fullName: TinyLife.World.Mail.GetReceivingLot
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Mail.GetReceivingMailbox(TinyLife.World.Map)
  commentId: M:TinyLife.World.Mail.GetReceivingMailbox(TinyLife.World.Map)
  parent: TinyLife.World.Mail
  name: GetReceivingMailbox(Map)
  nameWithType: Mail.GetReceivingMailbox(Map)
  fullName: TinyLife.World.Mail.GetReceivingMailbox(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.Mail.GetReceivingMailbox(TinyLife.World.Map)
    name: GetReceivingMailbox
    nameWithType: Mail.GetReceivingMailbox
    fullName: TinyLife.World.Mail.GetReceivingMailbox
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.GetReceivingMailbox(TinyLife.World.Map)
    name: GetReceivingMailbox
    nameWithType: Mail.GetReceivingMailbox
    fullName: TinyLife.World.Mail.GetReceivingMailbox
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.BillsMail.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<BillsMail>()
  nameWithType: Extensions.JsonCopy<BillsMail>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.BillsMail>()
  nameWithType.vb: Extensions.JsonCopy(Of BillsMail)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.BillsMail)()
  name.vb: JsonCopy(Of BillsMail)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<BillsMail>
    nameWithType: Extensions.JsonCopy<BillsMail>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.BillsMail>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of BillsMail)
    nameWithType: Extensions.JsonCopy(Of BillsMail)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.BillsMail)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.World.Lot.Id
  commentId: F:TinyLife.World.Lot.Id
  isExternal: true
- uid: TinyLife.World.BillsMail.#ctor*
  commentId: Overload:TinyLife.World.BillsMail.#ctor
  name: BillsMail
  nameWithType: BillsMail.BillsMail
  fullName: TinyLife.World.BillsMail.BillsMail
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TinyLife.World.Mail.OnReceived(TinyLife.World.Map)
  commentId: M:TinyLife.World.Mail.OnReceived(TinyLife.World.Map)
  parent: TinyLife.World.Mail
  name: OnReceived(Map)
  nameWithType: Mail.OnReceived(Map)
  fullName: TinyLife.World.Mail.OnReceived(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.Mail.OnReceived(TinyLife.World.Map)
    name: OnReceived
    nameWithType: Mail.OnReceived
    fullName: TinyLife.World.Mail.OnReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.OnReceived(TinyLife.World.Map)
    name: OnReceived
    nameWithType: Mail.OnReceived
    fullName: TinyLife.World.Mail.OnReceived
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.BillsMail.OnReceived*
  commentId: Overload:TinyLife.World.BillsMail.OnReceived
  name: OnReceived
  nameWithType: BillsMail.OnReceived
  fullName: TinyLife.World.BillsMail.OnReceived
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
