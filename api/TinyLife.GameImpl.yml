### YamlMime:ManagedReference
items:
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  id: GameImpl
  parent: TinyLife
  children:
  - TinyLife.GameImpl.Camera
  - TinyLife.GameImpl.CanBeExtremelyFast
  - TinyLife.GameImpl.CanSaveOrSwitchModes
  - TinyLife.GameImpl.CurrentHousehold
  - TinyLife.GameImpl.CurrentLot
  - TinyLife.GameImpl.CurrentTime
  - TinyLife.GameImpl.CurrentTool
  - TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  - TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  - TinyLife.GameImpl.FadeKeyboardLighting(Microsoft.Xna.Framework.Color)
  - TinyLife.GameImpl.FollowingPerson
  - TinyLife.GameImpl.GraphicsMetrics
  - TinyLife.GameImpl.Instance
  - TinyLife.GameImpl.IsMouseOnUi
  - TinyLife.GameImpl.Listener
  - TinyLife.GameImpl.LoadContent
  - TinyLife.GameImpl.Map
  - TinyLife.GameImpl.Mode
  - TinyLife.GameImpl.Money
  - TinyLife.GameImpl.OnExiting(System.Object,System.EventArgs)
  - TinyLife.GameImpl.SaveName
  - TinyLife.GameImpl.Speed
  - TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  - TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Misc.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix})
  - TinyLife.GameImpl.Version
  - TinyLife.GameImpl.Weekday
  langs:
  - csharp
  - vb
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
  type: Class
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GameImpl
    path: GameImpl.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe main class for Tiny Life, which houses a set of important game-wide properties.\n"
  example: []
  syntax:
    content: 'public class GameImpl : MlemGame, IDisposable'
    content.vb: >-
      Public Class GameImpl
          Inherits MlemGame
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Game
  - MLEM.Startup.MlemGame
  implements:
  - System.IDisposable
  inheritedMembers:
  - MLEM.Startup.MlemGame.GraphicsDeviceManager
  - MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.LoadContent``1(System.String)
  - MLEM.Startup.MlemGame.Input
  - MLEM.Startup.MlemGame.SpriteBatch
  - MLEM.Startup.MlemGame.InputHandler
  - MLEM.Startup.MlemGame.UiSystem
  - MLEM.Startup.MlemGame.OnLoadContent
  - MLEM.Startup.MlemGame.OnUpdate
  - MLEM.Startup.MlemGame.OnDraw
  - Microsoft.Xna.Framework.Game.Dispose
  - Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Game.Exit
  - Microsoft.Xna.Framework.Game.ResetElapsedTime
  - Microsoft.Xna.Framework.Game.SuppressDraw
  - Microsoft.Xna.Framework.Game.RunOneFrame
  - Microsoft.Xna.Framework.Game.Run
  - Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  - Microsoft.Xna.Framework.Game.Tick
  - Microsoft.Xna.Framework.Game.BeginDraw
  - Microsoft.Xna.Framework.Game.EndDraw
  - Microsoft.Xna.Framework.Game.BeginRun
  - Microsoft.Xna.Framework.Game.EndRun
  - Microsoft.Xna.Framework.Game.UnloadContent
  - Microsoft.Xna.Framework.Game.Initialize
  - Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.LaunchParameters
  - Microsoft.Xna.Framework.Game.Components
  - Microsoft.Xna.Framework.Game.InactiveSleepTime
  - Microsoft.Xna.Framework.Game.MaxElapsedTime
  - Microsoft.Xna.Framework.Game.IsActive
  - Microsoft.Xna.Framework.Game.IsMouseVisible
  - Microsoft.Xna.Framework.Game.TargetElapsedTime
  - Microsoft.Xna.Framework.Game.IsFixedTimeStep
  - Microsoft.Xna.Framework.Game.Services
  - Microsoft.Xna.Framework.Game.Content
  - Microsoft.Xna.Framework.Game.GraphicsDevice
  - Microsoft.Xna.Framework.Game.Window
  - Microsoft.Xna.Framework.Game.Activated
  - Microsoft.Xna.Framework.Game.Deactivated
  - Microsoft.Xna.Framework.Game.Disposed
  - Microsoft.Xna.Framework.Game.Exiting
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.GameImpl.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.GameImpl.Version
  commentId: F:TinyLife.GameImpl.Version
  id: Version
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: GameImpl.Version
  fullName: TinyLife.GameImpl.Version
  type: Field
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Version
    path: GameImpl.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s version, gathered from the assembly\n"
  example: []
  syntax:
    content: public static readonly string Version
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Version As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.GameImpl.Instance
  commentId: P:TinyLife.GameImpl.Instance
  id: Instance
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: GameImpl.Instance
  fullName: TinyLife.GameImpl.Instance
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Instance
    path: GameImpl.cs
    startLine: 59
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s singleton instance\n"
  example: []
  syntax:
    content: public static GameImpl Instance { get; }
    parameters: []
    return:
      type: TinyLife.GameImpl
    content.vb: Public Shared ReadOnly Property Instance As GameImpl
  overload: TinyLife.GameImpl.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.GameImpl.GraphicsMetrics
  commentId: P:TinyLife.GameImpl.GraphicsMetrics
  id: GraphicsMetrics
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: GraphicsMetrics
  nameWithType: GameImpl.GraphicsMetrics
  fullName: TinyLife.GameImpl.GraphicsMetrics
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: GraphicsMetrics
    path: GameImpl.cs
    startLine: 63
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s graphics metrics, gathered at the end of every <xref href=\"TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)\" data-throw-if-not-resolved=\"false\"></xref> call\n"
  example: []
  syntax:
    content: public GraphicsMetrics GraphicsMetrics { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.GraphicsMetrics
    content.vb: Public ReadOnly Property GraphicsMetrics As GraphicsMetrics
  overload: TinyLife.GameImpl.GraphicsMetrics*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  id: Camera
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Camera
    path: GameImpl.cs
    startLine: 67
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s in-world camera, created in <xref href=\"TinyLife.GameImpl.LoadContent\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Camera Camera { get; }
    parameters: []
    return:
      type: MLEM.Cameras.Camera
    content.vb: Public ReadOnly Property Camera As Camera
  overload: TinyLife.GameImpl.Camera*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.Listener
  commentId: P:TinyLife.GameImpl.Listener
  id: Listener
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Listener
  nameWithType: GameImpl.Listener
  fullName: TinyLife.GameImpl.Listener
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Listener
    path: GameImpl.cs
    startLine: 71
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s <xref href=\"Microsoft.Xna.Framework.Audio.AudioListener\" data-throw-if-not-resolved=\"false\"></xref> that is automatically moved to the <xref href=\"TinyLife.GameImpl.Camera\" data-throw-if-not-resolved=\"false\"></xref>&apos;s position\n"
  example: []
  syntax:
    content: public AudioListener Listener { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Audio.AudioListener
    content.vb: Public ReadOnly Property Listener As AudioListener
  overload: TinyLife.GameImpl.Listener*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.Map
  commentId: P:TinyLife.GameImpl.Map
  id: Map
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: GameImpl.Map
  fullName: TinyLife.GameImpl.Map
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Map
    path: GameImpl.cs
    startLine: 75
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe map that the game is currently on, or <pre><code>null</code></pre> if in the main menu\n"
  example: []
  syntax:
    content: public Map Map { get; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Public ReadOnly Property Map As Map
  overload: TinyLife.GameImpl.Map*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.CurrentTool
  commentId: P:TinyLife.GameImpl.CurrentTool
  id: CurrentTool
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CurrentTool
    path: GameImpl.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe <xref href=\"TinyLife.Tools.Tool\" data-throw-if-not-resolved=\"false\"></xref> that is currently selected. Should always be set to either <xref href=\"TinyLife.Tools.Tool.PlayModeTool\" data-throw-if-not-resolved=\"false\"></xref> or any of <xref href=\"TinyLife.Tools.Tool.BuildTools\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Tool CurrentTool { get; set; }
    parameters: []
    return:
      type: TinyLife.Tools.Tool
    content.vb: Public Property CurrentTool As Tool
  overload: TinyLife.GameImpl.CurrentTool*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.CurrentTime
  commentId: F:TinyLife.GameImpl.CurrentTime
  id: CurrentTime
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentTime
  nameWithType: GameImpl.CurrentTime
  fullName: TinyLife.GameImpl.CurrentTime
  type: Field
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CurrentTime
    path: GameImpl.cs
    startLine: 94
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe current in-game total time since the start of the game.\n"
  example: []
  syntax:
    content: public TimeSpan CurrentTime
    return:
      type: System.TimeSpan
    content.vb: Public CurrentTime As TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.Weekday
  commentId: P:TinyLife.GameImpl.Weekday
  id: Weekday
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Weekday
  nameWithType: GameImpl.Weekday
  fullName: TinyLife.GameImpl.Weekday
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Weekday
    path: GameImpl.cs
    startLine: 98
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe current in-game weekday, based on <xref href=\"TinyLife.GameImpl.CurrentTime\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public DayOfWeek Weekday { get; }
    parameters: []
    return:
      type: System.DayOfWeek
    content.vb: Public ReadOnly Property Weekday As DayOfWeek
  overload: TinyLife.GameImpl.Weekday*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.CurrentHousehold
  commentId: P:TinyLife.GameImpl.CurrentHousehold
  id: CurrentHousehold
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentHousehold
  nameWithType: GameImpl.CurrentHousehold
  fullName: TinyLife.GameImpl.CurrentHousehold
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CurrentHousehold
    path: GameImpl.cs
    startLine: 102
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe household that is currently being played, or <pre><code>null</code></pre> if in the main menu, editing a lot or on the map select screen\n"
  example: []
  syntax:
    content: public Household CurrentHousehold { get; }
    parameters: []
    return:
      type: TinyLife.World.Household
    content.vb: Public ReadOnly Property CurrentHousehold As Household
  overload: TinyLife.GameImpl.CurrentHousehold*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.Money
  commentId: P:TinyLife.GameImpl.Money
  id: Money
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Money
  nameWithType: GameImpl.Money
  fullName: TinyLife.GameImpl.Money
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Money
    path: GameImpl.cs
    startLine: 106
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe money that the <xref href=\"TinyLife.GameImpl.CurrentHousehold\" data-throw-if-not-resolved=\"false\"></xref> has, or <xref href=\"System.Single.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> if there is no active household\n"
  example: []
  syntax:
    content: public float Money { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Money As Single
  overload: TinyLife.GameImpl.Money*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.CurrentLot
  commentId: P:TinyLife.GameImpl.CurrentLot
  id: CurrentLot
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CurrentLot
  nameWithType: GameImpl.CurrentLot
  fullName: TinyLife.GameImpl.CurrentLot
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CurrentLot
    path: GameImpl.cs
    startLine: 116
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe lot that is currently being played on or edited, or <pre><code>null</code></pre> if in the main menu or on the map select screen\n"
  example: []
  syntax:
    content: public Lot CurrentLot { get; }
    parameters: []
    return:
      type: TinyLife.World.Lot
    content.vb: Public ReadOnly Property CurrentLot As Lot
  overload: TinyLife.GameImpl.CurrentLot*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  id: Speed
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Speed
    path: GameImpl.cs
    startLine: 121
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe current <xref href=\"TinyLife.GameSpeed\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that, if the current speed is <xref href=\"TinyLife.GameSpeed.VeryFast\" data-throw-if-not-resolved=\"false\"></xref> and the game <xref href=\"TinyLife.GameImpl.CanBeExtremelyFast\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.GameSpeed.ExtremelyFast\" data-throw-if-not-resolved=\"false\"></xref> is returned.\n"
  example: []
  syntax:
    content: public GameSpeed Speed { get; set; }
    parameters: []
    return:
      type: TinyLife.GameSpeed
    content.vb: Public Property Speed As GameSpeed
  overload: TinyLife.GameImpl.Speed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.FollowingPerson
  commentId: P:TinyLife.GameImpl.FollowingPerson
  id: FollowingPerson
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: FollowingPerson
  nameWithType: GameImpl.FollowingPerson
  fullName: TinyLife.GameImpl.FollowingPerson
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: FollowingPerson
    path: GameImpl.cs
    startLine: 134
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> that the camera is currently locked onto\n"
  example: []
  syntax:
    content: public Person FollowingPerson { get; set; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Public Property FollowingPerson As Person
  overload: TinyLife.GameImpl.FollowingPerson*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.SaveName
  commentId: P:TinyLife.GameImpl.SaveName
  id: SaveName
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: SaveName
  nameWithType: GameImpl.SaveName
  fullName: TinyLife.GameImpl.SaveName
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: SaveName
    path: GameImpl.cs
    startLine: 146
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe name of the save file that is currently being played, or <pre><code>null</code></pre> if in the main menu\n"
  example: []
  syntax:
    content: public string SaveName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SaveName As String
  overload: TinyLife.GameImpl.SaveName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.Mode
  commentId: P:TinyLife.GameImpl.Mode
  id: Mode
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: GameImpl.Mode
  fullName: TinyLife.GameImpl.Mode
  type: Property
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: Mode
    path: GameImpl.cs
    startLine: 150
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe <xref href=\"TinyLife.GameImpl.GameMode\" data-throw-if-not-resolved=\"false\"></xref> that is currently active\n"
  example: []
  syntax:
    content: public GameImpl.GameMode Mode { get; }
    parameters: []
    return:
      type: TinyLife.GameImpl.GameMode
    content.vb: Public ReadOnly Property Mode As GameImpl.GameMode
  overload: TinyLife.GameImpl.Mode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.GameImpl.LoadContent
  commentId: M:TinyLife.GameImpl.LoadContent
  id: LoadContent
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: LoadContent()
  nameWithType: GameImpl.LoadContent()
  fullName: TinyLife.GameImpl.LoadContent()
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: LoadContent
    path: GameImpl.cs
    startLine: 188
  assemblies:
  - Tiny Life
  namespace: TinyLife
  example: []
  syntax:
    content: protected override void LoadContent()
    content.vb: Protected Overrides Sub LoadContent
  overridden: MLEM.Startup.MlemGame.LoadContent
  overload: TinyLife.GameImpl.LoadContent*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  id: DoUpdate(Microsoft.Xna.Framework.GameTime)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: DoUpdate(GameTime)
  nameWithType: GameImpl.DoUpdate(GameTime)
  fullName: TinyLife.GameImpl.DoUpdate(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: DoUpdate
    path: GameImpl.cs
    startLine: 290
  assemblies:
  - Tiny Life
  namespace: TinyLife
  example: []
  syntax:
    content: protected override void DoUpdate(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Protected Overrides Sub DoUpdate(gameTime As GameTime)
  overridden: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  overload: TinyLife.GameImpl.DoUpdate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  id: DoDraw(Microsoft.Xna.Framework.GameTime)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: DoDraw(GameTime)
  nameWithType: GameImpl.DoDraw(GameTime)
  fullName: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: DoDraw
    path: GameImpl.cs
    startLine: 391
  assemblies:
  - Tiny Life
  namespace: TinyLife
  example: []
  syntax:
    content: protected override void DoDraw(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
    content.vb: Protected Overrides Sub DoDraw(gameTime As GameTime)
  overridden: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  overload: TinyLife.GameImpl.DoDraw*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.GameImpl.OnExiting(System.Object,System.EventArgs)
  commentId: M:TinyLife.GameImpl.OnExiting(System.Object,System.EventArgs)
  id: OnExiting(System.Object,System.EventArgs)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: OnExiting(Object, EventArgs)
  nameWithType: GameImpl.OnExiting(Object, EventArgs)
  fullName: TinyLife.GameImpl.OnExiting(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: OnExiting
    path: GameImpl.cs
    startLine: 429
  assemblies:
  - Tiny Life
  namespace: TinyLife
  example: []
  syntax:
    content: protected override void OnExiting(object sender, EventArgs args)
    parameters:
    - id: sender
      type: System.Object
    - id: args
      type: System.EventArgs
    content.vb: Protected Overrides Sub OnExiting(sender As Object, args As EventArgs)
  overridden: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  overload: TinyLife.GameImpl.OnExiting*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: TinyLife.GameImpl.IsMouseOnUi
  commentId: M:TinyLife.GameImpl.IsMouseOnUi
  id: IsMouseOnUi
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: IsMouseOnUi()
  nameWithType: GameImpl.IsMouseOnUi()
  fullName: TinyLife.GameImpl.IsMouseOnUi()
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: IsMouseOnUi
    path: GameImpl.cs
    startLine: 441
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns true if the mouse is currently on top of any ui element in the <xref href=\"MLEM.Ui.UiSystem\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool IsMouseOnUi()
    return:
      type: System.Boolean
      description: true if the mouse is currently on top of any element
    content.vb: Public Function IsMouseOnUi As Boolean
  overload: TinyLife.GameImpl.IsMouseOnUi*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  commentId: M:TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  id: SwitchGameMode(TinyLife.GameImpl.GameMode)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: SwitchGameMode(GameImpl.GameMode)
  nameWithType: GameImpl.SwitchGameMode(GameImpl.GameMode)
  fullName: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: SwitchGameMode
    path: GameImpl.cs
    startLine: 450
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nSwitches the game mode to the given mode, and sets up all of the required data.\nNote that some game modes require certain data to be set prior to calling this method.\n"
  example: []
  syntax:
    content: public void SwitchGameMode(GameImpl.GameMode mode)
    parameters:
    - id: mode
      type: TinyLife.GameImpl.GameMode
      description: The game mode to switch to
    content.vb: Public Sub SwitchGameMode(mode As GameImpl.GameMode)
  overload: TinyLife.GameImpl.SwitchGameMode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.CanBeExtremelyFast
  commentId: M:TinyLife.GameImpl.CanBeExtremelyFast
  id: CanBeExtremelyFast
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CanBeExtremelyFast()
  nameWithType: GameImpl.CanBeExtremelyFast()
  fullName: TinyLife.GameImpl.CanBeExtremelyFast()
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CanBeExtremelyFast
    path: GameImpl.cs
    startLine: 515
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns whether the game allows changing the speed to <xref href=\"TinyLife.GameSpeed.ExtremelyFast\" data-throw-if-not-resolved=\"false\"></xref> at the current time.\nIf this returns true, and <xref href=\"TinyLife.GameImpl.Speed\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"TinyLife.GameSpeed.VeryFast\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"TinyLife.GameSpeed.ExtremelyFast\" data-throw-if-not-resolved=\"false\"></xref> speed is automatically engaged.\n"
  example: []
  syntax:
    content: public bool CanBeExtremelyFast()
    return:
      type: System.Boolean
      description: Whether the game can become extremely fast
    content.vb: Public Function CanBeExtremelyFast As Boolean
  overload: TinyLife.GameImpl.CanBeExtremelyFast*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.CanSaveOrSwitchModes
  commentId: M:TinyLife.GameImpl.CanSaveOrSwitchModes
  id: CanSaveOrSwitchModes
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: CanSaveOrSwitchModes()
  nameWithType: GameImpl.CanSaveOrSwitchModes()
  fullName: TinyLife.GameImpl.CanSaveOrSwitchModes()
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: CanSaveOrSwitchModes
    path: GameImpl.cs
    startLine: 526
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns whether the game can currently save or if <xref href=\"TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)\" data-throw-if-not-resolved=\"false\"></xref> is allowed to be used right now.\nThe return value is influenced by <xref href=\"TinyLife.Tools.Tool.CanSaveOrSwitchModes\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.World.Lot.AreRequirementsMet\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool CanSaveOrSwitchModes()
    return:
      type: System.Boolean
      description: Whether we can save or switch modes right now
    content.vb: Public Function CanSaveOrSwitchModes As Boolean
  overload: TinyLife.GameImpl.CanSaveOrSwitchModes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.FadeKeyboardLighting(Microsoft.Xna.Framework.Color)
  commentId: M:TinyLife.GameImpl.FadeKeyboardLighting(Microsoft.Xna.Framework.Color)
  id: FadeKeyboardLighting(Microsoft.Xna.Framework.Color)
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: FadeKeyboardLighting(Color)
  nameWithType: GameImpl.FadeKeyboardLighting(Color)
  fullName: TinyLife.GameImpl.FadeKeyboardLighting(Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: FadeKeyboardLighting
    path: GameImpl.cs
    startLine: 543
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nFades the keyboard lighting at a constant speed to make it result in the passed color.\nThis method only has an effect if <xref href=\"TinyLife.Options.KeyboardLighting\" data-throw-if-not-resolved=\"false\"></xref> is enabled, and if the user has a lighting-capable keyboard.\n"
  example: []
  syntax:
    content: public void FadeKeyboardLighting(Color newColor)
    parameters:
    - id: newColor
      type: Microsoft.Xna.Framework.Color
      description: The color to fade to; transparency is ignored
    content.vb: Public Sub FadeKeyboardLighting(newColor As Color)
  overload: TinyLife.GameImpl.FadeKeyboardLighting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Misc.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix})
  commentId: M:TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Misc.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix})
  id: TakeScreenshot(Microsoft.Xna.Framework.Point,System.Nullable{MLEM.Misc.RectangleF},System.Nullable{Microsoft.Xna.Framework.Matrix})
  parent: TinyLife.GameImpl
  langs:
  - csharp
  - vb
  name: TakeScreenshot(Point, Nullable<RectangleF>, Nullable<Matrix>)
  nameWithType: GameImpl.TakeScreenshot(Point, Nullable<RectangleF>, Nullable<Matrix>)
  fullName: TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point, System.Nullable<MLEM.Misc.RectangleF>, System.Nullable<Microsoft.Xna.Framework.Matrix>)
  type: Method
  source:
    remote:
      path: TinyLife/GameImpl.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife.git
    id: TakeScreenshot
    path: GameImpl.cs
    startLine: 621
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nTakes a screenshot and stores it in the default location, using a file name that contains the current date and time\n"
  example: []
  syntax:
    content: public void TakeScreenshot(Point size, RectangleF? visibleArea = null, Matrix? visibleMatrix = null)
    parameters:
    - id: size
      type: Microsoft.Xna.Framework.Point
      description: The size, in pixels, of the resulting screenshots
    - id: visibleArea
      type: System.Nullable{MLEM.Misc.RectangleF}
      description: The area that should be marked as visible, in world space. This determines culling values.
    - id: visibleMatrix
      type: System.Nullable{Microsoft.Xna.Framework.Matrix}
      description: A matrix that has a translation and scale that determines the visible area of the screenshot
    content.vb: Public Sub TakeScreenshot(size As Point, visibleArea As RectangleF? = Nothing, visibleMatrix As Matrix? = Nothing)
  overload: TinyLife.GameImpl.TakeScreenshot*
  nameWithType.vb: GameImpl.TakeScreenshot(Point, Nullable(Of RectangleF), Nullable(Of Matrix))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.GameImpl.TakeScreenshot(Microsoft.Xna.Framework.Point, System.Nullable(Of MLEM.Misc.RectangleF), System.Nullable(Of Microsoft.Xna.Framework.Matrix))
  name.vb: TakeScreenshot(Point, Nullable(Of RectangleF), Nullable(Of Matrix))
references:
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Game
  commentId: T:Microsoft.Xna.Framework.Game
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Game
  nameWithType: Game
  fullName: Microsoft.Xna.Framework.Game
- uid: MLEM.Startup.MlemGame
  commentId: T:MLEM.Startup.MlemGame
  parent: MLEM.Startup
  isExternal: true
  name: MlemGame
  nameWithType: MlemGame
  fullName: MLEM.Startup.MlemGame
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: MLEM.Startup.MlemGame.GraphicsDeviceManager
  commentId: F:MLEM.Startup.MlemGame.GraphicsDeviceManager
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: GraphicsDeviceManager
  nameWithType: MlemGame.GraphicsDeviceManager
  fullName: MLEM.Startup.MlemGame.GraphicsDeviceManager
- uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Update(GameTime)
  nameWithType: MlemGame.Update(GameTime)
  fullName: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: MlemGame.Update
    fullName: MLEM.Startup.MlemGame.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    nameWithType: MlemGame.Update
    fullName: MLEM.Startup.MlemGame.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Draw(GameTime)
  nameWithType: MlemGame.Draw(GameTime)
  fullName: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    nameWithType: MlemGame.Draw
    fullName: MLEM.Startup.MlemGame.Draw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    nameWithType: MlemGame.Draw
    fullName: MLEM.Startup.MlemGame.Draw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
  commentId: M:MLEM.Startup.MlemGame.LoadContent``1(System.String)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: LoadContent<T>(String)
  nameWithType: MlemGame.LoadContent<T>(String)
  fullName: MLEM.Startup.MlemGame.LoadContent<T>(System.String)
  nameWithType.vb: MlemGame.LoadContent(Of T)(String)
  fullName.vb: MLEM.Startup.MlemGame.LoadContent(Of T)(System.String)
  name.vb: LoadContent(Of T)(String)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
    name: LoadContent<T>
    nameWithType: MlemGame.LoadContent<T>
    fullName: MLEM.Startup.MlemGame.LoadContent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
    name: LoadContent(Of T)
    nameWithType: MlemGame.LoadContent(Of T)
    fullName: MLEM.Startup.MlemGame.LoadContent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Startup.MlemGame.Input
  commentId: P:MLEM.Startup.MlemGame.Input
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: Input
  nameWithType: MlemGame.Input
  fullName: MLEM.Startup.MlemGame.Input
- uid: MLEM.Startup.MlemGame.SpriteBatch
  commentId: P:MLEM.Startup.MlemGame.SpriteBatch
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: SpriteBatch
  nameWithType: MlemGame.SpriteBatch
  fullName: MLEM.Startup.MlemGame.SpriteBatch
- uid: MLEM.Startup.MlemGame.InputHandler
  commentId: P:MLEM.Startup.MlemGame.InputHandler
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: InputHandler
  nameWithType: MlemGame.InputHandler
  fullName: MLEM.Startup.MlemGame.InputHandler
- uid: MLEM.Startup.MlemGame.UiSystem
  commentId: P:MLEM.Startup.MlemGame.UiSystem
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: UiSystem
  nameWithType: MlemGame.UiSystem
  fullName: MLEM.Startup.MlemGame.UiSystem
- uid: MLEM.Startup.MlemGame.OnLoadContent
  commentId: E:MLEM.Startup.MlemGame.OnLoadContent
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: OnLoadContent
  nameWithType: MlemGame.OnLoadContent
  fullName: MLEM.Startup.MlemGame.OnLoadContent
- uid: MLEM.Startup.MlemGame.OnUpdate
  commentId: E:MLEM.Startup.MlemGame.OnUpdate
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: OnUpdate
  nameWithType: MlemGame.OnUpdate
  fullName: MLEM.Startup.MlemGame.OnUpdate
- uid: MLEM.Startup.MlemGame.OnDraw
  commentId: E:MLEM.Startup.MlemGame.OnDraw
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: OnDraw
  nameWithType: MlemGame.OnDraw
  fullName: MLEM.Startup.MlemGame.OnDraw
- uid: Microsoft.Xna.Framework.Game.Dispose
  commentId: M:Microsoft.Xna.Framework.Game.Dispose
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Dispose()
  nameWithType: Game.Dispose()
  fullName: Microsoft.Xna.Framework.Game.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Dispose
    name: Dispose
    nameWithType: Game.Dispose
    fullName: Microsoft.Xna.Framework.Game.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Dispose
    name: Dispose
    nameWithType: Game.Dispose
    fullName: Microsoft.Xna.Framework.Game.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Game.Dispose(Boolean)
  fullName: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Game.Dispose
    fullName: Microsoft.Xna.Framework.Game.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Game.Dispose
    fullName: Microsoft.Xna.Framework.Game.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.Exit
  commentId: M:Microsoft.Xna.Framework.Game.Exit
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Exit()
  nameWithType: Game.Exit()
  fullName: Microsoft.Xna.Framework.Game.Exit()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Exit
    name: Exit
    nameWithType: Game.Exit
    fullName: Microsoft.Xna.Framework.Game.Exit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Exit
    name: Exit
    nameWithType: Game.Exit
    fullName: Microsoft.Xna.Framework.Game.Exit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
  commentId: M:Microsoft.Xna.Framework.Game.ResetElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: ResetElapsedTime()
  nameWithType: Game.ResetElapsedTime()
  fullName: Microsoft.Xna.Framework.Game.ResetElapsedTime()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
    name: ResetElapsedTime
    nameWithType: Game.ResetElapsedTime
    fullName: Microsoft.Xna.Framework.Game.ResetElapsedTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
    name: ResetElapsedTime
    nameWithType: Game.ResetElapsedTime
    fullName: Microsoft.Xna.Framework.Game.ResetElapsedTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.SuppressDraw
  commentId: M:Microsoft.Xna.Framework.Game.SuppressDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: SuppressDraw()
  nameWithType: Game.SuppressDraw()
  fullName: Microsoft.Xna.Framework.Game.SuppressDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.SuppressDraw
    name: SuppressDraw
    nameWithType: Game.SuppressDraw
    fullName: Microsoft.Xna.Framework.Game.SuppressDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.SuppressDraw
    name: SuppressDraw
    nameWithType: Game.SuppressDraw
    fullName: Microsoft.Xna.Framework.Game.SuppressDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.RunOneFrame
  commentId: M:Microsoft.Xna.Framework.Game.RunOneFrame
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: RunOneFrame()
  nameWithType: Game.RunOneFrame()
  fullName: Microsoft.Xna.Framework.Game.RunOneFrame()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.RunOneFrame
    name: RunOneFrame
    nameWithType: Game.RunOneFrame
    fullName: Microsoft.Xna.Framework.Game.RunOneFrame
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.RunOneFrame
    name: RunOneFrame
    nameWithType: Game.RunOneFrame
    fullName: Microsoft.Xna.Framework.Game.RunOneFrame
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.Run
  commentId: M:Microsoft.Xna.Framework.Game.Run
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Run()
  nameWithType: Game.Run()
  fullName: Microsoft.Xna.Framework.Game.Run()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Run
    name: Run
    nameWithType: Game.Run
    fullName: Microsoft.Xna.Framework.Game.Run
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Run
    name: Run
    nameWithType: Game.Run
    fullName: Microsoft.Xna.Framework.Game.Run
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  commentId: M:Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Run(GameRunBehavior)
  nameWithType: Game.Run(GameRunBehavior)
  fullName: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    name: Run
    nameWithType: Game.Run
    fullName: Microsoft.Xna.Framework.Game.Run
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameRunBehavior
    name: GameRunBehavior
    nameWithType: GameRunBehavior
    fullName: Microsoft.Xna.Framework.GameRunBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    name: Run
    nameWithType: Game.Run
    fullName: Microsoft.Xna.Framework.Game.Run
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameRunBehavior
    name: GameRunBehavior
    nameWithType: GameRunBehavior
    fullName: Microsoft.Xna.Framework.GameRunBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.Tick
  commentId: M:Microsoft.Xna.Framework.Game.Tick
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Tick()
  nameWithType: Game.Tick()
  fullName: Microsoft.Xna.Framework.Game.Tick()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Tick
    name: Tick
    nameWithType: Game.Tick
    fullName: Microsoft.Xna.Framework.Game.Tick
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Tick
    name: Tick
    nameWithType: Game.Tick
    fullName: Microsoft.Xna.Framework.Game.Tick
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.BeginDraw
  commentId: M:Microsoft.Xna.Framework.Game.BeginDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: BeginDraw()
  nameWithType: Game.BeginDraw()
  fullName: Microsoft.Xna.Framework.Game.BeginDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.BeginDraw
    name: BeginDraw
    nameWithType: Game.BeginDraw
    fullName: Microsoft.Xna.Framework.Game.BeginDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.BeginDraw
    name: BeginDraw
    nameWithType: Game.BeginDraw
    fullName: Microsoft.Xna.Framework.Game.BeginDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.EndDraw
  commentId: M:Microsoft.Xna.Framework.Game.EndDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: EndDraw()
  nameWithType: Game.EndDraw()
  fullName: Microsoft.Xna.Framework.Game.EndDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.EndDraw
    name: EndDraw
    nameWithType: Game.EndDraw
    fullName: Microsoft.Xna.Framework.Game.EndDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.EndDraw
    name: EndDraw
    nameWithType: Game.EndDraw
    fullName: Microsoft.Xna.Framework.Game.EndDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.BeginRun
  commentId: M:Microsoft.Xna.Framework.Game.BeginRun
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: BeginRun()
  nameWithType: Game.BeginRun()
  fullName: Microsoft.Xna.Framework.Game.BeginRun()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.BeginRun
    name: BeginRun
    nameWithType: Game.BeginRun
    fullName: Microsoft.Xna.Framework.Game.BeginRun
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.BeginRun
    name: BeginRun
    nameWithType: Game.BeginRun
    fullName: Microsoft.Xna.Framework.Game.BeginRun
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.EndRun
  commentId: M:Microsoft.Xna.Framework.Game.EndRun
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: EndRun()
  nameWithType: Game.EndRun()
  fullName: Microsoft.Xna.Framework.Game.EndRun()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.EndRun
    name: EndRun
    nameWithType: Game.EndRun
    fullName: Microsoft.Xna.Framework.Game.EndRun
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.EndRun
    name: EndRun
    nameWithType: Game.EndRun
    fullName: Microsoft.Xna.Framework.Game.EndRun
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.UnloadContent
  commentId: M:Microsoft.Xna.Framework.Game.UnloadContent
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: UnloadContent()
  nameWithType: Game.UnloadContent()
  fullName: Microsoft.Xna.Framework.Game.UnloadContent()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.UnloadContent
    name: UnloadContent
    nameWithType: Game.UnloadContent
    fullName: Microsoft.Xna.Framework.Game.UnloadContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.UnloadContent
    name: UnloadContent
    nameWithType: Game.UnloadContent
    fullName: Microsoft.Xna.Framework.Game.UnloadContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.Initialize
  commentId: M:Microsoft.Xna.Framework.Game.Initialize
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Initialize()
  nameWithType: Game.Initialize()
  fullName: Microsoft.Xna.Framework.Game.Initialize()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    nameWithType: Game.Initialize
    fullName: Microsoft.Xna.Framework.Game.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    nameWithType: Game.Initialize
    fullName: Microsoft.Xna.Framework.Game.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: OnActivated(Object, EventArgs)
  nameWithType: Game.OnActivated(Object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnActivated(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    name: OnActivated
    nameWithType: Game.OnActivated
    fullName: Microsoft.Xna.Framework.Game.OnActivated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    name: OnActivated
    nameWithType: Game.OnActivated
    fullName: Microsoft.Xna.Framework.Game.OnActivated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: OnDeactivated(Object, EventArgs)
  nameWithType: Game.OnDeactivated(Object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    name: OnDeactivated
    nameWithType: Game.OnDeactivated
    fullName: Microsoft.Xna.Framework.Game.OnDeactivated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    name: OnDeactivated
    nameWithType: Game.OnDeactivated
    fullName: Microsoft.Xna.Framework.Game.OnDeactivated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Game.LaunchParameters
  commentId: P:Microsoft.Xna.Framework.Game.LaunchParameters
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: LaunchParameters
  nameWithType: Game.LaunchParameters
  fullName: Microsoft.Xna.Framework.Game.LaunchParameters
- uid: Microsoft.Xna.Framework.Game.Components
  commentId: P:Microsoft.Xna.Framework.Game.Components
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Components
  nameWithType: Game.Components
  fullName: Microsoft.Xna.Framework.Game.Components
- uid: Microsoft.Xna.Framework.Game.InactiveSleepTime
  commentId: P:Microsoft.Xna.Framework.Game.InactiveSleepTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: InactiveSleepTime
  nameWithType: Game.InactiveSleepTime
  fullName: Microsoft.Xna.Framework.Game.InactiveSleepTime
- uid: Microsoft.Xna.Framework.Game.MaxElapsedTime
  commentId: P:Microsoft.Xna.Framework.Game.MaxElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: MaxElapsedTime
  nameWithType: Game.MaxElapsedTime
  fullName: Microsoft.Xna.Framework.Game.MaxElapsedTime
- uid: Microsoft.Xna.Framework.Game.IsActive
  commentId: P:Microsoft.Xna.Framework.Game.IsActive
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsActive
  nameWithType: Game.IsActive
  fullName: Microsoft.Xna.Framework.Game.IsActive
- uid: Microsoft.Xna.Framework.Game.IsMouseVisible
  commentId: P:Microsoft.Xna.Framework.Game.IsMouseVisible
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsMouseVisible
  nameWithType: Game.IsMouseVisible
  fullName: Microsoft.Xna.Framework.Game.IsMouseVisible
- uid: Microsoft.Xna.Framework.Game.TargetElapsedTime
  commentId: P:Microsoft.Xna.Framework.Game.TargetElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: TargetElapsedTime
  nameWithType: Game.TargetElapsedTime
  fullName: Microsoft.Xna.Framework.Game.TargetElapsedTime
- uid: Microsoft.Xna.Framework.Game.IsFixedTimeStep
  commentId: P:Microsoft.Xna.Framework.Game.IsFixedTimeStep
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsFixedTimeStep
  nameWithType: Game.IsFixedTimeStep
  fullName: Microsoft.Xna.Framework.Game.IsFixedTimeStep
- uid: Microsoft.Xna.Framework.Game.Services
  commentId: P:Microsoft.Xna.Framework.Game.Services
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Services
  nameWithType: Game.Services
  fullName: Microsoft.Xna.Framework.Game.Services
- uid: Microsoft.Xna.Framework.Game.Content
  commentId: P:Microsoft.Xna.Framework.Game.Content
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Content
  nameWithType: Game.Content
  fullName: Microsoft.Xna.Framework.Game.Content
- uid: Microsoft.Xna.Framework.Game.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Game.GraphicsDevice
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: GraphicsDevice
  nameWithType: Game.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Game.GraphicsDevice
- uid: Microsoft.Xna.Framework.Game.Window
  commentId: P:Microsoft.Xna.Framework.Game.Window
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Window
  nameWithType: Game.Window
  fullName: Microsoft.Xna.Framework.Game.Window
- uid: Microsoft.Xna.Framework.Game.Activated
  commentId: E:Microsoft.Xna.Framework.Game.Activated
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Activated
  nameWithType: Game.Activated
  fullName: Microsoft.Xna.Framework.Game.Activated
- uid: Microsoft.Xna.Framework.Game.Deactivated
  commentId: E:Microsoft.Xna.Framework.Game.Deactivated
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Deactivated
  nameWithType: Game.Deactivated
  fullName: Microsoft.Xna.Framework.Game.Deactivated
- uid: Microsoft.Xna.Framework.Game.Disposed
  commentId: E:Microsoft.Xna.Framework.Game.Disposed
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Disposed
  nameWithType: Game.Disposed
  fullName: Microsoft.Xna.Framework.Game.Disposed
- uid: Microsoft.Xna.Framework.Game.Exiting
  commentId: E:Microsoft.Xna.Framework.Game.Exiting
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Exiting
  nameWithType: Game.Exiting
  fullName: Microsoft.Xna.Framework.Game.Exiting
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.GameImpl.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GameImpl>()
  nameWithType: Extensions.JsonCopy<GameImpl>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.GameImpl>()
  nameWithType.vb: Extensions.JsonCopy(Of GameImpl)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.GameImpl)()
  name.vb: JsonCopy(Of GameImpl)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<GameImpl>
    nameWithType: Extensions.JsonCopy<GameImpl>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.GameImpl>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of GameImpl)
    nameWithType: Extensions.JsonCopy(Of GameImpl)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.GameImpl)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: MLEM.Startup
  commentId: N:MLEM.Startup
  isExternal: true
  name: MLEM.Startup
  nameWithType: MLEM.Startup
  fullName: MLEM.Startup
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.GameImpl.Instance*
  commentId: Overload:TinyLife.GameImpl.Instance
  name: Instance
  nameWithType: GameImpl.Instance
  fullName: TinyLife.GameImpl.Instance
- uid: TinyLife.GameImpl
  commentId: T:TinyLife.GameImpl
  parent: TinyLife
  name: GameImpl
  nameWithType: GameImpl
  fullName: TinyLife.GameImpl
- uid: TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.GameImpl.DoDraw(Microsoft.Xna.Framework.GameTime)
  isExternal: true
- uid: TinyLife.GameImpl.GraphicsMetrics*
  commentId: Overload:TinyLife.GameImpl.GraphicsMetrics
  name: GraphicsMetrics
  nameWithType: GameImpl.GraphicsMetrics
  fullName: TinyLife.GameImpl.GraphicsMetrics
- uid: Microsoft.Xna.Framework.Graphics.GraphicsMetrics
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsMetrics
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: GraphicsMetrics
  nameWithType: GraphicsMetrics
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsMetrics
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: TinyLife.GameImpl.LoadContent
  commentId: M:TinyLife.GameImpl.LoadContent
  isExternal: true
- uid: TinyLife.GameImpl.Camera*
  commentId: Overload:TinyLife.GameImpl.Camera
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
- uid: MLEM.Cameras.Camera
  commentId: T:MLEM.Cameras.Camera
  parent: MLEM.Cameras
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: MLEM.Cameras.Camera
- uid: MLEM.Cameras
  commentId: N:MLEM.Cameras
  isExternal: true
  name: MLEM.Cameras
  nameWithType: MLEM.Cameras
  fullName: MLEM.Cameras
- uid: Microsoft.Xna.Framework.Audio.AudioListener
  commentId: T:Microsoft.Xna.Framework.Audio.AudioListener
  parent: Microsoft.Xna.Framework.Audio
  isExternal: true
  name: AudioListener
  nameWithType: AudioListener
  fullName: Microsoft.Xna.Framework.Audio.AudioListener
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  isExternal: true
- uid: TinyLife.GameImpl.Listener*
  commentId: Overload:TinyLife.GameImpl.Listener
  name: Listener
  nameWithType: GameImpl.Listener
  fullName: TinyLife.GameImpl.Listener
- uid: Microsoft.Xna.Framework.Audio
  commentId: N:Microsoft.Xna.Framework.Audio
  isExternal: true
  name: Microsoft.Xna.Framework.Audio
  nameWithType: Microsoft.Xna.Framework.Audio
  fullName: Microsoft.Xna.Framework.Audio
- uid: TinyLife.GameImpl.Map*
  commentId: Overload:TinyLife.GameImpl.Map
  name: Map
  nameWithType: GameImpl.Map
  fullName: TinyLife.GameImpl.Map
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: TinyLife.Tools.Tool.PlayModeTool
  commentId: F:TinyLife.Tools.Tool.PlayModeTool
  parent: TinyLife.Tools.Tool
  name: PlayModeTool
  nameWithType: Tool.PlayModeTool
  fullName: TinyLife.Tools.Tool.PlayModeTool
- uid: TinyLife.Tools.Tool.BuildTools
  commentId: F:TinyLife.Tools.Tool.BuildTools
  parent: TinyLife.Tools.Tool
  name: BuildTools
  nameWithType: Tool.BuildTools
  fullName: TinyLife.Tools.Tool.BuildTools
- uid: TinyLife.GameImpl.CurrentTool*
  commentId: Overload:TinyLife.GameImpl.CurrentTool
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.GameImpl.CurrentTime
  commentId: F:TinyLife.GameImpl.CurrentTime
  isExternal: true
- uid: TinyLife.GameImpl.Weekday*
  commentId: Overload:TinyLife.GameImpl.Weekday
  name: Weekday
  nameWithType: GameImpl.Weekday
  fullName: TinyLife.GameImpl.Weekday
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: TinyLife.GameImpl.CurrentHousehold*
  commentId: Overload:TinyLife.GameImpl.CurrentHousehold
  name: CurrentHousehold
  nameWithType: GameImpl.CurrentHousehold
  fullName: TinyLife.GameImpl.CurrentHousehold
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.GameImpl.CurrentHousehold
  commentId: P:TinyLife.GameImpl.CurrentHousehold
  isExternal: true
- uid: System.Single.MaxValue
  commentId: F:System.Single.MaxValue
  isExternal: true
- uid: TinyLife.GameImpl.Money*
  commentId: Overload:TinyLife.GameImpl.Money
  name: Money
  nameWithType: GameImpl.Money
  fullName: TinyLife.GameImpl.Money
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.GameImpl.CurrentLot*
  commentId: Overload:TinyLife.GameImpl.CurrentLot
  name: CurrentLot
  nameWithType: GameImpl.CurrentLot
  fullName: TinyLife.GameImpl.CurrentLot
- uid: TinyLife.World.Lot
  commentId: T:TinyLife.World.Lot
  parent: TinyLife.World
  name: Lot
  nameWithType: Lot
  fullName: TinyLife.World.Lot
- uid: TinyLife.GameSpeed
  commentId: T:TinyLife.GameSpeed
  parent: TinyLife
  name: GameSpeed
  nameWithType: GameSpeed
  fullName: TinyLife.GameSpeed
- uid: TinyLife.GameSpeed.VeryFast
  commentId: F:TinyLife.GameSpeed.VeryFast
  isExternal: true
- uid: TinyLife.GameImpl.CanBeExtremelyFast
  commentId: M:TinyLife.GameImpl.CanBeExtremelyFast
  isExternal: true
- uid: TinyLife.GameSpeed.ExtremelyFast
  commentId: F:TinyLife.GameSpeed.ExtremelyFast
  isExternal: true
- uid: TinyLife.GameImpl.Speed*
  commentId: Overload:TinyLife.GameImpl.Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.GameImpl.FollowingPerson*
  commentId: Overload:TinyLife.GameImpl.FollowingPerson
  name: FollowingPerson
  nameWithType: GameImpl.FollowingPerson
  fullName: TinyLife.GameImpl.FollowingPerson
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.GameImpl.SaveName*
  commentId: Overload:TinyLife.GameImpl.SaveName
  name: SaveName
  nameWithType: GameImpl.SaveName
  fullName: TinyLife.GameImpl.SaveName
- uid: TinyLife.GameImpl.GameMode
  commentId: T:TinyLife.GameImpl.GameMode
  parent: TinyLife
  name: GameImpl.GameMode
  nameWithType: GameImpl.GameMode
  fullName: TinyLife.GameImpl.GameMode
- uid: TinyLife.GameImpl.Mode*
  commentId: Overload:TinyLife.GameImpl.Mode
  name: Mode
  nameWithType: GameImpl.Mode
  fullName: TinyLife.GameImpl.Mode
- uid: MLEM.Startup.MlemGame.LoadContent
  commentId: M:MLEM.Startup.MlemGame.LoadContent
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: LoadContent()
  nameWithType: MlemGame.LoadContent()
  fullName: MLEM.Startup.MlemGame.LoadContent()
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.LoadContent
    name: LoadContent
    nameWithType: MlemGame.LoadContent
    fullName: MLEM.Startup.MlemGame.LoadContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.LoadContent
    name: LoadContent
    nameWithType: MlemGame.LoadContent
    fullName: MLEM.Startup.MlemGame.LoadContent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.GameImpl.LoadContent*
  commentId: Overload:TinyLife.GameImpl.LoadContent
  name: LoadContent
  nameWithType: GameImpl.LoadContent
  fullName: TinyLife.GameImpl.LoadContent
- uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: DoUpdate(GameTime)
  nameWithType: MlemGame.DoUpdate(GameTime)
  fullName: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
    name: DoUpdate
    nameWithType: MlemGame.DoUpdate
    fullName: MLEM.Startup.MlemGame.DoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
    name: DoUpdate
    nameWithType: MlemGame.DoUpdate
    fullName: MLEM.Startup.MlemGame.DoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.GameImpl.DoUpdate*
  commentId: Overload:TinyLife.GameImpl.DoUpdate
  name: DoUpdate
  nameWithType: GameImpl.DoUpdate
  fullName: TinyLife.GameImpl.DoUpdate
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  isExternal: true
  name: DoDraw(GameTime)
  nameWithType: MlemGame.DoDraw(GameTime)
  fullName: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    nameWithType: MlemGame.DoDraw
    fullName: MLEM.Startup.MlemGame.DoDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    nameWithType: MlemGame.DoDraw
    fullName: MLEM.Startup.MlemGame.DoDraw
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.GameImpl.DoDraw*
  commentId: Overload:TinyLife.GameImpl.DoDraw
  name: DoDraw
  nameWithType: GameImpl.DoDraw
  fullName: TinyLife.GameImpl.DoDraw
- uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: OnExiting(Object, EventArgs)
  nameWithType: Game.OnExiting(Object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnExiting(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
    name: OnExiting
    nameWithType: Game.OnExiting
    fullName: Microsoft.Xna.Framework.Game.OnExiting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
    name: OnExiting
    nameWithType: Game.OnExiting
    fullName: Microsoft.Xna.Framework.Game.OnExiting
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.GameImpl.OnExiting*
  commentId: Overload:TinyLife.GameImpl.OnExiting
  name: OnExiting
  nameWithType: GameImpl.OnExiting
  fullName: TinyLife.GameImpl.OnExiting
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  isExternal: true
- uid: TinyLife.GameImpl.IsMouseOnUi*
  commentId: Overload:TinyLife.GameImpl.IsMouseOnUi
  name: IsMouseOnUi
  nameWithType: GameImpl.IsMouseOnUi
  fullName: TinyLife.GameImpl.IsMouseOnUi
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.GameImpl.SwitchGameMode*
  commentId: Overload:TinyLife.GameImpl.SwitchGameMode
  name: SwitchGameMode
  nameWithType: GameImpl.SwitchGameMode
  fullName: TinyLife.GameImpl.SwitchGameMode
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  isExternal: true
- uid: TinyLife.GameImpl.CanBeExtremelyFast*
  commentId: Overload:TinyLife.GameImpl.CanBeExtremelyFast
  name: CanBeExtremelyFast
  nameWithType: GameImpl.CanBeExtremelyFast
  fullName: TinyLife.GameImpl.CanBeExtremelyFast
- uid: TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  commentId: M:TinyLife.GameImpl.SwitchGameMode(TinyLife.GameImpl.GameMode)
  isExternal: true
- uid: TinyLife.Tools.Tool.CanSaveOrSwitchModes
  commentId: M:TinyLife.Tools.Tool.CanSaveOrSwitchModes
  parent: TinyLife.Tools.Tool
  name: CanSaveOrSwitchModes()
  nameWithType: Tool.CanSaveOrSwitchModes()
  fullName: TinyLife.Tools.Tool.CanSaveOrSwitchModes()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.CanSaveOrSwitchModes
    name: CanSaveOrSwitchModes
    nameWithType: Tool.CanSaveOrSwitchModes
    fullName: TinyLife.Tools.Tool.CanSaveOrSwitchModes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.CanSaveOrSwitchModes
    name: CanSaveOrSwitchModes
    nameWithType: Tool.CanSaveOrSwitchModes
    fullName: TinyLife.Tools.Tool.CanSaveOrSwitchModes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Lot.AreRequirementsMet
  commentId: M:TinyLife.World.Lot.AreRequirementsMet
  isExternal: true
- uid: TinyLife.GameImpl.CanSaveOrSwitchModes*
  commentId: Overload:TinyLife.GameImpl.CanSaveOrSwitchModes
  name: CanSaveOrSwitchModes
  nameWithType: GameImpl.CanSaveOrSwitchModes
  fullName: TinyLife.GameImpl.CanSaveOrSwitchModes
- uid: TinyLife.Options.KeyboardLighting
  commentId: F:TinyLife.Options.KeyboardLighting
  isExternal: true
- uid: TinyLife.GameImpl.FadeKeyboardLighting*
  commentId: Overload:TinyLife.GameImpl.FadeKeyboardLighting
  name: FadeKeyboardLighting
  nameWithType: GameImpl.FadeKeyboardLighting
  fullName: TinyLife.GameImpl.FadeKeyboardLighting
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: TinyLife.GameImpl.TakeScreenshot*
  commentId: Overload:TinyLife.GameImpl.TakeScreenshot
  name: TakeScreenshot
  nameWithType: GameImpl.TakeScreenshot
  fullName: TinyLife.GameImpl.TakeScreenshot
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: System.Nullable{MLEM.Misc.RectangleF}
  commentId: T:System.Nullable{MLEM.Misc.RectangleF}
  parent: System
  definition: System.Nullable`1
  name: Nullable<RectangleF>
  nameWithType: Nullable<RectangleF>
  fullName: System.Nullable<MLEM.Misc.RectangleF>
  nameWithType.vb: Nullable(Of RectangleF)
  fullName.vb: System.Nullable(Of MLEM.Misc.RectangleF)
  name.vb: Nullable(Of RectangleF)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Microsoft.Xna.Framework.Matrix}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Matrix}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Matrix>
  nameWithType: Nullable<Matrix>
  fullName: System.Nullable<Microsoft.Xna.Framework.Matrix>
  nameWithType.vb: Nullable(Of Matrix)
  fullName.vb: System.Nullable(Of Microsoft.Xna.Framework.Matrix)
  name.vb: Nullable(Of Matrix)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Matrix
    name: Matrix
    nameWithType: Matrix
    fullName: Microsoft.Xna.Framework.Matrix
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
