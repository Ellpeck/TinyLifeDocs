### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ResultType
  commentId: T:TinyLife.Actions.ResultType
  id: ResultType
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ResultType.Hidden
  - TinyLife.Actions.ResultType.Invalid
  - TinyLife.Actions.ResultType.Valid
  langs:
  - csharp
  - vb
  name: ResultType
  nameWithType: ResultType
  fullName: TinyLife.Actions.ResultType
  type: Enum
  source:
    remote:
      path: TinyLife/Actions/CanExecuteResult.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ResultType
    path: ../TinyLife/Actions/CanExecuteResult.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA type of result that a <xref href=\"TinyLife.Actions.CanExecuteResult\" data-throw-if-not-resolved=\"false\"></xref> can have.\nIn general, custom <xref href=\"TinyLife.Actions.CanExecuteResult\" data-throw-if-not-resolved=\"false\"></xref> instances will have the <xref href=\"TinyLife.Actions.ResultType.Invalid\" data-throw-if-not-resolved=\"false\"></xref> result type, as <xref href=\"TinyLife.Actions.ResultType.Valid\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ResultType.Hidden\" data-throw-if-not-resolved=\"false\"></xref> are already covered by their respective <xref href=\"TinyLife.Actions.CanExecuteResult\" data-throw-if-not-resolved=\"false\"></xref> counterparts.\n"
  example: []
  syntax:
    content: public enum ResultType
    content.vb: Public Enum ResultType
  extensionMethods:
  - TinyLife.Actions.ResultType.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Actions.ResultType.Valid
  commentId: F:TinyLife.Actions.ResultType.Valid
  id: Valid
  parent: TinyLife.Actions.ResultType
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: ResultType.Valid
  fullName: TinyLife.Actions.ResultType.Valid
  type: Field
  source:
    remote:
      path: TinyLife/Actions/CanExecuteResult.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Valid
    path: ../TinyLife/Actions/CanExecuteResult.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA valid <xref href=\"TinyLife.Actions.ResultType\" data-throw-if-not-resolved=\"false\"></xref> indicates that the action can be executed.\n<xref href=\"TinyLife.Actions.CanExecuteResult\" data-throw-if-not-resolved=\"false\"></xref> instances with this type usually don&apos;t display their name to the player.\n"
  example: []
  syntax:
    content: Valid = 0
    return:
      type: TinyLife.Actions.ResultType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Actions.ResultType.Invalid
  commentId: F:TinyLife.Actions.ResultType.Invalid
  id: Invalid
  parent: TinyLife.Actions.ResultType
  langs:
  - csharp
  - vb
  name: Invalid
  nameWithType: ResultType.Invalid
  fullName: TinyLife.Actions.ResultType.Invalid
  type: Field
  source:
    remote:
      path: TinyLife/Actions/CanExecuteResult.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Invalid
    path: ../TinyLife/Actions/CanExecuteResult.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn invalid <xref href=\"TinyLife.Actions.ResultType\" data-throw-if-not-resolved=\"false\"></xref> signifies that the action cannot be executed for some reason.\n"
  example: []
  syntax:
    content: Invalid = 1
    return:
      type: TinyLife.Actions.ResultType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Actions.ResultType.Hidden
  commentId: F:TinyLife.Actions.ResultType.Hidden
  id: Hidden
  parent: TinyLife.Actions.ResultType
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: ResultType.Hidden
  fullName: TinyLife.Actions.ResultType.Hidden
  type: Field
  source:
    remote:
      path: TinyLife/Actions/CanExecuteResult.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Hidden
    path: ../TinyLife/Actions/CanExecuteResult.cs
    startLine: 44
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA hidden <xref href=\"TinyLife.Actions.ResultType\" data-throw-if-not-resolved=\"false\"></xref> indicates that the action cannot be executed, and shouldn&apos;t be displayed as a disallowed option to the player.\n<xref href=\"TinyLife.Actions.CanExecuteResult\" data-throw-if-not-resolved=\"false\"></xref> instances with this type usually don&apos;t display their name to the player.\n"
  example: []
  syntax:
    content: Hidden = 2
    return:
      type: TinyLife.Actions.ResultType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Actions.ResultType.Invalid
  commentId: F:TinyLife.Actions.ResultType.Invalid
  isExternal: true
- uid: TinyLife.Actions.ResultType.Valid
  commentId: F:TinyLife.Actions.ResultType.Valid
  isExternal: true
- uid: TinyLife.Actions.ResultType.Hidden
  commentId: F:TinyLife.Actions.ResultType.Hidden
  isExternal: true
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Actions.ResultType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ResultType>()
  nameWithType: Extensions.JsonCopy<ResultType>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ResultType>()
  nameWithType.vb: Extensions.JsonCopy(Of ResultType)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ResultType)()
  name.vb: JsonCopy(Of ResultType)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<ResultType>
    nameWithType: Extensions.JsonCopy<ResultType>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ResultType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of ResultType)
    nameWithType: Extensions.JsonCopy(Of ResultType)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ResultType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Actions.ResultType
  commentId: T:TinyLife.Actions.ResultType
  parent: TinyLife.Actions
  name: ResultType
  nameWithType: ResultType
  fullName: TinyLife.Actions.ResultType
