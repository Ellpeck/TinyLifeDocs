### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Emote
  commentId: T:TinyLife.Actions.Emote
  id: Emote
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.Emote.Categories
  - TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory)
  - TinyLife.Actions.Emote.GetRandomEmote(TinyLife.Actions.EmoteCategory)
  - TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  - TinyLife.Actions.Emote.Texture
  langs:
  - csharp
  - vb
  name: Emote
  nameWithType: Emote
  fullName: TinyLife.Actions.Emote
  type: Class
  source:
    remote:
      path: TinyLife/Actions/Emote.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Emote
    path: ../TinyLife/Actions/Emote.cs
    startLine: 15
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn emote is a graphic that can be displayed in a bubble over a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>, usually as part of a conversation.\n"
  example: []
  syntax:
    content: public class Emote
    content.vb: Public Class Emote
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.Emote.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.Emote.Texture
  commentId: F:TinyLife.Actions.Emote.Texture
  id: Texture
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Emote.Texture
  fullName: TinyLife.Actions.Emote.Texture
  type: Field
  source:
    remote:
      path: TinyLife/Actions/Emote.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Texture
    path: ../TinyLife/Actions/Emote.cs
    startLine: 69
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe texture that is displayed for this emote\n"
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.Actions.Emote.Categories
  commentId: F:TinyLife.Actions.Emote.Categories
  id: Categories
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: Emote.Categories
  fullName: TinyLife.Actions.Emote.Categories
  type: Field
  source:
    remote:
      path: TinyLife/Actions/Emote.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Categories
    path: ../TinyLife/Actions/Emote.cs
    startLine: 73
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA combined <xref href=\"TinyLife.Actions.EmoteCategory\" data-throw-if-not-resolved=\"false\"></xref> flag that determines the categories that this emote belongs to\n"
  example: []
  syntax:
    content: public readonly EmoteCategory Categories
    return:
      type: TinyLife.Actions.EmoteCategory
    content.vb: Public ReadOnly Categories As EmoteCategory
- uid: TinyLife.Actions.Emote.GetRandomEmote(TinyLife.Actions.EmoteCategory)
  commentId: M:TinyLife.Actions.Emote.GetRandomEmote(TinyLife.Actions.EmoteCategory)
  id: GetRandomEmote(TinyLife.Actions.EmoteCategory)
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: GetRandomEmote(EmoteCategory)
  nameWithType: Emote.GetRandomEmote(EmoteCategory)
  fullName: TinyLife.Actions.Emote.GetRandomEmote(TinyLife.Actions.EmoteCategory)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Emote.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetRandomEmote
    path: ../TinyLife/Actions/Emote.cs
    startLine: 85
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a random emote from a combined flag of possible categories\n"
  example: []
  syntax:
    content: public static Emote GetRandomEmote(EmoteCategory possibleCategories)
    parameters:
    - id: possibleCategories
      type: TinyLife.Actions.EmoteCategory
      description: The possible categories
    return:
      type: TinyLife.Actions.Emote
      description: A random emote from the given categories
    content.vb: Public Shared Function GetRandomEmote(possibleCategories As EmoteCategory) As Emote
  overload: TinyLife.Actions.Emote.GetRandomEmote*
- uid: TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory)
  commentId: M:TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory)
  id: GetEmotes(TinyLife.Actions.EmoteCategory)
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: GetEmotes(EmoteCategory)
  nameWithType: Emote.GetEmotes(EmoteCategory)
  fullName: TinyLife.Actions.Emote.GetEmotes(TinyLife.Actions.EmoteCategory)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Emote.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetEmotes
    path: ../TinyLife/Actions/Emote.cs
    startLine: 94
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a set of all of the emotes in the given combined category flag\n"
  example: []
  syntax:
    content: public static IEnumerable<Emote> GetEmotes(EmoteCategory possibleCategories)
    parameters:
    - id: possibleCategories
      type: TinyLife.Actions.EmoteCategory
      description: The categories
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Emote}
      description: A set of all emotes that match the categories
    content.vb: Public Shared Function GetEmotes(possibleCategories As EmoteCategory) As IEnumerable(Of Emote)
  overload: TinyLife.Actions.Emote.GetEmotes*
- uid: TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  commentId: M:TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  id: Register(MLEM.Textures.TextureRegion,TinyLife.Actions.EmoteCategory)
  parent: TinyLife.Actions.Emote
  langs:
  - csharp
  - vb
  name: Register(TextureRegion, EmoteCategory)
  nameWithType: Emote.Register(TextureRegion, EmoteCategory)
  fullName: TinyLife.Actions.Emote.Register(MLEM.Textures.TextureRegion, TinyLife.Actions.EmoteCategory)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Emote.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/Actions/Emote.cs
    startLine: 103
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nRegisters a new <xref href=\"TinyLife.Actions.Emote\" data-throw-if-not-resolved=\"false\"></xref> with the given settings.\n"
  example: []
  syntax:
    content: public static Emote Register(TextureRegion texture, EmoteCategory categories)
    parameters:
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture that this emote should display.
    - id: categories
      type: TinyLife.Actions.EmoteCategory
      description: The categories that this emote should have. Can be a combined flag.
    return:
      type: TinyLife.Actions.Emote
    content.vb: Public Shared Function Register(texture As TextureRegion, categories As EmoteCategory) As Emote
  overload: TinyLife.Actions.Emote.Register*
references:
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.Emote.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Emote>(Emote)
  nameWithType: Extensions.JsonCopy<Emote>(Emote)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Emote>(TinyLife.Actions.Emote)
  nameWithType.vb: Extensions.JsonCopy(Of Emote)(Emote)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Emote)(TinyLife.Actions.Emote)
  name.vb: JsonCopy(Of Emote)(Emote)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Emote)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Actions.Emote
    name: Emote
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.Emote
    name: Emote
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.Emote)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Emote
    name: Emote
  - name: )
  - name: (
  - uid: TinyLife.Actions.Emote
    name: Emote
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.Actions.EmoteCategory
  commentId: T:TinyLife.Actions.EmoteCategory
  parent: TinyLife.Actions
  name: EmoteCategory
  nameWithType: EmoteCategory
  fullName: TinyLife.Actions.EmoteCategory
- uid: TinyLife.Actions.Emote.GetRandomEmote*
  commentId: Overload:TinyLife.Actions.Emote.GetRandomEmote
  name: GetRandomEmote
  nameWithType: Emote.GetRandomEmote
  fullName: TinyLife.Actions.Emote.GetRandomEmote
- uid: TinyLife.Actions.Emote
  commentId: T:TinyLife.Actions.Emote
  parent: TinyLife.Actions
  name: Emote
  nameWithType: Emote
  fullName: TinyLife.Actions.Emote
- uid: TinyLife.Actions.Emote.GetEmotes*
  commentId: Overload:TinyLife.Actions.Emote.GetEmotes
  name: GetEmotes
  nameWithType: Emote.GetEmotes
  fullName: TinyLife.Actions.Emote.GetEmotes
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Emote}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Emote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Emote>
  nameWithType: IEnumerable<Emote>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Emote>
  nameWithType.vb: IEnumerable(Of Emote)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Emote)
  name.vb: IEnumerable(Of Emote)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.Emote
    name: Emote
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Emote
    name: Emote
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Actions.Emote.Register*
  commentId: Overload:TinyLife.Actions.Emote.Register
  name: Register
  nameWithType: Emote.Register
  fullName: TinyLife.Actions.Emote.Register
