### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.InGameHint
  commentId: T:TinyLife.Uis.InGameHint
  id: InGameHint
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.InGameHint.#ctor(System.String,MLEM.Textures.TextureRegion,System.Func{System.Boolean})
  - TinyLife.Uis.InGameHint.ClothesIntentions
  - TinyLife.Uis.InGameHint.Condition
  - TinyLife.Uis.InGameHint.Display
  - TinyLife.Uis.InGameHint.HasBeenDisplayed
  - TinyLife.Uis.InGameHint.Hints
  - TinyLife.Uis.InGameHint.Icon
  - TinyLife.Uis.InGameHint.InteractionPages
  - TinyLife.Uis.InGameHint.Interactions
  - TinyLife.Uis.InGameHint.Introduction
  - TinyLife.Uis.InGameHint.Name
  - TinyLife.Uis.InGameHint.Outfits
  - TinyLife.Uis.InGameHint.OutOfTownActions
  - TinyLife.Uis.InGameHint.PersonalityTypes
  - TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  langs:
  - csharp
  - vb
  name: InGameHint
  nameWithType: InGameHint
  fullName: TinyLife.Uis.InGameHint
  type: Class
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InGameHint
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nAn in-game hint is a tutorial notification that can display with a given <xref href=\"TinyLife.Uis.InGameHint.Condition\" data-throw-if-not-resolved=\"false\"></xref>, or that can be caused to be displayed manually using <xref href=\"TinyLife.Uis.InGameHint.Display\" data-throw-if-not-resolved=\"false\"></xref>.\nEach in-game hint is only displayed once, unless the list of displayed hints is reset in the <xref href=\"TinyLife.Options\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(StaticJsonConverter<InGameHint>), new object[]{typeof(InGameHint), "PrivateHints"})]

      public class InGameHint
    content.vb: >-
      <JsonConverter(GetType(StaticJsonConverter(Of InGameHint)), New Object() {GetType(InGameHint), "PrivateHints"})>

      Public Class InGameHint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Uis.InGameHint.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Uis.InGameHint.Hints
  commentId: F:TinyLife.Uis.InGameHint.Hints
  id: Hints
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Hints
  nameWithType: InGameHint.Hints
  fullName: TinyLife.Uis.InGameHint.Hints
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Hints
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nThe registry for all <xref href=\"TinyLife.Uis.InGameHint\" data-throw-if-not-resolved=\"false\"></xref> values.\nUse <xref href=\"TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)\" data-throw-if-not-resolved=\"false\"></xref> to add to this list.\n"
  example: []
  syntax:
    content: public static readonly IDictionary<string, InGameHint> Hints
    return:
      type: System.Collections.Generic.IDictionary{System.String,TinyLife.Uis.InGameHint}
    content.vb: Public Shared ReadOnly Hints As IDictionary(Of String, InGameHint)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.Introduction
  commentId: F:TinyLife.Uis.InGameHint.Introduction
  id: Introduction
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Introduction
  nameWithType: InGameHint.Introduction
  fullName: TinyLife.Uis.InGameHint.Introduction
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Introduction
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint Introduction
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly Introduction As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.PersonalityTypes
  commentId: F:TinyLife.Uis.InGameHint.PersonalityTypes
  id: PersonalityTypes
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: PersonalityTypes
  nameWithType: InGameHint.PersonalityTypes
  fullName: TinyLife.Uis.InGameHint.PersonalityTypes
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PersonalityTypes
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint PersonalityTypes
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly PersonalityTypes As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.ClothesIntentions
  commentId: F:TinyLife.Uis.InGameHint.ClothesIntentions
  id: ClothesIntentions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: ClothesIntentions
  nameWithType: InGameHint.ClothesIntentions
  fullName: TinyLife.Uis.InGameHint.ClothesIntentions
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ClothesIntentions
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint ClothesIntentions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly ClothesIntentions As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.Interactions
  commentId: F:TinyLife.Uis.InGameHint.Interactions
  id: Interactions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Interactions
  nameWithType: InGameHint.Interactions
  fullName: TinyLife.Uis.InGameHint.Interactions
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Interactions
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint Interactions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly Interactions As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.Outfits
  commentId: F:TinyLife.Uis.InGameHint.Outfits
  id: Outfits
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Outfits
  nameWithType: InGameHint.Outfits
  fullName: TinyLife.Uis.InGameHint.Outfits
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Outfits
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint Outfits
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly Outfits As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.InteractionPages
  commentId: F:TinyLife.Uis.InGameHint.InteractionPages
  id: InteractionPages
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: InteractionPages
  nameWithType: InGameHint.InteractionPages
  fullName: TinyLife.Uis.InGameHint.InteractionPages
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InteractionPages
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint InteractionPages
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly InteractionPages As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.OutOfTownActions
  commentId: F:TinyLife.Uis.InGameHint.OutOfTownActions
  id: OutOfTownActions
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: OutOfTownActions
  nameWithType: InGameHint.OutOfTownActions
  fullName: TinyLife.Uis.InGameHint.OutOfTownActions
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OutOfTownActions
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  syntax:
    content: public static readonly InGameHint OutOfTownActions
    return:
      type: TinyLife.Uis.InGameHint
    content.vb: Public Shared ReadOnly OutOfTownActions As InGameHint
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.Name
  commentId: F:TinyLife.Uis.InGameHint.Name
  id: Name
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InGameHint.Name
  fullName: TinyLife.Uis.InGameHint.Name
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 64
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nThe name of this hint\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.Icon
  commentId: F:TinyLife.Uis.InGameHint.Icon
  id: Icon
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: InGameHint.Icon
  fullName: TinyLife.Uis.InGameHint.Icon
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Icon
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 68
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nThe icon of this hint.\n"
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.Condition
  commentId: F:TinyLife.Uis.InGameHint.Condition
  id: Condition
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: InGameHint.Condition
  fullName: TinyLife.Uis.InGameHint.Condition
  type: Field
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Condition
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nAn optional condition that causes this hint to be displayed\n"
  example: []
  syntax:
    content: public readonly Func<bool> Condition
    return:
      type: System.Func{System.Boolean}
    content.vb: Public ReadOnly Condition As Func(Of Boolean)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.HasBeenDisplayed
  commentId: P:TinyLife.Uis.InGameHint.HasBeenDisplayed
  id: HasBeenDisplayed
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: HasBeenDisplayed
  nameWithType: InGameHint.HasBeenDisplayed
  fullName: TinyLife.Uis.InGameHint.HasBeenDisplayed
  type: Property
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HasBeenDisplayed
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 76
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nA property that determines whether this hint has already been displayed\n"
  example: []
  syntax:
    content: public bool HasBeenDisplayed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasBeenDisplayed As Boolean
  overload: TinyLife.Uis.InGameHint.HasBeenDisplayed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Uis.InGameHint.#ctor(System.String,MLEM.Textures.TextureRegion,System.Func{System.Boolean})
  commentId: M:TinyLife.Uis.InGameHint.#ctor(System.String,MLEM.Textures.TextureRegion,System.Func{System.Boolean})
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,System.Func{System.Boolean})'
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: InGameHint(String, TextureRegion, Func<Boolean>)
  nameWithType: InGameHint.InGameHint(String, TextureRegion, Func<Boolean>)
  fullName: TinyLife.Uis.InGameHint.InGameHint(System.String, MLEM.Textures.TextureRegion, System.Func<System.Boolean>)
  type: Constructor
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 84
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nCreates a new hint with the given settings\n"
  example: []
  syntax:
    content: public InGameHint(string name, TextureRegion icon, Func<bool> condition = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the hint
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon of this hint
    - id: condition
      type: System.Func{System.Boolean}
      description: An optional condition to cause this hint to be displayed
    content.vb: Public Sub New(name As String, icon As TextureRegion, condition As Func(Of Boolean) = Nothing)
  overload: TinyLife.Uis.InGameHint.#ctor*
  nameWithType.vb: InGameHint.InGameHint(String, TextureRegion, Func(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Uis.InGameHint.InGameHint(System.String, MLEM.Textures.TextureRegion, System.Func(Of System.Boolean))
  name.vb: InGameHint(String, TextureRegion, Func(Of Boolean))
- uid: TinyLife.Uis.InGameHint.Display
  commentId: M:TinyLife.Uis.InGameHint.Display
  id: Display
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Display()
  nameWithType: InGameHint.Display()
  fullName: TinyLife.Uis.InGameHint.Display()
  type: Method
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Display
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 93
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nDisplays this hint as a <xref href=\"TinyLife.Uis.Notifications\" data-throw-if-not-resolved=\"false\"></xref> panel and adds it to the list of already displayed hints in the <xref href=\"TinyLife.Options\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void Display()
    content.vb: Public Sub Display
  overload: TinyLife.Uis.InGameHint.Display*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  commentId: M:TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  id: Register(TinyLife.Uis.InGameHint)
  parent: TinyLife.Uis.InGameHint
  langs:
  - csharp
  - vb
  name: Register(InGameHint)
  nameWithType: InGameHint.Register(InGameHint)
  fullName: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  type: Method
  source:
    remote:
      path: TinyLife/Uis/InGameHint.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/Uis/InGameHint.cs
    startLine: 119
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nRegisters the given hint to the <xref href=\"TinyLife.Uis.InGameHint.Hints\" data-throw-if-not-resolved=\"false\"></xref> registry\n"
  example: []
  syntax:
    content: public static InGameHint Register(InGameHint hint)
    parameters:
    - id: hint
      type: TinyLife.Uis.InGameHint
      description: The hint to register
    return:
      type: TinyLife.Uis.InGameHint
      description: The hint passed, for chaining
    content.vb: Public Shared Function Register(hint As InGameHint) As InGameHint
  overload: TinyLife.Uis.InGameHint.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.Uis.InGameHint.Condition
  commentId: F:TinyLife.Uis.InGameHint.Condition
  isExternal: true
- uid: TinyLife.Uis.InGameHint.Display
  commentId: M:TinyLife.Uis.InGameHint.Display
  isExternal: true
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  parent: TinyLife
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Uis.InGameHint.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<InGameHint>()
  nameWithType: Extensions.JsonCopy<InGameHint>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Uis.InGameHint>()
  nameWithType.vb: Extensions.JsonCopy(Of InGameHint)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Uis.InGameHint)()
  name.vb: JsonCopy(Of InGameHint)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<InGameHint>
    nameWithType: Extensions.JsonCopy<InGameHint>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Uis.InGameHint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of InGameHint)
    nameWithType: Extensions.JsonCopy(Of InGameHint)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Uis.InGameHint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Uis.InGameHint
  commentId: T:TinyLife.Uis.InGameHint
  parent: TinyLife.Uis
  name: InGameHint
  nameWithType: InGameHint
  fullName: TinyLife.Uis.InGameHint
- uid: TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  commentId: M:TinyLife.Uis.InGameHint.Register(TinyLife.Uis.InGameHint)
  isExternal: true
- uid: System.Collections.Generic.IDictionary{System.String,TinyLife.Uis.InGameHint}
  commentId: T:System.Collections.Generic.IDictionary{System.String,TinyLife.Uis.InGameHint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, InGameHint>
  nameWithType: IDictionary<String, InGameHint>
  fullName: System.Collections.Generic.IDictionary<System.String, TinyLife.Uis.InGameHint>
  nameWithType.vb: IDictionary(Of String, InGameHint)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, TinyLife.Uis.InGameHint)
  name.vb: IDictionary(Of String, InGameHint)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    nameWithType: InGameHint
    fullName: TinyLife.Uis.InGameHint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Uis.InGameHint
    name: InGameHint
    nameWithType: InGameHint
    fullName: TinyLife.Uis.InGameHint
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of System.Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Uis.InGameHint.HasBeenDisplayed*
  commentId: Overload:TinyLife.Uis.InGameHint.HasBeenDisplayed
  name: HasBeenDisplayed
  nameWithType: InGameHint.HasBeenDisplayed
  fullName: TinyLife.Uis.InGameHint.HasBeenDisplayed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Uis.InGameHint.#ctor*
  commentId: Overload:TinyLife.Uis.InGameHint.#ctor
  name: InGameHint
  nameWithType: InGameHint.InGameHint
  fullName: TinyLife.Uis.InGameHint.InGameHint
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
- uid: TinyLife.Uis.InGameHint.Display*
  commentId: Overload:TinyLife.Uis.InGameHint.Display
  name: Display
  nameWithType: InGameHint.Display
  fullName: TinyLife.Uis.InGameHint.Display
- uid: TinyLife.Uis.InGameHint.Hints
  commentId: F:TinyLife.Uis.InGameHint.Hints
  isExternal: true
- uid: TinyLife.Uis.InGameHint.Register*
  commentId: Overload:TinyLife.Uis.InGameHint.Register
  name: Register
  nameWithType: InGameHint.Register
  fullName: TinyLife.Uis.InGameHint.Register
