### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ActionVariety
  commentId: T:TinyLife.Actions.ActionVariety
  id: ActionVariety
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ActionVariety.#ctor(System.Object)
  - TinyLife.Actions.ActionVariety.#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})
  - TinyLife.Actions.ActionVariety.#ctor(System.String,System.Object[])
  - TinyLife.Actions.ActionVariety.AddedConstructorArguments
  - TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionVariety.CanExecute
  - TinyLife.Actions.ActionVariety.CustomLayout
  - TinyLife.Actions.ActionVariety.Description
  - TinyLife.Actions.ActionVariety.DisplayName
  - TinyLife.Actions.ActionVariety.FreePeople(TinyLife.Actions.ActionInfo,System.Boolean,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult})
  - TinyLife.Actions.ActionVariety.GetDisplayName
  - TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  - TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  - TinyLife.Actions.ActionVariety.Name
  - TinyLife.Actions.ActionVariety.PassivePriority
  - TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  - TinyLife.Actions.ActionVariety.StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  langs:
  - csharp
  - vb
  name: ActionVariety
  nameWithType: ActionVariety
  fullName: TinyLife.Actions.ActionVariety
  type: Class
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionVariety
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action variety is a modification to a <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> that represents a slightly changed version of the generic action type.\nAction varieties are used, for example, by <xref href=\"TinyLife.Actions.ActionType.PrepareFood\" data-throw-if-not-resolved=\"false\"></xref> to determine the kind of food that should be prepared.\n"
  example: []
  syntax:
    content: 'public class ActionVariety : GenericDataHolder, IGenericDataHolder'
    content.vb: Public Class ActionVariety Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.ActionVariety.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.ActionVariety.Name
  commentId: F:TinyLife.Actions.ActionVariety.Name
  id: Name
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ActionVariety.Name
  fullName: TinyLife.Actions.ActionVariety.Name
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe name of this action variety\n"
  example: []
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
- uid: TinyLife.Actions.ActionVariety.AddedConstructorArguments
  commentId: F:TinyLife.Actions.ActionVariety.AddedConstructorArguments
  id: AddedConstructorArguments
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: AddedConstructorArguments
  nameWithType: ActionVariety.AddedConstructorArguments
  fullName: TinyLife.Actions.ActionVariety.AddedConstructorArguments
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AddedConstructorArguments
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA set of additional arguments passed to the <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> contructor by this variety.\nThis is used in <xref href=\"TinyLife.Actions.ActionType.Construct%60%601(TinyLife.Actions.ActionInfo%2cTinyLife.Actions.ActionVariety)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Func<ActionType, ActionInfo, IEnumerable<object>> AddedConstructorArguments
    return:
      type: System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
    content.vb: Public AddedConstructorArguments As Func(Of ActionType, ActionInfo, IEnumerable(Of Object))
- uid: TinyLife.Actions.ActionVariety.PassivePriority
  commentId: F:TinyLife.Actions.ActionVariety.PassivePriority
  id: PassivePriority
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: PassivePriority
  nameWithType: ActionVariety.PassivePriority
  fullName: TinyLife.Actions.ActionVariety.PassivePriority
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PassivePriority
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that returns the passive priority of this action variety.\nIf this function is null (which it is by default), <xref href=\"TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)\" data-throw-if-not-resolved=\"false\"></xref> will return 1.\nIf this function returns 0, this variety will not be chosen by the AI.\nThis is an extension of <xref href=\"TinyLife.Actions.ActionType.AiSettings.PassivePriority\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Func<Person, float> PassivePriority
    return:
      type: System.Func{TinyLife.Objects.Person,System.Single}
    content.vb: Public PassivePriority As Func(Of Person, Single)
- uid: TinyLife.Actions.ActionVariety.CanExecute
  commentId: F:TinyLife.Actions.ActionVariety.CanExecute
  id: CanExecute
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: CanExecute
  nameWithType: ActionVariety.CanExecute
  fullName: TinyLife.Actions.ActionVariety.CanExecute
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanExecute
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that returns whether or not this action variety can currently be chosen.\nThis is an extension of <xref href=\"TinyLife.Actions.ActionType.TypeSettings.CanExecute\" data-throw-if-not-resolved=\"false\"></xref>.\nTo query this delegate effectively, use <xref href=\"TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ActionType.CanExecuteDelegate CanExecute
    return:
      type: TinyLife.Actions.ActionType.CanExecuteDelegate
    content.vb: Public CanExecute As ActionType.CanExecuteDelegate
- uid: TinyLife.Actions.ActionVariety.DisplayName
  commentId: F:TinyLife.Actions.ActionVariety.DisplayName
  id: DisplayName
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ActionVariety.DisplayName
  fullName: TinyLife.Actions.ActionVariety.DisplayName
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DisplayName
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 44
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that is called to describe this action variety.\nThis is used in the menu that pops up when the underlying <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> is picked.\n"
  example: []
  syntax:
    content: public Func<string> DisplayName
    return:
      type: System.Func{System.String}
    content.vb: Public DisplayName As Func(Of String)
- uid: TinyLife.Actions.ActionVariety.Description
  commentId: F:TinyLife.Actions.ActionVariety.Description
  id: Description
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ActionVariety.Description
  fullName: TinyLife.Actions.ActionVariety.Description
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Description
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 49
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that is called to describe this action variety in more detail.\nThis is used in the menu that pops up when the underlying <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> is picked.\n"
  example: []
  syntax:
    content: public Func<string> Description
    return:
      type: System.Func{System.String}
    content.vb: Public Description As Func(Of String)
- uid: TinyLife.Actions.ActionVariety.CustomLayout
  commentId: F:TinyLife.Actions.ActionVariety.CustomLayout
  id: CustomLayout
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: CustomLayout
  nameWithType: ActionVariety.CustomLayout
  fullName: TinyLife.Actions.ActionVariety.CustomLayout
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CustomLayout
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 55
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action that is invoked when this action variety is added to a play mode ui.\nIf this action is set, the <xref href=\"MLEM.Ui.Elements.Button\" data-throw-if-not-resolved=\"false\"></xref> that is passed can be modified to look different based on this variety.\nPredefined custom layouts such as <xref href=\"TinyLife.Actions.ActionVariety.ImageLayout(System.Single%2cMLEM.Ui.Elements.Element.DrawCallback%2cMLEM.Misc.Padding)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)\" data-throw-if-not-resolved=\"false\"></xref> can be found statically in this class.\n"
  example: []
  syntax:
    content: public Action<Button> CustomLayout
    return:
      type: System.Action{MLEM.Ui.Elements.Button}
    content.vb: Public CustomLayout As Action(Of Button)
- uid: TinyLife.Actions.ActionVariety.#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})
  commentId: M:TinyLife.Actions.ActionVariety.#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})
  id: '#ctor(System.String,System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}})'
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: ActionVariety(string, Func<ActionType, ActionInfo, IEnumerable<object>>)
  nameWithType: ActionVariety.ActionVariety(string, Func<ActionType, ActionInfo, IEnumerable<object>>)
  fullName: TinyLife.Actions.ActionVariety.ActionVariety(string, System.Func<TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable<object>>)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new action variety with the given settings.\n"
  example: []
  syntax:
    content: public ActionVariety(string name, Func<ActionType, ActionInfo, IEnumerable<object>> addedConstructorArguments)
    parameters:
    - id: name
      type: System.String
      description: The name of this action variety.
    - id: addedConstructorArguments
      type: System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
      description: A set of added constructor arugments that are passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, addedConstructorArguments As Func(Of ActionType, ActionInfo, IEnumerable(Of Object)))
  overload: TinyLife.Actions.ActionVariety.#ctor*
  nameWithType.vb: ActionVariety.New(String, Func(Of ActionType, ActionInfo, IEnumerable(Of Object)))
  fullName.vb: TinyLife.Actions.ActionVariety.New(String, System.Func(Of TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable(Of Object)))
  name.vb: New(String, Func(Of ActionType, ActionInfo, IEnumerable(Of Object)))
- uid: TinyLife.Actions.ActionVariety.#ctor(System.String,System.Object[])
  commentId: M:TinyLife.Actions.ActionVariety.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: ActionVariety(string, params object[])
  nameWithType: ActionVariety.ActionVariety(string, params object[])
  fullName: TinyLife.Actions.ActionVariety.ActionVariety(string, params object[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new action variety with the given settings.\n"
  example: []
  syntax:
    content: public ActionVariety(string name, params object[] addedConstructorArguments)
    parameters:
    - id: name
      type: System.String
      description: The name of this action variety.
    - id: addedConstructorArguments
      type: System.Object[]
      description: A set of added constructor arugments that are passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, ParamArray addedConstructorArguments As Object())
  overload: TinyLife.Actions.ActionVariety.#ctor*
  nameWithType.vb: ActionVariety.New(String, ParamArray Object())
  fullName.vb: TinyLife.Actions.ActionVariety.New(String, ParamArray Object())
  name.vb: New(String, ParamArray Object())
- uid: TinyLife.Actions.ActionVariety.#ctor(System.Object)
  commentId: M:TinyLife.Actions.ActionVariety.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: ActionVariety(object)
  nameWithType: ActionVariety.ActionVariety(object)
  fullName: TinyLife.Actions.ActionVariety.ActionVariety(object)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 78
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new action variety with the given settings.\n"
  example: []
  syntax:
    content: public ActionVariety(object addedConstructorArgument)
    parameters:
    - id: addedConstructorArgument
      type: System.Object
      description: An added constructor arugment that is passed to the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(addedConstructorArgument As Object)
  overload: TinyLife.Actions.ActionVariety.#ctor*
  nameWithType.vb: ActionVariety.New(Object)
  fullName.vb: TinyLife.Actions.ActionVariety.New(Object)
  name.vb: New(Object)
- uid: TinyLife.Actions.ActionVariety.GetDisplayName
  commentId: M:TinyLife.Actions.ActionVariety.GetDisplayName
  id: GetDisplayName
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: GetDisplayName()
  nameWithType: ActionVariety.GetDisplayName()
  fullName: TinyLife.Actions.ActionVariety.GetDisplayName()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetDisplayName
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 84
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the display name of this action varietiy, which is either the value returned by <xref href=\"TinyLife.Actions.ActionVariety.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> or a default localized display name\n"
  example: []
  syntax:
    content: public string GetDisplayName()
    return:
      type: System.String
      description: This action variety&apos;s display name
    content.vb: Public Function GetDisplayName() As String
  overload: TinyLife.Actions.ActionVariety.GetDisplayName*
- uid: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: CanBeExecuted(ActionInfo, bool)
  nameWithType: ActionVariety.CanBeExecuted(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanBeExecuted
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns whether this action variety can be executed using the provided <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>.\nThis returns the result of <xref href=\"TinyLife.Actions.ActionVariety.CanExecute\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> if it is null.\n"
  example: []
  syntax:
    content: public CanExecuteResult CanBeExecuted(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: Whether this variety can currently be executed
    content.vb: Public Function CanBeExecuted(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionVariety.CanBeExecuted*
  nameWithType.vb: ActionVariety.CanBeExecuted(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanBeExecuted(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  id: GetPassivePriority(TinyLife.Objects.Person)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: GetPassivePriority(Person)
  nameWithType: ActionVariety.GetPassivePriority(Person)
  fullName: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetPassivePriority
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 111
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the passive priority of this action variety, which is based on <xref href=\"TinyLife.Actions.ActionVariety.PassivePriority\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public float GetPassivePriority(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person for whom to return the passive priority
    return:
      type: System.Single
      description: The passive priority of this action variety
    content.vb: Public Function GetPassivePriority(person As Person) As Single
  overload: TinyLife.Actions.ActionVariety.GetPassivePriority*
- uid: TinyLife.Actions.ActionVariety.FreePeople(TinyLife.Actions.ActionInfo,System.Boolean,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult})
  commentId: M:TinyLife.Actions.ActionVariety.FreePeople(TinyLife.Actions.ActionInfo,System.Boolean,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult})
  id: FreePeople(TinyLife.Actions.ActionInfo,System.Boolean,System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult})
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: FreePeople(ActionInfo, bool, Func<(ActionInfo Info, Person Other, bool Automatic), CanExecuteResult>)
  nameWithType: ActionVariety.FreePeople(ActionInfo, bool, Func<(ActionInfo Info, Person Other, bool Automatic), CanExecuteResult>)
  fullName: TinyLife.Actions.ActionVariety.FreePeople(TinyLife.Actions.ActionInfo, bool, System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.Person Other, bool Automatic), TinyLife.Actions.CanExecuteResult>)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FreePeople
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 125
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method that returns a set of <xref href=\"TinyLife.Actions.ActionVariety\" data-throw-if-not-resolved=\"false\"></xref> instances that represents a set of people that are currently around and able to be interacted with.\nEach action variety contains passes the <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> instance in question as an <xref href=\"TinyLife.Actions.ActionVariety.AddedConstructorArguments\" data-throw-if-not-resolved=\"false\"></xref> rather than passing itself.\nThis method is used for actions like <xref href=\"TinyLife.Actions.ActionType.AskToTaste\" data-throw-if-not-resolved=\"false\"></xref>, where a person can be selected to interact with from a variety menu.\n"
  example: []
  syntax:
    content: public static IEnumerable<ActionVariety> FreePeople(ActionInfo info, bool automatic, Func<(ActionInfo Info, Person Other, bool Automatic), CanExecuteResult> canExecute = null)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: automatic
      type: System.Boolean
      description: Whether the action variety was selected automatically.
    - id: canExecute
      type: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult}
      description: A <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-esque function that determines whether a given person should be included.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
      description: A set of action varieties that represents the free people around.
    content.vb: Public Shared Function FreePeople(info As ActionInfo, automatic As Boolean, canExecute As Func(Of (Info As ActionInfo, Other As Person, Automatic As Boolean), CanExecuteResult) = Nothing) As IEnumerable(Of ActionVariety)
  overload: TinyLife.Actions.ActionVariety.FreePeople*
  nameWithType.vb: ActionVariety.FreePeople(ActionInfo, Boolean, Func(Of (Info As ActionInfo, Other As Person, Automatic As Boolean), CanExecuteResult))
  fullName.vb: TinyLife.Actions.ActionVariety.FreePeople(TinyLife.Actions.ActionInfo, Boolean, System.Func(Of (Info As TinyLife.Actions.ActionInfo, Other As TinyLife.Objects.Person, Automatic As Boolean), TinyLife.Actions.CanExecuteResult))
  name.vb: FreePeople(ActionInfo, Boolean, Func(Of (Info As ActionInfo, Other As Person, Automatic As Boolean), CanExecuteResult))
- uid: TinyLife.Actions.ActionVariety.StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  commentId: M:TinyLife.Actions.ActionVariety.StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  id: StoredFurniture(System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture},System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult})
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: StoredFurniture(IEnumerable<Furniture>, Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>)
  nameWithType: ActionVariety.StoredFurniture(IEnumerable<Furniture>, Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>)
  fullName: TinyLife.Actions.ActionVariety.StoredFurniture(System.Collections.Generic.IEnumerable<TinyLife.Objects.Furniture>, System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.Furniture Furniture, bool Automatic), TinyLife.Actions.CanExecuteResult>)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StoredFurniture
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 143
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method that returns a set of <xref href=\"TinyLife.Actions.ActionVariety\" data-throw-if-not-resolved=\"false\"></xref> instances that represents a set of furniture that is currently stored in an object.\nEach action variety contains passes the <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> instance in question as an <xref href=\"TinyLife.Actions.ActionVariety.AddedConstructorArguments\" data-throw-if-not-resolved=\"false\"></xref> rather than passing itself.\n"
  example: []
  syntax:
    content: public static IEnumerable<ActionVariety> StoredFurniture(IEnumerable<Furniture> furniture, Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult> canExecute = null)
    parameters:
    - id: furniture
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
      description: The furniture stored. If this is null, <xref href="System.Linq.Enumerable.Empty%60%601" data-throw-if-not-resolved="false"></xref> is returned.
    - id: canExecute
      type: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult}
      description: A <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref>-esque function that determines whether a furniture item should be included.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
      description: A set of action varieties that represents the furniture stored in an object.
    content.vb: Public Shared Function StoredFurniture(furniture As IEnumerable(Of Furniture), canExecute As Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult) = Nothing) As IEnumerable(Of ActionVariety)
  overload: TinyLife.Actions.ActionVariety.StoredFurniture*
  nameWithType.vb: ActionVariety.StoredFurniture(IEnumerable(Of Furniture), Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult))
  fullName.vb: TinyLife.Actions.ActionVariety.StoredFurniture(System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Furniture), System.Func(Of (Info As TinyLife.Actions.ActionInfo, Furniture As TinyLife.Objects.Furniture, Automatic As Boolean), TinyLife.Actions.CanExecuteResult))
  name.vb: StoredFurniture(IEnumerable(Of Furniture), Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult))
- uid: TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  commentId: M:TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  id: ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: ImageLayout(float, DrawCallback, Padding)
  nameWithType: ActionVariety.ImageLayout(float, Element.DrawCallback, Padding)
  fullName: TinyLife.Actions.ActionVariety.ImageLayout(float, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Misc.Padding)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ImageLayout
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 164
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionVariety.CustomLayout\" data-throw-if-not-resolved=\"false\"></xref> that creates a layout with large, rectangular variety buttons that can draw something on themselves.\nThis layout is used by actions like <xref href=\"TinyLife.Actions.ActionType.GetIngredientsSingle\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.ChangeOutfit\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Action<Button> ImageLayout(float height, Element.DrawCallback draw, Padding padding = default)
    parameters:
    - id: height
      type: System.Single
      description: The height that each button should have
    - id: draw
      type: MLEM.Ui.Elements.Element.DrawCallback
      description: A <xref href="MLEM.Ui.Elements.Element.DrawCallback" data-throw-if-not-resolved="false"></xref> that can be used to draw onto the button
    - id: padding
      type: MLEM.Misc.Padding
      description: The padding that the group that the image is displayed on should have, defaults to no padding
    return:
      type: System.Action{MLEM.Ui.Elements.Button}
      description: An action that can be fed into <xref href="TinyLife.Actions.ActionVariety.CustomLayout" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function ImageLayout(height As Single, draw As Element.DrawCallback, padding As Padding = Nothing) As Action(Of Button)
  overload: TinyLife.Actions.ActionVariety.ImageLayout*
  nameWithType.vb: ActionVariety.ImageLayout(Single, Element.DrawCallback, Padding)
  fullName.vb: TinyLife.Actions.ActionVariety.ImageLayout(Single, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Misc.Padding)
  name.vb: ImageLayout(Single, DrawCallback, Padding)
- uid: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  id: PortraitLayout(TinyLife.Objects.Person)
  parent: TinyLife.Actions.ActionVariety
  langs:
  - csharp
  - vb
  name: PortraitLayout(Person)
  nameWithType: ActionVariety.PortraitLayout(Person)
  fullName: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionVariety.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PortraitLayout
    path: ../TinyLife/Actions/ActionVariety.cs
    startLine: 183
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionVariety.CustomLayout\" data-throw-if-not-resolved=\"false\"></xref> that creates a layout that includes the <xref href=\"TinyLife.Objects.Person.Portrait\" data-throw-if-not-resolved=\"false\"></xref> of the given <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> in the center bottom.\n"
  example: []
  syntax:
    content: public static Action<Button> PortraitLayout(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person to create the portrait layout for
    return:
      type: System.Action{MLEM.Ui.Elements.Button}
      description: An action that can be fed into <xref href="TinyLife.Actions.ActionVariety.CustomLayout" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function PortraitLayout(person As Person) As Action(Of Button)
  overload: TinyLife.Actions.ActionVariety.PortraitLayout*
references:
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionType.PrepareFood
  commentId: F:TinyLife.Actions.ActionType.PrepareFood
  name: PrepareFood
  nameWithType: ActionType.PrepareFood
  fullName: TinyLife.Actions.ActionType.PrepareFood
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: GenericDataHolder.SetData(string, object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(string, object)
  nameWithType.vb: GenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionVariety.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ActionVariety>(ActionVariety)
  nameWithType: Extensions.JsonCopy<ActionVariety>(ActionVariety)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionVariety>(TinyLife.Actions.ActionVariety)
  nameWithType.vb: Extensions.JsonCopy(Of ActionVariety)(ActionVariety)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionVariety)(TinyLife.Actions.ActionVariety)
  name.vb: JsonCopy(Of ActionVariety)(ActionVariety)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionVariety)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionVariety)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
  commentId: M:TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
  name: Construct<T>(ActionInfo, ActionVariety)
  nameWithType: ActionType.Construct<T>(ActionInfo, ActionVariety)
  fullName: TinyLife.Actions.ActionType.Construct<T>(TinyLife.Actions.ActionInfo, TinyLife.Actions.ActionVariety)
  nameWithType.vb: ActionType.Construct(Of T)(ActionInfo, ActionVariety)
  fullName.vb: TinyLife.Actions.ActionType.Construct(Of T)(TinyLife.Actions.ActionInfo, TinyLife.Actions.ActionVariety)
  name.vb: Construct(Of T)(ActionInfo, ActionVariety)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
    name: Construct
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
    name: Construct
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
- uid: System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
  commentId: T:System.Func{TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Collections.Generic.IEnumerable{System.Object}}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<ActionType, ActionInfo, IEnumerable<object>>
  nameWithType: Func<ActionType, ActionInfo, IEnumerable<object>>
  fullName: System.Func<TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable<object>>
  nameWithType.vb: Func(Of ActionType, ActionInfo, IEnumerable(Of Object))
  fullName.vb: System.Func(Of TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Collections.Generic.IEnumerable(Of Object))
  name.vb: Func(Of ActionType, ActionInfo, IEnumerable(Of Object))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  name: GetPassivePriority(Person)
  nameWithType: ActionVariety.GetPassivePriority(Person)
  fullName: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
    name: GetPassivePriority
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionVariety.GetPassivePriority(TinyLife.Objects.Person)
    name: GetPassivePriority
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  commentId: F:TinyLife.Actions.ActionType.AiSettings.PassivePriority
  name: PassivePriority
  nameWithType: ActionType.AiSettings.PassivePriority
  fullName: TinyLife.Actions.ActionType.AiSettings.PassivePriority
- uid: System.Func{TinyLife.Objects.Person,System.Single}
  commentId: T:System.Func{TinyLife.Objects.Person,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Person, float>
  nameWithType: Func<Person, float>
  fullName: System.Func<TinyLife.Objects.Person, float>
  nameWithType.vb: Func(Of Person, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.Person, Single)
  name.vb: Func(Of Person, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ActionType.TypeSettings.CanExecute
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.CanExecute
  name: CanExecute
  nameWithType: ActionType.TypeSettings.CanExecute
  fullName: TinyLife.Actions.ActionType.TypeSettings.CanExecute
- uid: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: CanBeExecuted(ActionInfo, bool)
  nameWithType: ActionVariety.CanBeExecuted(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: ActionVariety.CanBeExecuted(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanBeExecuted(ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanBeExecuted
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionVariety.CanBeExecuted(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanBeExecuted
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<string>
  nameWithType: Func<string>
  fullName: System.Func<string>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Ui.Elements.Button
  commentId: T:MLEM.Ui.Elements.Button
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: MLEM.Ui.Elements.Button
- uid: TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  commentId: M:TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: ImageLayout(float, DrawCallback, Padding)
  nameWithType: ActionVariety.ImageLayout(float, Element.DrawCallback, Padding)
  fullName: TinyLife.Actions.ActionVariety.ImageLayout(float, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Misc.Padding)
  nameWithType.vb: ActionVariety.ImageLayout(Single, Element.DrawCallback, Padding)
  fullName.vb: TinyLife.Actions.ActionVariety.ImageLayout(Single, MLEM.Ui.Elements.Element.DrawCallback, MLEM.Misc.Padding)
  name.vb: ImageLayout(Single, DrawCallback, Padding)
  spec.csharp:
  - uid: TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
    name: ImageLayout
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Padding
    name: Padding
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionVariety.ImageLayout(System.Single,MLEM.Ui.Elements.Element.DrawCallback,MLEM.Misc.Padding)
    name: ImageLayout
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Padding
    name: Padding
    isExternal: true
  - name: )
- uid: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  name: PortraitLayout(Person)
  nameWithType: ActionVariety.PortraitLayout(Person)
  fullName: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
    name: PortraitLayout
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionVariety.PortraitLayout(TinyLife.Objects.Person)
    name: PortraitLayout
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: System.Action{MLEM.Ui.Elements.Button}
  commentId: T:System.Action{MLEM.Ui.Elements.Button}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Button>
  nameWithType: Action<Button>
  fullName: System.Action<MLEM.Ui.Elements.Button>
  nameWithType.vb: Action(Of Button)
  fullName.vb: System.Action(Of MLEM.Ui.Elements.Button)
  name.vb: Action(Of Button)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MLEM.Ui.Elements.Button
    name: Button
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Button
    name: Button
    isExternal: true
  - name: )
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Actions.ActionVariety.#ctor*
  commentId: Overload:TinyLife.Actions.ActionVariety.#ctor
  name: ActionVariety
  nameWithType: ActionVariety.ActionVariety
  fullName: TinyLife.Actions.ActionVariety.ActionVariety
  nameWithType.vb: ActionVariety.New
  fullName.vb: TinyLife.Actions.ActionVariety.New
  name.vb: New
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionVariety.DisplayName
  commentId: F:TinyLife.Actions.ActionVariety.DisplayName
  name: DisplayName
  nameWithType: ActionVariety.DisplayName
  fullName: TinyLife.Actions.ActionVariety.DisplayName
- uid: TinyLife.Actions.ActionVariety.GetDisplayName*
  commentId: Overload:TinyLife.Actions.ActionVariety.GetDisplayName
  name: GetDisplayName
  nameWithType: ActionVariety.GetDisplayName
  fullName: TinyLife.Actions.ActionVariety.GetDisplayName
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.ActionVariety.CanExecute
  commentId: F:TinyLife.Actions.ActionVariety.CanExecute
  name: CanExecute
  nameWithType: ActionVariety.CanExecute
  fullName: TinyLife.Actions.ActionVariety.CanExecute
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
- uid: TinyLife.Actions.ActionVariety.CanBeExecuted*
  commentId: Overload:TinyLife.Actions.ActionVariety.CanBeExecuted
  name: CanBeExecuted
  nameWithType: ActionVariety.CanBeExecuted
  fullName: TinyLife.Actions.ActionVariety.CanBeExecuted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Actions.ActionVariety.PassivePriority
  commentId: F:TinyLife.Actions.ActionVariety.PassivePriority
  name: PassivePriority
  nameWithType: ActionVariety.PassivePriority
  fullName: TinyLife.Actions.ActionVariety.PassivePriority
- uid: TinyLife.Actions.ActionVariety.GetPassivePriority*
  commentId: Overload:TinyLife.Actions.ActionVariety.GetPassivePriority
  name: GetPassivePriority
  nameWithType: ActionVariety.GetPassivePriority
  fullName: TinyLife.Actions.ActionVariety.GetPassivePriority
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.Actions.ActionVariety
  commentId: T:TinyLife.Actions.ActionVariety
  parent: TinyLife.Actions
  name: ActionVariety
  nameWithType: ActionVariety
  fullName: TinyLife.Actions.ActionVariety
- uid: TinyLife.Actions.ActionVariety.AddedConstructorArguments
  commentId: F:TinyLife.Actions.ActionVariety.AddedConstructorArguments
  name: AddedConstructorArguments
  nameWithType: ActionVariety.AddedConstructorArguments
  fullName: TinyLife.Actions.ActionVariety.AddedConstructorArguments
- uid: TinyLife.Actions.ActionType.AskToTaste
  commentId: F:TinyLife.Actions.ActionType.AskToTaste
  name: AskToTaste
  nameWithType: ActionType.AskToTaste
  fullName: TinyLife.Actions.ActionType.AskToTaste
- uid: TinyLife.Actions.ActionVariety.FreePeople*
  commentId: Overload:TinyLife.Actions.ActionVariety.FreePeople
  name: FreePeople
  nameWithType: ActionVariety.FreePeople
  fullName: TinyLife.Actions.ActionVariety.FreePeople
- uid: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(ActionInfo Info, Person Other, bool Automatic), CanExecuteResult>
  nameWithType: Func<(ActionInfo Info, Person Other, bool Automatic), CanExecuteResult>
  fullName: System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.Person Other, bool Automatic), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Info As ActionInfo, Other As Person, Automatic As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Info As TinyLife.Actions.ActionInfo, Other As TinyLife.Objects.Person, Automatic As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Info As ActionInfo, Other As Person, Automatic As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.person,system.boolean-.info
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.person,system.boolean-.other
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.person,system.boolean-.automatic
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.person,system.boolean-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean}.Other
    name: Other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.person,system.boolean-.other
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.person,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: )
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionVariety>
  nameWithType: IEnumerable<ActionVariety>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionVariety>
  nameWithType.vb: IEnumerable(Of ActionVariety)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionVariety)
  name.vb: IEnumerable(Of ActionVariety)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: System.Linq.Enumerable.Empty``1
  commentId: M:System.Linq.Enumerable.Empty``1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.enumerable.empty
  name: Empty<TResult>()
  nameWithType: Enumerable.Empty<TResult>()
  fullName: System.Linq.Enumerable.Empty<TResult>()
  nameWithType.vb: Enumerable.Empty(Of TResult)()
  fullName.vb: System.Linq.Enumerable.Empty(Of TResult)()
  name.vb: Empty(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Empty``1
    name: Empty
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.enumerable.empty
  - name: <
  - name: TResult
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: System.Linq.Enumerable.Empty``1
    name: Empty
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.enumerable.empty
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionVariety.StoredFurniture*
  commentId: Overload:TinyLife.Actions.ActionVariety.StoredFurniture
  name: StoredFurniture
  nameWithType: ActionVariety.StoredFurniture
  fullName: TinyLife.Actions.ActionVariety.StoredFurniture
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Furniture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Furniture>
  nameWithType: IEnumerable<Furniture>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Furniture>
  nameWithType.vb: IEnumerable(Of Furniture)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Furniture)
  name.vb: IEnumerable(Of Furniture)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
- uid: System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean},TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>
  nameWithType: Func<(ActionInfo Info, Furniture Furniture, bool Automatic), CanExecuteResult>
  fullName: System.Func<(TinyLife.Actions.ActionInfo Info, TinyLife.Objects.Furniture Furniture, bool Automatic), TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult)
  fullName.vb: System.Func(Of (Info As TinyLife.Actions.ActionInfo, Furniture As TinyLife.Objects.Furniture, Automatic As Boolean), TinyLife.Actions.CanExecuteResult)
  name.vb: Func(Of (Info As ActionInfo, Furniture As Furniture, Automatic As Boolean), CanExecuteResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.info
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Furniture
    name: Furniture
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.automatic
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Info
    name: Info
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.info
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Furniture
    name: Furniture
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.furniture
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Actions.ActionInfo,TinyLife.Objects.Furniture,System.Boolean}.Automatic
    name: Automatic
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.actions.actioninfo,tinylife.objects.furniture,system.boolean-.automatic
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: )
- uid: TinyLife.Actions.ActionVariety.CustomLayout
  commentId: F:TinyLife.Actions.ActionVariety.CustomLayout
  name: CustomLayout
  nameWithType: ActionVariety.CustomLayout
  fullName: TinyLife.Actions.ActionVariety.CustomLayout
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  name: GetIngredientsSingle
  nameWithType: ActionType.GetIngredientsSingle
  fullName: TinyLife.Actions.ActionType.GetIngredientsSingle
- uid: TinyLife.Actions.ActionType.ChangeOutfit
  commentId: F:TinyLife.Actions.ActionType.ChangeOutfit
  name: ChangeOutfit
  nameWithType: ActionType.ChangeOutfit
  fullName: TinyLife.Actions.ActionType.ChangeOutfit
- uid: MLEM.Ui.Elements.Element.DrawCallback
  commentId: T:MLEM.Ui.Elements.Element.DrawCallback
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element.DrawCallback
  nameWithType: Element.DrawCallback
  fullName: MLEM.Ui.Elements.Element.DrawCallback
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  spec.vb:
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
- uid: TinyLife.Actions.ActionVariety.ImageLayout*
  commentId: Overload:TinyLife.Actions.ActionVariety.ImageLayout
  name: ImageLayout
  nameWithType: ActionVariety.ImageLayout
  fullName: TinyLife.Actions.ActionVariety.ImageLayout
- uid: MLEM.Misc.Padding
  commentId: T:MLEM.Misc.Padding
  parent: MLEM.Misc
  isExternal: true
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Misc.Padding
- uid: TinyLife.Objects.Person.Portrait
  commentId: P:TinyLife.Objects.Person.Portrait
  name: Portrait
  nameWithType: Person.Portrait
  fullName: TinyLife.Objects.Person.Portrait
- uid: TinyLife.Actions.ActionVariety.PortraitLayout*
  commentId: Overload:TinyLife.Actions.ActionVariety.PortraitLayout
  name: PortraitLayout
  nameWithType: ActionVariety.PortraitLayout
  fullName: TinyLife.Actions.ActionVariety.PortraitLayout
