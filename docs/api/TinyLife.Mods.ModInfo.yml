### YamlMime:ManagedReference
items:
- uid: TinyLife.Mods.ModInfo
  commentId: T:TinyLife.Mods.ModInfo
  id: ModInfo
  parent: TinyLife.Mods
  children:
  - TinyLife.Mods.ModInfo.Content
  - TinyLife.Mods.ModInfo.Dispose
  - TinyLife.Mods.ModInfo.Finalize
  - TinyLife.Mods.ModInfo.Harmony
  - TinyLife.Mods.ModInfo.Id
  - TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  - TinyLife.Mods.ModInfo.Logger
  - TinyLife.Mods.ModInfo.Mod
  - TinyLife.Mods.ModInfo.OptionsFile
  - TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  - TinyLife.Mods.ModInfo.ToString
  langs:
  - csharp
  - vb
  name: ModInfo
  nameWithType: ModInfo
  fullName: TinyLife.Mods.ModInfo
  type: Class
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ModInfo
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 166
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nA mod info is a set of properties that every <xref href=\"TinyLife.Mods.ModInfo.Mod\" data-throw-if-not-resolved=\"false\"></xref> instance is assigned\n"
  example: []
  syntax:
    content: 'public class ModInfo : IDisposable'
    content.vb: Public Class ModInfo Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - TinyLife.Mods.ModInfo.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Mods.ModInfo.Id
  commentId: F:TinyLife.Mods.ModInfo.Id
  id: Id
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ModInfo.Id
  fullName: TinyLife.Mods.ModInfo.Id
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Id
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 171
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThe id of the mod, which is based on the <xref href=\"TinyLife.Mods.ModInfo.Mod\" data-throw-if-not-resolved=\"false\"></xref>&apos;s class name\n"
  example: []
  syntax:
    content: public readonly string Id
    return:
      type: System.String
    content.vb: Public ReadOnly Id As String
- uid: TinyLife.Mods.ModInfo.Mod
  commentId: F:TinyLife.Mods.ModInfo.Mod
  id: Mod
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: Mod
  nameWithType: ModInfo.Mod
  fullName: TinyLife.Mods.ModInfo.Mod
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Mod
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 175
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThe actual mod instance\n"
  example: []
  syntax:
    content: public readonly Mod Mod
    return:
      type: TinyLife.Mods.Mod
    content.vb: Public ReadOnly [Mod] As [Mod]
- uid: TinyLife.Mods.ModInfo.Logger
  commentId: F:TinyLife.Mods.ModInfo.Logger
  id: Logger
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ModInfo.Logger
  fullName: TinyLife.Mods.ModInfo.Logger
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Logger
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 180
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThe <xref href=\"TinyLife.Mods.ModInfo.Logger\" data-throw-if-not-resolved=\"false\"></xref> that this mod can use to log information about itself.\nBy default, this logger has the same sinks as the game&apos;s logger.\n"
  example: []
  syntax:
    content: public readonly Logger Logger
    return:
      type: ExtremelySimpleLogger.Logger
    content.vb: Public ReadOnly Logger As Logger
- uid: TinyLife.Mods.ModInfo.Content
  commentId: F:TinyLife.Mods.ModInfo.Content
  id: Content
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: ModInfo.Content
  fullName: TinyLife.Mods.ModInfo.Content
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Content
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 185
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nA <xref href=\"MLEM.Data.Content.RawContentManager\" data-throw-if-not-resolved=\"false\"></xref> that this mod can use to load its content.\nThis content manager&apos;s base directory automatically points to the mod&apos;s Content folder.\n"
  example: []
  syntax:
    content: public readonly RawContentManager Content
    return:
      type: MLEM.Data.Content.RawContentManager
    content.vb: Public ReadOnly Content As RawContentManager
- uid: TinyLife.Mods.ModInfo.Harmony
  commentId: F:TinyLife.Mods.ModInfo.Harmony
  id: Harmony
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: Harmony
  nameWithType: ModInfo.Harmony
  fullName: TinyLife.Mods.ModInfo.Harmony
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Harmony
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 190
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThe <xref href=\"HarmonyLib.Harmony\" data-throw-if-not-resolved=\"false\"></xref> instance that this mod can use, whose <xref href=\"HarmonyLib.Harmony.PatchAll(System.Reflection.Assembly)\" data-throw-if-not-resolved=\"false\"></xref> method is called automatically after this mod is loaded.\nThis value is only set if <xref href=\"TinyLife.Mods.Mod.RequiresHarmony\" data-throw-if-not-resolved=\"false\"></xref> was <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool\">true</a> when the <xref href=\"TinyLife.Mods.ModInfo.Mod\" data-throw-if-not-resolved=\"false\"></xref> was loaded.\n"
  example: []
  syntax:
    content: public readonly Harmony Harmony
    return:
      type: HarmonyLib.Harmony
    content.vb: Public ReadOnly Harmony As Harmony
- uid: TinyLife.Mods.ModInfo.OptionsFile
  commentId: F:TinyLife.Mods.ModInfo.OptionsFile
  id: OptionsFile
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: OptionsFile
  nameWithType: ModInfo.OptionsFile
  fullName: TinyLife.Mods.ModInfo.OptionsFile
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OptionsFile
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 194
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThe options file for this mod. This is used in <xref href=\"TinyLife.Mods.ModInfo.LoadOptions%60%601(System.Func%7b%60%600%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Mods.ModInfo.SaveOptions%60%601(%60%600)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly FileInfo OptionsFile
    return:
      type: System.IO.FileInfo
    content.vb: Public ReadOnly OptionsFile As FileInfo
- uid: TinyLife.Mods.ModInfo.Finalize
  commentId: M:TinyLife.Mods.ModInfo.Finalize
  id: Finalize
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: ~ModInfo()
  nameWithType: ModInfo.~ModInfo()
  fullName: TinyLife.Mods.ModInfo.~ModInfo()
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Finalize
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 211
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  example: []
  syntax:
    content: protected ~ModInfo()
    content.vb: ''
  overload: TinyLife.Mods.ModInfo.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: TinyLife.Mods.ModInfo.Dispose
  commentId: M:TinyLife.Mods.ModInfo.Dispose
  id: Dispose
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ModInfo.Dispose()
  fullName: TinyLife.Mods.ModInfo.Dispose()
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Dispose
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 216
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: TinyLife.Mods.ModInfo.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: TinyLife.Mods.ModInfo.ToString
  commentId: M:TinyLife.Mods.ModInfo.ToString
  id: ToString
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModInfo.ToString()
  fullName: TinyLife.Mods.ModInfo.ToString()
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ToString
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 223
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: TinyLife.Mods.ModInfo.ToString*
- uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  commentId: M:TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  id: SaveOptions``1(``0)
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: SaveOptions<T>(T)
  nameWithType: ModInfo.SaveOptions<T>(T)
  fullName: TinyLife.Mods.ModInfo.SaveOptions<T>(T)
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SaveOptions
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 242
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nSaves the given options into this mod&apos;s <xref href=\"TinyLife.Mods.ModInfo.OptionsFile\" data-throw-if-not-resolved=\"false\"></xref>.\nTo save custom options, you can create a custom class, each of whose members will be saved by this method.\nThis method uses a <xref href=\"TinyLife.SaveHandler.CreateSerializer(System.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref> JSON serializer, so using <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.Serialization.DataMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes is supported.\n"
  example: []
  syntax:
    content: public void SaveOptions<T>(T options)
    parameters:
    - id: options
      type: '{T}'
      description: The options to save.
    typeParameters:
    - id: T
      description: The type of the options to save.
    content.vb: Public Sub SaveOptions(Of T)(options As T)
  overload: TinyLife.Mods.ModInfo.SaveOptions*
  nameWithType.vb: ModInfo.SaveOptions(Of T)(T)
  fullName.vb: TinyLife.Mods.ModInfo.SaveOptions(Of T)(T)
  name.vb: SaveOptions(Of T)(T)
- uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  commentId: M:TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  id: LoadOptions``1(System.Func{``0})
  parent: TinyLife.Mods.ModInfo
  langs:
  - csharp
  - vb
  name: LoadOptions<T>(Func<T>)
  nameWithType: ModInfo.LoadOptions<T>(Func<T>)
  fullName: TinyLife.Mods.ModInfo.LoadOptions<T>(System.Func<T>)
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LoadOptions
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 260
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nLoads options of the given type from this mod&apos;s <xref href=\"TinyLife.Mods.ModInfo.OptionsFile\" data-throw-if-not-resolved=\"false\"></xref>.\nTo load custom options, you can create a custom class, each of whose members will be loaded by this method.\nThis method uses a <xref href=\"TinyLife.SaveHandler.CreateSerializer(System.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref> JSON serializer, so using <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.Serialization.DataMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes is supported.\n"
  example: []
  syntax:
    content: public T LoadOptions<T>(Func<T> createDefaultInstance)
    parameters:
    - id: createDefaultInstance
      type: System.Func{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function LoadOptions(Of T)(createDefaultInstance As Func(Of T)) As T
  overload: TinyLife.Mods.ModInfo.LoadOptions*
  nameWithType.vb: ModInfo.LoadOptions(Of T)(Func(Of T))
  fullName.vb: TinyLife.Mods.ModInfo.LoadOptions(Of T)(System.Func(Of T))
  name.vb: LoadOptions(Of T)(Func(Of T))
references:
- uid: TinyLife.Mods.ModInfo.Mod
  commentId: F:TinyLife.Mods.ModInfo.Mod
  name: Mod
  nameWithType: ModInfo.Mod
  fullName: TinyLife.Mods.ModInfo.Mod
- uid: TinyLife.Mods
  commentId: N:TinyLife.Mods
  name: TinyLife.Mods
  nameWithType: TinyLife.Mods
  fullName: TinyLife.Mods
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Mods
    name: Mods
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Mods
    name: Mods
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Mods.ModInfo.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ModInfo>(ModInfo)
  nameWithType: Extensions.JsonCopy<ModInfo>(ModInfo)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Mods.ModInfo>(TinyLife.Mods.ModInfo)
  nameWithType.vb: Extensions.JsonCopy(Of ModInfo)(ModInfo)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Mods.ModInfo)(TinyLife.Mods.ModInfo)
  name.vb: JsonCopy(Of ModInfo)(ModInfo)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Mods.ModInfo)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
  - name: '>'
  - name: (
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Mods.ModInfo)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
  - name: )
  - name: (
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Mods.Mod
  commentId: T:TinyLife.Mods.Mod
  parent: TinyLife.Mods
  name: Mod
  nameWithType: Mod
  fullName: TinyLife.Mods.Mod
- uid: TinyLife.Mods.ModInfo.Logger
  commentId: F:TinyLife.Mods.ModInfo.Logger
  name: Logger
  nameWithType: ModInfo.Logger
  fullName: TinyLife.Mods.ModInfo.Logger
- uid: ExtremelySimpleLogger.Logger
  commentId: T:ExtremelySimpleLogger.Logger
  parent: ExtremelySimpleLogger
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: ExtremelySimpleLogger.Logger
- uid: ExtremelySimpleLogger
  commentId: N:ExtremelySimpleLogger
  isExternal: true
  name: ExtremelySimpleLogger
  nameWithType: ExtremelySimpleLogger
  fullName: ExtremelySimpleLogger
- uid: MLEM.Data.Content.RawContentManager
  commentId: T:MLEM.Data.Content.RawContentManager
  parent: MLEM.Data.Content
  isExternal: true
  name: RawContentManager
  nameWithType: RawContentManager
  fullName: MLEM.Data.Content.RawContentManager
- uid: MLEM.Data.Content
  commentId: N:MLEM.Data.Content
  isExternal: true
  name: MLEM.Data.Content
  nameWithType: MLEM.Data.Content
  fullName: MLEM.Data.Content
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Content
    name: Content
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Content
    name: Content
    isExternal: true
- uid: HarmonyLib.Harmony
  commentId: T:HarmonyLib.Harmony
  parent: HarmonyLib
  isExternal: true
  name: Harmony
  nameWithType: Harmony
  fullName: HarmonyLib.Harmony
- uid: HarmonyLib.Harmony.PatchAll(System.Reflection.Assembly)
  commentId: M:HarmonyLib.Harmony.PatchAll(System.Reflection.Assembly)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: PatchAll(Assembly)
  nameWithType: Harmony.PatchAll(Assembly)
  fullName: HarmonyLib.Harmony.PatchAll(System.Reflection.Assembly)
  spec.csharp:
  - uid: HarmonyLib.Harmony.PatchAll(System.Reflection.Assembly)
    name: PatchAll
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: )
  spec.vb:
  - uid: HarmonyLib.Harmony.PatchAll(System.Reflection.Assembly)
    name: PatchAll
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: )
- uid: TinyLife.Mods.Mod.RequiresHarmony
  commentId: P:TinyLife.Mods.Mod.RequiresHarmony
  name: RequiresHarmony
  nameWithType: Mod.RequiresHarmony
  fullName: TinyLife.Mods.Mod.RequiresHarmony
- uid: HarmonyLib
  commentId: N:HarmonyLib
  isExternal: true
  name: HarmonyLib
  nameWithType: HarmonyLib
  fullName: HarmonyLib
- uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  commentId: M:TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: LoadOptions<T>(Func<T>)
  nameWithType: ModInfo.LoadOptions<T>(Func<T>)
  fullName: TinyLife.Mods.ModInfo.LoadOptions<T>(System.Func<T>)
  nameWithType.vb: ModInfo.LoadOptions(Of T)(Func(Of T))
  fullName.vb: TinyLife.Mods.ModInfo.LoadOptions(Of T)(System.Func(Of T))
  name.vb: LoadOptions(Of T)(Func(Of T))
  spec.csharp:
  - uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
    name: LoadOptions
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.ModInfo.LoadOptions``1(System.Func{``0})
    name: LoadOptions
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  commentId: M:TinyLife.Mods.ModInfo.SaveOptions``1(``0)
  name: SaveOptions<T>(T)
  nameWithType: ModInfo.SaveOptions<T>(T)
  fullName: TinyLife.Mods.ModInfo.SaveOptions<T>(T)
  nameWithType.vb: ModInfo.SaveOptions(Of T)(T)
  fullName.vb: TinyLife.Mods.ModInfo.SaveOptions(Of T)(T)
  name.vb: SaveOptions(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
    name: SaveOptions
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.ModInfo.SaveOptions``1(``0)
    name: SaveOptions
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: TinyLife.Mods.ModInfo.Finalize*
  commentId: Overload:TinyLife.Mods.ModInfo.Finalize
  name: ~ModInfo
  nameWithType: ModInfo.~ModInfo
  fullName: TinyLife.Mods.ModInfo.~ModInfo
  spec.csharp:
  - name: "~"
  - uid: TinyLife.Mods.ModInfo.Finalize*
    name: ModInfo
- uid: TinyLife.Mods.ModInfo.Dispose*
  commentId: Overload:TinyLife.Mods.ModInfo.Dispose
  name: Dispose
  nameWithType: ModInfo.Dispose
  fullName: TinyLife.Mods.ModInfo.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Mods.ModInfo.ToString*
  commentId: Overload:TinyLife.Mods.ModInfo.ToString
  name: ToString
  nameWithType: ModInfo.ToString
  fullName: TinyLife.Mods.ModInfo.ToString
- uid: TinyLife.Mods.ModInfo.OptionsFile
  commentId: F:TinyLife.Mods.ModInfo.OptionsFile
  name: OptionsFile
  nameWithType: ModInfo.OptionsFile
  fullName: TinyLife.Mods.ModInfo.OptionsFile
- uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  commentId: M:TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: CreateSerializer(EventHandler<ErrorEventArgs>)
  nameWithType: SaveHandler.CreateSerializer(EventHandler<ErrorEventArgs>)
  fullName: TinyLife.SaveHandler.CreateSerializer(System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>)
  nameWithType.vb: SaveHandler.CreateSerializer(EventHandler(Of ErrorEventArgs))
  fullName.vb: TinyLife.SaveHandler.CreateSerializer(System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs))
  name.vb: CreateSerializer(EventHandler(Of ErrorEventArgs))
  spec.csharp:
  - uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
    name: CreateSerializer
  - name: (
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
    name: CreateSerializer
  - name: (
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
  - name: )
- uid: System.Runtime.Serialization.DataContractAttribute
  commentId: T:System.Runtime.Serialization.DataContractAttribute
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.datacontractattribute
  name: DataContractAttribute
  nameWithType: DataContractAttribute
  fullName: System.Runtime.Serialization.DataContractAttribute
- uid: System.Runtime.Serialization.DataMemberAttribute
  commentId: T:System.Runtime.Serialization.DataMemberAttribute
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.datamemberattribute
  name: DataMemberAttribute
  nameWithType: DataMemberAttribute
  fullName: System.Runtime.Serialization.DataMemberAttribute
- uid: TinyLife.Mods.ModInfo.SaveOptions*
  commentId: Overload:TinyLife.Mods.ModInfo.SaveOptions
  name: SaveOptions
  nameWithType: ModInfo.SaveOptions
  fullName: TinyLife.Mods.ModInfo.SaveOptions
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Mods.ModInfo.LoadOptions*
  commentId: Overload:TinyLife.Mods.ModInfo.LoadOptions
  name: LoadOptions
  nameWithType: ModInfo.LoadOptions
  fullName: TinyLife.Mods.ModInfo.LoadOptions
- uid: System.Func{{T}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
