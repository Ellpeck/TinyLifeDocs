### YamlMime:ManagedReference
items:
- uid: TinyLife.World.DrawDelegate
  commentId: T:TinyLife.World.DrawDelegate
  id: DrawDelegate
  parent: TinyLife.World
  children: []
  langs:
  - csharp
  - vb
  name: DrawDelegate
  nameWithType: DrawDelegate
  fullName: TinyLife.World.DrawDelegate
  type: Delegate
  source:
    remote:
      path: TinyLife/World/Map.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DrawDelegate
    path: ../TinyLife/World/Map.cs
    startLine: 2185
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA delegate used by events that are invoked when something is drawn.\nThis event has no <xref href=\"TinyLife.Mods.EventPhase\" data-throw-if-not-resolved=\"false\"></xref> attached to it, since drawing is done in a sorted fashion anyway.\n"
  example: []
  syntax:
    content: public delegate void DrawDelegate(GameTime time, SpriteBatch batch, Vector2 drawPos, Color? overrideColor);
    parameters:
    - id: time
      type: GameTime
      description: The game&apos;s current time
    - id: batch
      type: SpriteBatch
      description: The sprite batch to use for drawing
    - id: drawPos
      type: Vector2
      description: The position that the object is drawn at
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: An override color to draw the object with, or null to draw it with the default color
    content.vb: Public Delegate Sub DrawDelegate(time As GameTime, batch As SpriteBatch, drawPos As Vector2, overrideColor As Color?)
  extensionMethods:
  - TinyLife.World.DrawDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: TinyLife.Mods.EventPhase
  commentId: T:TinyLife.Mods.EventPhase
  parent: TinyLife.Mods
  name: EventPhase
  nameWithType: EventPhase
  fullName: TinyLife.Mods.EventPhase
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: TinyLife.World.DrawDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<DrawDelegate>()
  nameWithType: Extensions.JsonCopy<DrawDelegate>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.DrawDelegate>()
  nameWithType.vb: Extensions.JsonCopy(Of DrawDelegate)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.DrawDelegate)()
  name.vb: JsonCopy(Of DrawDelegate)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<DrawDelegate>
    nameWithType: Extensions.JsonCopy<DrawDelegate>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.DrawDelegate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of DrawDelegate)
    nameWithType: Extensions.JsonCopy(Of DrawDelegate)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.DrawDelegate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GameTime
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: GameTime
- uid: SpriteBatch
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: SpriteBatch
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<Microsoft.Xna.Framework.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of Microsoft.Xna.Framework.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Mods
  commentId: N:TinyLife.Mods
  name: TinyLife.Mods
  nameWithType: TinyLife.Mods
  fullName: TinyLife.Mods
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
