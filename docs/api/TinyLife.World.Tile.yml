### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  id: Tile
  parent: TinyLife.World
  children:
  - TinyLife.World.Tile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[])
  - TinyLife.World.Tile.BaseName
  - TinyLife.World.Tile.CanBuy
  - TinyLife.World.Tile.Categories
  - TinyLife.World.Tile.Colors
  - TinyLife.World.Tile.ColorSchemes
  - TinyLife.World.Tile.DefaultColors
  - TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  - TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  - TinyLife.World.Tile.GetPrice
  - TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  - TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  - TinyLife.World.Tile.Height
  - TinyLife.World.Tile.Icon
  - TinyLife.World.Tile.Name
  - TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  - TinyLife.World.Tile.PathCostModifier
  - TinyLife.World.Tile.Price
  - TinyLife.World.Tile.ReferencePrice
  - TinyLife.World.Tile.Regions
  - TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
  - TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Type)
  - TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Type)
  - TinyLife.World.Tile.Textures
  - TinyLife.World.Tile.Tiles
  - TinyLife.World.Tile.Width
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
  type: Class
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Tile
    path: ../TinyLife/World/Tile.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA tile is an object on a <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> that represents the covering of the ground (or the ground itself).\nTo register a tile, use <xref href=\"TinyLife.World.Tile.Register(System.String%2cSystem.Int32%2cSystem.Collections.Generic.Dictionary%7bMicrosoft.Xna.Framework.Point%2cMLEM.Textures.TextureRegion%7d%2cMicrosoft.Xna.Framework.Point%2cTinyLife.Utilities.ColorScheme%2cSystem.Single%2cSystem.Boolean%2cTinyLife.World.Tile.Category%2cMLEM.Textures.TextureRegion%2cSystem.Func%7bMLEM.Misc.Direction2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Point%7d%7d%2cSystem.Nullable%7bSystem.Int32%7d%2cSystem.Type)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(Tile.Converter))]

      public class Tile
    content.vb: >-
      <JsonConverter(GetType(Tile.Converter))>

      Public Class Tile
  inheritance:
  - System.Object
  derivedClasses:
  - TinyLife.World.GrassyAutoTile
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Tile.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.Tile.Tiles
  commentId: F:TinyLife.World.Tile.Tiles
  id: Tiles
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Tiles
  nameWithType: Tile.Tiles
  fullName: TinyLife.World.Tile.Tiles
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Tiles
    path: ../TinyLife/World/Tile.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA registry of all tiles that exist in the game and its mods\n"
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Tile[]> Tiles
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.Tile[]}
    content.vb: Public Shared ReadOnly Tiles As ReadOnlyDictionary(Of String, Tile())
- uid: TinyLife.World.Tile.Width
  commentId: P:TinyLife.World.Tile.Width
  id: Width
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Tile.Width
  fullName: TinyLife.World.Tile.Width
  type: Property
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Width
    path: ../TinyLife/World/Tile.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe width of each tile, in pixels\n"
  example: []
  syntax:
    content: public static int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property Width As Integer
  overload: TinyLife.World.Tile.Width*
- uid: TinyLife.World.Tile.Height
  commentId: P:TinyLife.World.Tile.Height
  id: Height
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Tile.Height
  fullName: TinyLife.World.Tile.Height
  type: Property
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Height
    path: ../TinyLife/World/Tile.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe height of each tile, in pixels\n"
  example: []
  syntax:
    content: public static int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property Height As Integer
  overload: TinyLife.World.Tile.Height*
- uid: TinyLife.World.Tile.ReferencePrice
  commentId: F:TinyLife.World.Tile.ReferencePrice
  id: ReferencePrice
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: ReferencePrice
  nameWithType: Tile.ReferencePrice
  fullName: TinyLife.World.Tile.ReferencePrice
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReferencePrice
    path: ../TinyLife/World/Tile.cs
    startLine: 43
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe reference price for tiles.\nSince Grass is replaced by Concrete in a newly created room, the two tiles have to cost the same. This is that price.\nThis value is set to 5.\n"
  example: []
  syntax:
    content: public const int ReferencePrice = 5
    return:
      type: System.Int32
    content.vb: Public Const ReferencePrice As Integer = 5
- uid: TinyLife.World.Tile.BaseName
  commentId: F:TinyLife.World.Tile.BaseName
  id: BaseName
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: BaseName
  nameWithType: Tile.BaseName
  fullName: TinyLife.World.Tile.BaseName
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BaseName
    path: ../TinyLife/World/Tile.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe name of this type of tile. Whereas <xref href=\"TinyLife.World.Tile.Name\" data-throw-if-not-resolved=\"false\"></xref> has the index of its <xref href=\"TinyLife.World.Tile.Colors\" data-throw-if-not-resolved=\"false\"></xref> appended to it, this one is just the type&apos;s name.\n"
  example: []
  syntax:
    content: public readonly string BaseName
    return:
      type: System.String
    content.vb: Public ReadOnly BaseName As String
- uid: TinyLife.World.Tile.Name
  commentId: F:TinyLife.World.Tile.Name
  id: Name
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Tile.Name
  fullName: TinyLife.World.Tile.Name
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/World/Tile.cs
    startLine: 83
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe name of this specific tile. This is comprised of the <xref href=\"TinyLife.World.Tile.BaseName\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"TinyLife.World.Tile.Colors\" data-throw-if-not-resolved=\"false\"></xref>&apos;s index attached to it.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.World.Tile.Price
  commentId: F:TinyLife.World.Tile.Price
  id: Price
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Tile.Price
  fullName: TinyLife.World.Tile.Price
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Price
    path: ../TinyLife/World/Tile.cs
    startLine: 87
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe price of this tile\n"
  example: []
  syntax:
    content: public readonly int Price
    return:
      type: System.Int32
    content.vb: Public ReadOnly Price As Integer
- uid: TinyLife.World.Tile.ColorSchemes
  commentId: F:TinyLife.World.Tile.ColorSchemes
  id: ColorSchemes
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: ColorSchemes
  nameWithType: Tile.ColorSchemes
  fullName: TinyLife.World.Tile.ColorSchemes
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ColorSchemes
    path: ../TinyLife/World/Tile.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe color scheme that this tile can have\n"
  example: []
  syntax:
    content: public readonly ColorScheme[] ColorSchemes
    return:
      type: TinyLife.Utilities.ColorScheme[]
    content.vb: Public ReadOnly ColorSchemes As ColorScheme()
- uid: TinyLife.World.Tile.Colors
  commentId: F:TinyLife.World.Tile.Colors
  id: Colors
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Tile.Colors
  fullName: TinyLife.World.Tile.Colors
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Colors
    path: ../TinyLife/World/Tile.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe indices of the colors in each <xref href=\"TinyLife.World.Tile.ColorSchemes\" data-throw-if-not-resolved=\"false\"></xref> entry that this tile has\n"
  example: []
  syntax:
    content: public readonly int[] Colors
    return:
      type: System.Int32[]
    content.vb: Public ReadOnly Colors As Integer()
- uid: TinyLife.World.Tile.CanBuy
  commentId: F:TinyLife.World.Tile.CanBuy
  id: CanBuy
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: CanBuy
  nameWithType: Tile.CanBuy
  fullName: TinyLife.World.Tile.CanBuy
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanBuy
    path: ../TinyLife/World/Tile.cs
    startLine: 99
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA field that indicates whether this tile can be bought without the &quot;ShowNonBuyable&quot; cheat enabled\n"
  example: []
  syntax:
    content: public readonly bool CanBuy
    return:
      type: System.Boolean
    content.vb: Public ReadOnly CanBuy As Boolean
- uid: TinyLife.World.Tile.PathCostModifier
  commentId: F:TinyLife.World.Tile.PathCostModifier
  id: PathCostModifier
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: PathCostModifier
  nameWithType: Tile.PathCostModifier
  fullName: TinyLife.World.Tile.PathCostModifier
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PathCostModifier
    path: ../TinyLife/World/Tile.cs
    startLine: 104
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA field that indicates the &quot;cost&quot; for pathfinding of this tile.\nThe default modifier is 1, and it should not be set to a value lower than that.\n"
  example: []
  syntax:
    content: public readonly float PathCostModifier
    return:
      type: System.Single
    content.vb: Public ReadOnly PathCostModifier As Single
- uid: TinyLife.World.Tile.Categories
  commentId: F:TinyLife.World.Tile.Categories
  id: Categories
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: Tile.Categories
  fullName: TinyLife.World.Tile.Categories
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Categories
    path: ../TinyLife/World/Tile.cs
    startLine: 108
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe <xref href=\"TinyLife.World.Tile.Category\" data-throw-if-not-resolved=\"false\"></xref> flags that this tile has.\n"
  example: []
  syntax:
    content: public readonly Tile.Category Categories
    return:
      type: TinyLife.World.Tile.Category
    content.vb: Public ReadOnly Categories As Tile.Category
- uid: TinyLife.World.Tile.Icon
  commentId: F:TinyLife.World.Tile.Icon
  id: Icon
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Tile.Icon
  fullName: TinyLife.World.Tile.Icon
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Icon
    path: ../TinyLife/World/Tile.cs
    startLine: 113
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe build mode icon for this object, which represents the category / theme / mod that it comes from.\nIf this value is nonnull, the icon will be displayed in the corner of the build mode button for this object.\n"
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.World.Tile.DefaultColors
  commentId: F:TinyLife.World.Tile.DefaultColors
  id: DefaultColors
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: DefaultColors
  nameWithType: Tile.DefaultColors
  fullName: TinyLife.World.Tile.DefaultColors
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DefaultColors
    path: ../TinyLife/World/Tile.cs
    startLine: 117
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe colors that this tile should have by default.\n"
  example: []
  syntax:
    content: public readonly int[] DefaultColors
    return:
      type: System.Int32[]
    content.vb: Public ReadOnly DefaultColors As Integer()
- uid: TinyLife.World.Tile.Textures
  commentId: F:TinyLife.World.Tile.Textures
  id: Textures
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Textures
  nameWithType: Tile.Textures
  fullName: TinyLife.World.Tile.Textures
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Textures
    path: ../TinyLife/World/Tile.cs
    startLine: 121
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe texture atlas used for this tile.\n"
  example: []
  syntax:
    content: public readonly Dictionary<Point, TextureRegion> Textures
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public ReadOnly Textures As Dictionary(Of Point, TextureRegion)
- uid: TinyLife.World.Tile.Regions
  commentId: F:TinyLife.World.Tile.Regions
  id: Regions
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Regions
  nameWithType: Tile.Regions
  fullName: TinyLife.World.Tile.Regions
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Regions
    path: ../TinyLife/World/Tile.cs
    startLine: 125
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe texture regions this tile uses, which refer to entries in <xref href=\"TinyLife.World.Tile.Textures\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly Dictionary<Direction2, Point[]> Regions
    return:
      type: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
    content.vb: Public ReadOnly Regions As Dictionary(Of Direction2, Point())
- uid: TinyLife.World.Tile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[])
  commentId: M:TinyLife.World.Tile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[])
  id: '#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[])'
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Tile(string, string, int, Dictionary<Point, TextureRegion>, Dictionary<Direction2, Point[]>, ColorScheme[], int[], bool, float, Category, TextureRegion, int[])
  nameWithType: Tile.Tile(string, string, int, Dictionary<Point, TextureRegion>, Dictionary<Direction2, Point[]>, ColorScheme[], int[], bool, float, Tile.Category, TextureRegion, int[])
  fullName: TinyLife.World.Tile.Tile(string, string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, System.Collections.Generic.Dictionary<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>, TinyLife.Utilities.ColorScheme[], int[], bool, float, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, int[])
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/Tile.cs
    startLine: 131
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new tile with the given settings.\nTo create an instance of a custom tile class, use <xref href=\"TinyLife.World.Tile.Register(System.String%2cSystem.Int32%2cSystem.Collections.Generic.Dictionary%7bMicrosoft.Xna.Framework.Point%2cMLEM.Textures.TextureRegion%7d%2cMicrosoft.Xna.Framework.Point%2cTinyLife.Utilities.ColorScheme%2cSystem.Single%2cSystem.Boolean%2cTinyLife.World.Tile.Category%2cMLEM.Textures.TextureRegion%2cSystem.Func%7bMLEM.Misc.Direction2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Point%7d%7d%2cSystem.Nullable%7bSystem.Int32%7d%2cSystem.Type)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected Tile(string baseName, string name, int price, Dictionary<Point, TextureRegion> textures, Dictionary<Direction2, Point[]> regions, ColorScheme[] colorSchemes, int[] colors, bool canBuy, float pathCostModifier, Tile.Category categories, TextureRegion icon, int[] defaultColors)
    parameters:
    - id: baseName
      type: System.String
    - id: name
      type: System.String
    - id: price
      type: System.Int32
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    - id: regions
      type: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
    - id: colorSchemes
      type: TinyLife.Utilities.ColorScheme[]
    - id: colors
      type: System.Int32[]
    - id: canBuy
      type: System.Boolean
    - id: pathCostModifier
      type: System.Single
    - id: categories
      type: TinyLife.World.Tile.Category
    - id: icon
      type: MLEM.Textures.TextureRegion
    - id: defaultColors
      type: System.Int32[]
    content.vb: Protected Sub New(baseName As String, name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), regions As Dictionary(Of Direction2, Point()), colorSchemes As ColorScheme(), colors As Integer(), canBuy As Boolean, pathCostModifier As Single, categories As Tile.Category, icon As TextureRegion, defaultColors As Integer())
  overload: TinyLife.World.Tile.#ctor*
  nameWithType.vb: Tile.New(String, String, Integer, Dictionary(Of Point, TextureRegion), Dictionary(Of Direction2, Point()), ColorScheme(), Integer(), Boolean, Single, Tile.Category, TextureRegion, Integer())
  fullName.vb: TinyLife.World.Tile.New(String, String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), System.Collections.Generic.Dictionary(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point()), TinyLife.Utilities.ColorScheme(), Integer(), Boolean, Single, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, Integer())
  name.vb: New(String, String, Integer, Dictionary(Of Point, TextureRegion), Dictionary(Of Direction2, Point()), ColorScheme(), Integer(), Boolean, Single, Category, TextureRegion, Integer())
- uid: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  commentId: M:TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  id: Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Draw(GameTime, object, Map, Point, Vector2, float, float, ICollection<Item>, bool)
  nameWithType: Tile.Draw(GameTime, object, Map, Point, Vector2, float, float, ICollection<StaticSpriteBatch.Item>, bool)
  fullName: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime, object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, float, float, System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>, bool)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/World/Tile.cs
    startLine: 159
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws this tile at the given position in the world using a <xref href=\"Microsoft.Xna.Framework.Graphics.SpriteBatch\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"MLEM.Graphics.StaticSpriteBatch\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual bool Draw(GameTime time, object batch, Map map, Point pos, Vector2 drawPos, float depth, float scale, ICollection<StaticSpriteBatch.Item> items, bool hasStaticContext)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s current time.
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which can either be a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in screen space, to draw at.
    - id: depth
      type: System.Single
      description: The depth to use for drawing.
    - id: scale
      type: System.Single
      description: The scale to draw the tile with.
    - id: items
      type: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
      description: The <xref href="MLEM.Graphics.StaticSpriteBatch.Item" data-throw-if-not-resolved="false"></xref> collection that added items can optionally be added to.
    - id: hasStaticContext
      type: System.Boolean
      description: Whether this tile also has a static context, that is, whether it will already be drawn using a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Whether this tile was fully drawn. If the <code data-dev-comment-type="paramref" class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref> and false is returned, this tile will be marked as an animated tile, causing it to draw every frame.
    content.vb: Public Overridable Function Draw(time As GameTime, batch As Object, map As Map, pos As Point, drawPos As Vector2, depth As Single, scale As Single, items As ICollection(Of StaticSpriteBatch.Item), hasStaticContext As Boolean) As Boolean
  overload: TinyLife.World.Tile.Draw*
  nameWithType.vb: Tile.Draw(GameTime, Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item), Boolean)
  fullName.vb: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime, Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, Single, Single, System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean)
  name.vb: Draw(GameTime, Object, Map, Point, Vector2, Single, Single, ICollection(Of Item), Boolean)
- uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  commentId: M:TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  id: DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: DrawUi(Element, GameTime, SpriteBatch, float)
  nameWithType: Tile.DrawUi(Element, GameTime, SpriteBatch, float)
  fullName: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, float)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DrawUi
    path: ../TinyLife/World/Tile.cs
    startLine: 185
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws this tile on the given ui element, in ui space\n"
  example: []
  syntax:
    content: public virtual void DrawUi(Element e, GameTime time, SpriteBatch batch, float drawScale = 0.4)
    parameters:
    - id: e
      type: MLEM.Ui.Elements.Element
      description: The element to draw on
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s current time.
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    - id: drawScale
      type: System.Single
      description: The scale to draw the tile with. Defaults to 0.4.
    content.vb: Public Overridable Sub DrawUi(e As Element, time As GameTime, batch As SpriteBatch, drawScale As Single = 0.4)
  overload: TinyLife.World.Tile.DrawUi*
  nameWithType.vb: Tile.DrawUi(Element, GameTime, SpriteBatch, Single)
  fullName.vb: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Single)
  name.vb: DrawUi(Element, GameTime, SpriteBatch, Single)
- uid: TinyLife.World.Tile.GetPrice
  commentId: M:TinyLife.World.Tile.GetPrice
  id: GetPrice
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: GetPrice()
  nameWithType: Tile.GetPrice()
  fullName: TinyLife.World.Tile.GetPrice()
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetPrice
    path: ../TinyLife/World/Tile.cs
    startLine: 192
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  example: []
  syntax:
    content: public virtual float GetPrice()
    return:
      type: System.Single
    content.vb: Public Overridable Function GetPrice() As Single
  overload: TinyLife.World.Tile.GetPrice*
- uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  id: OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: OnNeighborChanged(Map, Point, Point)
  nameWithType: Tile.OnNeighborChanged(Map, Point, Point)
  fullName: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnNeighborChanged
    path: ../TinyLife/World/Tile.cs
    startLine: 203
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA method that is called when a neighboring <xref href=\"TinyLife.World.Tile\" data-throw-if-not-resolved=\"false\"></xref> on the <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> changes.\nThis method does nothing by default, but is overriden by <xref href=\"TinyLife.World.GrassyAutoTile\" data-throw-if-not-resolved=\"false\"></xref> to notify neighboring tiles of changes.\n"
  example: []
  syntax:
    content: public virtual void OnNeighborChanged(Map map, Point pos, Point neighbor)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: neighbor
      type: Microsoft.Xna.Framework.Point
      description: The position of the tile that changed.
    content.vb: Public Overridable Sub OnNeighborChanged(map As Map, pos As Point, neighbor As Point)
  overload: TinyLife.World.Tile.OnNeighborChanged*
- uid: TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  id: GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: GetVariationTexture(Direction2, Point)
  nameWithType: Tile.GetVariationTexture(Direction2, Point)
  fullName: TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetVariationTexture
    path: ../TinyLife/World/Tile.cs
    startLine: 212
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nReturns a random texture that should be displayed at the given position, based on the <xref href=\"TinyLife.World.Tile.Textures\" data-throw-if-not-resolved=\"false\"></xref> variations that this tile has.\nIf a tile only has one variation texture, this method always returns that texture.\n"
  example: []
  syntax:
    content: protected Point GetVariationTexture(Direction2 direction, Point pos)
    parameters:
    - id: direction
      type: MLEM.Misc.Direction2
      description: The camera rotation.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is at.
    return:
      type: Microsoft.Xna.Framework.Point
      description: The texture to display at the location.
    content.vb: Protected Function GetVariationTexture(direction As Direction2, pos As Point) As Point
  overload: TinyLife.World.Tile.GetVariationTexture*
- uid: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  commentId: M:TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  id: GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: GetVisualOffset(Direction2, int, int)
  nameWithType: Tile.GetVisualOffset(Direction2, int, int)
  fullName: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2, int, int)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetVisualOffset
    path: ../TinyLife/World/Tile.cs
    startLine: 224
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nReturns the visual offset of the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">x</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">y</code> values, based on the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">direction</code>, which is usually the game&apos;s <xref href=\"TinyLife.Options.CameraRotation\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected static Point GetVisualOffset(Direction2 direction, int x, int y)
    parameters:
    - id: direction
      type: MLEM.Misc.Direction2
      description: The rotation.
    - id: x
      type: System.Int32
      description: The x coordinate to offset.
    - id: y
      type: System.Int32
      description: The y coordinate to offset.
    return:
      type: Microsoft.Xna.Framework.Point
      description: The visual offset.
    content.vb: Protected Shared Function GetVisualOffset(direction As Direction2, x As Integer, y As Integer) As Point
  overload: TinyLife.World.Tile.GetVisualOffset*
  nameWithType.vb: Tile.GetVisualOffset(Direction2, Integer, Integer)
  fullName.vb: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2, Integer, Integer)
  name.vb: GetVisualOffset(Direction2, Integer, Integer)
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
  id: Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, float, bool, Category, TextureRegion, Func<Direction2, Point?>, int?, Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, float, bool, Tile.Category, TextureRegion, Func<Direction2, Point?>, int?, Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?>, int?, System.Type)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/World/Tile.cs
    startLine: 248
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nRegisters a new tile with the given settings.\n"
  example: []
  syntax:
    content: public static void Register(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, ColorScheme color, float pathCostModifier = 1, bool canBuy = true, Tile.Category categories = Category.None, TextureRegion icon = null, Func<Direction2, Point?> variations = null, int? defaultColor = null, Type constructedType = null)
    parameters:
    - id: name
      type: System.String
      description: The name that the tile should have.
    - id: price
      type: System.Int32
      description: The tile&apos;s price.
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas to use.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The texture region that this tile should use for rendering.
    - id: color
      type: TinyLife.Utilities.ColorScheme
      description: The color scheme that this tile should have.
    - id: pathCostModifier
      type: System.Single
      description: The path cost modifier, >= 1, that this tile should have.
    - id: canBuy
      type: System.Boolean
      description: Whether or not the tile can be bought in the tile tool.
    - id: categories
      type: TinyLife.World.Tile.Category
      description: This tile&apos;s <xref href="TinyLife.World.Tile.Category" data-throw-if-not-resolved="false"></xref> flags.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The build mode category icon of this object.
    - id: variations
      type: System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}}
      description: An optional set of variation textures that should be used based on the given camera rotation.
    - id: defaultColor
      type: System.Nullable{System.Int32}
      description: The color that this tile should display with in the tile tool by default.
    - id: constructedType
      type: System.Type
      description: The type that tiles should be constructed from, or null to construct <xref href="TinyLife.World.Tile" data-throw-if-not-resolved="false"></xref> instances.
    content.vb: Public Shared Sub Register(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, color As ColorScheme, pathCostModifier As Single = 1, canBuy As Boolean = True, categories As Tile.Category = Category.None, icon As TextureRegion = Nothing, variations As Func(Of Direction2, Point?) = Nothing, defaultColor As Integer? = Nothing, constructedType As Type = Nothing)
  overload: TinyLife.World.Tile.Register*
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point?), Integer?, Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?), Integer?, System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point?), Integer?, Type)
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Type)
  id: Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Type)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme[], float, bool, Category, TextureRegion, Func<Direction2, Point?>, int[], Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme[], float, bool, Tile.Category, TextureRegion, Func<Direction2, Point?>, int[], Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme[], float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?>, int[], System.Type)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/World/Tile.cs
    startLine: 267
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nRegisters a new tile with the given settings.\n"
  example: []
  syntax:
    content: public static void Register(string name, int price, Dictionary<Point, TextureRegion> textures, Point textureRegion, ColorScheme[] colors, float pathCostModifier = 1, bool canBuy = true, Tile.Category categories = Category.None, TextureRegion icon = null, Func<Direction2, Point?> variations = null, int[] defaultColors = null, Type constructedType = null)
    parameters:
    - id: name
      type: System.String
      description: The name that the tile should have.
    - id: price
      type: System.Int32
      description: The tile&apos;s price.
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas to use.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The texture region that this tile should use for rendering.
    - id: colors
      type: TinyLife.Utilities.ColorScheme[]
      description: The color scheme that this tile should have.
    - id: pathCostModifier
      type: System.Single
      description: The path cost modifier, >= 1, that this tile should have.
    - id: canBuy
      type: System.Boolean
      description: Whether or not the tile can be bought in the tile tool.
    - id: categories
      type: TinyLife.World.Tile.Category
      description: This tile&apos;s <xref href="TinyLife.World.Tile.Category" data-throw-if-not-resolved="false"></xref> flags.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The build mode category icon of this object.
    - id: variations
      type: System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}}
      description: An optional set of variation textures that should be used based on the given camera rotation.
    - id: defaultColors
      type: System.Int32[]
      description: The colors that this tile should display with in the tile tool by default.
    - id: constructedType
      type: System.Type
      description: The type that tiles should be constructed from, or null to construct <xref href="TinyLife.World.Tile" data-throw-if-not-resolved="false"></xref> instances.
    content.vb: Public Shared Sub Register(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegion As Point, colors As ColorScheme(), pathCostModifier As Single = 1, canBuy As Boolean = True, categories As Tile.Category = Category.None, icon As TextureRegion = Nothing, variations As Func(Of Direction2, Point?) = Nothing, defaultColors As Integer() = Nothing, constructedType As Type = Nothing)
  overload: TinyLife.World.Tile.Register*
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme(), Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point?), Integer(), Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme(), Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?), Integer(), System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme(), Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point?), Integer(), Type)
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Type)
  id: Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Type)
  parent: TinyLife.World.Tile
  langs:
  - csharp
  - vb
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point[], ColorScheme[], float, bool, Category, TextureRegion, Func<Direction2, Point[]>, int[], Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point[], ColorScheme[], float, bool, Tile.Category, TextureRegion, Func<Direction2, Point[]>, int[], Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point[], TinyLife.Utilities.ColorScheme[], float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>, int[], System.Type)
  type: Method
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/World/Tile.cs
    startLine: 290
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nRegisters a new tile with the given settings.\n"
  example: []
  syntax:
    content: public static Tile[] Register(string name, int price, Dictionary<Point, TextureRegion> textures, Point[] textureRegions, ColorScheme[] colors, float pathCostModifier = 1, bool canBuy = true, Tile.Category categories = Category.None, TextureRegion icon = null, Func<Direction2, Point[]> variations = null, int[] defaultColors = null, Type constructedType = null)
    parameters:
    - id: name
      type: System.String
      description: The name that the tile should have.
    - id: price
      type: System.Int32
      description: The tile&apos;s price.
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas to use.
    - id: textureRegions
      type: Microsoft.Xna.Framework.Point[]
      description: The texture regions that this tile should use for rendering, from which a random value will be chosen for each tile.
    - id: colors
      type: TinyLife.Utilities.ColorScheme[]
      description: The color scheme that this tile should have.
    - id: pathCostModifier
      type: System.Single
      description: The path cost modifier, >= 1, that this tile should have.
    - id: canBuy
      type: System.Boolean
      description: Whether or not the tile can be bought in the tile tool.
    - id: categories
      type: TinyLife.World.Tile.Category
      description: This tile&apos;s <xref href="TinyLife.World.Tile.Category" data-throw-if-not-resolved="false"></xref> flags.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The build mode category icon of this object.
    - id: variations
      type: System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
      description: An optional set of variation textures that should be used based on the given camera rotation.
    - id: defaultColors
      type: System.Int32[]
      description: The colors that this tile should display with in the tile tool by default.
    - id: constructedType
      type: System.Type
      description: The type that tiles should be constructed from, or null to construct <xref href="TinyLife.World.Tile" data-throw-if-not-resolved="false"></xref> instances.
    return:
      type: TinyLife.World.Tile[]
      description: The registered tiles.
    content.vb: Public Shared Function Register(name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), textureRegions As Point(), colors As ColorScheme(), pathCostModifier As Single = 1, canBuy As Boolean = True, categories As Tile.Category = Category.None, icon As TextureRegion = Nothing, variations As Func(Of Direction2, Point()) = Nothing, defaultColors As Integer() = Nothing, constructedType As Type = Nothing) As Tile()
  overload: TinyLife.World.Tile.Register*
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point(), ColorScheme(), Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point()), Integer(), Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point(), TinyLife.Utilities.ColorScheme(), Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point()), Integer(), System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point(), ColorScheme(), Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point()), Integer(), Type)
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, float, bool, Category, TextureRegion, Func<Direction2, Point?>, int?, Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, float, bool, Tile.Category, TextureRegion, Func<Direction2, Point?>, int?, Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?>, int?, System.Type)
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point?), Integer?, Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?), Integer?, System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point?), Integer?, Type)
  spec.csharp:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Tile.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Tile>(Tile)
  nameWithType: Extensions.JsonCopy<Tile>(Tile)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Tile>(TinyLife.World.Tile)
  nameWithType.vb: Extensions.JsonCopy(Of Tile)(Tile)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Tile)(TinyLife.World.Tile)
  name.vb: JsonCopy(Of Tile)(Tile)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Tile)
    name: JsonCopy
  - name: <
  - uid: TinyLife.World.Tile
    name: Tile
  - name: '>'
  - name: (
  - uid: TinyLife.World.Tile
    name: Tile
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Tile)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Tile
    name: Tile
  - name: )
  - name: (
  - uid: TinyLife.World.Tile
    name: Tile
  - name: )
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.Tile[]}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.Tile[]}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Tile[]>
  nameWithType: ReadOnlyDictionary<string, Tile[]>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.World.Tile[]>
  nameWithType.vb: ReadOnlyDictionary(Of String, Tile())
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.World.Tile())
  name.vb: ReadOnlyDictionary(Of String, Tile())
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile
    name: Tile
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile
    name: Tile
  - name: (
  - name: )
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.World.Tile.Width*
  commentId: Overload:TinyLife.World.Tile.Width
  name: Width
  nameWithType: Tile.Width
  fullName: TinyLife.World.Tile.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Tile.Height*
  commentId: Overload:TinyLife.World.Tile.Height
  name: Height
  nameWithType: Tile.Height
  fullName: TinyLife.World.Tile.Height
- uid: TinyLife.World.Tile.Name
  commentId: F:TinyLife.World.Tile.Name
  parent: TinyLife.World.Tile
  name: Name
  nameWithType: Tile.Name
  fullName: TinyLife.World.Tile.Name
- uid: TinyLife.World.Tile.Colors
  commentId: F:TinyLife.World.Tile.Colors
  parent: TinyLife.World.Tile
  name: Colors
  nameWithType: Tile.Colors
  fullName: TinyLife.World.Tile.Colors
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.World.Tile.BaseName
  commentId: F:TinyLife.World.Tile.BaseName
  parent: TinyLife.World.Tile
  name: BaseName
  nameWithType: Tile.BaseName
  fullName: TinyLife.World.Tile.BaseName
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
- uid: TinyLife.World.Tile.ColorSchemes
  commentId: F:TinyLife.World.Tile.ColorSchemes
  parent: TinyLife.World.Tile
  name: ColorSchemes
  nameWithType: Tile.ColorSchemes
  fullName: TinyLife.World.Tile.ColorSchemes
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.World.Tile.Category
  commentId: T:TinyLife.World.Tile.Category
  parent: TinyLife.World
  name: Tile.Category
  nameWithType: Tile.Category
  fullName: TinyLife.World.Tile.Category
  spec.csharp:
  - uid: TinyLife.World.Tile
    name: Tile
  - name: .
  - uid: TinyLife.World.Tile.Category
    name: Category
  spec.vb:
  - uid: TinyLife.World.Tile
    name: Tile
  - name: .
  - uid: TinyLife.World.Tile.Category
    name: Category
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Point, TextureRegion>
  nameWithType: Dictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: Dictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: Dictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.World.Tile.Textures
  commentId: F:TinyLife.World.Tile.Textures
  parent: TinyLife.World.Tile
  name: Textures
  nameWithType: Tile.Textures
  fullName: TinyLife.World.Tile.Textures
- uid: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
  commentId: T:System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Direction2, Point[]>
  nameWithType: Dictionary<Direction2, Point[]>
  fullName: System.Collections.Generic.Dictionary<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>
  nameWithType.vb: Dictionary(Of Direction2, Point())
  fullName.vb: System.Collections.Generic.Dictionary(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point())
  name.vb: Dictionary(Of Direction2, Point())
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: TinyLife.World.Tile.#ctor*
  commentId: Overload:TinyLife.World.Tile.#ctor
  name: Tile
  nameWithType: Tile.Tile
  fullName: TinyLife.World.Tile.Tile
  nameWithType.vb: Tile.New
  fullName.vb: TinyLife.World.Tile.New
  name.vb: New
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: MLEM.Graphics.StaticSpriteBatch
  commentId: T:MLEM.Graphics.StaticSpriteBatch
  isExternal: true
  name: StaticSpriteBatch
  nameWithType: StaticSpriteBatch
  fullName: MLEM.Graphics.StaticSpriteBatch
- uid: MLEM.Graphics.StaticSpriteBatch.Item
  commentId: T:MLEM.Graphics.StaticSpriteBatch.Item
  isExternal: true
  name: StaticSpriteBatch.Item
  nameWithType: StaticSpriteBatch.Item
  fullName: MLEM.Graphics.StaticSpriteBatch.Item
  spec.csharp:
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  spec.vb:
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
- uid: TinyLife.World.Tile.Draw*
  commentId: Overload:TinyLife.World.Tile.Draw
  name: Draw
  nameWithType: Tile.Draw
  fullName: TinyLife.World.Tile.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
  commentId: T:System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<StaticSpriteBatch.Item>
  nameWithType: ICollection<StaticSpriteBatch.Item>
  fullName: System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>
  nameWithType.vb: ICollection(Of StaticSpriteBatch.Item)
  fullName.vb: System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item)
  name.vb: ICollection(Of StaticSpriteBatch.Item)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Tile.DrawUi*
  commentId: Overload:TinyLife.World.Tile.DrawUi
  name: DrawUi
  nameWithType: Tile.DrawUi
  fullName: TinyLife.World.Tile.DrawUi
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.World.Tile.GetPrice*
  commentId: Overload:TinyLife.World.Tile.GetPrice
  name: GetPrice
  nameWithType: Tile.GetPrice
  fullName: TinyLife.World.Tile.GetPrice
- uid: TinyLife.World.GrassyAutoTile
  commentId: T:TinyLife.World.GrassyAutoTile
  parent: TinyLife.World
  name: GrassyAutoTile
  nameWithType: GrassyAutoTile
  fullName: TinyLife.World.GrassyAutoTile
- uid: TinyLife.World.Tile.OnNeighborChanged*
  commentId: Overload:TinyLife.World.Tile.OnNeighborChanged
  name: OnNeighborChanged
  nameWithType: Tile.OnNeighborChanged
  fullName: TinyLife.World.Tile.OnNeighborChanged
- uid: TinyLife.World.Tile.GetVariationTexture*
  commentId: Overload:TinyLife.World.Tile.GetVariationTexture
  name: GetVariationTexture
  nameWithType: Tile.GetVariationTexture
  fullName: TinyLife.World.Tile.GetVariationTexture
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: TinyLife.Options.CameraRotation
  commentId: F:TinyLife.Options.CameraRotation
  name: CameraRotation
  nameWithType: Options.CameraRotation
  fullName: TinyLife.Options.CameraRotation
- uid: TinyLife.World.Tile.GetVisualOffset*
  commentId: Overload:TinyLife.World.Tile.GetVisualOffset
  name: GetVisualOffset
  nameWithType: Tile.GetVisualOffset
  fullName: TinyLife.World.Tile.GetVisualOffset
- uid: TinyLife.World.Tile.Register*
  commentId: Overload:TinyLife.World.Tile.Register
  name: Register
  nameWithType: Tile.Register
  fullName: TinyLife.World.Tile.Register
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}}
  commentId: T:System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Direction2, Point?>
  nameWithType: Func<Direction2, Point?>
  fullName: System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?>
  nameWithType.vb: Func(Of Direction2, Point?)
  fullName.vb: System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?)
  name.vb: Func(Of Direction2, Point?)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.Xna.Framework.Point[]
  isExternal: true
  name: Point[]
  nameWithType: Point[]
  fullName: Microsoft.Xna.Framework.Point[]
  nameWithType.vb: Point()
  fullName.vb: Microsoft.Xna.Framework.Point()
  name.vb: Point()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: (
  - name: )
- uid: System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
  commentId: T:System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Direction2, Point[]>
  nameWithType: Func<Direction2, Point[]>
  fullName: System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>
  nameWithType.vb: Func(Of Direction2, Point())
  fullName.vb: System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point())
  name.vb: Func(Of Direction2, Point())
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: TinyLife.World.Tile[]
  isExternal: true
  name: Tile[]
  nameWithType: Tile[]
  fullName: TinyLife.World.Tile[]
  nameWithType.vb: Tile()
  fullName.vb: TinyLife.World.Tile()
  name.vb: Tile()
  spec.csharp:
  - uid: TinyLife.World.Tile
    name: Tile
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.World.Tile
    name: Tile
  - name: (
  - name: )
