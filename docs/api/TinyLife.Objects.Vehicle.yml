### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Vehicle
  commentId: T:TinyLife.Objects.Vehicle
  id: Vehicle
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Vehicle.#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Vehicle.VehicleType)
  - TinyLife.Objects.Vehicle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  - TinyLife.Objects.Vehicle.Driver
  - TinyLife.Objects.Vehicle.GetSpeed
  - TinyLife.Objects.Vehicle.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  - TinyLife.Objects.Vehicle.OnRemoved
  - TinyLife.Objects.Vehicle.Rotation
  - TinyLife.Objects.Vehicle.Type
  - TinyLife.Objects.Vehicle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Objects.Vehicle.UpdateDriving(TinyLife.Actions.PathfindAction)
  - TinyLife.Objects.Vehicle.Validate
  langs:
  - csharp
  - vb
  name: Vehicle
  nameWithType: Vehicle
  fullName: TinyLife.Objects.Vehicle
  type: Class
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Vehicle
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn instance of this class represents an object that can be, or is, part of a <xref href=\"TinyLife.Objects.MapObject.Map\" data-throw-if-not-resolved=\"false\"></xref>.\nIf this object&apos;s <xref href=\"TinyLife.Objects.MapObject.Position\" data-throw-if-not-resolved=\"false\"></xref> is set to -1, -1, that is usually an indicator that the object is currently not in the world.\n"
  example: []
  syntax:
    content: 'public class Vehicle : MapObject, IGenericDataHolder, IUpdatingObject'
    content.vb: >-
      Public Class Vehicle
          Inherits MapObject
          Implements IGenericDataHolder, IUpdatingObject
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Objects.MapObject
  implements:
  - MLEM.Misc.IGenericDataHolder
  - TinyLife.Objects.IUpdatingObject
  inheritedMembers:
  - TinyLife.Objects.MapObject.PersonRotationOrder
  - TinyLife.Objects.MapObject.OnCreated
  - TinyLife.Objects.MapObject.OnValidated
  - TinyLife.Objects.MapObject.OnEventsAttachable
  - TinyLife.Objects.MapObject.OnDraw
  - TinyLife.Objects.MapObject.OnUpdate
  - TinyLife.Objects.MapObject.Id
  - TinyLife.Objects.MapObject.Map
  - TinyLife.Objects.MapObject.Position
  - TinyLife.Objects.MapObject.CurrentLot
  - TinyLife.Objects.MapObject.IsInWorld
  - TinyLife.Objects.MapObject.Intersects(MLEM.Misc.RectangleF)
  - TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.Person)
  - TinyLife.Objects.MapObject.OnAdded
  - TinyLife.Objects.MapObject.GetHoverInfo
  - TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  - TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  - TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  - TinyLife.Objects.MapObject.GetVisibility
  - TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map)
  - TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  - TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.Person,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  - TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot,MLEM.Misc.Direction2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - TinyLife.Objects.MapObject.GetModCategory(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Vehicle.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Objects.Vehicle.Rotation
  commentId: F:TinyLife.Objects.Vehicle.Rotation
  id: Rotation
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Vehicle.Rotation
  fullName: TinyLife.Objects.Vehicle.Rotation
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Rotation
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe rotation that this car has\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 Rotation
    return:
      type: MLEM.Misc.Direction2
    content.vb: >-
      <DataMember>

      Public Rotation As Direction2
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Vehicle.Driver
  commentId: F:TinyLife.Objects.Vehicle.Driver
  id: Driver
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Driver
  nameWithType: Vehicle.Driver
  fullName: TinyLife.Objects.Vehicle.Driver
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Driver
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe id of the person driving the car\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Guid Driver
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Driver As Guid
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Vehicle.Type
  commentId: F:TinyLife.Objects.Vehicle.Type
  id: Type
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Vehicle.Type
  fullName: TinyLife.Objects.Vehicle.Type
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Type
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe type that this vehicle has\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Vehicle.VehicleType Type
    return:
      type: TinyLife.Objects.Vehicle.VehicleType
    content.vb: >-
      <DataMember>

      Public Type As Vehicle.VehicleType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Vehicle.#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Vehicle.VehicleType)
  commentId: M:TinyLife.Objects.Vehicle.#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Vehicle.VehicleType)
  id: '#ctor(System.Guid,TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Vehicle.VehicleType)'
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Vehicle(Guid, Map, Vector2, Vehicle.VehicleType)
  nameWithType: Vehicle.Vehicle(Guid, Map, Vector2, Vehicle.VehicleType)
  fullName: TinyLife.Objects.Vehicle.Vehicle(System.Guid, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Vehicle.VehicleType)
  type: Constructor
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  example: []
  syntax:
    content: public Vehicle(Guid id, Map map, Vector2 position, Vehicle.VehicleType type)
    parameters:
    - id: id
      type: System.Guid
    - id: map
      type: TinyLife.World.Map
    - id: position
      type: Microsoft.Xna.Framework.Vector2
    - id: type
      type: TinyLife.Objects.Vehicle.VehicleType
    content.vb: Public Sub New(id As Guid, map As Map, position As Vector2, type As Vehicle.VehicleType)
  overload: TinyLife.Objects.Vehicle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Vehicle.UpdateDriving(TinyLife.Actions.PathfindAction)
  commentId: M:TinyLife.Objects.Vehicle.UpdateDriving(TinyLife.Actions.PathfindAction)
  id: UpdateDriving(TinyLife.Actions.PathfindAction)
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: UpdateDriving(PathfindAction)
  nameWithType: Vehicle.UpdateDriving(PathfindAction)
  fullName: TinyLife.Objects.Vehicle.UpdateDriving(TinyLife.Actions.PathfindAction)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UpdateDriving
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 59
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nUpdates this vehicle using the <xref href=\"TinyLife.Actions.PathfindAction\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> is driving this vehicle\n"
  example: []
  syntax:
    content: public virtual void UpdateDriving(PathfindAction action)
    parameters:
    - id: action
      type: TinyLife.Actions.PathfindAction
      description: The action whose <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> is driving this vehicle
    content.vb: Public Overridable Sub UpdateDriving(action As PathfindAction)
  overload: TinyLife.Objects.Vehicle.UpdateDriving*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.Objects.Vehicle.GetSpeed
  commentId: M:TinyLife.Objects.Vehicle.GetSpeed
  id: GetSpeed
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: GetSpeed()
  nameWithType: Vehicle.GetSpeed()
  fullName: TinyLife.Objects.Vehicle.GetSpeed()
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetSpeed
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 82
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nReturns the speed that this vehicle has\n"
  example: []
  syntax:
    content: public virtual float GetSpeed()
    return:
      type: System.Single
      description: This vehicle&apos;s speed
    content.vb: Public Overridable Function GetSpeed As Single
  overload: TinyLife.Objects.Vehicle.GetSpeed*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.Objects.Vehicle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Vehicle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: Vehicle.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Objects.Vehicle.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe update method, which is called every update frame by the underlying <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last call
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Objects.Vehicle.Update*
  implements:
  - TinyLife.Objects.IUpdatingObject.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.Objects.Vehicle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Objects.Vehicle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Vector2, Nullable<Color>)
  nameWithType: Vehicle.Draw(GameTime, SpriteBatch, Vector2, Nullable<Color>)
  fullName: TinyLife.Objects.Vehicle.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, System.Nullable<Microsoft.Xna.Framework.Color>)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 97
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nDraws this object on the current <xref href=\"TinyLife.Objects.MapObject.Map\" data-throw-if-not-resolved=\"false\"></xref>, at the current <xref href=\"TinyLife.Objects.MapObject.Position\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override void Draw(GameTime time, SpriteBatch batch, Vector2 drawPos, Color? overrideColor)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in draw space, to draw this furniture at
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: The color that should be used instead of this object&apos;s actual color. If null, the object&apos;s regular color should be used.
    content.vb: Public Overrides Sub Draw(time As GameTime, batch As SpriteBatch, drawPos As Vector2, overrideColor As Color?)
  overridden: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  overload: TinyLife.Objects.Vehicle.Draw*
  nameWithType.vb: Vehicle.Draw(GameTime, SpriteBatch, Vector2, Nullable(Of Color))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TinyLife.Objects.Vehicle.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, System.Nullable(Of Microsoft.Xna.Framework.Color))
  name.vb: Draw(GameTime, SpriteBatch, Vector2, Nullable(Of Color))
- uid: TinyLife.Objects.Vehicle.Validate
  commentId: M:TinyLife.Objects.Vehicle.Validate
  id: Validate
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Vehicle.Validate()
  fullName: TinyLife.Objects.Vehicle.Validate()
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 106
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis method is called when this object is loaded from disk.\nReturning false on this method causes the object to be removed from the map.\nBy default, this method invokes <xref href=\"TinyLife.Objects.MapObject.OnValidated\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Objects.MapObject.OnEventsAttachable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Validate()
    return:
      type: System.Boolean
      description: false if the object is not valid, true otherwise
    content.vb: Public Overrides Function Validate As Boolean
  overridden: TinyLife.Objects.MapObject.Validate
  overload: TinyLife.Objects.Vehicle.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Objects.Vehicle.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  commentId: M:TinyLife.Objects.Vehicle.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  id: OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: OnCameraRotationChanged(Direction2, Direction2)
  nameWithType: Vehicle.OnCameraRotationChanged(Direction2, Direction2)
  fullName: TinyLife.Objects.Vehicle.OnCameraRotationChanged(MLEM.Misc.Direction2, MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnCameraRotationChanged
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 112
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis method is invoked when the game&apos;s camera rotation changes.\nAdditionally, the old and new rotations are passed.\n"
  example: []
  syntax:
    content: public override void OnCameraRotationChanged(Direction2 oldRotation, Direction2 newRotation)
    parameters:
    - id: oldRotation
      type: MLEM.Misc.Direction2
      description: The old camera rotation
    - id: newRotation
      type: MLEM.Misc.Direction2
      description: The new camera rotation
    content.vb: Public Overrides Sub OnCameraRotationChanged(oldRotation As Direction2, newRotation As Direction2)
  overridden: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  overload: TinyLife.Objects.Vehicle.OnCameraRotationChanged*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Objects.Vehicle.OnRemoved
  commentId: M:TinyLife.Objects.Vehicle.OnRemoved
  id: OnRemoved
  parent: TinyLife.Objects.Vehicle
  langs:
  - csharp
  - vb
  name: OnRemoved()
  nameWithType: Vehicle.OnRemoved()
  fullName: TinyLife.Objects.Vehicle.OnRemoved()
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Vehicle.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnRemoved
    path: ../TinyLife/Objects/Vehicle.cs
    startLine: 118
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis method is called when this object is removed from a <xref href=\"TinyLife.Objects.MapObject.Map\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, it does nothing.\n"
  example: []
  syntax:
    content: public override void OnRemoved()
    content.vb: Public Overrides Sub OnRemoved
  overridden: TinyLife.Objects.MapObject.OnRemoved
  overload: TinyLife.Objects.Vehicle.OnRemoved*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Objects.IUpdatingObject
  commentId: T:TinyLife.Objects.IUpdatingObject
  parent: TinyLife.Objects
  name: IUpdatingObject
  nameWithType: IUpdatingObject
  fullName: TinyLife.Objects.IUpdatingObject
- uid: TinyLife.Objects.MapObject.PersonRotationOrder
  commentId: F:TinyLife.Objects.MapObject.PersonRotationOrder
  parent: TinyLife.Objects.MapObject
  name: PersonRotationOrder
  nameWithType: MapObject.PersonRotationOrder
  fullName: TinyLife.Objects.MapObject.PersonRotationOrder
- uid: TinyLife.Objects.MapObject.OnCreated
  commentId: E:TinyLife.Objects.MapObject.OnCreated
  parent: TinyLife.Objects.MapObject
  name: OnCreated
  nameWithType: MapObject.OnCreated
  fullName: TinyLife.Objects.MapObject.OnCreated
- uid: TinyLife.Objects.MapObject.OnValidated
  commentId: E:TinyLife.Objects.MapObject.OnValidated
  parent: TinyLife.Objects.MapObject
  name: OnValidated
  nameWithType: MapObject.OnValidated
  fullName: TinyLife.Objects.MapObject.OnValidated
- uid: TinyLife.Objects.MapObject.OnEventsAttachable
  commentId: E:TinyLife.Objects.MapObject.OnEventsAttachable
  parent: TinyLife.Objects.MapObject
  name: OnEventsAttachable
  nameWithType: MapObject.OnEventsAttachable
  fullName: TinyLife.Objects.MapObject.OnEventsAttachable
- uid: TinyLife.Objects.MapObject.OnDraw
  commentId: E:TinyLife.Objects.MapObject.OnDraw
  parent: TinyLife.Objects.MapObject
  name: OnDraw
  nameWithType: MapObject.OnDraw
  fullName: TinyLife.Objects.MapObject.OnDraw
- uid: TinyLife.Objects.MapObject.OnUpdate
  commentId: E:TinyLife.Objects.MapObject.OnUpdate
  parent: TinyLife.Objects.MapObject
  name: OnUpdate
  nameWithType: MapObject.OnUpdate
  fullName: TinyLife.Objects.MapObject.OnUpdate
- uid: TinyLife.Objects.MapObject.Id
  commentId: P:TinyLife.Objects.MapObject.Id
  parent: TinyLife.Objects.MapObject
  name: Id
  nameWithType: MapObject.Id
  fullName: TinyLife.Objects.MapObject.Id
- uid: TinyLife.Objects.MapObject.Map
  commentId: P:TinyLife.Objects.MapObject.Map
  parent: TinyLife.Objects.MapObject
  name: Map
  nameWithType: MapObject.Map
  fullName: TinyLife.Objects.MapObject.Map
- uid: TinyLife.Objects.MapObject.Position
  commentId: P:TinyLife.Objects.MapObject.Position
  parent: TinyLife.Objects.MapObject
  name: Position
  nameWithType: MapObject.Position
  fullName: TinyLife.Objects.MapObject.Position
- uid: TinyLife.Objects.MapObject.CurrentLot
  commentId: P:TinyLife.Objects.MapObject.CurrentLot
  parent: TinyLife.Objects.MapObject
  name: CurrentLot
  nameWithType: MapObject.CurrentLot
  fullName: TinyLife.Objects.MapObject.CurrentLot
- uid: TinyLife.Objects.MapObject.IsInWorld
  commentId: P:TinyLife.Objects.MapObject.IsInWorld
  parent: TinyLife.Objects.MapObject
  name: IsInWorld
  nameWithType: MapObject.IsInWorld
  fullName: TinyLife.Objects.MapObject.IsInWorld
- uid: TinyLife.Objects.MapObject.Intersects(MLEM.Misc.RectangleF)
  commentId: M:TinyLife.Objects.MapObject.Intersects(MLEM.Misc.RectangleF)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: Intersects(RectangleF)
  nameWithType: MapObject.Intersects(RectangleF)
  fullName: TinyLife.Objects.MapObject.Intersects(MLEM.Misc.RectangleF)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Intersects(MLEM.Misc.RectangleF)
    name: Intersects
    nameWithType: MapObject.Intersects
    fullName: TinyLife.Objects.MapObject.Intersects
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Intersects(MLEM.Misc.RectangleF)
    name: Intersects
    nameWithType: MapObject.Intersects
    fullName: TinyLife.Objects.MapObject.Intersects
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    nameWithType: RectangleF
    fullName: MLEM.Misc.RectangleF
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.Person)
  commentId: M:TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.Person)
  parent: TinyLife.Objects.MapObject
  name: GetCategories(Person)
  nameWithType: MapObject.GetCategories(Person)
  fullName: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.Person)
    name: GetCategories
    nameWithType: MapObject.GetCategories
    fullName: TinyLife.Objects.MapObject.GetCategories
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetCategories(TinyLife.Objects.Person)
    name: GetCategories
    nameWithType: MapObject.GetCategories
    fullName: TinyLife.Objects.MapObject.GetCategories
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.OnAdded
  commentId: M:TinyLife.Objects.MapObject.OnAdded
  parent: TinyLife.Objects.MapObject
  name: OnAdded()
  nameWithType: MapObject.OnAdded()
  fullName: TinyLife.Objects.MapObject.OnAdded()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnAdded
    name: OnAdded
    nameWithType: MapObject.OnAdded
    fullName: TinyLife.Objects.MapObject.OnAdded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnAdded
    name: OnAdded
    nameWithType: MapObject.OnAdded
    fullName: TinyLife.Objects.MapObject.OnAdded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetHoverInfo
  commentId: M:TinyLife.Objects.MapObject.GetHoverInfo
  parent: TinyLife.Objects.MapObject
  name: GetHoverInfo()
  nameWithType: MapObject.GetHoverInfo()
  fullName: TinyLife.Objects.MapObject.GetHoverInfo()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetHoverInfo
    name: GetHoverInfo
    nameWithType: MapObject.GetHoverInfo
    fullName: TinyLife.Objects.MapObject.GetHoverInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetHoverInfo
    name: GetHoverInfo
    nameWithType: MapObject.GetHoverInfo
    fullName: TinyLife.Objects.MapObject.GetHoverInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  name: GetAiPriority(Person, ObjectCategory)
  nameWithType: MapObject.GetAiPriority(Person, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
    name: GetAiPriority
    nameWithType: MapObject.GetAiPriority
    fullName: TinyLife.Objects.MapObject.GetAiPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetAiPriority(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
    name: GetAiPriority
    nameWithType: MapObject.GetAiPriority
    fullName: TinyLife.Objects.MapObject.GetAiPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
  nameWithType: MapObject.CanExecuteAction(ActionType, ActionInfo, Boolean, Boolean)
  fullName: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
    name: CanExecuteAction
    nameWithType: MapObject.CanExecuteAction
    fullName: TinyLife.Objects.MapObject.CanExecuteAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,System.Boolean)
    name: CanExecuteAction
    nameWithType: MapObject.CanExecuteAction
    fullName: TinyLife.Objects.MapObject.CanExecuteAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: OnActionCompleted(Action, CompletionType, Boolean)
  nameWithType: MapObject.OnActionCompleted(Action, CompletionType, Boolean)
  fullName: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnActionCompleted
    nameWithType: MapObject.OnActionCompleted
    fullName: TinyLife.Objects.MapObject.OnActionCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnActionCompleted
    nameWithType: MapObject.OnActionCompleted
    fullName: TinyLife.Objects.MapObject.OnActionCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  nameWithType: MapObject.ActionUpdate(Action, GameTime, TimeSpan, Single, Boolean)
  fullName: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
    name: ActionUpdate
    nameWithType: MapObject.ActionUpdate
    fullName: TinyLife.Objects.MapObject.ActionUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single,System.Boolean)
    name: ActionUpdate
    nameWithType: MapObject.ActionUpdate
    fullName: TinyLife.Objects.MapObject.ActionUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetVisibility
  commentId: M:TinyLife.Objects.MapObject.GetVisibility
  parent: TinyLife.Objects.MapObject
  name: GetVisibility()
  nameWithType: MapObject.GetVisibility()
  fullName: TinyLife.Objects.MapObject.GetVisibility()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetVisibility
    name: GetVisibility
    nameWithType: MapObject.GetVisibility
    fullName: TinyLife.Objects.MapObject.GetVisibility
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetVisibility
    name: GetVisibility
    nameWithType: MapObject.GetVisibility
    fullName: TinyLife.Objects.MapObject.GetVisibility
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  name: GetFreeActionSpotInfo(Person, ObjectCategory)
  nameWithType: MapObject.GetFreeActionSpotInfo(Person, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfo
    nameWithType: MapObject.GetFreeActionSpotInfo
    fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetFreeActionSpotInfo(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
    name: GetFreeActionSpotInfo
    nameWithType: MapObject.GetFreeActionSpotInfo
    fullName: TinyLife.Objects.MapObject.GetFreeActionSpotInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map)
  commentId: M:TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map)
  parent: TinyLife.Objects.MapObject
  name: SetMapAndValidate(Map)
  nameWithType: MapObject.SetMapAndValidate(Map)
  fullName: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map)
    name: SetMapAndValidate
    nameWithType: MapObject.SetMapAndValidate
    fullName: TinyLife.Objects.MapObject.SetMapAndValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.SetMapAndValidate(TinyLife.World.Map)
    name: SetMapAndValidate
    nameWithType: MapObject.SetMapAndValidate
    fullName: TinyLife.Objects.MapObject.SetMapAndValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Objects.MapObject
  name: HasCategory(Person, ObjectCategory)
  nameWithType: MapObject.HasCategory(Person, ObjectCategory)
  fullName: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
    name: HasCategory
    nameWithType: MapObject.HasCategory
    fullName: TinyLife.Objects.MapObject.HasCategory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.HasCategory(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory)
    name: HasCategory
    nameWithType: MapObject.HasCategory
    fullName: TinyLife.Objects.MapObject.HasCategory
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.Person,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.Person,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: GetEfficiencyModifier(Person, ActionInfo, Boolean, SkillType, Single)
  nameWithType: MapObject.GetEfficiencyModifier(Person, ActionInfo, Boolean, SkillType, Single)
  fullName: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.Person, TinyLife.Actions.ActionInfo, System.Boolean, TinyLife.Skills.SkillType, System.Single)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.Person,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    nameWithType: MapObject.GetEfficiencyModifier
    fullName: TinyLife.Objects.MapObject.GetEfficiencyModifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    nameWithType: SkillType
    fullName: TinyLife.Skills.SkillType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetEfficiencyModifier(TinyLife.Objects.Person,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Skills.SkillType,System.Single)
    name: GetEfficiencyModifier
    nameWithType: MapObject.GetEfficiencyModifier
    fullName: TinyLife.Objects.MapObject.GetEfficiencyModifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    nameWithType: SkillType
    fullName: TinyLife.Skills.SkillType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot,MLEM.Misc.Direction2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot,MLEM.Misc.Direction2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: DrawColumns(Map, Vector2, SpriteBatch, Vector2, TextureRegion, Color, Single, Point, Boolean, Furniture, AbstractSpot, Direction2, Single, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: MapObject.DrawColumns(Map, Vector2, SpriteBatch, Vector2, TextureRegion, Color, Single, Point, Boolean, Furniture, AbstractSpot, Direction2, Single, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, System.Single, Microsoft.Xna.Framework.Point, System.Boolean, TinyLife.Objects.Furniture, TinyLife.Objects.AbstractSpot, MLEM.Misc.Direction2, System.Single, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot,MLEM.Misc.Direction2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: DrawColumns
    nameWithType: MapObject.DrawColumns
    fullName: TinyLife.Objects.MapObject.DrawColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.AbstractSpot
    name: AbstractSpot
    nameWithType: AbstractSpot
    fullName: TinyLife.Objects.AbstractSpot
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DrawColumns(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Point,System.Boolean,TinyLife.Objects.Furniture,TinyLife.Objects.AbstractSpot,MLEM.Misc.Direction2,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: DrawColumns
    nameWithType: MapObject.DrawColumns
    fullName: TinyLife.Objects.MapObject.DrawColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.AbstractSpot
    name: AbstractSpot
    nameWithType: AbstractSpot
    fullName: TinyLife.Objects.AbstractSpot
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.GetModCategory(System.String)
  commentId: M:TinyLife.Objects.MapObject.GetModCategory(System.String)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: GetModCategory(String)
  nameWithType: MapObject.GetModCategory(String)
  fullName: TinyLife.Objects.MapObject.GetModCategory(System.String)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.GetModCategory(System.String)
    name: GetModCategory
    nameWithType: MapObject.GetModCategory
    fullName: TinyLife.Objects.MapObject.GetModCategory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.GetModCategory(System.String)
    name: GetModCategory
    nameWithType: MapObject.GetModCategory
    fullName: TinyLife.Objects.MapObject.GetModCategory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Vehicle.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Vehicle>()
  nameWithType: Extensions.JsonCopy<Vehicle>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Vehicle>()
  nameWithType.vb: Extensions.JsonCopy(Of Vehicle)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Vehicle)()
  name.vb: JsonCopy(Of Vehicle)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Vehicle>
    nameWithType: Extensions.JsonCopy<Vehicle>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Vehicle>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Vehicle)
    nameWithType: Extensions.JsonCopy(Of Vehicle)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Vehicle)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TinyLife.Objects.Vehicle.VehicleType
  commentId: T:TinyLife.Objects.Vehicle.VehicleType
  parent: TinyLife.Objects
  name: Vehicle.VehicleType
  nameWithType: Vehicle.VehicleType
  fullName: TinyLife.Objects.Vehicle.VehicleType
- uid: TinyLife.Objects.Vehicle.#ctor*
  commentId: Overload:TinyLife.Objects.Vehicle.#ctor
  name: Vehicle
  nameWithType: Vehicle.Vehicle
  fullName: TinyLife.Objects.Vehicle.Vehicle
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: TinyLife.Actions.PathfindAction
  commentId: T:TinyLife.Actions.PathfindAction
  parent: TinyLife.Actions
  name: PathfindAction
  nameWithType: PathfindAction
  fullName: TinyLife.Actions.PathfindAction
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: TinyLife.Objects.Vehicle.UpdateDriving*
  commentId: Overload:TinyLife.Objects.Vehicle.UpdateDriving
  name: UpdateDriving
  nameWithType: Vehicle.UpdateDriving
  fullName: TinyLife.Objects.Vehicle.UpdateDriving
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Objects.Vehicle.GetSpeed*
  commentId: Overload:TinyLife.Objects.Vehicle.GetSpeed
  name: GetSpeed
  nameWithType: Vehicle.GetSpeed
  fullName: TinyLife.Objects.Vehicle.GetSpeed
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Objects.Vehicle.Update*
  commentId: Overload:TinyLife.Objects.Vehicle.Update
  name: Update
  nameWithType: Vehicle.Update
  fullName: TinyLife.Objects.Vehicle.Update
- uid: TinyLife.Objects.IUpdatingObject.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.IUpdatingObject.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.IUpdatingObject
  isExternal: true
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: IUpdatingObject.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Objects.IUpdatingObject.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  spec.csharp:
  - uid: TinyLife.Objects.IUpdatingObject.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: IUpdatingObject.Update
    fullName: TinyLife.Objects.IUpdatingObject.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.IUpdatingObject.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: IUpdatingObject.Update
    fullName: TinyLife.Objects.IUpdatingObject.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: Draw(GameTime, SpriteBatch, Vector2, Nullable<Color>)
  nameWithType: MapObject.Draw(GameTime, SpriteBatch, Vector2, Nullable<Color>)
  fullName: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, System.Nullable<Microsoft.Xna.Framework.Color>)
  nameWithType.vb: MapObject.Draw(GameTime, SpriteBatch, Vector2, Nullable(Of Color))
  fullName.vb: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, System.Nullable(Of Microsoft.Xna.Framework.Color))
  name.vb: Draw(GameTime, SpriteBatch, Vector2, Nullable(Of Color))
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
    nameWithType: MapObject.Draw
    fullName: TinyLife.Objects.MapObject.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
    nameWithType: MapObject.Draw
    fullName: TinyLife.Objects.MapObject.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Vehicle.Draw*
  commentId: Overload:TinyLife.Objects.Vehicle.Draw
  name: Draw
  nameWithType: Vehicle.Draw
  fullName: TinyLife.Objects.Vehicle.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<Microsoft.Xna.Framework.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of Microsoft.Xna.Framework.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject.Validate
  commentId: M:TinyLife.Objects.MapObject.Validate
  parent: TinyLife.Objects.MapObject
  name: Validate()
  nameWithType: MapObject.Validate()
  fullName: TinyLife.Objects.MapObject.Validate()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.Validate
    name: Validate
    nameWithType: MapObject.Validate
    fullName: TinyLife.Objects.MapObject.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.Validate
    name: Validate
    nameWithType: MapObject.Validate
    fullName: TinyLife.Objects.MapObject.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Vehicle.Validate*
  commentId: Overload:TinyLife.Objects.Vehicle.Validate
  name: Validate
  nameWithType: Vehicle.Validate
  fullName: TinyLife.Objects.Vehicle.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  commentId: M:TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: OnCameraRotationChanged(Direction2, Direction2)
  nameWithType: MapObject.OnCameraRotationChanged(Direction2, Direction2)
  fullName: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Misc.Direction2, MLEM.Misc.Direction2)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
    name: OnCameraRotationChanged
    nameWithType: MapObject.OnCameraRotationChanged
    fullName: TinyLife.Objects.MapObject.OnCameraRotationChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
    name: OnCameraRotationChanged
    nameWithType: MapObject.OnCameraRotationChanged
    fullName: TinyLife.Objects.MapObject.OnCameraRotationChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Vehicle.OnCameraRotationChanged*
  commentId: Overload:TinyLife.Objects.Vehicle.OnCameraRotationChanged
  name: OnCameraRotationChanged
  nameWithType: Vehicle.OnCameraRotationChanged
  fullName: TinyLife.Objects.Vehicle.OnCameraRotationChanged
- uid: TinyLife.Objects.MapObject.OnRemoved
  commentId: M:TinyLife.Objects.MapObject.OnRemoved
  parent: TinyLife.Objects.MapObject
  name: OnRemoved()
  nameWithType: MapObject.OnRemoved()
  fullName: TinyLife.Objects.MapObject.OnRemoved()
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.OnRemoved
    name: OnRemoved
    nameWithType: MapObject.OnRemoved
    fullName: TinyLife.Objects.MapObject.OnRemoved
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.OnRemoved
    name: OnRemoved
    nameWithType: MapObject.OnRemoved
    fullName: TinyLife.Objects.MapObject.OnRemoved
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Vehicle.OnRemoved*
  commentId: Overload:TinyLife.Objects.Vehicle.OnRemoved
  name: OnRemoved
  nameWithType: Vehicle.OnRemoved
  fullName: TinyLife.Objects.Vehicle.OnRemoved
