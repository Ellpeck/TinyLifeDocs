### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Person.EfficiencyModifierDelegate
  commentId: T:TinyLife.Objects.Person.EfficiencyModifierDelegate
  id: Person.EfficiencyModifierDelegate
  parent: TinyLife.Objects
  children: []
  langs:
  - csharp
  - vb
  name: Person.EfficiencyModifierDelegate
  nameWithType: Person.EfficiencyModifierDelegate
  fullName: TinyLife.Objects.Person.EfficiencyModifierDelegate
  type: Delegate
  source:
    remote:
      path: TinyLife/Objects/Person.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EfficiencyModifierDelegate
    path: ../TinyLife/Objects/Person.cs
    startLine: 2591
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA delegate used for <xref href=\"TinyLife.Objects.Person.OnGetEfficiencyModifier\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public delegate void EfficiencyModifierDelegate(float speedMultiplier, ActionInfo info, SkillType skill, float levelModifier, ref float efficiency);
    parameters:
    - id: speedMultiplier
      type: System.Single
    - id: info
      type: TinyLife.Actions.ActionInfo
    - id: skill
      type: TinyLife.Skills.SkillType
    - id: levelModifier
      type: System.Single
    - id: efficiency
      type: System.Single
    content.vb: Public Delegate Sub EfficiencyModifierDelegate(speedMultiplier As Single, info As ActionInfo, skill As SkillType, levelModifier As Single, ByRef efficiency As Single)
  extensionMethods:
  - TinyLife.Objects.Person.EfficiencyModifierDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: TinyLife.Objects.Person.OnGetEfficiencyModifier
  commentId: E:TinyLife.Objects.Person.OnGetEfficiencyModifier
  isExternal: true
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Objects.Person.EfficiencyModifierDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Person.EfficiencyModifierDelegate>()
  nameWithType: Extensions.JsonCopy<Person.EfficiencyModifierDelegate>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Person.EfficiencyModifierDelegate>()
  nameWithType.vb: Extensions.JsonCopy(Of Person.EfficiencyModifierDelegate)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Person.EfficiencyModifierDelegate)()
  name.vb: JsonCopy(Of Person.EfficiencyModifierDelegate)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Person.EfficiencyModifierDelegate>
    nameWithType: Extensions.JsonCopy<Person.EfficiencyModifierDelegate>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Person.EfficiencyModifierDelegate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Person.EfficiencyModifierDelegate)
    nameWithType: Extensions.JsonCopy(Of Person.EfficiencyModifierDelegate)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Person.EfficiencyModifierDelegate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
