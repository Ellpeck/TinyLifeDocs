### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.HelpAction
  commentId: T:TinyLife.Actions.HelpAction
  id: HelpAction
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.HelpAction.#ctor(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)
  - TinyLife.Actions.HelpAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)
  - TinyLife.Actions.HelpAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.HelpAction.CanMultitask(TinyLife.Actions.Action)
  - TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
  - TinyLife.Actions.HelpAction.CreateFirstActions
  - TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.HelpAction.GetNextAction(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.HelpAction.GetProgress
  - TinyLife.Actions.HelpAction.HelpedAction
  - TinyLife.Actions.HelpAction.Helper
  - TinyLife.Actions.HelpAction.InitializeConversation
  - TinyLife.Actions.HelpAction.IsHelper
  - TinyLife.Actions.HelpAction.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  - TinyLife.Actions.HelpAction.OnHelpedActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType)
  - TinyLife.Actions.HelpAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.HelpAction.UpdateHelpedAction(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.HelpAction.Validate(TinyLife.Objects.Person)
  langs:
  - csharp
  - vb
  name: HelpAction
  nameWithType: HelpAction
  fullName: TinyLife.Actions.HelpAction
  type: Class
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HelpAction
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 15
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action class derived from <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref> that represents a complex action that involves a person being helped by a helper, and that can be started from both parties (&quot;Ask for Help&quot; and &quot;Offer Help&quot;). An action type for actions of this class should be created using <xref href=\"TinyLife.Actions.HelpAction.CreateActions(System.String%2cTinyLife.Objects.ObjectCategory%2cSystem.Type%2cTinyLife.Actions.ActionType.CanExecuteDelegate%2cTinyLife.Actions.ActionType.CanExecuteDelegate%2cSystem.Nullable%7bTinyLife.Actions.ActionType.AiSettings%7d%2cSystem.Nullable%7bTinyLife.Actions.ActionType.AiSettings%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class HelpAction : SocialAction, IGenericDataHolder'
    content.vb: Public MustInherit Class HelpAction Inherits SocialAction Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Actions.Action
  - TinyLife.Actions.MultiAction
  - TinyLife.Actions.SocialAction
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Actions.SocialAction.IsMain
  - TinyLife.Actions.SocialAction.Partner
  - TinyLife.Actions.SocialAction.PartnerAction
  - TinyLife.Actions.SocialAction.MainAction
  - TinyLife.Actions.SocialAction.ConversationTime
  - TinyLife.Actions.SocialAction.InProgressTime
  - TinyLife.Actions.SocialAction.IsConversationCompleted
  - TinyLife.Actions.SocialAction.GetMaxWaitTime
  - TinyLife.Actions.SocialAction.EnqueuePartnerAction(TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.SocialAction.GetPartnerVariety(TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.SocialAction.OnBothCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.SocialAction.AndThenIsCompleted
  - TinyLife.Actions.SocialAction.AndThenInitialize
  - TinyLife.Actions.SocialAction.CanCancel(TinyLife.Actions.Action)
  - TinyLife.Actions.SocialAction.CanStartNow
  - TinyLife.Actions.SocialAction.GetDisplayName
  - TinyLife.Actions.SocialAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  - TinyLife.Actions.SocialAction.InvokeForBoth(System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  - TinyLife.Actions.SocialAction.IsHelper(System.Boolean)
  - TinyLife.Actions.SocialAction.GetHelper(System.Boolean)
  - TinyLife.Actions.SocialAction.GetRecipientAction(System.Boolean)
  - TinyLife.Actions.SocialAction.CreateAskOffer(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.CanExecuteResult})
  - TinyLife.Actions.MultiAction.Handler
  - TinyLife.Actions.MultiAction.MainElapsedTime
  - TinyLife.Actions.MultiAction.CurrentStage
  - TinyLife.Actions.MultiAction.CreateLastActions
  - TinyLife.Actions.MultiAction.PreInitialize
  - TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.MultiAction.Initialize
  - TinyLife.Actions.MultiAction.IsCompleted
  - TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  - TinyLife.Actions.Action.Random
  - TinyLife.Actions.Action.FullyInProgress
  - TinyLife.Actions.Action.Type
  - TinyLife.Actions.Action.Info
  - TinyLife.Actions.Action.Id
  - TinyLife.Actions.Action.StartedAutomatically
  - TinyLife.Actions.Action.Parent
  - TinyLife.Actions.Action.Person
  - TinyLife.Actions.Action.ElapsedTime
  - TinyLife.Actions.Action.PlayerPromptOpen
  - TinyLife.Actions.Action.ForceResult
  - TinyLife.Actions.Action.GetIconObject
  - TinyLife.Actions.Action.CausesExtremelyFastSpeed
  - TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  - TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
  - TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
  - TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
  - TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  - TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32,System.Single,System.Single,System.Single,System.Single)
  - TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,System.Single,System.Single,System.Single,System.Single,System.Int32)
  - TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
  - TinyLife.Actions.Action.ResetSpeech
  - TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  - TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
  - TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  - TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
  - TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Action.GetChildren(System.Boolean)
  - TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
  - TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  - TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  - TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  - TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  - TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  - TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
  - TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  - TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  - TinyLife.Actions.Action.IsInappropriate(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.Action.IsLotContentVisible(TinyLife.World.Lot,TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.HelpAction.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.HelpAction.IsHelper
  commentId: P:TinyLife.Actions.HelpAction.IsHelper
  id: IsHelper
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: IsHelper
  nameWithType: HelpAction.IsHelper
  fullName: TinyLife.Actions.HelpAction.IsHelper
  type: Property
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsHelper
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns whether this action belongs to the helper.\n"
  example: []
  syntax:
    content: protected bool IsHelper { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property IsHelper As Boolean
  overload: TinyLife.Actions.HelpAction.IsHelper*
- uid: TinyLife.Actions.HelpAction.HelpedAction
  commentId: P:TinyLife.Actions.HelpAction.HelpedAction
  id: HelpedAction
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: HelpedAction
  nameWithType: HelpAction.HelpedAction
  fullName: TinyLife.Actions.HelpAction.HelpedAction
  type: Property
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HelpedAction
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the action that is currently being helped, which is based on whether this action belongs to the <xref href=\"TinyLife.Actions.HelpAction.Helper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected Action HelpedAction { get; }
    parameters: []
    return:
      type: TinyLife.Actions.Action
    content.vb: Protected ReadOnly Property HelpedAction As Action
  overload: TinyLife.Actions.HelpAction.HelpedAction*
- uid: TinyLife.Actions.HelpAction.Helper
  commentId: P:TinyLife.Actions.HelpAction.Helper
  id: Helper
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: Helper
  nameWithType: HelpAction.Helper
  fullName: TinyLife.Actions.HelpAction.Helper
  type: Property
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Helper
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the helper, which is the person for whom <xref href=\"TinyLife.Actions.HelpAction.IsHelper\" data-throw-if-not-resolved=\"false\"></xref> is <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool\">true</a>.\n"
  example: []
  syntax:
    content: protected Person Helper { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Protected ReadOnly Property Helper As Person
  overload: TinyLife.Actions.HelpAction.Helper*
- uid: TinyLife.Actions.HelpAction.#ctor(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.HelpAction.#ctor(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)
  id: '#ctor(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)'
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: HelpAction(ActionInfo, bool, Person)
  nameWithType: HelpAction.HelpAction(ActionInfo, bool, Person)
  fullName: TinyLife.Actions.HelpAction.HelpAction(TinyLife.Actions.ActionInfo, bool, TinyLife.Objects.Person)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  example: []
  syntax:
    content: public HelpAction(ActionInfo info, bool wasOffered, Person person = null)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
    - id: wasOffered
      type: System.Boolean
    - id: person
      type: TinyLife.Objects.Person
    content.vb: Public Sub New(info As ActionInfo, wasOffered As Boolean, person As Person = Nothing)
  overload: TinyLife.Actions.HelpAction.#ctor*
  nameWithType.vb: HelpAction.New(ActionInfo, Boolean, Person)
  fullName.vb: TinyLife.Actions.HelpAction.New(TinyLife.Actions.ActionInfo, Boolean, TinyLife.Objects.Person)
  name.vb: New(ActionInfo, Boolean, Person)
- uid: TinyLife.Actions.HelpAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.HelpAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)
  id: '#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Objects.Person)'
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: HelpAction(ActionType, ActionInfo, bool, Person)
  nameWithType: HelpAction.HelpAction(ActionType, ActionInfo, bool, Person)
  fullName: TinyLife.Actions.HelpAction.HelpAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, TinyLife.Objects.Person)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  example: []
  syntax:
    content: public HelpAction(ActionType type, ActionInfo info, bool wasOffered, Person person = null)
    parameters:
    - id: type
      type: TinyLife.Actions.ActionType
    - id: info
      type: TinyLife.Actions.ActionInfo
    - id: wasOffered
      type: System.Boolean
    - id: person
      type: TinyLife.Objects.Person
    content.vb: Public Sub New(type As ActionType, info As ActionInfo, wasOffered As Boolean, person As Person = Nothing)
  overload: TinyLife.Actions.HelpAction.#ctor*
  nameWithType.vb: HelpAction.New(ActionType, ActionInfo, Boolean, Person)
  fullName.vb: TinyLife.Actions.HelpAction.New(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Objects.Person)
  name.vb: New(ActionType, ActionInfo, Boolean, Person)
- uid: TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  id: CreateHelpedAction(TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: CreateHelpedAction(ActionInfo)
  nameWithType: HelpAction.CreateHelpedAction(ActionInfo)
  fullName: TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateHelpedAction
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 60
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA method that is called when the action that is being helped with should be created.\nThe passed <code data-dev-comment-type=\"paramref\" class=\"paramref\">mainInfo</code> should be used as the action&apos;s <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected abstract Action CreateHelpedAction(ActionInfo mainInfo)
    parameters:
    - id: mainInfo
      type: TinyLife.Actions.ActionInfo
      description: The info for the helped action.
    return:
      type: TinyLife.Actions.Action
      description: The helped action.
    content.vb: Protected MustOverride Function CreateHelpedAction(mainInfo As ActionInfo) As Action
  overload: TinyLife.Actions.HelpAction.CreateHelpedAction*
- uid: TinyLife.Actions.HelpAction.UpdateHelpedAction(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.HelpAction.UpdateHelpedAction(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: UpdateHelpedAction(TinyLife.Actions.Action,Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: UpdateHelpedAction(Action, GameTime, TimeSpan, float)
  nameWithType: HelpAction.UpdateHelpedAction(Action, GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.HelpAction.UpdateHelpedAction(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UpdateHelpedAction
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 69
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA method that is called when the helped action (created using <xref href=\"TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)\" data-throw-if-not-resolved=\"false\"></xref>) is updated.\n"
  example: []
  syntax:
    content: protected abstract void UpdateHelpedAction(Action helpedAction, GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: helpedAction
      type: TinyLife.Actions.Action
      description: The helped action.
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time.
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time passed in game.
    - id: speedMultiplier
      type: System.Single
      description: The game&apos;s speed multiplier.
    content.vb: Protected MustOverride Sub UpdateHelpedAction(helpedAction As Action, time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Actions.HelpAction.UpdateHelpedAction*
  nameWithType.vb: HelpAction.UpdateHelpedAction(Action, GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.HelpAction.UpdateHelpedAction(TinyLife.Actions.Action, Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: UpdateHelpedAction(Action, GameTime, TimeSpan, Single)
- uid: TinyLife.Actions.HelpAction.OnHelpedActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.HelpAction.OnHelpedActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType)
  id: OnHelpedActionCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: OnHelpedActionCompleted(Action, CompletionType)
  nameWithType: HelpAction.OnHelpedActionCompleted(Action, CompletionType)
  fullName: TinyLife.Actions.HelpAction.OnHelpedActionCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnHelpedActionCompleted
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 76
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA method that is called when the helped action (created using <xref href=\"TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)\" data-throw-if-not-resolved=\"false\"></xref>) is completed.\n"
  example: []
  syntax:
    content: protected virtual void OnHelpedActionCompleted(Action helpedAction, CompletionType type)
    parameters:
    - id: helpedAction
      type: TinyLife.Actions.Action
      description: The helped action.
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The completion type.
    content.vb: Protected Overridable Sub OnHelpedActionCompleted(helpedAction As Action, type As CompletionType)
  overload: TinyLife.Actions.HelpAction.OnHelpedActionCompleted*
- uid: TinyLife.Actions.HelpAction.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.HelpAction.CanMultitask(TinyLife.Actions.Action)
  id: CanMultitask(TinyLife.Actions.Action)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: CanMultitask(Action)
  nameWithType: HelpAction.CanMultitask(Action)
  fullName: TinyLife.Actions.HelpAction.CanMultitask(TinyLife.Actions.Action)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanMultitask
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturn true on this method if this action can be multi-tasked along with the passed <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref>.\nTo actually check this property, <xref href=\"TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action%2cTinyLife.Actions.Action)\" data-throw-if-not-resolved=\"false\"></xref> should be used as it compares both objects.\nA multi-tasking is an action that is currently active along with another action.\nBy default, multi-tasking is disallowed for any action.\n"
  example: []
  syntax:
    content: public override bool CanMultitask(Action other)
    parameters:
    - id: other
      type: TinyLife.Actions.Action
      description: The action to multi-task with
    return:
      type: System.Boolean
      description: Whether this action can be multi-tasked
    content.vb: Public Overrides Function CanMultitask(other As Action) As Boolean
  overridden: TinyLife.Actions.SocialAction.CanMultitask(TinyLife.Actions.Action)
  overload: TinyLife.Actions.HelpAction.CanMultitask*
- uid: TinyLife.Actions.HelpAction.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.HelpAction.Validate(TinyLife.Objects.Person)
  id: Validate(TinyLife.Objects.Person)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: Validate(Person)
  nameWithType: HelpAction.Validate(Person)
  fullName: TinyLife.Actions.HelpAction.Validate(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 86
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nValidates this action&apos;s data.\nThis is called when a map is loaded from disk.\nWhen returning false on this method, the action is removed from the <xref href=\"TinyLife.Actions.Action.Person\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool Validate(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that this action belongs to
    return:
      type: System.Boolean
      description: Whether or not the action is still valid (or if it has invalid data)
    content.vb: Public Overrides Function Validate(person As Person) As Boolean
  overridden: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  overload: TinyLife.Actions.HelpAction.Validate*
- uid: TinyLife.Actions.HelpAction.GetNextAction(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.HelpAction.GetNextAction(TinyLife.Actions.CompletionType)
  id: GetNextAction(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: GetNextAction(CompletionType)
  nameWithType: HelpAction.GetNextAction(CompletionType)
  fullName: TinyLife.Actions.HelpAction.GetNextAction(TinyLife.Actions.CompletionType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetNextAction
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns an action that should be queued up immediately after this action completes.\nThe queued up action is immediately started in the slot that this action occupied.\nCan be null, and is null by default.\n"
  example: []
  syntax:
    content: public override Action GetNextAction(CompletionType completion)
    parameters:
    - id: completion
      type: TinyLife.Actions.CompletionType
      description: The type that this action completed with
    return:
      type: TinyLife.Actions.Action
      description: The follow-up action
    content.vb: Public Overrides Function GetNextAction(completion As CompletionType) As Action
  overridden: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  overload: TinyLife.Actions.HelpAction.GetNextAction*
- uid: TinyLife.Actions.HelpAction.GetProgress
  commentId: M:TinyLife.Actions.HelpAction.GetProgress
  id: GetProgress
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: GetProgress()
  nameWithType: HelpAction.GetProgress()
  fullName: TinyLife.Actions.HelpAction.GetProgress()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetProgress
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 96
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nOptionally returns the progress that this action&apos;s execution currently exhibits, in a range between 0 and 1.\nThe returned progress will be displayed below the action icon in the top left as a green bar that is expected to fill up slowly as progress is made.\nReturning an empty value causes no progress bar to be displayed, and is also the default behavior.\n"
  example: []
  syntax:
    content: public override float? GetProgress()
    return:
      type: System.Nullable{System.Single}
      description: This action&apos;s progress.
    content.vb: Public Overrides Function GetProgress() As Single?
  overridden: TinyLife.Actions.Action.GetProgress
  overload: TinyLife.Actions.HelpAction.GetProgress*
- uid: TinyLife.Actions.HelpAction.CreateFirstActions
  commentId: M:TinyLife.Actions.HelpAction.CreateFirstActions
  id: CreateFirstActions
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: CreateFirstActions()
  nameWithType: HelpAction.CreateFirstActions()
  fullName: TinyLife.Actions.HelpAction.CreateFirstActions()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateFirstActions
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 101
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturn a set of actions that should be executed before this action.\nEven if the yield statement is used, all actions will be collected into a list at the start of this action&apos;s invocation.\nIf no action gets returned in this function, this action fails.\nIf the returned set only contains <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a> items, no first actions will be executed.\n"
  example: []
  syntax:
    content: protected override IEnumerable<Action> CreateFirstActions()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
      description: A set of actions that should run before this action
    content.vb: Protected Overrides Function CreateFirstActions() As IEnumerable(Of Action)
  overridden: TinyLife.Actions.SocialAction.CreateFirstActions
  overload: TinyLife.Actions.HelpAction.CreateFirstActions*
- uid: TinyLife.Actions.HelpAction.InitializeConversation
  commentId: M:TinyLife.Actions.HelpAction.InitializeConversation
  id: InitializeConversation
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: InitializeConversation()
  nameWithType: HelpAction.InitializeConversation()
  fullName: TinyLife.Actions.HelpAction.InitializeConversation()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InitializeConversation
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 108
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nInitializes the conversation. This method is called for both partners in <xref href=\"TinyLife.Actions.SocialAction.AndThenInitialize\" data-throw-if-not-resolved=\"false\"></xref> by the partner who initializes this action last.\nBy default, this method does nothing.\n"
  example: []
  syntax:
    content: protected override void InitializeConversation()
    content.vb: Protected Overrides Sub InitializeConversation()
  overridden: TinyLife.Actions.SocialAction.InitializeConversation
  overload: TinyLife.Actions.HelpAction.InitializeConversation*
- uid: TinyLife.Actions.HelpAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.HelpAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: UpdateConversation(GameTime, TimeSpan, float)
  nameWithType: HelpAction.UpdateConversation(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.HelpAction.UpdateConversation(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UpdateConversation
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 116
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nSocialAction version of <xref href=\"TinyLife.Actions.Action.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is called every update frame during an active conversation for both conversation partners.\nBy default, this method only increases <xref href=\"TinyLife.Actions.SocialAction.ConversationTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override void UpdateConversation(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time passed in game time
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Overrides Sub UpdateConversation(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overridden: TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  overload: TinyLife.Actions.HelpAction.UpdateConversation*
  nameWithType.vb: HelpAction.UpdateConversation(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.HelpAction.UpdateConversation(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: UpdateConversation(GameTime, TimeSpan, Single)
- uid: TinyLife.Actions.HelpAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.HelpAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  id: AndThenOnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: AndThenOnCompleted(CompletionType)
  nameWithType: HelpAction.AndThenOnCompleted(CompletionType)
  fullName: TinyLife.Actions.HelpAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenOnCompleted
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 140
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nMultiAction version of <xref href=\"TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method gets called when the main action completes.\n"
  example: []
  syntax:
    content: protected override void AndThenOnCompleted(CompletionType type)
    parameters:
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The completion of the main action
    content.vb: Protected Overrides Sub AndThenOnCompleted(type As CompletionType)
  overridden: TinyLife.Actions.SocialAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  overload: TinyLife.Actions.HelpAction.AndThenOnCompleted*
- uid: TinyLife.Actions.HelpAction.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Actions.HelpAction.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  id: OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: OnChildCompleted(Action, CompletionType, bool)
  nameWithType: HelpAction.OnChildCompleted(Action, CompletionType, bool)
  fullName: TinyLife.Actions.HelpAction.OnChildCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnChildCompleted
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 146
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThis method is invoked automatically when an action completes that is marked as this action&apos;s child.\nA child action is one started through a <xref href=\"TinyLife.Actions.Handlers.MultiActionHandler\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Actions.Handlers.UnderlyingActionHandler\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, this method calls <xref href=\"TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action%2cTinyLife.Actions.CompletionType%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> on this action&apos;s <xref href=\"TinyLife.Actions.Action.Parent\" data-throw-if-not-resolved=\"false\"></xref>, if there is one.\n"
  example: []
  syntax:
    content: protected override void OnChildCompleted(Action child, CompletionType type, bool grandchild)
    parameters:
    - id: child
      type: TinyLife.Actions.Action
      description: The child that completed.
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The child&apos;s completion type.
    - id: grandchild
      type: System.Boolean
      description: Whether the given child is a grandchild, rather than a direct child.
    content.vb: Protected Overrides Sub OnChildCompleted(child As Action, type As CompletionType, grandchild As Boolean)
  overridden: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  overload: TinyLife.Actions.HelpAction.OnChildCompleted*
  nameWithType.vb: HelpAction.OnChildCompleted(Action, CompletionType, Boolean)
  fullName.vb: TinyLife.Actions.HelpAction.OnChildCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, Boolean)
  name.vb: OnChildCompleted(Action, CompletionType, Boolean)
- uid: TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
  commentId: M:TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
  id: CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
  parent: TinyLife.Actions.HelpAction
  langs:
  - csharp
  - vb
  name: CreateActions(string, ObjectCategory, Type, CanExecuteDelegate, CanExecuteDelegate, AiSettings?, AiSettings?)
  nameWithType: HelpAction.CreateActions(string, ObjectCategory, Type, ActionType.CanExecuteDelegate, ActionType.CanExecuteDelegate, ActionType.AiSettings?, ActionType.AiSettings?)
  fullName: TinyLife.Actions.HelpAction.CreateActions(string, TinyLife.Objects.ObjectCategory, System.Type, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.ActionType.AiSettings?)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/HelpAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateActions
    path: ../TinyLife/Actions/HelpAction.cs
    startLine: 166
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates and returns a set of <xref href=\"TinyLife.Actions.ActionType.TypeSettings\" data-throw-if-not-resolved=\"false\"></xref> instances that contains an &quot;Ask&quot; action, as well as an &quot;Offer&quot; action, using <xref href=\"TinyLife.Actions.SocialAction.CreateAskOffer(System.String%2cTinyLife.Objects.ObjectCategory%2cSystem.Type%2cTinyLife.Actions.ActionType.CanExecuteDelegate%2cTinyLife.Actions.ActionType.CanExecuteDelegate%2cSystem.Nullable%7bTinyLife.Actions.ActionType.AiSettings%7d%2cSystem.Nullable%7bTinyLife.Actions.ActionType.AiSettings%7d%2cSystem.Nullable%7bTinyLife.Actions.CanExecuteResult%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IEnumerable<ActionType.TypeSettings> CreateActions(string name, ObjectCategory context, Type constructedType, ActionType.CanExecuteDelegate canRecipientExecute, ActionType.CanExecuteDelegate canHelperExecute, ActionType.AiSettings? askAi = null, ActionType.AiSettings? offerAi = null)
    parameters:
    - id: name
      type: System.String
      description: The base action name, which has &quot;Ask&quot; and &quot;Offer&quot; appended to it automatically.
    - id: context
      type: TinyLife.Objects.ObjectCategory
      description: The context.
    - id: constructedType
      type: System.Type
      description: The constructed action type.
    - id: canRecipientExecute
      type: TinyLife.Actions.ActionType.CanExecuteDelegate
      description: A <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref> that determines whether the recipient of this action (the person that is offered help, or the person that asks for help) can execute it.
    - id: canHelperExecute
      type: TinyLife.Actions.ActionType.CanExecuteDelegate
      description: A <xref href="TinyLife.Actions.ActionType.CanExecuteDelegate" data-throw-if-not-resolved="false"></xref> that determines whether the helper of this action (the person that offers help, or the person that is asked for help) can execute it.
    - id: askAi
      type: System.Nullable{TinyLife.Actions.ActionType.AiSettings}
      description: The <xref href="TinyLife.Actions.ActionType.AiSettings" data-throw-if-not-resolved="false"></xref> for the &quot;Ask&quot; version of this action.
    - id: offerAi
      type: System.Nullable{TinyLife.Actions.ActionType.AiSettings}
      description: The <xref href="TinyLife.Actions.ActionType.AiSettings" data-throw-if-not-resolved="false"></xref> for the &quot;Offer&quot; version of this action.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionType.TypeSettings}
      description: The &quot;Ask&quot; and &quot;Offer&quot; action type settings.
    content.vb: Public Shared Function CreateActions(name As String, context As ObjectCategory, constructedType As Type, canRecipientExecute As ActionType.CanExecuteDelegate, canHelperExecute As ActionType.CanExecuteDelegate, askAi As ActionType.AiSettings? = Nothing, offerAi As ActionType.AiSettings? = Nothing) As IEnumerable(Of ActionType.TypeSettings)
  overload: TinyLife.Actions.HelpAction.CreateActions*
  nameWithType.vb: HelpAction.CreateActions(String, ObjectCategory, Type, ActionType.CanExecuteDelegate, ActionType.CanExecuteDelegate, ActionType.AiSettings?, ActionType.AiSettings?)
  fullName.vb: TinyLife.Actions.HelpAction.CreateActions(String, TinyLife.Objects.ObjectCategory, System.Type, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.ActionType.AiSettings?)
  name.vb: CreateActions(String, ObjectCategory, Type, CanExecuteDelegate, CanExecuteDelegate, AiSettings?, AiSettings?)
references:
- uid: TinyLife.Actions.SocialAction
  commentId: T:TinyLife.Actions.SocialAction
  parent: TinyLife.Actions
  name: SocialAction
  nameWithType: SocialAction
  fullName: TinyLife.Actions.SocialAction
- uid: TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
  commentId: M:TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateActions(string, ObjectCategory, Type, CanExecuteDelegate, CanExecuteDelegate, AiSettings?, AiSettings?)
  nameWithType: HelpAction.CreateActions(string, ObjectCategory, Type, ActionType.CanExecuteDelegate, ActionType.CanExecuteDelegate, ActionType.AiSettings?, ActionType.AiSettings?)
  fullName: TinyLife.Actions.HelpAction.CreateActions(string, TinyLife.Objects.ObjectCategory, System.Type, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.ActionType.AiSettings?)
  nameWithType.vb: HelpAction.CreateActions(String, ObjectCategory, Type, ActionType.CanExecuteDelegate, ActionType.CanExecuteDelegate, ActionType.AiSettings?, ActionType.AiSettings?)
  fullName.vb: TinyLife.Actions.HelpAction.CreateActions(String, TinyLife.Objects.ObjectCategory, System.Type, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.ActionType.AiSettings?)
  name.vb: CreateActions(String, ObjectCategory, Type, CanExecuteDelegate, CanExecuteDelegate, AiSettings?, AiSettings?)
  spec.csharp:
  - uid: TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
    name: CreateActions
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.HelpAction.CreateActions(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings})
    name: CreateActions
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.MultiAction
  commentId: T:TinyLife.Actions.MultiAction
  parent: TinyLife.Actions
  name: MultiAction
  nameWithType: MultiAction
  fullName: TinyLife.Actions.MultiAction
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Actions.SocialAction.IsMain
  commentId: P:TinyLife.Actions.SocialAction.IsMain
  parent: TinyLife.Actions.SocialAction
  name: IsMain
  nameWithType: SocialAction.IsMain
  fullName: TinyLife.Actions.SocialAction.IsMain
- uid: TinyLife.Actions.SocialAction.Partner
  commentId: P:TinyLife.Actions.SocialAction.Partner
  parent: TinyLife.Actions.SocialAction
  name: Partner
  nameWithType: SocialAction.Partner
  fullName: TinyLife.Actions.SocialAction.Partner
- uid: TinyLife.Actions.SocialAction.PartnerAction
  commentId: P:TinyLife.Actions.SocialAction.PartnerAction
  parent: TinyLife.Actions.SocialAction
  name: PartnerAction
  nameWithType: SocialAction.PartnerAction
  fullName: TinyLife.Actions.SocialAction.PartnerAction
- uid: TinyLife.Actions.SocialAction.MainAction
  commentId: P:TinyLife.Actions.SocialAction.MainAction
  parent: TinyLife.Actions.SocialAction
  name: MainAction
  nameWithType: SocialAction.MainAction
  fullName: TinyLife.Actions.SocialAction.MainAction
- uid: TinyLife.Actions.SocialAction.ConversationTime
  commentId: P:TinyLife.Actions.SocialAction.ConversationTime
  parent: TinyLife.Actions.SocialAction
  name: ConversationTime
  nameWithType: SocialAction.ConversationTime
  fullName: TinyLife.Actions.SocialAction.ConversationTime
- uid: TinyLife.Actions.SocialAction.InProgressTime
  commentId: P:TinyLife.Actions.SocialAction.InProgressTime
  parent: TinyLife.Actions.SocialAction
  name: InProgressTime
  nameWithType: SocialAction.InProgressTime
  fullName: TinyLife.Actions.SocialAction.InProgressTime
- uid: TinyLife.Actions.SocialAction.IsConversationCompleted
  commentId: M:TinyLife.Actions.SocialAction.IsConversationCompleted
  parent: TinyLife.Actions.SocialAction
  name: IsConversationCompleted()
  nameWithType: SocialAction.IsConversationCompleted()
  fullName: TinyLife.Actions.SocialAction.IsConversationCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.IsConversationCompleted
    name: IsConversationCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.IsConversationCompleted
    name: IsConversationCompleted
  - name: (
  - name: )
- uid: TinyLife.Actions.SocialAction.GetMaxWaitTime
  commentId: M:TinyLife.Actions.SocialAction.GetMaxWaitTime
  parent: TinyLife.Actions.SocialAction
  name: GetMaxWaitTime()
  nameWithType: SocialAction.GetMaxWaitTime()
  fullName: TinyLife.Actions.SocialAction.GetMaxWaitTime()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.GetMaxWaitTime
    name: GetMaxWaitTime
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.GetMaxWaitTime
    name: GetMaxWaitTime
  - name: (
  - name: )
- uid: TinyLife.Actions.SocialAction.EnqueuePartnerAction(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.SocialAction.EnqueuePartnerAction(TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.SocialAction
  name: EnqueuePartnerAction(ActionInfo)
  nameWithType: SocialAction.EnqueuePartnerAction(ActionInfo)
  fullName: TinyLife.Actions.SocialAction.EnqueuePartnerAction(TinyLife.Actions.ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.EnqueuePartnerAction(TinyLife.Actions.ActionInfo)
    name: EnqueuePartnerAction
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.EnqueuePartnerAction(TinyLife.Actions.ActionInfo)
    name: EnqueuePartnerAction
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.SocialAction.GetPartnerVariety(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.SocialAction.GetPartnerVariety(TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.SocialAction
  name: GetPartnerVariety(ActionInfo)
  nameWithType: SocialAction.GetPartnerVariety(ActionInfo)
  fullName: TinyLife.Actions.SocialAction.GetPartnerVariety(TinyLife.Actions.ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.GetPartnerVariety(TinyLife.Actions.ActionInfo)
    name: GetPartnerVariety
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.GetPartnerVariety(TinyLife.Actions.ActionInfo)
    name: GetPartnerVariety
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.SocialAction.OnBothCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.SocialAction.OnBothCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.SocialAction
  name: OnBothCompleted(CompletionType)
  nameWithType: SocialAction.OnBothCompleted(CompletionType)
  fullName: TinyLife.Actions.SocialAction.OnBothCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.OnBothCompleted(TinyLife.Actions.CompletionType)
    name: OnBothCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.OnBothCompleted(TinyLife.Actions.CompletionType)
    name: OnBothCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: AndThenUpdate(GameTime, TimeSpan, float)
  nameWithType: SocialAction.AndThenUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: SocialAction.AndThenUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: AndThenUpdate(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.SocialAction.AndThenIsCompleted
  commentId: M:TinyLife.Actions.SocialAction.AndThenIsCompleted
  parent: TinyLife.Actions.SocialAction
  name: AndThenIsCompleted()
  nameWithType: SocialAction.AndThenIsCompleted()
  fullName: TinyLife.Actions.SocialAction.AndThenIsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.AndThenIsCompleted
    name: AndThenIsCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.AndThenIsCompleted
    name: AndThenIsCompleted
  - name: (
  - name: )
- uid: TinyLife.Actions.SocialAction.AndThenInitialize
  commentId: M:TinyLife.Actions.SocialAction.AndThenInitialize
  parent: TinyLife.Actions.SocialAction
  name: AndThenInitialize()
  nameWithType: SocialAction.AndThenInitialize()
  fullName: TinyLife.Actions.SocialAction.AndThenInitialize()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.AndThenInitialize
    name: AndThenInitialize
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.AndThenInitialize
    name: AndThenInitialize
  - name: (
  - name: )
- uid: TinyLife.Actions.SocialAction.CanCancel(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.SocialAction.CanCancel(TinyLife.Actions.Action)
  parent: TinyLife.Actions.SocialAction
  name: CanCancel(Action)
  nameWithType: SocialAction.CanCancel(Action)
  fullName: TinyLife.Actions.SocialAction.CanCancel(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.CanCancel(TinyLife.Actions.Action)
    name: CanCancel
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.CanCancel(TinyLife.Actions.Action)
    name: CanCancel
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: TinyLife.Actions.SocialAction.CanStartNow
  commentId: M:TinyLife.Actions.SocialAction.CanStartNow
  parent: TinyLife.Actions.SocialAction
  name: CanStartNow()
  nameWithType: SocialAction.CanStartNow()
  fullName: TinyLife.Actions.SocialAction.CanStartNow()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.CanStartNow
    name: CanStartNow
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.CanStartNow
    name: CanStartNow
  - name: (
  - name: )
- uid: TinyLife.Actions.SocialAction.GetDisplayName
  commentId: M:TinyLife.Actions.SocialAction.GetDisplayName
  parent: TinyLife.Actions.SocialAction
  name: GetDisplayName()
  nameWithType: SocialAction.GetDisplayName()
  fullName: TinyLife.Actions.SocialAction.GetDisplayName()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.GetDisplayName
    name: GetDisplayName
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.GetDisplayName
    name: GetDisplayName
  - name: (
  - name: )
- uid: TinyLife.Actions.SocialAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  commentId: M:TinyLife.Actions.SocialAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  parent: TinyLife.Actions.SocialAction
  name: TryForceResult(CompletionType, CanExecuteResult?, MapObject)
  nameWithType: SocialAction.TryForceResult(CompletionType, CanExecuteResult?, MapObject)
  fullName: TinyLife.Actions.SocialAction.TryForceResult(TinyLife.Actions.CompletionType, TinyLife.Actions.CanExecuteResult?, TinyLife.Objects.MapObject)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
    name: TryForceResult
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.MapObject
    name: MapObject
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
    name: TryForceResult
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.MapObject
    name: MapObject
  - name: )
- uid: TinyLife.Actions.SocialAction.InvokeForBoth(System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  commentId: M:TinyLife.Actions.SocialAction.InvokeForBoth(System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: InvokeForBoth(Action<Person, Person>)
  nameWithType: SocialAction.InvokeForBoth(Action<Person, Person>)
  fullName: TinyLife.Actions.SocialAction.InvokeForBoth(System.Action<TinyLife.Objects.Person, TinyLife.Objects.Person>)
  nameWithType.vb: SocialAction.InvokeForBoth(Action(Of Person, Person))
  fullName.vb: TinyLife.Actions.SocialAction.InvokeForBoth(System.Action(Of TinyLife.Objects.Person, TinyLife.Objects.Person))
  name.vb: InvokeForBoth(Action(Of Person, Person))
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.InvokeForBoth(System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
  - name: (
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.InvokeForBoth(System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
  - name: (
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  - name: )
- uid: TinyLife.Actions.SocialAction.IsHelper(System.Boolean)
  commentId: M:TinyLife.Actions.SocialAction.IsHelper(System.Boolean)
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: IsHelper(bool)
  nameWithType: SocialAction.IsHelper(bool)
  fullName: TinyLife.Actions.SocialAction.IsHelper(bool)
  nameWithType.vb: SocialAction.IsHelper(Boolean)
  fullName.vb: TinyLife.Actions.SocialAction.IsHelper(Boolean)
  name.vb: IsHelper(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.IsHelper(System.Boolean)
    name: IsHelper
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.IsHelper(System.Boolean)
    name: IsHelper
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.SocialAction.GetHelper(System.Boolean)
  commentId: M:TinyLife.Actions.SocialAction.GetHelper(System.Boolean)
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetHelper(bool)
  nameWithType: SocialAction.GetHelper(bool)
  fullName: TinyLife.Actions.SocialAction.GetHelper(bool)
  nameWithType.vb: SocialAction.GetHelper(Boolean)
  fullName.vb: TinyLife.Actions.SocialAction.GetHelper(Boolean)
  name.vb: GetHelper(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.GetHelper(System.Boolean)
    name: GetHelper
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.GetHelper(System.Boolean)
    name: GetHelper
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.SocialAction.GetRecipientAction(System.Boolean)
  commentId: M:TinyLife.Actions.SocialAction.GetRecipientAction(System.Boolean)
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetRecipientAction(bool)
  nameWithType: SocialAction.GetRecipientAction(bool)
  fullName: TinyLife.Actions.SocialAction.GetRecipientAction(bool)
  nameWithType.vb: SocialAction.GetRecipientAction(Boolean)
  fullName.vb: TinyLife.Actions.SocialAction.GetRecipientAction(Boolean)
  name.vb: GetRecipientAction(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.GetRecipientAction(System.Boolean)
    name: GetRecipientAction
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.GetRecipientAction(System.Boolean)
    name: GetRecipientAction
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.SocialAction.CreateAskOffer(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.CanExecuteResult})
  commentId: M:TinyLife.Actions.SocialAction.CreateAskOffer(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.CanExecuteResult})
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CreateAskOffer(string, ObjectCategory, Type, CanExecuteDelegate, CanExecuteDelegate, AiSettings?, AiSettings?, CanExecuteResult?)
  nameWithType: SocialAction.CreateAskOffer(string, ObjectCategory, Type, ActionType.CanExecuteDelegate, ActionType.CanExecuteDelegate, ActionType.AiSettings?, ActionType.AiSettings?, CanExecuteResult?)
  fullName: TinyLife.Actions.SocialAction.CreateAskOffer(string, TinyLife.Objects.ObjectCategory, System.Type, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.CanExecuteResult?)
  nameWithType.vb: SocialAction.CreateAskOffer(String, ObjectCategory, Type, ActionType.CanExecuteDelegate, ActionType.CanExecuteDelegate, ActionType.AiSettings?, ActionType.AiSettings?, CanExecuteResult?)
  fullName.vb: TinyLife.Actions.SocialAction.CreateAskOffer(String, TinyLife.Objects.ObjectCategory, System.Type, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.CanExecuteDelegate, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.ActionType.AiSettings?, TinyLife.Actions.CanExecuteResult?)
  name.vb: CreateAskOffer(String, ObjectCategory, Type, CanExecuteDelegate, CanExecuteDelegate, AiSettings?, AiSettings?, CanExecuteResult?)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.CreateAskOffer(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.CanExecuteResult})
    name: CreateAskOffer
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.CreateAskOffer(System.String,TinyLife.Objects.ObjectCategory,System.Type,TinyLife.Actions.ActionType.CanExecuteDelegate,TinyLife.Actions.ActionType.CanExecuteDelegate,System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.ActionType.AiSettings},System.Nullable{TinyLife.Actions.CanExecuteResult})
    name: CreateAskOffer
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  - name: )
- uid: TinyLife.Actions.MultiAction.Handler
  commentId: F:TinyLife.Actions.MultiAction.Handler
  parent: TinyLife.Actions.MultiAction
  name: Handler
  nameWithType: MultiAction.Handler
  fullName: TinyLife.Actions.MultiAction.Handler
- uid: TinyLife.Actions.MultiAction.MainElapsedTime
  commentId: P:TinyLife.Actions.MultiAction.MainElapsedTime
  parent: TinyLife.Actions.MultiAction
  name: MainElapsedTime
  nameWithType: MultiAction.MainElapsedTime
  fullName: TinyLife.Actions.MultiAction.MainElapsedTime
- uid: TinyLife.Actions.MultiAction.CurrentStage
  commentId: P:TinyLife.Actions.MultiAction.CurrentStage
  parent: TinyLife.Actions.MultiAction
  name: CurrentStage
  nameWithType: MultiAction.CurrentStage
  fullName: TinyLife.Actions.MultiAction.CurrentStage
- uid: TinyLife.Actions.MultiAction.CreateLastActions
  commentId: M:TinyLife.Actions.MultiAction.CreateLastActions
  parent: TinyLife.Actions.MultiAction
  name: CreateLastActions()
  nameWithType: MultiAction.CreateLastActions()
  fullName: TinyLife.Actions.MultiAction.CreateLastActions()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CreateLastActions
    name: CreateLastActions
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CreateLastActions
    name: CreateLastActions
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.PreInitialize
  commentId: M:TinyLife.Actions.MultiAction.PreInitialize
  parent: TinyLife.Actions.MultiAction
  name: PreInitialize()
  nameWithType: MultiAction.PreInitialize()
  fullName: TinyLife.Actions.MultiAction.PreInitialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.PreInitialize
    name: PreInitialize
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.PreInitialize
    name: PreInitialize
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: PreCompleted(CompletionType)
  nameWithType: MultiAction.PreCompleted(CompletionType)
  fullName: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
    name: PreCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
    name: PreCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.MultiAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Update(GameTime, TimeSpan, float)
  nameWithType: MultiAction.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: MultiAction.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.MultiAction.Initialize
  commentId: M:TinyLife.Actions.MultiAction.Initialize
  parent: TinyLife.Actions.MultiAction
  name: Initialize()
  nameWithType: MultiAction.Initialize()
  fullName: TinyLife.Actions.MultiAction.Initialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.IsCompleted
  commentId: M:TinyLife.Actions.MultiAction.IsCompleted
  parent: TinyLife.Actions.MultiAction
  name: IsCompleted()
  nameWithType: MultiAction.IsCompleted()
  fullName: TinyLife.Actions.MultiAction.IsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.IsCompleted
    name: IsCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.IsCompleted
    name: IsCompleted
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: OnCompleted(CompletionType)
  nameWithType: MultiAction.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Actions.MultiAction
  name: GoToActionLocation(ObjectCategory)
  nameWithType: MultiAction.GoToActionLocation(ObjectCategory)
  fullName: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
    name: GoToActionLocation
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
    name: GoToActionLocation
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: )
- uid: TinyLife.Actions.Action.Random
  commentId: F:TinyLife.Actions.Action.Random
  parent: TinyLife.Actions.Action
  name: Random
  nameWithType: Action.Random
  fullName: TinyLife.Actions.Action.Random
- uid: TinyLife.Actions.Action.FullyInProgress
  commentId: P:TinyLife.Actions.Action.FullyInProgress
  parent: TinyLife.Actions.Action
  name: FullyInProgress
  nameWithType: Action.FullyInProgress
  fullName: TinyLife.Actions.Action.FullyInProgress
- uid: TinyLife.Actions.Action.Type
  commentId: F:TinyLife.Actions.Action.Type
  parent: TinyLife.Actions.Action
  name: Type
  nameWithType: Action.Type
  fullName: TinyLife.Actions.Action.Type
- uid: TinyLife.Actions.Action.Info
  commentId: F:TinyLife.Actions.Action.Info
  parent: TinyLife.Actions.Action
  name: Info
  nameWithType: Action.Info
  fullName: TinyLife.Actions.Action.Info
- uid: TinyLife.Actions.Action.Id
  commentId: F:TinyLife.Actions.Action.Id
  parent: TinyLife.Actions.Action
  name: Id
  nameWithType: Action.Id
  fullName: TinyLife.Actions.Action.Id
- uid: TinyLife.Actions.Action.StartedAutomatically
  commentId: P:TinyLife.Actions.Action.StartedAutomatically
  parent: TinyLife.Actions.Action
  name: StartedAutomatically
  nameWithType: Action.StartedAutomatically
  fullName: TinyLife.Actions.Action.StartedAutomatically
- uid: TinyLife.Actions.Action.Parent
  commentId: P:TinyLife.Actions.Action.Parent
  parent: TinyLife.Actions.Action
  name: Parent
  nameWithType: Action.Parent
  fullName: TinyLife.Actions.Action.Parent
- uid: TinyLife.Actions.Action.Person
  commentId: P:TinyLife.Actions.Action.Person
  parent: TinyLife.Actions.Action
  name: Person
  nameWithType: Action.Person
  fullName: TinyLife.Actions.Action.Person
- uid: TinyLife.Actions.Action.ElapsedTime
  commentId: P:TinyLife.Actions.Action.ElapsedTime
  parent: TinyLife.Actions.Action
  name: ElapsedTime
  nameWithType: Action.ElapsedTime
  fullName: TinyLife.Actions.Action.ElapsedTime
- uid: TinyLife.Actions.Action.PlayerPromptOpen
  commentId: P:TinyLife.Actions.Action.PlayerPromptOpen
  parent: TinyLife.Actions.Action
  name: PlayerPromptOpen
  nameWithType: Action.PlayerPromptOpen
  fullName: TinyLife.Actions.Action.PlayerPromptOpen
- uid: TinyLife.Actions.Action.ForceResult
  commentId: F:TinyLife.Actions.Action.ForceResult
  parent: TinyLife.Actions.Action
  name: ForceResult
  nameWithType: Action.ForceResult
  fullName: TinyLife.Actions.Action.ForceResult
- uid: TinyLife.Actions.Action.GetIconObject
  commentId: M:TinyLife.Actions.Action.GetIconObject
  parent: TinyLife.Actions.Action
  name: GetIconObject()
  nameWithType: Action.GetIconObject()
  fullName: TinyLife.Actions.Action.GetIconObject()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetIconObject
    name: GetIconObject
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetIconObject
    name: GetIconObject
  - name: (
  - name: )
- uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
  commentId: M:TinyLife.Actions.Action.CausesExtremelyFastSpeed
  parent: TinyLife.Actions.Action
  name: CausesExtremelyFastSpeed()
  nameWithType: Action.CausesExtremelyFastSpeed()
  fullName: TinyLife.Actions.Action.CausesExtremelyFastSpeed()
  spec.csharp:
  - uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
    name: CausesExtremelyFastSpeed
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
    name: CausesExtremelyFastSpeed
  - name: (
  - name: )
- uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  commentId: M:TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  parent: TinyLife.Actions.Action
  name: CanEnqueueConversation(Person, ActionType)
  nameWithType: Action.CanEnqueueConversation(Person, ActionType)
  fullName: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person, TinyLife.Actions.ActionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
    name: CanEnqueueConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
    name: CanEnqueueConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
- uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenPlayerPrompt(string, Predicate<Panel>, Action<Panel>, bool, Func<CoveringGroup, IEnumerable<Element>>, TextureRegion)
  nameWithType: Action.OpenPlayerPrompt(string, Predicate<Panel>, Action<Panel>, bool, Func<CoveringGroup, IEnumerable<Element>>, TextureRegion)
  fullName: TinyLife.Actions.Action.OpenPlayerPrompt(string, System.Predicate<MLEM.Ui.Elements.Panel>, System.Action<MLEM.Ui.Elements.Panel>, bool, System.Func<TinyLife.Uis.CoveringGroup, System.Collections.Generic.IEnumerable<MLEM.Ui.Elements.Element>>, MLEM.Textures.TextureRegion)
  nameWithType.vb: Action.OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Func(Of CoveringGroup, IEnumerable(Of Element)), TextureRegion)
  fullName.vb: TinyLife.Actions.Action.OpenPlayerPrompt(String, System.Predicate(Of MLEM.Ui.Elements.Panel), System.Action(Of MLEM.Ui.Elements.Panel), Boolean, System.Func(Of TinyLife.Uis.CoveringGroup, System.Collections.Generic.IEnumerable(Of MLEM.Ui.Elements.Element)), MLEM.Textures.TextureRegion)
  name.vb: OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Func(Of CoveringGroup, IEnumerable(Of Element)), TextureRegion)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
    name: OpenPlayerPrompt
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
    name: OpenPlayerPrompt
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenYesNoPrompt(string, Action, Action, TextureRegion)
  nameWithType: Action.OpenYesNoPrompt(string, Action, Action, TextureRegion)
  fullName: TinyLife.Actions.Action.OpenYesNoPrompt(string, System.Action, System.Action, MLEM.Textures.TextureRegion)
  nameWithType.vb: Action.OpenYesNoPrompt(String, Action, Action, TextureRegion)
  fullName.vb: TinyLife.Actions.Action.OpenYesNoPrompt(String, System.Action, System.Action, MLEM.Textures.TextureRegion)
  name.vb: OpenYesNoPrompt(String, Action, Action, TextureRegion)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
    name: OpenYesNoPrompt
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
    name: OpenYesNoPrompt
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenTextPrompt(string, Action<string>, Predicate<string>, Rule, string, TextureRegion)
  nameWithType: Action.OpenTextPrompt(string, Action<string>, Predicate<string>, TextField.Rule, string, TextureRegion)
  fullName: TinyLife.Actions.Action.OpenTextPrompt(string, System.Action<string>, System.Predicate<string>, MLEM.Ui.Elements.TextField.Rule, string, MLEM.Textures.TextureRegion)
  nameWithType.vb: Action.OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule, String, TextureRegion)
  fullName.vb: TinyLife.Actions.Action.OpenTextPrompt(String, System.Action(Of String), System.Predicate(Of String), MLEM.Ui.Elements.TextField.Rule, String, MLEM.Textures.TextureRegion)
  name.vb: OpenTextPrompt(String, Action(Of String), Predicate(Of String), Rule, String, TextureRegion)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
    name: OpenTextPrompt
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
    name: OpenTextPrompt
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  commentId: M:TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  parent: TinyLife.Actions.Action
  name: OpenChoicePrompt(ChoicePromptInfo)
  nameWithType: Action.OpenChoicePrompt(ChoicePromptInfo)
  fullName: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
    name: OpenChoicePrompt
  - name: (
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
    name: OpenChoicePrompt
  - name: (
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
- uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32,System.Single,System.Single,System.Single,System.Single)
  commentId: M:TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32,System.Single,System.Single,System.Single,System.Single)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SpeakAlone(GameTime, float, EmoteCategory, SpeakStyle, int, float, float, float, float)
  nameWithType: Action.SpeakAlone(GameTime, float, EmoteCategory, SpeakStyle, int, float, float, float, float)
  fullName: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime, float, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, int, float, float, float, float)
  nameWithType.vb: Action.SpeakAlone(GameTime, Single, EmoteCategory, SpeakStyle, Integer, Single, Single, Single, Single)
  fullName.vb: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime, Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, Integer, Single, Single, Single, Single)
  name.vb: SpeakAlone(GameTime, Single, EmoteCategory, SpeakStyle, Integer, Single, Single, Single, Single)
  spec.csharp:
  - uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32,System.Single,System.Single,System.Single,System.Single)
    name: SpeakAlone
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32,System.Single,System.Single,System.Single,System.Single)
    name: SpeakAlone
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,System.Single,System.Single,System.Single,System.Single,System.Int32)
  commentId: M:TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,System.Single,System.Single,System.Single,System.Single,System.Int32)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: ThinkAlone(GameTime, float, EmoteCategory, float, float, float, float, int)
  nameWithType: Action.ThinkAlone(GameTime, float, EmoteCategory, float, float, float, float, int)
  fullName: TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime, float, TinyLife.Actions.EmoteCategory, float, float, float, float, int)
  nameWithType.vb: Action.ThinkAlone(GameTime, Single, EmoteCategory, Single, Single, Single, Single, Integer)
  fullName.vb: TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime, Single, TinyLife.Actions.EmoteCategory, Single, Single, Single, Single, Integer)
  name.vb: ThinkAlone(GameTime, Single, EmoteCategory, Single, Single, Single, Single, Integer)
  spec.csharp:
  - uid: TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,System.Single,System.Single,System.Single,System.Single,System.Int32)
    name: ThinkAlone
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.ThinkAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,System.Single,System.Single,System.Single,System.Single,System.Int32)
    name: ThinkAlone
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
  commentId: M:TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SpeakInConversation(Person, GameTime, float, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, int, float, float, float, float)
  nameWithType: Action.SpeakInConversation(Person, GameTime, float, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, int, float, float, float, float)
  fullName: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, float, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, TinyLife.Actions.EmoteCategory?, TinyLife.Objects.SpeakStyle?, int, float, float, float, float)
  nameWithType.vb: Action.SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, Integer, Single, Single, Single, Single)
  fullName.vb: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, TinyLife.Actions.EmoteCategory?, TinyLife.Objects.SpeakStyle?, Integer, Single, Single, Single, Single)
  name.vb: SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, Integer, Single, Single, Single, Single)
  spec.csharp:
  - uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
    name: SpeakInConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
    name: SpeakInConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.Action.ResetSpeech
  commentId: M:TinyLife.Actions.Action.ResetSpeech
  parent: TinyLife.Actions.Action
  name: ResetSpeech()
  nameWithType: Action.ResetSpeech()
  fullName: TinyLife.Actions.Action.ResetSpeech()
  spec.csharp:
  - uid: TinyLife.Actions.Action.ResetSpeech
    name: ResetSpeech
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.ResetSpeech
    name: ResetSpeech
  - name: (
  - name: )
- uid: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  parent: TinyLife.Actions.Action
  name: FacePartner(Person)
  nameWithType: Action.FacePartner(Person)
  fullName: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
    name: FacePartner
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
    name: FacePartner
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
  parent: TinyLife.Actions.Action
  name: CompleteIfNeedFull(NeedType, Person)
  nameWithType: Action.CompleteIfNeedFull(NeedType, Person)
  fullName: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType, TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
    name: CompleteIfNeedFull
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
    name: CompleteIfNeedFull
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  commentId: M:TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: CompleteIfTimeUp(TimeSpan, bool, SkillType, float, bool)
  nameWithType: Action.CompleteIfTimeUp(TimeSpan, bool, SkillType, float, bool)
  fullName: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan, bool, TinyLife.Skills.SkillType, float, bool)
  nameWithType.vb: Action.CompleteIfTimeUp(TimeSpan, Boolean, SkillType, Single, Boolean)
  fullName.vb: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan, Boolean, TinyLife.Skills.SkillType, Single, Boolean)
  name.vb: CompleteIfTimeUp(TimeSpan, Boolean, SkillType, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteIfTimeUp
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteIfTimeUp
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
  commentId: M:TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
  parent: TinyLife.Actions.Action
  name: CancelIfEmotional(params EmotionType[])
  nameWithType: Action.CancelIfEmotional(params EmotionType[])
  fullName: TinyLife.Actions.Action.CancelIfEmotional(params TinyLife.Emotions.EmotionType[])
  nameWithType.vb: Action.CancelIfEmotional(ParamArray EmotionType())
  fullName.vb: TinyLife.Actions.Action.CancelIfEmotional(ParamArray TinyLife.Emotions.EmotionType())
  name.vb: CancelIfEmotional(ParamArray EmotionType())
  spec.csharp:
  - uid: TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
    name: CancelIfEmotional
  - name: (
  - name: params
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
    name: CancelIfEmotional
  - name: (
  - name: ParamArray
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Sit(Furniture, float, ActionSpot)
  nameWithType: Action.Sit(Furniture, float, ActionSpot)
  fullName: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture, float, TinyLife.Objects.ActionSpot)
  nameWithType.vb: Action.Sit(Furniture, Single, ActionSpot)
  fullName.vb: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture, Single, TinyLife.Objects.ActionSpot)
  name.vb: Sit(Furniture, Single, ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
    name: Sit
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
    name: Sit
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
- uid: TinyLife.Actions.Action.GetChildren(System.Boolean)
  commentId: M:TinyLife.Actions.Action.GetChildren(System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetChildren(bool)
  nameWithType: Action.GetChildren(bool)
  fullName: TinyLife.Actions.Action.GetChildren(bool)
  nameWithType.vb: Action.GetChildren(Boolean)
  fullName.vb: TinyLife.Actions.Action.GetChildren(Boolean)
  name.vb: GetChildren(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetChildren(System.Boolean)
    name: GetChildren
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetChildren(System.Boolean)
    name: GetChildren
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
  commentId: M:TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetChild<T>(Guid, bool)
  nameWithType: Action.GetChild<T>(Guid, bool)
  fullName: TinyLife.Actions.Action.GetChild<T>(System.Guid, bool)
  nameWithType.vb: Action.GetChild(Of T)(Guid, Boolean)
  fullName.vb: TinyLife.Actions.Action.GetChild(Of T)(System.Guid, Boolean)
  name.vb: GetChild(Of T)(Guid, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
    name: GetChild
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
    name: GetChild
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  commentId: M:TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, bool)
  nameWithType: Action.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, bool)
  fullName: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, bool)
  nameWithType.vb: Action.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  fullName.vb: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, Boolean)
  name.vb: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  commentId: M:TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: PickUpAndGoTo(ActionInfo, Func<Furniture, bool>, Func<Furniture, bool>, bool)
  nameWithType: Action.PickUpAndGoTo(ActionInfo, Func<Furniture, bool>, Func<Furniture, bool>, bool)
  fullName: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, System.Func<TinyLife.Objects.Furniture, bool>, System.Func<TinyLife.Objects.Furniture, bool>, bool)
  nameWithType.vb: Action.PickUpAndGoTo(ActionInfo, Func(Of Furniture, Boolean), Func(Of Furniture, Boolean), Boolean)
  fullName.vb: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, System.Func(Of TinyLife.Objects.Furniture, Boolean), System.Func(Of TinyLife.Objects.Furniture, Boolean), Boolean)
  name.vb: PickUpAndGoTo(ActionInfo, Func(Of Furniture, Boolean), Func(Of Furniture, Boolean), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  parent: TinyLife.Actions.Action
  name: GetFreeChair(Person, Furniture)
  nameWithType: Action.GetFreeChair(Person, Furniture)
  fullName: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person, TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
- uid: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  commentId: M:TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: GetFreeChairs(Person, Furniture, Func<Direction2, bool>)
  nameWithType: Action.GetFreeChairs(Person, Furniture, Func<Direction2, bool>)
  fullName: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person, TinyLife.Objects.Furniture, System.Func<MLEM.Misc.Direction2, bool>)
  nameWithType.vb: Action.GetFreeChairs(Person, Furniture, Func(Of Direction2, Boolean))
  fullName.vb: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person, TinyLife.Objects.Furniture, System.Func(Of MLEM.Misc.Direction2, Boolean))
  name.vb: GetFreeChairs(Person, Furniture, Func(Of Direction2, Boolean))
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
    name: GetFreeChairs
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
    name: GetFreeChairs
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  parent: TinyLife.Actions.Action
  name: GetSeatCategory(Person)
  nameWithType: Action.GetSeatCategory(Person)
  fullName: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
    name: GetSeatCategory
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
    name: GetSeatCategory
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindAllFreePeople(Person, ActionType, Map, Vector2?, float?, bool, bool, bool, bool)
  nameWithType: Action.FindAllFreePeople(Person, ActionType, Map, Vector2?, float?, bool, bool, bool, bool)
  fullName: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person, TinyLife.Actions.ActionType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?, bool, bool, bool, bool)
  nameWithType.vb: Action.FindAllFreePeople(Person, ActionType, Map, Vector2?, Single?, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person, TinyLife.Actions.ActionType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?, Boolean, Boolean, Boolean, Boolean)
  name.vb: FindAllFreePeople(Person, ActionType, Map, Vector2?, Single?, Boolean, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: FindAllFreePeople
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: FindAllFreePeople
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, bool, Map, Vector2?, float?, bool, bool)
  nameWithType: Action.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, bool, Map, Vector2?, float?, bool, bool)
  fullName: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, bool, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?, bool, bool)
  nameWithType.vb: Action.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Map, Vector2?, Single?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, Boolean, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?, Boolean, Boolean)
  name.vb: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Map, Vector2?, Single?, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindAllFreeWalls(Person, Map, Vector2?, float?, bool)
  nameWithType: Action.FindAllFreeWalls(Person, Map, Vector2?, float?, bool)
  fullName: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?, bool)
  nameWithType.vb: Action.FindAllFreeWalls(Person, Map, Vector2?, Single?, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?, Boolean)
  name.vb: FindAllFreeWalls(Person, Map, Vector2?, Single?, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindAllFreeGround(Person, Map, Vector2?, float?, bool)
  nameWithType: Action.FindAllFreeGround(Person, Map, Vector2?, float?, bool)
  fullName: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, float?, bool)
  nameWithType.vb: Action.FindAllFreeGround(Person, Map, Vector2?, Single?, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Single?, Boolean)
  name.vb: FindAllFreeGround(Person, Map, Vector2?, Single?, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Map, Vector2?, bool, bool)
  nameWithType: Action.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Map, Vector2?, bool, bool)
  fullName: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, bool, bool)
  nameWithType.vb: Action.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Map, Vector2?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Boolean, Boolean)
  name.vb: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Map, Vector2?, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindAllActionObjects(Person, ActionType, Map, Vector2?)
  nameWithType: Action.FindAllActionObjects(Person, ActionType, Map, Vector2?)
  fullName: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: FindAllActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: FindAllActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindValidActionObjects(Person, ActionType, bool, Map, Vector2?, bool, bool)
  nameWithType: Action.FindValidActionObjects(Person, ActionType, bool, Map, Vector2?, bool, bool)
  fullName: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, bool, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, bool, bool)
  nameWithType.vb: Action.FindValidActionObjects(Person, ActionType, Boolean, Map, Vector2?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, Boolean, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?, Boolean, Boolean)
  name.vb: FindValidActionObjects(Person, ActionType, Boolean, Map, Vector2?, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindValidActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindValidActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
  commentId: M:TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: TryGetRandomValidVariety(ActionType, ActionInfo, bool, out ActionVariety)
  nameWithType: Action.TryGetRandomValidVariety(ActionType, ActionInfo, bool, out ActionVariety)
  fullName: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, out TinyLife.Actions.ActionVariety)
  nameWithType.vb: Action.TryGetRandomValidVariety(ActionType, ActionInfo, Boolean, ActionVariety)
  fullName.vb: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Actions.ActionVariety)
  name.vb: TryGetRandomValidVariety(ActionType, ActionInfo, Boolean, ActionVariety)
  spec.csharp:
  - uid: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
    name: TryGetRandomValidVariety
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
    name: TryGetRandomValidVariety
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
- uid: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetRandomValidVariety(IEnumerable<ActionVariety>, ActionInfo)
  nameWithType: Action.GetRandomValidVariety(IEnumerable<ActionVariety>, ActionInfo)
  fullName: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionVariety>, TinyLife.Actions.ActionInfo)
  nameWithType.vb: Action.GetRandomValidVariety(IEnumerable(Of ActionVariety), ActionInfo)
  fullName.vb: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionVariety), TinyLife.Actions.ActionInfo)
  name.vb: GetRandomValidVariety(IEnumerable(Of ActionVariety), ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
    name: GetRandomValidVariety
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: '>'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
    name: GetRandomValidVariety
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Action
  name: GetTableSpot(Furniture, ActionSpot)
  nameWithType: Action.GetTableSpot(Furniture, ActionSpot)
  fullName: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture, TinyLife.Objects.ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
- uid: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  commentId: M:TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: InvokeForBoth(Person, Person, Action<Person, Person>)
  nameWithType: Action.InvokeForBoth(Person, Person, Action<Person, Person>)
  fullName: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person, TinyLife.Objects.Person, System.Action<TinyLife.Objects.Person, TinyLife.Objects.Person>)
  nameWithType.vb: Action.InvokeForBoth(Person, Person, Action(Of Person, Person))
  fullName.vb: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person, TinyLife.Objects.Person, System.Action(Of TinyLife.Objects.Person, TinyLife.Objects.Person))
  name.vb: InvokeForBoth(Person, Person, Action(Of Person, Person))
  spec.csharp:
  - uid: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  - name: )
- uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  parent: TinyLife.Actions.Action
  name: CanMultitask(Action, Action)
  nameWithType: Action.CanMultitask(Action, Action)
  fullName: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action, TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: TinyLife.Actions.Action.IsInappropriate(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.Action.IsInappropriate(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.Action
  name: IsInappropriate(ActionType, ActionInfo)
  nameWithType: Action.IsInappropriate(ActionType, ActionInfo)
  fullName: TinyLife.Actions.Action.IsInappropriate(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Action.IsInappropriate(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
    name: IsInappropriate
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.IsInappropriate(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo)
    name: IsInappropriate
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.Action.IsLotContentVisible(TinyLife.World.Lot,TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Actions.Action.IsLotContentVisible(TinyLife.World.Lot,TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Actions.Action
  isExternal: true
  name: IsLotContentVisible(Lot, Person, Map, Vector2?)
  nameWithType: Action.IsLotContentVisible(Lot, Person, Map, Vector2?)
  fullName: TinyLife.Actions.Action.IsLotContentVisible(TinyLife.World.Lot, TinyLife.Objects.Person, TinyLife.World.Map, Microsoft.Xna.Framework.Vector2?)
  spec.csharp:
  - uid: TinyLife.Actions.Action.IsLotContentVisible(TinyLife.World.Lot,TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: IsLotContentVisible
  - name: (
  - uid: TinyLife.World.Lot
    name: Lot
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.IsLotContentVisible(TinyLife.World.Lot,TinyLife.Objects.Person,TinyLife.World.Map,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: IsLotContentVisible
  - name: (
  - uid: TinyLife.World.Lot
    name: Lot
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(string, object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(string, object)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.HelpAction.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<HelpAction>(HelpAction)
  nameWithType: Extensions.JsonCopy<HelpAction>(HelpAction)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.HelpAction>(TinyLife.Actions.HelpAction)
  nameWithType.vb: Extensions.JsonCopy(Of HelpAction)(HelpAction)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.HelpAction)(TinyLife.Actions.HelpAction)
  name.vb: JsonCopy(Of HelpAction)(HelpAction)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.HelpAction)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Actions.HelpAction
    name: HelpAction
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.HelpAction
    name: HelpAction
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.HelpAction)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.HelpAction
    name: HelpAction
  - name: )
  - name: (
  - uid: TinyLife.Actions.HelpAction
    name: HelpAction
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Actions.HelpAction.IsHelper*
  commentId: Overload:TinyLife.Actions.HelpAction.IsHelper
  name: IsHelper
  nameWithType: HelpAction.IsHelper
  fullName: TinyLife.Actions.HelpAction.IsHelper
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Actions.HelpAction.Helper
  commentId: P:TinyLife.Actions.HelpAction.Helper
  name: Helper
  nameWithType: HelpAction.Helper
  fullName: TinyLife.Actions.HelpAction.Helper
- uid: TinyLife.Actions.HelpAction.HelpedAction*
  commentId: Overload:TinyLife.Actions.HelpAction.HelpedAction
  name: HelpedAction
  nameWithType: HelpAction.HelpedAction
  fullName: TinyLife.Actions.HelpAction.HelpedAction
- uid: TinyLife.Actions.HelpAction.IsHelper
  commentId: P:TinyLife.Actions.HelpAction.IsHelper
  name: IsHelper
  nameWithType: HelpAction.IsHelper
  fullName: TinyLife.Actions.HelpAction.IsHelper
- uid: TinyLife.Actions.HelpAction.Helper*
  commentId: Overload:TinyLife.Actions.HelpAction.Helper
  name: Helper
  nameWithType: HelpAction.Helper
  fullName: TinyLife.Actions.HelpAction.Helper
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.Actions.HelpAction.#ctor*
  commentId: Overload:TinyLife.Actions.HelpAction.#ctor
  name: HelpAction
  nameWithType: HelpAction.HelpAction
  fullName: TinyLife.Actions.HelpAction.HelpAction
  nameWithType.vb: HelpAction.New
  fullName.vb: TinyLife.Actions.HelpAction.New
  name.vb: New
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.HelpAction.CreateHelpedAction*
  commentId: Overload:TinyLife.Actions.HelpAction.CreateHelpedAction
  name: CreateHelpedAction
  nameWithType: HelpAction.CreateHelpedAction
  fullName: TinyLife.Actions.HelpAction.CreateHelpedAction
- uid: TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  name: CreateHelpedAction(ActionInfo)
  nameWithType: HelpAction.CreateHelpedAction(ActionInfo)
  fullName: TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
    name: CreateHelpedAction
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.HelpAction.CreateHelpedAction(TinyLife.Actions.ActionInfo)
    name: CreateHelpedAction
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.HelpAction.UpdateHelpedAction*
  commentId: Overload:TinyLife.Actions.HelpAction.UpdateHelpedAction
  name: UpdateHelpedAction
  nameWithType: HelpAction.UpdateHelpedAction
  fullName: TinyLife.Actions.HelpAction.UpdateHelpedAction
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Actions.HelpAction.OnHelpedActionCompleted*
  commentId: Overload:TinyLife.Actions.HelpAction.OnHelpedActionCompleted
  name: OnHelpedActionCompleted
  nameWithType: HelpAction.OnHelpedActionCompleted
  fullName: TinyLife.Actions.HelpAction.OnHelpedActionCompleted
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: TinyLife.Actions.SocialAction.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.SocialAction.CanMultitask(TinyLife.Actions.Action)
  parent: TinyLife.Actions.SocialAction
  name: CanMultitask(Action)
  nameWithType: SocialAction.CanMultitask(Action)
  fullName: TinyLife.Actions.SocialAction.CanMultitask(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: TinyLife.Actions.HelpAction.CanMultitask*
  commentId: Overload:TinyLife.Actions.HelpAction.CanMultitask
  name: CanMultitask
  nameWithType: HelpAction.CanMultitask
  fullName: TinyLife.Actions.HelpAction.CanMultitask
- uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  parent: TinyLife.Actions.MultiAction
  name: Validate(Person)
  nameWithType: MultiAction.Validate(Person)
  fullName: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
    name: Validate
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
    name: Validate
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.HelpAction.Validate*
  commentId: Overload:TinyLife.Actions.HelpAction.Validate
  name: Validate
  nameWithType: HelpAction.Validate
  fullName: TinyLife.Actions.HelpAction.Validate
- uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Action
  name: GetNextAction(CompletionType)
  nameWithType: Action.GetNextAction(CompletionType)
  fullName: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.HelpAction.GetNextAction*
  commentId: Overload:TinyLife.Actions.HelpAction.GetNextAction
  name: GetNextAction
  nameWithType: HelpAction.GetNextAction
  fullName: TinyLife.Actions.HelpAction.GetNextAction
- uid: TinyLife.Actions.Action.GetProgress
  commentId: M:TinyLife.Actions.Action.GetProgress
  parent: TinyLife.Actions.Action
  name: GetProgress()
  nameWithType: Action.GetProgress()
  fullName: TinyLife.Actions.Action.GetProgress()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetProgress
    name: GetProgress
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetProgress
    name: GetProgress
  - name: (
  - name: )
- uid: TinyLife.Actions.HelpAction.GetProgress*
  commentId: Overload:TinyLife.Actions.HelpAction.GetProgress
  name: GetProgress
  nameWithType: HelpAction.GetProgress
  fullName: TinyLife.Actions.HelpAction.GetProgress
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Actions.SocialAction.CreateFirstActions
  commentId: M:TinyLife.Actions.SocialAction.CreateFirstActions
  parent: TinyLife.Actions.SocialAction
  name: CreateFirstActions()
  nameWithType: SocialAction.CreateFirstActions()
  fullName: TinyLife.Actions.SocialAction.CreateFirstActions()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.CreateFirstActions
    name: CreateFirstActions
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.CreateFirstActions
    name: CreateFirstActions
  - name: (
  - name: )
- uid: TinyLife.Actions.HelpAction.CreateFirstActions*
  commentId: Overload:TinyLife.Actions.HelpAction.CreateFirstActions
  name: CreateFirstActions
  nameWithType: HelpAction.CreateFirstActions
  fullName: TinyLife.Actions.HelpAction.CreateFirstActions
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Action>
  nameWithType: IEnumerable<Action>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Action>
  nameWithType.vb: IEnumerable(Of Action)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Action)
  name.vb: IEnumerable(Of Action)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.Action
    name: Action
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Actions.SocialAction.InitializeConversation
  commentId: M:TinyLife.Actions.SocialAction.InitializeConversation
  parent: TinyLife.Actions.SocialAction
  name: InitializeConversation()
  nameWithType: SocialAction.InitializeConversation()
  fullName: TinyLife.Actions.SocialAction.InitializeConversation()
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.InitializeConversation
    name: InitializeConversation
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.InitializeConversation
    name: InitializeConversation
  - name: (
  - name: )
- uid: TinyLife.Actions.HelpAction.InitializeConversation*
  commentId: Overload:TinyLife.Actions.HelpAction.InitializeConversation
  name: InitializeConversation
  nameWithType: HelpAction.InitializeConversation
  fullName: TinyLife.Actions.HelpAction.InitializeConversation
- uid: TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.SocialAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: UpdateConversation(GameTime, TimeSpan, float)
  nameWithType: SocialAction.UpdateConversation(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: SocialAction.UpdateConversation(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: UpdateConversation(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: UpdateConversation
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.UpdateConversation(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: UpdateConversation
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.HelpAction.UpdateConversation*
  commentId: Overload:TinyLife.Actions.HelpAction.UpdateConversation
  name: UpdateConversation
  nameWithType: HelpAction.UpdateConversation
  fullName: TinyLife.Actions.HelpAction.UpdateConversation
- uid: TinyLife.Actions.SocialAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.SocialAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.SocialAction
  name: AndThenOnCompleted(CompletionType)
  nameWithType: SocialAction.AndThenOnCompleted(CompletionType)
  fullName: TinyLife.Actions.SocialAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.SocialAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
    name: AndThenOnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.SocialAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
    name: AndThenOnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.HelpAction.AndThenOnCompleted*
  commentId: Overload:TinyLife.Actions.HelpAction.AndThenOnCompleted
  name: AndThenOnCompleted
  nameWithType: HelpAction.AndThenOnCompleted
  fullName: TinyLife.Actions.HelpAction.AndThenOnCompleted
- uid: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: OnChildCompleted(Action, CompletionType, bool)
  nameWithType: Action.OnChildCompleted(Action, CompletionType, bool)
  fullName: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, bool)
  nameWithType.vb: Action.OnChildCompleted(Action, CompletionType, Boolean)
  fullName.vb: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, Boolean)
  name.vb: OnChildCompleted(Action, CompletionType, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnChildCompleted
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnChildCompleted
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.HelpAction.OnChildCompleted*
  commentId: Overload:TinyLife.Actions.HelpAction.OnChildCompleted
  name: OnChildCompleted
  nameWithType: HelpAction.OnChildCompleted
  fullName: TinyLife.Actions.HelpAction.OnChildCompleted
- uid: TinyLife.Actions.ActionType.TypeSettings
  commentId: T:TinyLife.Actions.ActionType.TypeSettings
  parent: TinyLife.Actions
  name: ActionType.TypeSettings
  nameWithType: ActionType.TypeSettings
  fullName: TinyLife.Actions.ActionType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
- uid: TinyLife.Actions.ActionType.AiSettings
  commentId: T:TinyLife.Actions.ActionType.AiSettings
  parent: TinyLife.Actions
  name: ActionType.AiSettings
  nameWithType: ActionType.AiSettings
  fullName: TinyLife.Actions.ActionType.AiSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
- uid: TinyLife.Actions.HelpAction.CreateActions*
  commentId: Overload:TinyLife.Actions.HelpAction.CreateActions
  name: CreateActions
  nameWithType: HelpAction.CreateActions
  fullName: TinyLife.Actions.HelpAction.CreateActions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Nullable{TinyLife.Actions.ActionType.AiSettings}
  commentId: T:System.Nullable{TinyLife.Actions.ActionType.AiSettings}
  parent: System
  definition: System.Nullable`1
  name: ActionType.AiSettings?
  nameWithType: ActionType.AiSettings?
  fullName: TinyLife.Actions.ActionType.AiSettings?
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.AiSettings
    name: AiSettings
  - name: '?'
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionType.TypeSettings}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionType.TypeSettings}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionType.TypeSettings>
  nameWithType: IEnumerable<ActionType.TypeSettings>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionType.TypeSettings>
  nameWithType.vb: IEnumerable(Of ActionType.TypeSettings)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionType.TypeSettings)
  name.vb: IEnumerable(Of ActionType.TypeSettings)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  - name: )
