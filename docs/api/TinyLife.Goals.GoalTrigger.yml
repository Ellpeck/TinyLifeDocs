### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  id: GoalTrigger
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.GoalTrigger.ActionCompleted
  - TinyLife.Goals.GoalTrigger.ActionUpdate
  - TinyLife.Goals.GoalTrigger.EarnMoney
  - TinyLife.Goals.GoalTrigger.FurnitureCreated
  - TinyLife.Goals.GoalTrigger.PersonUpdate
  langs:
  - csharp
  - vb
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
  type: Enum
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoalTrigger
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 9
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal trigger is an enumeration flag used by <xref href=\"TinyLife.Goals.AutoTriggerGoal%601\" data-throw-if-not-resolved=\"false\"></xref> instances to determine whether they should be triggered.\nSince this enumeration has the <xref href=\"System.FlagsAttribute\" data-throw-if-not-resolved=\"false\"></xref>, multiple goal triggers can be specified for a goal.\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum GoalTrigger
    content.vb: >-
      <Flags>

      Public Enum GoalTrigger
  extensionMethods:
  - TinyLife.Goals.GoalTrigger.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Goals.GoalTrigger.PersonUpdate
  commentId: F:TinyLife.Goals.GoalTrigger.PersonUpdate
  id: PersonUpdate
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: PersonUpdate
  nameWithType: GoalTrigger.PersonUpdate
  fullName: TinyLife.Goals.GoalTrigger.PersonUpdate
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PersonUpdate
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal trigger for when a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> method is called.\nThis trigger is supported by <xref href=\"TinyLife.Goals.TimedGoal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Goals.ConditionedGoal\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> type parameter.\n"
  example: []
  syntax:
    content: PersonUpdate = 1
    return:
      type: TinyLife.Goals.GoalTrigger
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Goals.GoalTrigger.FurnitureCreated
  commentId: F:TinyLife.Goals.GoalTrigger.FurnitureCreated
  id: FurnitureCreated
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: FurnitureCreated
  nameWithType: GoalTrigger.FurnitureCreated
  fullName: TinyLife.Goals.GoalTrigger.FurnitureCreated
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FurnitureCreated
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal trigger for when a <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> item is created by a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, this trigger is used in <xref href=\"TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis trigger is supported by <xref href=\"TinyLife.Goals.ConditionedGoal\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Goals.DistinctGoal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Goals.AmountGoal\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> type parameter or subtypes.\n"
  example: []
  syntax:
    content: FurnitureCreated = 2
    return:
      type: TinyLife.Goals.GoalTrigger
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Goals.GoalTrigger.ActionCompleted
  commentId: F:TinyLife.Goals.GoalTrigger.ActionCompleted
  id: ActionCompleted
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionCompleted
  nameWithType: GoalTrigger.ActionCompleted
  fullName: TinyLife.Goals.GoalTrigger.ActionCompleted
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionCompleted
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal trigger for when an <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> is completed by a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>.\nThis trigger is supported by <xref href=\"TinyLife.Goals.ConditionedGoal\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Goals.DistinctGoal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Goals.AmountGoal\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> type parameter or subtypes.\n"
  example: []
  syntax:
    content: ActionCompleted = 4
    return:
      type: TinyLife.Goals.GoalTrigger
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Goals.GoalTrigger.ActionUpdate
  commentId: F:TinyLife.Goals.GoalTrigger.ActionUpdate
  id: ActionUpdate
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionUpdate
  nameWithType: GoalTrigger.ActionUpdate
  fullName: TinyLife.Goals.GoalTrigger.ActionUpdate
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionUpdate
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal trigger for when an <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> is updated.\nThis trigger is supported by <xref href=\"TinyLife.Goals.TimedGoal\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> type parameter or subtypes.\n"
  example: []
  syntax:
    content: ActionUpdate = 8
    return:
      type: TinyLife.Goals.GoalTrigger
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Goals.GoalTrigger.EarnMoney
  commentId: F:TinyLife.Goals.GoalTrigger.EarnMoney
  id: EarnMoney
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EarnMoney
  nameWithType: GoalTrigger.EarnMoney
  fullName: TinyLife.Goals.GoalTrigger.EarnMoney
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EarnMoney
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA goal trigger for when a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> earns money through an <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Goals.Project\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, this trigger is used in <xref href=\"TinyLife.Objects.Person.EarnMoney(System.Single%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis trigger is supported by <xref href=\"TinyLife.Goals.AmountGoal\" data-throw-if-not-resolved=\"false\"></xref> (where the amount is the amount of money earned) using the <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Goals.Project\" data-throw-if-not-resolved=\"false\"></xref> type parameters or subtypes.\n"
  example: []
  syntax:
    content: EarnMoney = 16
    return:
      type: TinyLife.Goals.GoalTrigger
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Goals.AutoTriggerGoal`1
  commentId: T:TinyLife.Goals.AutoTriggerGoal`1
  name: AutoTriggerGoal<T>
  nameWithType: AutoTriggerGoal<T>
  fullName: TinyLife.Goals.AutoTriggerGoal<T>
  nameWithType.vb: AutoTriggerGoal(Of T)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T)
  name.vb: AutoTriggerGoal(Of T)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1
    name: AutoTriggerGoal
    nameWithType: AutoTriggerGoal
    fullName: TinyLife.Goals.AutoTriggerGoal
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1
    name: AutoTriggerGoal
    nameWithType: AutoTriggerGoal
    fullName: TinyLife.Goals.AutoTriggerGoal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.FlagsAttribute
  commentId: T:System.FlagsAttribute
  parent: System
  isExternal: true
  name: FlagsAttribute
  nameWithType: FlagsAttribute
  fullName: System.FlagsAttribute
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: TinyLife.Goals.GoalTrigger.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GoalTrigger>()
  nameWithType: Extensions.JsonCopy<GoalTrigger>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalTrigger>()
  nameWithType.vb: Extensions.JsonCopy(Of GoalTrigger)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalTrigger)()
  name.vb: JsonCopy(Of GoalTrigger)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<GoalTrigger>
    nameWithType: Extensions.JsonCopy<GoalTrigger>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalTrigger>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of GoalTrigger)
    nameWithType: Extensions.JsonCopy(Of GoalTrigger)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalTrigger)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
- uid: TinyLife.Goals.TimedGoal
  commentId: T:TinyLife.Goals.TimedGoal
  name: TimedGoal
  nameWithType: TimedGoal
  fullName: TinyLife.Goals.TimedGoal
- uid: TinyLife.Goals.ConditionedGoal
  commentId: T:TinyLife.Goals.ConditionedGoal
  name: ConditionedGoal
  nameWithType: ConditionedGoal
  fullName: TinyLife.Goals.ConditionedGoal
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  name: SetCreator(Person, Boolean)
  nameWithType: Furniture.SetCreator(Person, Boolean)
  fullName: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
    name: SetCreator
    nameWithType: Furniture.SetCreator
    fullName: TinyLife.Objects.Furniture.SetCreator
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
    name: SetCreator
    nameWithType: Furniture.SetCreator
    fullName: TinyLife.Objects.Furniture.SetCreator
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.DistinctGoal
  commentId: T:TinyLife.Goals.DistinctGoal
  name: DistinctGoal
  nameWithType: DistinctGoal
  fullName: TinyLife.Goals.DistinctGoal
- uid: TinyLife.Goals.AmountGoal
  commentId: T:TinyLife.Goals.AmountGoal
  name: AmountGoal
  nameWithType: AmountGoal
  fullName: TinyLife.Goals.AmountGoal
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.Goals.Project
  commentId: T:TinyLife.Goals.Project
  parent: TinyLife.Goals
  name: Project
  nameWithType: Project
  fullName: TinyLife.Goals.Project
- uid: TinyLife.Objects.Person.EarnMoney(System.Single,System.Object)
  commentId: M:TinyLife.Objects.Person.EarnMoney(System.Single,System.Object)
  isExternal: true
