### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  id: GoalTrigger
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.GoalTrigger.#ctor(System.String,System.Type[],System.Type[])
  - TinyLife.Goals.GoalTrigger.ActionCompleted
  - TinyLife.Goals.GoalTrigger.ActionEnded
  - TinyLife.Goals.GoalTrigger.ActionUpdate
  - TinyLife.Goals.GoalTrigger.EarnMoney
  - TinyLife.Goals.GoalTrigger.EmotionGained
  - TinyLife.Goals.GoalTrigger.EmotionLost
  - TinyLife.Goals.GoalTrigger.Equals(System.Object)
  - TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  - TinyLife.Goals.GoalTrigger.FoodEaten
  - TinyLife.Goals.GoalTrigger.FurnitureCreated
  - TinyLife.Goals.GoalTrigger.GetHashCode
  - TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  - TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  - TinyLife.Goals.GoalTrigger.Name
  - TinyLife.Goals.GoalTrigger.PersonUpdate
  - TinyLife.Goals.GoalTrigger.ProjectCompleted
  - TinyLife.Goals.GoalTrigger.ValidObjects
  - TinyLife.Goals.GoalTrigger.ValidValues
  langs:
  - csharp
  - vb
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
  type: Class
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoalTrigger
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 14
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger is used by <xref href="TinyLife.Goals.AutoTriggerGoal" data-throw-if-not-resolved="false"></xref> instances to determine whether they should be triggered.

    Goal triggers are compared only by their <xref href="TinyLife.Goals.GoalTrigger.Name" data-throw-if-not-resolved="false"></xref>, so mods can add goal triggers that work for other mods without explicit compatibility.
  example: []
  syntax:
    content: 'public class GoalTrigger : IEquatable<GoalTrigger>'
    content.vb: Public Class GoalTrigger Implements IEquatable(Of GoalTrigger)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{TinyLife.Goals.GoalTrigger}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.GoalTrigger.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.GoalTrigger.PersonUpdate
  commentId: F:TinyLife.Goals.GoalTrigger.PersonUpdate
  id: PersonUpdate
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: PersonUpdate
  nameWithType: GoalTrigger.PersonUpdate
  fullName: TinyLife.Goals.GoalTrigger.PersonUpdate
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PersonUpdate
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>'s <xref href="TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> method is called.

    This goal trigger supports the <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.TimedGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger PersonUpdate
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly PersonUpdate As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.FurnitureCreated
  commentId: F:TinyLife.Goals.GoalTrigger.FurnitureCreated
  id: FurnitureCreated
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: FurnitureCreated
  nameWithType: GoalTrigger.FurnitureCreated
  fullName: TinyLife.Goals.GoalTrigger.FurnitureCreated
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FurnitureCreated
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> item is created by a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>.

    By default, this trigger is used in <xref href="TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger FurnitureCreated
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly FurnitureCreated As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.ActionCompleted
  commentId: F:TinyLife.Goals.GoalTrigger.ActionCompleted
  id: ActionCompleted
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionCompleted
  nameWithType: GoalTrigger.ActionCompleted
  fullName: TinyLife.Goals.GoalTrigger.ActionCompleted
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionCompleted
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> is completed succesfully (the result is <xref href="TinyLife.Actions.CompletionType.Completed" data-throw-if-not-resolved="false"></xref>) by a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger ActionCompleted
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly ActionCompleted As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.ActionEnded
  commentId: F:TinyLife.Goals.GoalTrigger.ActionEnded
  id: ActionEnded
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionEnded
  nameWithType: GoalTrigger.ActionEnded
  fullName: TinyLife.Goals.GoalTrigger.ActionEnded
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionEnded
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> is completed in any way (the <xref href="TinyLife.Actions.CompletionType" data-throw-if-not-resolved="false"></xref> doesn't matter) by a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger ActionEnded
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly ActionEnded As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.ActionUpdate
  commentId: F:TinyLife.Goals.GoalTrigger.ActionUpdate
  id: ActionUpdate
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ActionUpdate
  nameWithType: GoalTrigger.ActionUpdate
  fullName: TinyLife.Goals.GoalTrigger.ActionUpdate
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionUpdate
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> is updated.

    This goal trigger supports the <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.TimedGoal" data-throw-if-not-resolved="false"></xref> goal type.
  example: []
  syntax:
    content: public static readonly GoalTrigger ActionUpdate
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly ActionUpdate As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.EarnMoney
  commentId: F:TinyLife.Goals.GoalTrigger.EarnMoney
  id: EarnMoney
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EarnMoney
  nameWithType: GoalTrigger.EarnMoney
  fullName: TinyLife.Goals.GoalTrigger.EarnMoney
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EarnMoney
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> earns money through an <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref>.

    By default, this trigger is used in <xref href="TinyLife.Objects.Person.EarnMoney(System.Single%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Objects.Furniture" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Actions.Action" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.Job" data-throw-if-not-resolved="false"></xref> object types and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger EarnMoney
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly EarnMoney As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.EmotionGained
  commentId: F:TinyLife.Goals.GoalTrigger.EmotionGained
  id: EmotionGained
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EmotionGained
  nameWithType: GoalTrigger.EmotionGained
  fullName: TinyLife.Goals.GoalTrigger.EmotionGained
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EmotionGained
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> is added to a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> using <xref href="TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier%2cSystem.Int32%2cSystem.TimeSpan%2cTinyLife.Emotions.IEmotionSource%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Emotions.EmotionModifier.Instance" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger EmotionGained
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly EmotionGained As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.EmotionLost
  commentId: F:TinyLife.Goals.GoalTrigger.EmotionLost
  id: EmotionLost
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: EmotionLost
  nameWithType: GoalTrigger.EmotionLost
  fullName: TinyLife.Goals.GoalTrigger.EmotionLost
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EmotionLost
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 57
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> is removed from a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> in <xref href="TinyLife.Objects.Person.RemoveEmotion(TinyLife.Emotions.EmotionModifier)" data-throw-if-not-resolved="false"></xref> or when it runs out.

    This goal trigger supports the <xref href="TinyLife.Emotions.EmotionModifier.Instance" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Emotions.EmotionModifier" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger EmotionLost
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly EmotionLost As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.FoodEaten
  commentId: F:TinyLife.Goals.GoalTrigger.FoodEaten
  id: FoodEaten
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: FoodEaten
  nameWithType: GoalTrigger.FoodEaten
  fullName: TinyLife.Goals.GoalTrigger.FoodEaten
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FoodEaten
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Skills.FoodType" data-throw-if-not-resolved="false"></xref> item is eaten by a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> in <xref href="TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action%2cTinyLife.Objects.FoodTypedItem)" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Objects.FoodTypedItem" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger FoodEaten
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly FoodEaten As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.ProjectCompleted
  commentId: F:TinyLife.Goals.GoalTrigger.ProjectCompleted
  id: ProjectCompleted
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ProjectCompleted
  nameWithType: GoalTrigger.ProjectCompleted
  fullName: TinyLife.Goals.GoalTrigger.ProjectCompleted
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ProjectCompleted
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 67
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    A goal trigger for when a <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref> is marked as completed in <xref href="TinyLife.Goals.Project.OnCompleted" data-throw-if-not-resolved="false"></xref>.

    This goal trigger supports the <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref> object type and the <xref href="TinyLife.Goals.ConditionedGoal" data-throw-if-not-resolved="false"></xref>, <xref href="TinyLife.Goals.AmountGoal" data-throw-if-not-resolved="false"></xref> and <xref href="TinyLife.Goals.DistinctGoal%601" data-throw-if-not-resolved="false"></xref> of type <xref href="TinyLife.Goals.Project" data-throw-if-not-resolved="false"></xref> goal types.
  example: []
  syntax:
    content: public static readonly GoalTrigger ProjectCompleted
    return:
      type: TinyLife.Goals.GoalTrigger
    content.vb: Public Shared ReadOnly ProjectCompleted As GoalTrigger
- uid: TinyLife.Goals.GoalTrigger.Name
  commentId: F:TinyLife.Goals.GoalTrigger.Name
  id: Name
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GoalTrigger.Name
  fullName: TinyLife.Goals.GoalTrigger.Name
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: This goal trigger's name.
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Goals.GoalTrigger.ValidObjects
  commentId: F:TinyLife.Goals.GoalTrigger.ValidObjects
  id: ValidObjects
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ValidObjects
  nameWithType: GoalTrigger.ValidObjects
  fullName: TinyLife.Goals.GoalTrigger.ValidObjects
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ValidObjects
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 76
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: A set of types that determine which objects are valid trigger objects for this goal trigger. This validates the <code>obj</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly Type[] ValidObjects
    return:
      type: System.Type[]
    content.vb: Public ReadOnly ValidObjects As Type()
- uid: TinyLife.Goals.GoalTrigger.ValidValues
  commentId: F:TinyLife.Goals.GoalTrigger.ValidValues
  id: ValidValues
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: ValidValues
  nameWithType: GoalTrigger.ValidValues
  fullName: TinyLife.Goals.GoalTrigger.ValidValues
  type: Field
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ValidValues
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 80
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: A set of types that determine which values are valud trigger values for this goal trigger. This validates the <code>values</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly Type[] ValidValues
    return:
      type: System.Type[]
    content.vb: Public ReadOnly ValidValues As Type()
- uid: TinyLife.Goals.GoalTrigger.#ctor(System.String,System.Type[],System.Type[])
  commentId: M:TinyLife.Goals.GoalTrigger.#ctor(System.String,System.Type[],System.Type[])
  id: '#ctor(System.String,System.Type[],System.Type[])'
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: GoalTrigger(string, Type[], Type[])
  nameWithType: GoalTrigger.GoalTrigger(string, Type[], Type[])
  fullName: TinyLife.Goals.GoalTrigger.GoalTrigger(string, System.Type[], System.Type[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 88
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Creates a new goal trigger with the given settings.
  example: []
  syntax:
    content: public GoalTrigger(string name, Type[] validObjects, Type[] validGoals)
    parameters:
    - id: name
      type: System.String
      description: This goal trigger's name.
    - id: validObjects
      type: System.Type[]
      description: A set of types that determine which objects are valid trigger objects for this goal trigger. This validates the <code>obj</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    - id: validGoals
      type: System.Type[]
      description: A set of types that determine which values are valud trigger values for this goal trigger. This validates the <code>values</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, validObjects As Type(), validGoals As Type())
  overload: TinyLife.Goals.GoalTrigger.#ctor*
  nameWithType.vb: GoalTrigger.New(String, Type(), Type())
  fullName.vb: TinyLife.Goals.GoalTrigger.New(String, System.Type(), System.Type())
  name.vb: New(String, Type(), Type())
- uid: TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  commentId: M:TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  id: IsObjectCompatible(System.Type)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: IsObjectCompatible(Type)
  nameWithType: GoalTrigger.IsObjectCompatible(Type)
  fullName: TinyLife.Goals.GoalTrigger.IsObjectCompatible(System.Type)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsObjectCompatible
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 111
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    Returns whether an object of the given <code class="paramref">objType</code> is compatible with this goal trigger, based on <xref href="TinyLife.Goals.GoalTrigger.ValidObjects" data-throw-if-not-resolved="false"></xref>.

    This validates the <code>obj</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool IsObjectCompatible(Type objType)
    parameters:
    - id: objType
      type: System.Type
      description: The type of the object.
    return:
      type: System.Boolean
      description: Whether the object is compatible.
    content.vb: Public Function IsObjectCompatible(objType As Type) As Boolean
  overload: TinyLife.Goals.GoalTrigger.IsObjectCompatible*
- uid: TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  commentId: M:TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  id: IsValueCompatible(System.Type)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: IsValueCompatible(Type)
  nameWithType: GoalTrigger.IsValueCompatible(Type)
  fullName: TinyLife.Goals.GoalTrigger.IsValueCompatible(System.Type)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsValueCompatible
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 125
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: >-
    Returns whether a value of the given <code class="paramref">valueType</code> is compatible with this goal trigger, based on <xref href="TinyLife.Goals.GoalTrigger.ValidValues" data-throw-if-not-resolved="false"></xref>.

    This validates the <code>values</code> parameter of <xref href="TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public bool IsValueCompatible(Type valueType)
    parameters:
    - id: valueType
      type: System.Type
      description: The type of the value.
    return:
      type: System.Boolean
      description: Whether the value is compatible.
    content.vb: Public Function IsValueCompatible(valueType As Type) As Boolean
  overload: TinyLife.Goals.GoalTrigger.IsValueCompatible*
- uid: TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  commentId: M:TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  id: Equals(TinyLife.Goals.GoalTrigger)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: Equals(GoalTrigger)
  nameWithType: GoalTrigger.Equals(GoalTrigger)
  fullName: TinyLife.Goals.GoalTrigger.Equals(TinyLife.Goals.GoalTrigger)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Equals
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 134
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(GoalTrigger other)
    parameters:
    - id: other
      type: TinyLife.Goals.GoalTrigger
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As GoalTrigger) As Boolean
  overload: TinyLife.Goals.GoalTrigger.Equals*
  implements:
  - System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
- uid: TinyLife.Goals.GoalTrigger.Equals(System.Object)
  commentId: M:TinyLife.Goals.GoalTrigger.Equals(System.Object)
  id: Equals(System.Object)
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: GoalTrigger.Equals(object)
  fullName: TinyLife.Goals.GoalTrigger.Equals(object)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Equals
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 139
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: TinyLife.Goals.GoalTrigger.Equals*
  nameWithType.vb: GoalTrigger.Equals(Object)
  fullName.vb: TinyLife.Goals.GoalTrigger.Equals(Object)
  name.vb: Equals(Object)
- uid: TinyLife.Goals.GoalTrigger.GetHashCode
  commentId: M:TinyLife.Goals.GoalTrigger.GetHashCode
  id: GetHashCode
  parent: TinyLife.Goals.GoalTrigger
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GoalTrigger.GetHashCode()
  fullName: TinyLife.Goals.GoalTrigger.GetHashCode()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/GoalTrigger.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetHashCode
    path: ../TinyLife/Goals/GoalTrigger.cs
    startLine: 144
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: TinyLife.Goals.GoalTrigger.GetHashCode*
references:
- uid: TinyLife.Goals.AutoTriggerGoal
  commentId: T:TinyLife.Goals.AutoTriggerGoal
  parent: TinyLife.Goals
  href: TinyLife.Goals.AutoTriggerGoal.html
  name: AutoTriggerGoal
  nameWithType: AutoTriggerGoal
  fullName: TinyLife.Goals.AutoTriggerGoal
- uid: TinyLife.Goals.GoalTrigger.Name
  commentId: F:TinyLife.Goals.GoalTrigger.Name
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_Name
  name: Name
  nameWithType: GoalTrigger.Name
  fullName: TinyLife.Goals.GoalTrigger.Name
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  href: TinyLife.html
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Goals
    name: Goals
    href: TinyLife.Goals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{TinyLife.Goals.GoalTrigger}
  commentId: T:System.IEquatable{TinyLife.Goals.GoalTrigger}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<GoalTrigger>
  nameWithType: IEquatable<GoalTrigger>
  fullName: System.IEquatable<TinyLife.Goals.GoalTrigger>
  nameWithType.vb: IEquatable(Of GoalTrigger)
  fullName.vb: System.IEquatable(Of TinyLife.Goals.GoalTrigger)
  name.vb: IEquatable(Of GoalTrigger)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalTrigger.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<GoalTrigger>(GoalTrigger)
  nameWithType: Extensions.JsonCopy<GoalTrigger>(GoalTrigger)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.GoalTrigger>(TinyLife.Goals.GoalTrigger)
  nameWithType.vb: Extensions.JsonCopy(Of GoalTrigger)(GoalTrigger)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.GoalTrigger)(TinyLife.Goals.GoalTrigger)
  name.vb: JsonCopy(Of GoalTrigger)(GoalTrigger)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.GoalTrigger)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.GoalTrigger)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Person.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: Person.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_Update_Microsoft_Xna_Framework_GameTime_System_TimeSpan_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Goals.TimedGoal
  commentId: T:TinyLife.Goals.TimedGoal
  href: TinyLife.Goals.TimedGoal.html
  name: TimedGoal
  nameWithType: TimedGoal
  fullName: TinyLife.Goals.TimedGoal
- uid: TinyLife.Goals.ConditionedGoal
  commentId: T:TinyLife.Goals.ConditionedGoal
  href: TinyLife.Goals.ConditionedGoal.html
  name: ConditionedGoal
  nameWithType: ConditionedGoal
  fullName: TinyLife.Goals.ConditionedGoal
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  href: TinyLife.Goals.GoalTrigger.html
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  href: TinyLife.Objects.Furniture.html
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
  commentId: M:TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
  parent: TinyLife.Objects.Furniture
  isExternal: true
  href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_Person_System_Boolean_
  name: SetCreator(Person, bool)
  nameWithType: Furniture.SetCreator(Person, bool)
  fullName: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person, bool)
  nameWithType.vb: Furniture.SetCreator(Person, Boolean)
  fullName.vb: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person, Boolean)
  name.vb: SetCreator(Person, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_Person_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.SetCreator(TinyLife.Objects.Person,System.Boolean)
    name: SetCreator
    href: TinyLife.Objects.Furniture.html#TinyLife_Objects_Furniture_SetCreator_TinyLife_Objects_Person_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Goals.AmountGoal
  commentId: T:TinyLife.Goals.AmountGoal
  href: TinyLife.Goals.AmountGoal.html
  name: AmountGoal
  nameWithType: AmountGoal
  fullName: TinyLife.Goals.AmountGoal
- uid: TinyLife.Goals.DistinctGoal`1
  commentId: T:TinyLife.Goals.DistinctGoal`1
  href: TinyLife.Goals.DistinctGoal-1.html
  name: DistinctGoal<T>
  nameWithType: DistinctGoal<T>
  fullName: TinyLife.Goals.DistinctGoal<T>
  nameWithType.vb: DistinctGoal(Of T)
  fullName.vb: TinyLife.Goals.DistinctGoal(Of T)
  name.vb: DistinctGoal(Of T)
  spec.csharp:
  - uid: TinyLife.Goals.DistinctGoal`1
    name: DistinctGoal
    href: TinyLife.Goals.DistinctGoal-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TinyLife.Goals.DistinctGoal`1
    name: DistinctGoal
    href: TinyLife.Goals.DistinctGoal-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  href: TinyLife.Actions.Action.html
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.CompletionType.Completed
  commentId: F:TinyLife.Actions.CompletionType.Completed
  href: TinyLife.Actions.CompletionType.html#TinyLife_Actions_CompletionType_Completed
  name: Completed
  nameWithType: CompletionType.Completed
  fullName: TinyLife.Actions.CompletionType.Completed
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  href: TinyLife.html
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Actions
    name: Actions
    href: TinyLife.Actions.html
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  href: TinyLife.Actions.CompletionType.html
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: TinyLife.Goals.Project
  commentId: T:TinyLife.Goals.Project
  parent: TinyLife.Goals
  href: TinyLife.Goals.Project.html
  name: Project
  nameWithType: Project
  fullName: TinyLife.Goals.Project
- uid: TinyLife.Objects.Person.EarnMoney(System.Single,System.Object)
  commentId: M:TinyLife.Objects.Person.EarnMoney(System.Single,System.Object)
  isExternal: true
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_EarnMoney_System_Single_System_Object_
  name: EarnMoney(float, object)
  nameWithType: Person.EarnMoney(float, object)
  fullName: TinyLife.Objects.Person.EarnMoney(float, object)
  nameWithType.vb: Person.EarnMoney(Single, Object)
  fullName.vb: TinyLife.Objects.Person.EarnMoney(Single, Object)
  name.vb: EarnMoney(Single, Object)
  spec.csharp:
  - uid: TinyLife.Objects.Person.EarnMoney(System.Single,System.Object)
    name: EarnMoney
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_EarnMoney_System_Single_System_Object_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.EarnMoney(System.Single,System.Object)
    name: EarnMoney
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_EarnMoney_System_Single_System_Object_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  href: TinyLife.Goals.Job.html
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
  commentId: M:TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
  isExternal: true
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  name: AddEmotion(EmotionModifier, int, TimeSpan, IEmotionSource, bool)
  nameWithType: Person.AddEmotion(EmotionModifier, int, TimeSpan, IEmotionSource, bool)
  fullName: TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier, int, System.TimeSpan, TinyLife.Emotions.IEmotionSource, bool)
  nameWithType.vb: Person.AddEmotion(EmotionModifier, Integer, TimeSpan, IEmotionSource, Boolean)
  fullName.vb: TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier, Integer, System.TimeSpan, TinyLife.Emotions.IEmotionSource, Boolean)
  name.vb: AddEmotion(EmotionModifier, Integer, TimeSpan, IEmotionSource, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: AddEmotion
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.AddEmotion(TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan,TinyLife.Emotions.IEmotionSource,System.Boolean)
    name: AddEmotion
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_AddEmotion_TinyLife_Emotions_EmotionModifier_System_Int32_System_TimeSpan_TinyLife_Emotions_IEmotionSource_System_Boolean_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    href: TinyLife.Emotions.IEmotionSource.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Emotions.EmotionModifier.Instance
  commentId: T:TinyLife.Emotions.EmotionModifier.Instance
  parent: TinyLife.Emotions
  href: TinyLife.Emotions.EmotionModifier.html
  name: EmotionModifier.Instance
  nameWithType: EmotionModifier.Instance
  fullName: TinyLife.Emotions.EmotionModifier.Instance
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
  spec.vb:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
    href: TinyLife.Emotions.EmotionModifier.Instance.html
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  href: TinyLife.html
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
    href: TinyLife.Emotions.html
- uid: TinyLife.Objects.Person.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
  commentId: M:TinyLife.Objects.Person.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_RemoveEmotion_TinyLife_Emotions_EmotionModifier_
  name: RemoveEmotion(EmotionModifier)
  nameWithType: Person.RemoveEmotion(EmotionModifier)
  fullName: TinyLife.Objects.Person.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
  spec.csharp:
  - uid: TinyLife.Objects.Person.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
    name: RemoveEmotion
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_RemoveEmotion_TinyLife_Emotions_EmotionModifier_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.RemoveEmotion(TinyLife.Emotions.EmotionModifier)
    name: RemoveEmotion
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_RemoveEmotion_TinyLife_Emotions_EmotionModifier_
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
    href: TinyLife.Emotions.EmotionModifier.html
  - name: )
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  href: TinyLife.Skills.FoodType.html
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
  commentId: M:TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
  href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_Action_TinyLife_Objects_FoodTypedItem_
  name: InvokeOnEaten(Action, FoodTypedItem)
  nameWithType: FoodType.InvokeOnEaten(Action, FoodTypedItem)
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action, TinyLife.Objects.FoodTypedItem)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_Action_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
    href: TinyLife.Skills.FoodType.html#TinyLife_Skills_FoodType_InvokeOnEaten_TinyLife_Actions_Action_TinyLife_Objects_FoodTypedItem_
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
    href: TinyLife.Actions.Action.html
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
    href: TinyLife.Objects.FoodTypedItem.html
  - name: )
- uid: TinyLife.Objects.FoodTypedItem
  commentId: T:TinyLife.Objects.FoodTypedItem
  parent: TinyLife.Objects
  href: TinyLife.Objects.FoodTypedItem.html
  name: FoodTypedItem
  nameWithType: FoodTypedItem
  fullName: TinyLife.Objects.FoodTypedItem
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: TinyLife.Goals.Project.OnCompleted
  commentId: M:TinyLife.Goals.Project.OnCompleted
  href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  name: OnCompleted()
  nameWithType: Project.OnCompleted()
  fullName: TinyLife.Goals.Project.OnCompleted()
  spec.csharp:
  - uid: TinyLife.Goals.Project.OnCompleted
    name: OnCompleted
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.Project.OnCompleted
    name: OnCompleted
    href: TinyLife.Goals.Project.html#TinyLife_Goals_Project_OnCompleted
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  commentId: M:TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  isExternal: true
  href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  name: Trigger(IGoalTriggerable, object, GoalTrigger, params object[])
  nameWithType: IGoalTriggerable.Trigger(IGoalTriggerable, object, GoalTrigger, params object[])
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, object, TinyLife.Goals.GoalTrigger, params object[])
  nameWithType.vb: IGoalTriggerable.Trigger(IGoalTriggerable, Object, GoalTrigger, ParamArray Object())
  fullName.vb: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, Object, TinyLife.Goals.GoalTrigger, ParamArray Object())
  name.vb: Trigger(IGoalTriggerable, Object, GoalTrigger, ParamArray Object())
  spec.csharp:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
    href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
    href: TinyLife.Goals.IGoalTriggerable.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
    href: TinyLife.Goals.IGoalTriggerable.html#TinyLife_Goals_IGoalTriggerable_Trigger_TinyLife_Goals_IGoalTriggerable_System_Object_TinyLife_Goals_GoalTrigger_System_Object___
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
    href: TinyLife.Goals.IGoalTriggerable.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalTrigger.#ctor*
  commentId: Overload:TinyLife.Goals.GoalTrigger.#ctor
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger__ctor_System_String_System_Type___System_Type___
  name: GoalTrigger
  nameWithType: GoalTrigger.GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger.GoalTrigger
  nameWithType.vb: GoalTrigger.New
  fullName.vb: TinyLife.Goals.GoalTrigger.New
  name.vb: New
- uid: TinyLife.Goals.GoalTrigger.ValidObjects
  commentId: F:TinyLife.Goals.GoalTrigger.ValidObjects
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_ValidObjects
  name: ValidObjects
  nameWithType: GoalTrigger.ValidObjects
  fullName: TinyLife.Goals.GoalTrigger.ValidObjects
- uid: TinyLife.Goals.GoalTrigger.IsObjectCompatible*
  commentId: Overload:TinyLife.Goals.GoalTrigger.IsObjectCompatible
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_IsObjectCompatible_System_Type_
  name: IsObjectCompatible
  nameWithType: GoalTrigger.IsObjectCompatible
  fullName: TinyLife.Goals.GoalTrigger.IsObjectCompatible
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Goals.GoalTrigger.ValidValues
  commentId: F:TinyLife.Goals.GoalTrigger.ValidValues
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_ValidValues
  name: ValidValues
  nameWithType: GoalTrigger.ValidValues
  fullName: TinyLife.Goals.GoalTrigger.ValidValues
- uid: TinyLife.Goals.GoalTrigger.IsValueCompatible*
  commentId: Overload:TinyLife.Goals.GoalTrigger.IsValueCompatible
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_IsValueCompatible_System_Type_
  name: IsValueCompatible
  nameWithType: GoalTrigger.IsValueCompatible
  fullName: TinyLife.Goals.GoalTrigger.IsValueCompatible
- uid: TinyLife.Goals.GoalTrigger.Equals*
  commentId: Overload:TinyLife.Goals.GoalTrigger.Equals
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_Equals_TinyLife_Goals_GoalTrigger_
  name: Equals
  nameWithType: GoalTrigger.Equals
  fullName: TinyLife.Goals.GoalTrigger.Equals
- uid: System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
  commentId: M:System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
  parent: System.IEquatable{TinyLife.Goals.GoalTrigger}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(GoalTrigger)
  nameWithType: IEquatable<GoalTrigger>.Equals(GoalTrigger)
  fullName: System.IEquatable<TinyLife.Goals.GoalTrigger>.Equals(TinyLife.Goals.GoalTrigger)
  nameWithType.vb: IEquatable(Of GoalTrigger).Equals(GoalTrigger)
  fullName.vb: System.IEquatable(Of TinyLife.Goals.GoalTrigger).Equals(TinyLife.Goals.GoalTrigger)
  spec.csharp:
  - uid: System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{TinyLife.Goals.GoalTrigger}.Equals(TinyLife.Goals.GoalTrigger)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    href: TinyLife.Goals.GoalTrigger.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: TinyLife.Goals.GoalTrigger.GetHashCode*
  commentId: Overload:TinyLife.Goals.GoalTrigger.GetHashCode
  href: TinyLife.Goals.GoalTrigger.html#TinyLife_Goals_GoalTrigger_GetHashCode
  name: GetHashCode
  nameWithType: GoalTrigger.GetHashCode
  fullName: TinyLife.Goals.GoalTrigger.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
