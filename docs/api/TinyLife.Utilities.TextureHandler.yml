### YamlMime:ManagedReference
items:
- uid: TinyLife.Utilities.TextureHandler
  commentId: T:TinyLife.Utilities.TextureHandler
  id: TextureHandler
  parent: TinyLife.Utilities
  children:
  - TinyLife.Utilities.TextureHandler.AccessoriesTexture
  - TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture
  - TinyLife.Utilities.TextureHandler.AutoTileTexture
  - TinyLife.Utilities.TextureHandler.CursorTexture
  - TinyLife.Utilities.TextureHandler.EmoteTexture
  - TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture
  - TinyLife.Utilities.TextureHandler.FacialHairTexture
  - TinyLife.Utilities.TextureHandler.FurnitureTextures
  - TinyLife.Utilities.TextureHandler.HairsTexture
  - TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture
  - TinyLife.Utilities.TextureHandler.LightTexture
  - TinyLife.Utilities.TextureHandler.MenuBackground(System.Int32,System.Int32,System.Int32,System.Int32)
  - TinyLife.Utilities.TextureHandler.OpeningTexture
  - TinyLife.Utilities.TextureHandler.PantsTexture
  - TinyLife.Utilities.TextureHandler.ParticleTexture
  - TinyLife.Utilities.TextureHandler.PersonTexture
  - TinyLife.Utilities.TextureHandler.RoofTexture
  - TinyLife.Utilities.TextureHandler.ShoesTexture
  - TinyLife.Utilities.TextureHandler.TexturePacker
  - TinyLife.Utilities.TextureHandler.TileTexture
  - TinyLife.Utilities.TextureHandler.TopsTexture
  - TinyLife.Utilities.TextureHandler.UiTexture
  - TinyLife.Utilities.TextureHandler.VehicleTexture
  - TinyLife.Utilities.TextureHandler.WallpaperTextures
  - TinyLife.Utilities.TextureHandler.WaterTexture
  langs:
  - csharp
  - vb
  name: TextureHandler
  nameWithType: TextureHandler
  fullName: TinyLife.Utilities.TextureHandler
  type: Class
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TextureHandler
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 17
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nThe texture handler stores data for the game&apos;s textures, including all of the game&apos;s internal textures and various utility methods.\nIt also stores the game&apos;s <xref href=\"MLEM.Data.RuntimeTexturePacker\" data-throw-if-not-resolved=\"false\"></xref> which is used to pack all textures into a big texture for performance.\n"
  example: []
  syntax:
    content: public static class TextureHandler
    content.vb: Public Module TextureHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TinyLife.Utilities.TextureHandler.TexturePacker
  commentId: F:TinyLife.Utilities.TextureHandler.TexturePacker
  id: TexturePacker
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: TexturePacker
  nameWithType: TextureHandler.TexturePacker
  fullName: TinyLife.Utilities.TextureHandler.TexturePacker
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TexturePacker
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly RuntimeTexturePacker TexturePacker
    return:
      type: MLEM.Data.RuntimeTexturePacker
    content.vb: Public Shared ReadOnly TexturePacker As RuntimeTexturePacker
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.FurnitureTextures
  commentId: F:TinyLife.Utilities.TextureHandler.FurnitureTextures
  id: FurnitureTextures
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: FurnitureTextures
  nameWithType: TextureHandler.FurnitureTextures
  fullName: TinyLife.Utilities.TextureHandler.FurnitureTextures
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FurnitureTextures
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly List<DataTextureAtlas> FurnitureTextures
    return:
      type: System.Collections.Generic.List{MLEM.Data.DataTextureAtlas}
    content.vb: Public Shared ReadOnly FurnitureTextures As List(Of DataTextureAtlas)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.WallpaperTextures
  commentId: P:TinyLife.Utilities.TextureHandler.WallpaperTextures
  id: WallpaperTextures
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: WallpaperTextures
  nameWithType: TextureHandler.WallpaperTextures
  fullName: TinyLife.Utilities.TextureHandler.WallpaperTextures
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallpaperTextures
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> WallpaperTextures { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property WallpaperTextures As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.WallpaperTextures*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.PersonTexture
  commentId: P:TinyLife.Utilities.TextureHandler.PersonTexture
  id: PersonTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: PersonTexture
  nameWithType: TextureHandler.PersonTexture
  fullName: TinyLife.Utilities.TextureHandler.PersonTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PersonTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> PersonTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property PersonTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.PersonTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.HairsTexture
  commentId: P:TinyLife.Utilities.TextureHandler.HairsTexture
  id: HairsTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: HairsTexture
  nameWithType: TextureHandler.HairsTexture
  fullName: TinyLife.Utilities.TextureHandler.HairsTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HairsTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> HairsTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property HairsTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.HairsTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.TopsTexture
  commentId: P:TinyLife.Utilities.TextureHandler.TopsTexture
  id: TopsTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: TopsTexture
  nameWithType: TextureHandler.TopsTexture
  fullName: TinyLife.Utilities.TextureHandler.TopsTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TopsTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> TopsTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property TopsTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.TopsTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.PantsTexture
  commentId: P:TinyLife.Utilities.TextureHandler.PantsTexture
  id: PantsTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: PantsTexture
  nameWithType: TextureHandler.PantsTexture
  fullName: TinyLife.Utilities.TextureHandler.PantsTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PantsTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> PantsTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property PantsTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.PantsTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.ShoesTexture
  commentId: P:TinyLife.Utilities.TextureHandler.ShoesTexture
  id: ShoesTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: ShoesTexture
  nameWithType: TextureHandler.ShoesTexture
  fullName: TinyLife.Utilities.TextureHandler.ShoesTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShoesTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> ShoesTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property ShoesTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.ShoesTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.AccessoriesTexture
  commentId: P:TinyLife.Utilities.TextureHandler.AccessoriesTexture
  id: AccessoriesTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: AccessoriesTexture
  nameWithType: TextureHandler.AccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.AccessoriesTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AccessoriesTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> AccessoriesTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property AccessoriesTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.AccessoriesTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture
  commentId: P:TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture
  id: HeadAccessoriesTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: HeadAccessoriesTexture
  nameWithType: TextureHandler.HeadAccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HeadAccessoriesTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> HeadAccessoriesTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property HeadAccessoriesTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.FacialHairTexture
  commentId: P:TinyLife.Utilities.TextureHandler.FacialHairTexture
  id: FacialHairTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: FacialHairTexture
  nameWithType: TextureHandler.FacialHairTexture
  fullName: TinyLife.Utilities.TextureHandler.FacialHairTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FacialHairTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> FacialHairTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property FacialHairTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.FacialHairTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture
  commentId: P:TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture
  id: FaceAccessoriesTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: FaceAccessoriesTexture
  nameWithType: TextureHandler.FaceAccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FaceAccessoriesTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> FaceAccessoriesTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property FaceAccessoriesTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture
  commentId: P:TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture
  id: ArmAccessoriesTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: ArmAccessoriesTexture
  nameWithType: TextureHandler.ArmAccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ArmAccessoriesTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> ArmAccessoriesTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property ArmAccessoriesTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.UiTexture
  commentId: P:TinyLife.Utilities.TextureHandler.UiTexture
  id: UiTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: UiTexture
  nameWithType: TextureHandler.UiTexture
  fullName: TinyLife.Utilities.TextureHandler.UiTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UiTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> UiTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property UiTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.UiTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.CursorTexture
  commentId: P:TinyLife.Utilities.TextureHandler.CursorTexture
  id: CursorTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: CursorTexture
  nameWithType: TextureHandler.CursorTexture
  fullName: TinyLife.Utilities.TextureHandler.CursorTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CursorTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static UniformTextureAtlas CursorTexture { get; }
    parameters: []
    return:
      type: MLEM.Textures.UniformTextureAtlas
    content.vb: Public Shared ReadOnly Property CursorTexture As UniformTextureAtlas
  overload: TinyLife.Utilities.TextureHandler.CursorTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.OpeningTexture
  commentId: P:TinyLife.Utilities.TextureHandler.OpeningTexture
  id: OpeningTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: OpeningTexture
  nameWithType: TextureHandler.OpeningTexture
  fullName: TinyLife.Utilities.TextureHandler.OpeningTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OpeningTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static UniformTextureAtlas OpeningTexture { get; }
    parameters: []
    return:
      type: MLEM.Textures.UniformTextureAtlas
    content.vb: Public Shared ReadOnly Property OpeningTexture As UniformTextureAtlas
  overload: TinyLife.Utilities.TextureHandler.OpeningTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.RoofTexture
  commentId: P:TinyLife.Utilities.TextureHandler.RoofTexture
  id: RoofTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: RoofTexture
  nameWithType: TextureHandler.RoofTexture
  fullName: TinyLife.Utilities.TextureHandler.RoofTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoofTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static UniformTextureAtlas RoofTexture { get; }
    parameters: []
    return:
      type: MLEM.Textures.UniformTextureAtlas
    content.vb: Public Shared ReadOnly Property RoofTexture As UniformTextureAtlas
  overload: TinyLife.Utilities.TextureHandler.RoofTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.TileTexture
  commentId: P:TinyLife.Utilities.TextureHandler.TileTexture
  id: TileTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: TileTexture
  nameWithType: TextureHandler.TileTexture
  fullName: TinyLife.Utilities.TextureHandler.TileTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TileTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> TileTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property TileTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.TileTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.AutoTileTexture
  commentId: P:TinyLife.Utilities.TextureHandler.AutoTileTexture
  id: AutoTileTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: AutoTileTexture
  nameWithType: TextureHandler.AutoTileTexture
  fullName: TinyLife.Utilities.TextureHandler.AutoTileTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AutoTileTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> AutoTileTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property AutoTileTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.AutoTileTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.WaterTexture
  commentId: P:TinyLife.Utilities.TextureHandler.WaterTexture
  id: WaterTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: WaterTexture
  nameWithType: TextureHandler.WaterTexture
  fullName: TinyLife.Utilities.TextureHandler.WaterTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WaterTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> WaterTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property WaterTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.WaterTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.VehicleTexture
  commentId: P:TinyLife.Utilities.TextureHandler.VehicleTexture
  id: VehicleTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: VehicleTexture
  nameWithType: TextureHandler.VehicleTexture
  fullName: TinyLife.Utilities.TextureHandler.VehicleTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: VehicleTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static DataTextureAtlas VehicleTexture { get; }
    parameters: []
    return:
      type: MLEM.Data.DataTextureAtlas
    content.vb: Public Shared ReadOnly Property VehicleTexture As DataTextureAtlas
  overload: TinyLife.Utilities.TextureHandler.VehicleTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.LightTexture
  commentId: P:TinyLife.Utilities.TextureHandler.LightTexture
  id: LightTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: LightTexture
  nameWithType: TextureHandler.LightTexture
  fullName: TinyLife.Utilities.TextureHandler.LightTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LightTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static UniformTextureAtlas LightTexture { get; }
    parameters: []
    return:
      type: MLEM.Textures.UniformTextureAtlas
    content.vb: Public Shared ReadOnly Property LightTexture As UniformTextureAtlas
  overload: TinyLife.Utilities.TextureHandler.LightTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.ParticleTexture
  commentId: P:TinyLife.Utilities.TextureHandler.ParticleTexture
  id: ParticleTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: ParticleTexture
  nameWithType: TextureHandler.ParticleTexture
  fullName: TinyLife.Utilities.TextureHandler.ParticleTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ParticleTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static UniformTextureAtlas ParticleTexture { get; }
    parameters: []
    return:
      type: MLEM.Textures.UniformTextureAtlas
    content.vb: Public Shared ReadOnly Property ParticleTexture As UniformTextureAtlas
  overload: TinyLife.Utilities.TextureHandler.ParticleTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.EmoteTexture
  commentId: P:TinyLife.Utilities.TextureHandler.EmoteTexture
  id: EmoteTexture
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: EmoteTexture
  nameWithType: TextureHandler.EmoteTexture
  fullName: TinyLife.Utilities.TextureHandler.EmoteTexture
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EmoteTexture
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 43
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static Dictionary<Point, TextureRegion> EmoteTexture { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public Shared ReadOnly Property EmoteTexture As Dictionary(Of Point, TextureRegion)
  overload: TinyLife.Utilities.TextureHandler.EmoteTexture*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.TextureHandler.MenuBackground(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:TinyLife.Utilities.TextureHandler.MenuBackground(System.Int32,System.Int32,System.Int32,System.Int32)
  id: MenuBackground(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: TinyLife.Utilities.TextureHandler
  langs:
  - csharp
  - vb
  name: MenuBackground(Int32, Int32, Int32, Int32)
  nameWithType: TextureHandler.MenuBackground(Int32, Int32, Int32, Int32)
  fullName: TinyLife.Utilities.TextureHandler.MenuBackground(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/TextureHandler.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MenuBackground
    path: ../TinyLife/Utilities/TextureHandler.cs
    startLine: 115
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nReturns a <xref href=\"MLEM.Textures.NinePatch\" data-throw-if-not-resolved=\"false\"></xref> that contains a menu background texture region, based on the given data.\n"
  example: []
  syntax:
    content: public static NinePatch MenuBackground(int x, int y, int width = 1, int height = 1)
    parameters:
    - id: x
      type: System.Int32
      description: The x coordinate of the menu background section to return, which is expected to be between 0 and 1.
    - id: y
      type: System.Int32
      description: The y coordinate of the menu background section to return, which is expected to be between 0 and 1.
    - id: width
      type: System.Int32
      description: The width of the menu background section to return, which is expected to be between 1 and 2.
    - id: height
      type: System.Int32
      description: The height of the menu background section to return, which is expected to be between 1 and 2.
    return:
      type: MLEM.Textures.NinePatch
      description: A <xref href="MLEM.Textures.NinePatch" data-throw-if-not-resolved="false"></xref> that contains a menu background texture region.
    content.vb: Public Shared Function MenuBackground(x As Integer, y As Integer, width As Integer = 1, height As Integer = 1) As NinePatch
  overload: TinyLife.Utilities.TextureHandler.MenuBackground*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MLEM.Data.RuntimeTexturePacker
  commentId: T:MLEM.Data.RuntimeTexturePacker
  parent: MLEM.Data
  isExternal: true
  name: RuntimeTexturePacker
  nameWithType: RuntimeTexturePacker
  fullName: MLEM.Data.RuntimeTexturePacker
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data
  commentId: N:MLEM.Data
  isExternal: true
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{MLEM.Data.DataTextureAtlas}
  commentId: T:System.Collections.Generic.List{MLEM.Data.DataTextureAtlas}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataTextureAtlas>
  nameWithType: List<DataTextureAtlas>
  fullName: System.Collections.Generic.List<MLEM.Data.DataTextureAtlas>
  nameWithType.vb: List(Of DataTextureAtlas)
  fullName.vb: System.Collections.Generic.List(Of MLEM.Data.DataTextureAtlas)
  name.vb: List(Of DataTextureAtlas)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Data.DataTextureAtlas
    name: DataTextureAtlas
    nameWithType: DataTextureAtlas
    fullName: MLEM.Data.DataTextureAtlas
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Data.DataTextureAtlas
    name: DataTextureAtlas
    nameWithType: DataTextureAtlas
    fullName: MLEM.Data.DataTextureAtlas
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Utilities.TextureHandler.WallpaperTextures*
  commentId: Overload:TinyLife.Utilities.TextureHandler.WallpaperTextures
  name: WallpaperTextures
  nameWithType: TextureHandler.WallpaperTextures
  fullName: TinyLife.Utilities.TextureHandler.WallpaperTextures
- uid: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Point, TextureRegion>
  nameWithType: Dictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: Dictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: Dictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.TextureHandler.PersonTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.PersonTexture
  name: PersonTexture
  nameWithType: TextureHandler.PersonTexture
  fullName: TinyLife.Utilities.TextureHandler.PersonTexture
- uid: TinyLife.Utilities.TextureHandler.HairsTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.HairsTexture
  name: HairsTexture
  nameWithType: TextureHandler.HairsTexture
  fullName: TinyLife.Utilities.TextureHandler.HairsTexture
- uid: TinyLife.Utilities.TextureHandler.TopsTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.TopsTexture
  name: TopsTexture
  nameWithType: TextureHandler.TopsTexture
  fullName: TinyLife.Utilities.TextureHandler.TopsTexture
- uid: TinyLife.Utilities.TextureHandler.PantsTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.PantsTexture
  name: PantsTexture
  nameWithType: TextureHandler.PantsTexture
  fullName: TinyLife.Utilities.TextureHandler.PantsTexture
- uid: TinyLife.Utilities.TextureHandler.ShoesTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.ShoesTexture
  name: ShoesTexture
  nameWithType: TextureHandler.ShoesTexture
  fullName: TinyLife.Utilities.TextureHandler.ShoesTexture
- uid: TinyLife.Utilities.TextureHandler.AccessoriesTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.AccessoriesTexture
  name: AccessoriesTexture
  nameWithType: TextureHandler.AccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.AccessoriesTexture
- uid: TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture
  name: HeadAccessoriesTexture
  nameWithType: TextureHandler.HeadAccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.HeadAccessoriesTexture
- uid: TinyLife.Utilities.TextureHandler.FacialHairTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.FacialHairTexture
  name: FacialHairTexture
  nameWithType: TextureHandler.FacialHairTexture
  fullName: TinyLife.Utilities.TextureHandler.FacialHairTexture
- uid: TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture
  name: FaceAccessoriesTexture
  nameWithType: TextureHandler.FaceAccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.FaceAccessoriesTexture
- uid: TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture
  name: ArmAccessoriesTexture
  nameWithType: TextureHandler.ArmAccessoriesTexture
  fullName: TinyLife.Utilities.TextureHandler.ArmAccessoriesTexture
- uid: TinyLife.Utilities.TextureHandler.UiTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.UiTexture
  name: UiTexture
  nameWithType: TextureHandler.UiTexture
  fullName: TinyLife.Utilities.TextureHandler.UiTexture
- uid: TinyLife.Utilities.TextureHandler.CursorTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.CursorTexture
  name: CursorTexture
  nameWithType: TextureHandler.CursorTexture
  fullName: TinyLife.Utilities.TextureHandler.CursorTexture
- uid: MLEM.Textures.UniformTextureAtlas
  commentId: T:MLEM.Textures.UniformTextureAtlas
  parent: MLEM.Textures
  isExternal: true
  name: UniformTextureAtlas
  nameWithType: UniformTextureAtlas
  fullName: MLEM.Textures.UniformTextureAtlas
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: TinyLife.Utilities.TextureHandler.OpeningTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.OpeningTexture
  name: OpeningTexture
  nameWithType: TextureHandler.OpeningTexture
  fullName: TinyLife.Utilities.TextureHandler.OpeningTexture
- uid: TinyLife.Utilities.TextureHandler.RoofTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.RoofTexture
  name: RoofTexture
  nameWithType: TextureHandler.RoofTexture
  fullName: TinyLife.Utilities.TextureHandler.RoofTexture
- uid: TinyLife.Utilities.TextureHandler.TileTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.TileTexture
  name: TileTexture
  nameWithType: TextureHandler.TileTexture
  fullName: TinyLife.Utilities.TextureHandler.TileTexture
- uid: TinyLife.Utilities.TextureHandler.AutoTileTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.AutoTileTexture
  name: AutoTileTexture
  nameWithType: TextureHandler.AutoTileTexture
  fullName: TinyLife.Utilities.TextureHandler.AutoTileTexture
- uid: TinyLife.Utilities.TextureHandler.WaterTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.WaterTexture
  name: WaterTexture
  nameWithType: TextureHandler.WaterTexture
  fullName: TinyLife.Utilities.TextureHandler.WaterTexture
- uid: TinyLife.Utilities.TextureHandler.VehicleTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.VehicleTexture
  name: VehicleTexture
  nameWithType: TextureHandler.VehicleTexture
  fullName: TinyLife.Utilities.TextureHandler.VehicleTexture
- uid: MLEM.Data.DataTextureAtlas
  commentId: T:MLEM.Data.DataTextureAtlas
  parent: MLEM.Data
  isExternal: true
  name: DataTextureAtlas
  nameWithType: DataTextureAtlas
  fullName: MLEM.Data.DataTextureAtlas
- uid: TinyLife.Utilities.TextureHandler.LightTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.LightTexture
  name: LightTexture
  nameWithType: TextureHandler.LightTexture
  fullName: TinyLife.Utilities.TextureHandler.LightTexture
- uid: TinyLife.Utilities.TextureHandler.ParticleTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.ParticleTexture
  name: ParticleTexture
  nameWithType: TextureHandler.ParticleTexture
  fullName: TinyLife.Utilities.TextureHandler.ParticleTexture
- uid: TinyLife.Utilities.TextureHandler.EmoteTexture*
  commentId: Overload:TinyLife.Utilities.TextureHandler.EmoteTexture
  name: EmoteTexture
  nameWithType: TextureHandler.EmoteTexture
  fullName: TinyLife.Utilities.TextureHandler.EmoteTexture
- uid: MLEM.Textures.NinePatch
  commentId: T:MLEM.Textures.NinePatch
  parent: MLEM.Textures
  isExternal: true
  name: NinePatch
  nameWithType: NinePatch
  fullName: MLEM.Textures.NinePatch
- uid: TinyLife.Utilities.TextureHandler.MenuBackground*
  commentId: Overload:TinyLife.Utilities.TextureHandler.MenuBackground
  name: MenuBackground
  nameWithType: TextureHandler.MenuBackground
  fullName: TinyLife.Utilities.TextureHandler.MenuBackground
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
