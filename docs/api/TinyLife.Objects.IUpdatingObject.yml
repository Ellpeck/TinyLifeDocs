### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.IUpdatingObject
  commentId: T:TinyLife.Objects.IUpdatingObject
  id: IUpdatingObject
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  - TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
  langs:
  - csharp
  - vb
  name: IUpdatingObject
  nameWithType: IUpdatingObject
  fullName: TinyLife.Objects.IUpdatingObject
  type: Interface
  source:
    remote:
      path: TinyLife/Objects/IUpdatingObject.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IUpdatingObject
    path: ../TinyLife/Objects/IUpdatingObject.cs
    startLine: 9
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis is an interface that can be added to <xref href=\"TinyLife.Objects.MapObject\" data-throw-if-not-resolved=\"false\"></xref> classes to make them automatically update each update frame.\nThis is used by things like <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>, which needs to update for movement etc.\n"
  example: []
  syntax:
    content: public interface IUpdatingObject
    content.vb: Public Interface IUpdatingObject
  extensionMethods:
  - TinyLife.Objects.IUpdatingObject.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  commentId: P:TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  id: IsMinorUpdateNow
  parent: TinyLife.Objects.IUpdatingObject
  langs:
  - csharp
  - vb
  name: IsMinorUpdateNow
  nameWithType: IUpdatingObject.IsMinorUpdateNow
  fullName: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  type: Property
  source:
    remote:
      path: TinyLife/Objects/IUpdatingObject.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsMinorUpdateNow
    path: ../TinyLife/Objects/IUpdatingObject.cs
    startLine: 17
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA property that returns whether this updating object should currently update minorly, rather than majorly.\nA minor update means that <xref href=\"TinyLife.Objects.IUpdatingObject.Update(GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> is only called once every 10 in-game seconds, but all of the parameters to <xref href=\"TinyLife.Objects.IUpdatingObject.Update(GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> are modified accordingly to maintain proper time calculations.\nNote that this property is only queried every 10 in-game seconds, as switching between major and minor update schedules only happens when a minor update is executed.\nFor example, a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> updates minorly when they&apos;re out of town to aid the game&apos;s performance.\n"
  example: []
  syntax:
    content: virtual bool IsMinorUpdateNow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Overridable ReadOnly Property IsMinorUpdateNow As Boolean
  overload: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
  id: Update(GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.IUpdatingObject
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: IUpdatingObject.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Objects.IUpdatingObject.Update(GameTime, System.TimeSpan, System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/IUpdatingObject.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Objects/IUpdatingObject.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe update method, which is called every update frame by the underlying <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref>.\nTo call this method while invoking all required events, use <xref href=\"TinyLife.Objects.MapObject.DoUpdate(GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: GameTime
      description: The game&apos;s time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last call
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Objects.IUpdatingObject.Update*
references:
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Objects.IUpdatingObject.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<IUpdatingObject>()
  nameWithType: Extensions.JsonCopy<IUpdatingObject>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.IUpdatingObject>()
  nameWithType.vb: Extensions.JsonCopy(Of IUpdatingObject)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.IUpdatingObject)()
  name.vb: JsonCopy(Of IUpdatingObject)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<IUpdatingObject>
    nameWithType: Extensions.JsonCopy<IUpdatingObject>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.IUpdatingObject>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of IUpdatingObject)
    nameWithType: Extensions.JsonCopy(Of IUpdatingObject)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.IUpdatingObject)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.IUpdatingObject
  isExternal: true
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: IUpdatingObject.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Objects.IUpdatingObject.Update(GameTime, System.TimeSpan, System.Single)
  spec.csharp:
  - uid: TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: IUpdatingObject.Update
    fullName: TinyLife.Objects.IUpdatingObject.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.IUpdatingObject.Update(GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: IUpdatingObject.Update
    fullName: TinyLife.Objects.IUpdatingObject.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow*
  commentId: Overload:TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  name: IsMinorUpdateNow
  nameWithType: IUpdatingObject.IsMinorUpdateNow
  fullName: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Objects.IUpdatingObject
  commentId: T:TinyLife.Objects.IUpdatingObject
  parent: TinyLife.Objects
  name: IUpdatingObject
  nameWithType: IUpdatingObject
  fullName: TinyLife.Objects.IUpdatingObject
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Objects.MapObject.DoUpdate(GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.MapObject.DoUpdate(GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.MapObject
  isExternal: true
  name: DoUpdate(GameTime, TimeSpan, Single)
  nameWithType: MapObject.DoUpdate(GameTime, TimeSpan, Single)
  fullName: TinyLife.Objects.MapObject.DoUpdate(GameTime, System.TimeSpan, System.Single)
  spec.csharp:
  - uid: TinyLife.Objects.MapObject.DoUpdate(GameTime,System.TimeSpan,System.Single)
    name: DoUpdate
    nameWithType: MapObject.DoUpdate
    fullName: TinyLife.Objects.MapObject.DoUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Objects.MapObject.DoUpdate(GameTime,System.TimeSpan,System.Single)
    name: DoUpdate
    nameWithType: MapObject.DoUpdate
    fullName: TinyLife.Objects.MapObject.DoUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  isExternal: true
- uid: TinyLife.Objects.IUpdatingObject.Update*
  commentId: Overload:TinyLife.Objects.IUpdatingObject.Update
  name: Update
  nameWithType: IUpdatingObject.Update
  fullName: TinyLife.Objects.IUpdatingObject.Update
- uid: GameTime
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
