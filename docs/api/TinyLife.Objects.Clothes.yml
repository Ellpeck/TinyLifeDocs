### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Clothes
  commentId: T:TinyLife.Objects.Clothes
  id: Clothes
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Clothes.#ctor(System.String,TinyLife.Objects.ClothesLayer,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Single,TinyLife.Objects.ClothesIntention,TinyLife.Objects.StylePreference,TinyLife.Utilities.ColorScheme[])
  - TinyLife.Objects.Clothes.Ages
  - TinyLife.Objects.Clothes.AllIntentions
  - TinyLife.Objects.Clothes.AreCompatible(TinyLife.Objects.Clothes,TinyLife.Objects.Clothes)
  - TinyLife.Objects.Clothes.Colors
  - TinyLife.Objects.Clothes.DepthFunction
  - TinyLife.Objects.Clothes.Description
  - TinyLife.Objects.Clothes.GetDescription(TinyLife.Objects.Person)
  - TinyLife.Objects.Clothes.Icon
  - TinyLife.Objects.Clothes.Intentions
  - TinyLife.Objects.Clothes.IsIncompatible
  - TinyLife.Objects.Clothes.Layer
  - TinyLife.Objects.Clothes.Layers
  - TinyLife.Objects.Clothes.LayersToHide
  - TinyLife.Objects.Clothes.Name
  - TinyLife.Objects.Clothes.NonBuyable
  - TinyLife.Objects.Clothes.Price
  - TinyLife.Objects.Clothes.RandomColorWeight
  - TinyLife.Objects.Clothes.RandomWeight
  - TinyLife.Objects.Clothes.ReferencePrice
  - TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  - TinyLife.Objects.Clothes.SourceString
  - TinyLife.Objects.Clothes.StylePreference
  - TinyLife.Objects.Clothes.StylePreferences
  - TinyLife.Objects.Clothes.TextureBehaviorLayer
  - TinyLife.Objects.Clothes.TextureRegion
  - TinyLife.Objects.Clothes.Textures
  - TinyLife.Objects.Clothes.Types
  langs:
  - csharp
  - vb
  name: Clothes
  nameWithType: Clothes
  fullName: TinyLife.Objects.Clothes
  type: Class
  source:
    remote:
      path: TinyLife/Objects/Clothes.Tops.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Clothes
    path: ../TinyLife/Objects/Clothes.Tops.cs
    startLine: 5
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA set of information and a registry for clothing items (and hair) that a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> can wear.\nCustom clothes can be registered using <xref href=\"TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(StaticJsonConverter<Clothes>), new object[] { typeof(Clothes), "PrivateTypes" })]

      public class Clothes : IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(StaticJsonConverter(Of Clothes)), New Object() { GetType(Clothes), "PrivateTypes" })>

      Public Class Clothes Implements IEmotionSource
  inheritance:
  - System.Object
  implements:
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Clothes.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.Clothes.Types
  commentId: F:TinyLife.Objects.Clothes.Types
  id: Types
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: Clothes.Types
  fullName: TinyLife.Objects.Clothes.Types
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Types
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA registry that contains all <xref href=\"TinyLife.Objects.Clothes\" data-throw-if-not-resolved=\"false\"></xref> in the game and all mods\n"
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Clothes> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Objects.Clothes}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, Clothes)
- uid: TinyLife.Objects.Clothes.Layers
  commentId: F:TinyLife.Objects.Clothes.Layers
  id: Layers
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Layers
  nameWithType: Clothes.Layers
  fullName: TinyLife.Objects.Clothes.Layers
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Layers
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA set of all valid <xref href=\"TinyLife.Objects.ClothesLayer\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: public static readonly ClothesLayer[] Layers
    return:
      type: TinyLife.Objects.ClothesLayer[]
    content.vb: Public Shared ReadOnly Layers As ClothesLayer()
- uid: TinyLife.Objects.Clothes.AllIntentions
  commentId: F:TinyLife.Objects.Clothes.AllIntentions
  id: AllIntentions
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: AllIntentions
  nameWithType: Clothes.AllIntentions
  fullName: TinyLife.Objects.Clothes.AllIntentions
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AllIntentions
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA set of all valid <xref href=\"TinyLife.Objects.ClothesIntention\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: public static readonly ClothesIntention[] AllIntentions
    return:
      type: TinyLife.Objects.ClothesIntention[]
    content.vb: Public Shared ReadOnly AllIntentions As ClothesIntention()
- uid: TinyLife.Objects.Clothes.StylePreferences
  commentId: F:TinyLife.Objects.Clothes.StylePreferences
  id: StylePreferences
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: StylePreferences
  nameWithType: Clothes.StylePreferences
  fullName: TinyLife.Objects.Clothes.StylePreferences
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StylePreferences
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA set of all valid <xref href=\"TinyLife.Objects.Clothes.StylePreference\" data-throw-if-not-resolved=\"false\"></xref> values.\n"
  example: []
  syntax:
    content: public static readonly StylePreference[] StylePreferences
    return:
      type: TinyLife.Objects.StylePreference[]
    content.vb: Public Shared ReadOnly StylePreferences As StylePreference()
- uid: TinyLife.Objects.Clothes.ReferencePrice
  commentId: F:TinyLife.Objects.Clothes.ReferencePrice
  id: ReferencePrice
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: ReferencePrice
  nameWithType: Clothes.ReferencePrice
  fullName: TinyLife.Objects.Clothes.ReferencePrice
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReferencePrice
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe reference price for a piece of clothing.\nWhen clothes items are randomly chosen for a new <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>, the items chosen will be guaranteed to have a price equal to or below this value.\n"
  example: []
  syntax:
    content: public const int ReferencePrice = 50
    return:
      type: System.Int32
    content.vb: Public Const ReferencePrice As Integer = 50
- uid: TinyLife.Objects.Clothes.Name
  commentId: F:TinyLife.Objects.Clothes.Name
  id: Name
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Clothes.Name
  fullName: TinyLife.Objects.Clothes.Name
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe name of this clothes item.\nSince this is used for the <xref href=\"TinyLife.Objects.Clothes.Types\" data-throw-if-not-resolved=\"false\"></xref> registry, the name must be unique across mods.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Objects.Clothes.Layer
  commentId: F:TinyLife.Objects.Clothes.Layer
  id: Layer
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: Clothes.Layer
  fullName: TinyLife.Objects.Clothes.Layer
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Layer
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 66
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe <xref href=\"TinyLife.Objects.ClothesLayer\" data-throw-if-not-resolved=\"false\"></xref> that this clothes item should render on\n"
  example: []
  syntax:
    content: public readonly ClothesLayer Layer
    return:
      type: TinyLife.Objects.ClothesLayer
    content.vb: Public ReadOnly Layer As ClothesLayer
- uid: TinyLife.Objects.Clothes.Textures
  commentId: F:TinyLife.Objects.Clothes.Textures
  id: Textures
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Textures
  nameWithType: Clothes.Textures
  fullName: TinyLife.Objects.Clothes.Textures
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Textures
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 70
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe texture atlas that this clothing item uses, which its base <xref href=\"TinyLife.Objects.Clothes.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref>, animation frames and additional <xref href=\"TinyLife.Objects.Clothes.Colors\" data-throw-if-not-resolved=\"false\"></xref> are contained in.\n"
  example: []
  syntax:
    content: public readonly IReadOnlyDictionary<Point, TextureRegion> Textures
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public ReadOnly Textures As IReadOnlyDictionary(Of Point, TextureRegion)
- uid: TinyLife.Objects.Clothes.TextureRegion
  commentId: F:TinyLife.Objects.Clothes.TextureRegion
  id: TextureRegion
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: TextureRegion
  nameWithType: Clothes.TextureRegion
  fullName: TinyLife.Objects.Clothes.TextureRegion
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TextureRegion
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 74
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis clothing&apos;s initial, top left texture region, with additional regions laid out according to the rules described in https://docs.tinylifegame.com/articles/creating_textures.html.\n"
  example: []
  syntax:
    content: public readonly Point TextureRegion
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly TextureRegion As Point
- uid: TinyLife.Objects.Clothes.Colors
  commentId: F:TinyLife.Objects.Clothes.Colors
  id: Colors
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Clothes.Colors
  fullName: TinyLife.Objects.Clothes.Colors
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Colors
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 78
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe set of <xref href=\"TinyLife.Utilities.ColorScheme\" data-throw-if-not-resolved=\"false\"></xref>s that this clothes item can have its colors selected from, where each entry corresponds to a texture layer gathered from the <xref href=\"TinyLife.Objects.Clothes.Textures\" data-throw-if-not-resolved=\"false\"></xref> based on the <xref href=\"TinyLife.Objects.Clothes.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref>, according to the rules described in https://docs.tinylifegame.com/articles/creating_textures.html.\n"
  example: []
  syntax:
    content: public readonly ColorScheme[] Colors
    return:
      type: TinyLife.Utilities.ColorScheme[]
    content.vb: Public ReadOnly Colors As ColorScheme()
- uid: TinyLife.Objects.Clothes.Price
  commentId: F:TinyLife.Objects.Clothes.Price
  id: Price
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: Clothes.Price
  fullName: TinyLife.Objects.Clothes.Price
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Price
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 82
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe price of this piece of clothing.\n"
  example: []
  syntax:
    content: public readonly float Price
    return:
      type: System.Single
    content.vb: Public ReadOnly Price As Single
- uid: TinyLife.Objects.Clothes.Intentions
  commentId: F:TinyLife.Objects.Clothes.Intentions
  id: Intentions
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Intentions
  nameWithType: Clothes.Intentions
  fullName: TinyLife.Objects.Clothes.Intentions
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Intentions
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 86
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA set of <xref href=\"TinyLife.Objects.ClothesIntention\" data-throw-if-not-resolved=\"false\"></xref> flags that determine what this clothes item can be used for.\n"
  example: []
  syntax:
    content: public readonly ClothesIntention Intentions
    return:
      type: TinyLife.Objects.ClothesIntention
    content.vb: Public ReadOnly Intentions As ClothesIntention
- uid: TinyLife.Objects.Clothes.StylePreference
  commentId: F:TinyLife.Objects.Clothes.StylePreference
  id: StylePreference
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: StylePreference
  nameWithType: Clothes.StylePreference
  fullName: TinyLife.Objects.Clothes.StylePreference
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StylePreference
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 90
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe style preference that this clothing item falls into. A clothing item&apos;s style preference slightly influences whether it will be chosen in <xref href=\"TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random%2cTinyLife.Objects.Person%2cTinyLife.Objects.ClothesLayer%2cTinyLife.Objects.ClothesIntention%2cSystem.Nullable%7bTinyLife.Objects.StylePreference%7d%2cSystem.Boolean%2cSystem.Int32%2cSystem.Func%7bTinyLife.Objects.Clothes%2cSystem.Boolean%7d)\" data-throw-if-not-resolved=\"false\"></xref>. The style preference is not exposed to players.\n"
  example: []
  syntax:
    content: public readonly StylePreference StylePreference
    return:
      type: TinyLife.Objects.StylePreference
    content.vb: Public ReadOnly StylePreference As StylePreference
- uid: TinyLife.Objects.Clothes.Icon
  commentId: P:TinyLife.Objects.Clothes.Icon
  id: Icon
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Clothes.Icon
  fullName: TinyLife.Objects.Clothes.Icon
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Icon
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 96
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe character creator icon for this object, which represents the category / theme / mod that it comes from.\nIf this value is nonnull, the icon will be displayed in the corner of the character creator button for this object.\n"
  example: []
  syntax:
    content: public TextureRegion Icon { get; init; }
    parameters: []
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public Property Icon As TextureRegion
  overload: TinyLife.Objects.Clothes.Icon*
- uid: TinyLife.Objects.Clothes.NonBuyable
  commentId: P:TinyLife.Objects.Clothes.NonBuyable
  id: NonBuyable
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: NonBuyable
  nameWithType: Clothes.NonBuyable
  fullName: TinyLife.Objects.Clothes.NonBuyable
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NonBuyable
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 101
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis value determines whether this clothes item can be bought in the character creator.\nIf this value is false, the only way for this clothes item to be visible in the character creator is by adding it to the <xref href=\"TinyLife.World.Household.ClothesStorage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool NonBuyable { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NonBuyable As Boolean
  overload: TinyLife.Objects.Clothes.NonBuyable*
- uid: TinyLife.Objects.Clothes.Ages
  commentId: P:TinyLife.Objects.Clothes.Ages
  id: Ages
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Ages
  nameWithType: Clothes.Ages
  fullName: TinyLife.Objects.Clothes.Ages
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Ages
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 106
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe age groups that are allowed to wear these clothes.\nDefaults to <xref href=\"TinyLife.Objects.AgeGroup.Adult\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AgeGroup Ages { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public Property Ages As AgeGroup
  overload: TinyLife.Objects.Clothes.Ages*
- uid: TinyLife.Objects.Clothes.DepthFunction
  commentId: P:TinyLife.Objects.Clothes.DepthFunction
  id: DepthFunction
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: DepthFunction
  nameWithType: Clothes.DepthFunction
  fullName: TinyLife.Objects.Clothes.DepthFunction
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DepthFunction
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 111
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA function that determines the depth with which this clothes item is rendered based on the given <xref href=\"TinyLife.Objects.Pose\" data-throw-if-not-resolved=\"false\"></xref>, their rotation, and the layer of this clothes item being rendered.\nThis function defaults to returning <xref href=\"TinyLife.Utilities.Extensions.GetDepth(TinyLife.Objects.ClothesLayer)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Func<(Pose Pose, Direction2 Rotation, int Layer), float> DepthFunction { get; init; }
    parameters: []
    return:
      type: System.Func{System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32},System.Single}
    content.vb: Public Property DepthFunction As Func(Of (Pose As Pose, Rotation As Direction2, Layer As Integer), Single)
  overload: TinyLife.Objects.Clothes.DepthFunction*
- uid: TinyLife.Objects.Clothes.TextureBehaviorLayer
  commentId: P:TinyLife.Objects.Clothes.TextureBehaviorLayer
  id: TextureBehaviorLayer
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: TextureBehaviorLayer
  nameWithType: Clothes.TextureBehaviorLayer
  fullName: TinyLife.Objects.Clothes.TextureBehaviorLayer
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TextureBehaviorLayer
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 116
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA <xref href=\"TinyLife.Objects.ClothesLayer\" data-throw-if-not-resolved=\"false\"></xref> whose texture behavior should be used instead of the <xref href=\"TinyLife.Objects.Clothes.Layer\" data-throw-if-not-resolved=\"false\"></xref>&apos;s texture behavior.\nThe texture behavior determines how many texture regions a clothes item uses, and whether they are animated in a certain <xref href=\"TinyLife.Objects.Pose\" data-throw-if-not-resolved=\"false\"></xref>. For more information, see https://docs.tinylifegame.com/articles/creating_textures.html.\n"
  example: []
  syntax:
    content: public ClothesLayer? TextureBehaviorLayer { get; init; }
    parameters: []
    return:
      type: System.Nullable{TinyLife.Objects.ClothesLayer}
    content.vb: Public Property TextureBehaviorLayer As ClothesLayer?
  overload: TinyLife.Objects.Clothes.TextureBehaviorLayer*
- uid: TinyLife.Objects.Clothes.RandomWeight
  commentId: P:TinyLife.Objects.Clothes.RandomWeight
  id: RandomWeight
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: RandomWeight
  nameWithType: Clothes.RandomWeight
  fullName: TinyLife.Objects.Clothes.RandomWeight
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RandomWeight
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 122
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn optional function that determines the weight that this clothing item has when randomly generating an <xref href=\"TinyLife.Objects.Outfit\" data-throw-if-not-resolved=\"false\"></xref> for a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>.\nThe higher the weight is, the more likely it is for this item to be chosen for an outfit.\nThe default weight for a clothing item is 3 if any of the outfit&apos;s <xref href=\"TinyLife.Objects.Outfit.Intentions\" data-throw-if-not-resolved=\"false\"></xref> match the clothing item&apos;s <xref href=\"TinyLife.Objects.Clothes.Intentions\" data-throw-if-not-resolved=\"false\"></xref>, and 1 otherwise.\n"
  example: []
  syntax:
    content: public Func<Clothes, Outfit, float> RandomWeight { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.Clothes,TinyLife.Objects.Outfit,System.Single}
    content.vb: Public Property RandomWeight As Func(Of Clothes, Outfit, Single)
  overload: TinyLife.Objects.Clothes.RandomWeight*
- uid: TinyLife.Objects.Clothes.RandomColorWeight
  commentId: P:TinyLife.Objects.Clothes.RandomColorWeight
  id: RandomColorWeight
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: RandomColorWeight
  nameWithType: Clothes.RandomColorWeight
  fullName: TinyLife.Objects.Clothes.RandomColorWeight
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RandomColorWeight
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 127
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn optional function that determines the weight that this clothing item&apos;s given color index has when randomly generating an <xref href=\"TinyLife.Objects.Outfit\" data-throw-if-not-resolved=\"false\"></xref> for a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>.\nThe default weight for each clothing item&apos;s color is 1, and the higher the weight is, the more likely it is for the color to be chosen for an outfit.\n"
  example: []
  syntax:
    content: public Func<Clothes, ColorScheme, int, float> RandomColorWeight { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.Clothes,TinyLife.Utilities.ColorScheme,System.Int32,System.Single}
    content.vb: Public Property RandomColorWeight As Func(Of Clothes, ColorScheme, Integer, Single)
  overload: TinyLife.Objects.Clothes.RandomColorWeight*
- uid: TinyLife.Objects.Clothes.IsIncompatible
  commentId: P:TinyLife.Objects.Clothes.IsIncompatible
  id: IsIncompatible
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: IsIncompatible
  nameWithType: Clothes.IsIncompatible
  fullName: TinyLife.Objects.Clothes.IsIncompatible
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsIncompatible
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 131
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn optional function that determines whether this clothing item is incompatible with the passed clothing item. If this function returns <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool\">true</a>, the other clothing item is removed from an <xref href=\"TinyLife.Objects.Outfit\" data-throw-if-not-resolved=\"false\"></xref> when this item gets added.\n"
  example: []
  syntax:
    content: public Func<Clothes, Clothes, bool> IsIncompatible { get; init; }
    parameters: []
    return:
      type: System.Func{TinyLife.Objects.Clothes,TinyLife.Objects.Clothes,System.Boolean}
    content.vb: Public Property IsIncompatible As Func(Of Clothes, Clothes, Boolean)
  overload: TinyLife.Objects.Clothes.IsIncompatible*
- uid: TinyLife.Objects.Clothes.LayersToHide
  commentId: P:TinyLife.Objects.Clothes.LayersToHide
  id: LayersToHide
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: LayersToHide
  nameWithType: Clothes.LayersToHide
  fullName: TinyLife.Objects.Clothes.LayersToHide
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LayersToHide
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 136
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA set of <xref href=\"TinyLife.Objects.ClothesLayer\" data-throw-if-not-resolved=\"false\"></xref> flags that determines which clothes layers are hidden when this clothing item is being worn.\nThis is used by objects like the headscarf, which hides hair.\n"
  example: []
  syntax:
    content: public ClothesLayer LayersToHide { get; init; }
    parameters: []
    return:
      type: TinyLife.Objects.ClothesLayer
    content.vb: Public Property LayersToHide As ClothesLayer
  overload: TinyLife.Objects.Clothes.LayersToHide*
- uid: TinyLife.Objects.Clothes.Description
  commentId: P:TinyLife.Objects.Clothes.Description
  id: Description
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Clothes.Description
  fullName: TinyLife.Objects.Clothes.Description
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Description
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 140
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA function that can optionally determine a set of additional text strings that are added to this clothes item&apos;s description in the <xref href=\"TinyLife.Uis.CharacterCreator\" data-throw-if-not-resolved=\"false\"></xref>. To do so, simply add to the passed <xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Action<Clothes, Person, List<string>> Description { get; init; }
    parameters: []
    return:
      type: System.Action{TinyLife.Objects.Clothes,TinyLife.Objects.Person,System.Collections.Generic.List{System.String}}
    content.vb: Public Property Description As Action(Of Clothes, Person, List(Of String))
  overload: TinyLife.Objects.Clothes.Description*
- uid: TinyLife.Objects.Clothes.SourceString
  commentId: P:TinyLife.Objects.Clothes.SourceString
  id: SourceString
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: Clothes.SourceString
  fullName: TinyLife.Objects.Clothes.SourceString
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SourceString
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 142
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA (localized) string that is displayed when hovering over an <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that has this source\n"
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.Objects.Clothes.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Objects.Clothes.#ctor(System.String,TinyLife.Objects.ClothesLayer,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Single,TinyLife.Objects.ClothesIntention,TinyLife.Objects.StylePreference,TinyLife.Utilities.ColorScheme[])
  commentId: M:TinyLife.Objects.Clothes.#ctor(System.String,TinyLife.Objects.ClothesLayer,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Single,TinyLife.Objects.ClothesIntention,TinyLife.Objects.StylePreference,TinyLife.Utilities.ColorScheme[])
  id: '#ctor(System.String,TinyLife.Objects.ClothesLayer,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,System.Single,TinyLife.Objects.ClothesIntention,TinyLife.Objects.StylePreference,TinyLife.Utilities.ColorScheme[])'
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Clothes(string, ClothesLayer, IReadOnlyDictionary<Point, TextureRegion>, Point, float, ClothesIntention, StylePreference, params ColorScheme[])
  nameWithType: Clothes.Clothes(string, ClothesLayer, IReadOnlyDictionary<Point, TextureRegion>, Point, float, ClothesIntention, StylePreference, params ColorScheme[])
  fullName: TinyLife.Objects.Clothes.Clothes(string, TinyLife.Objects.ClothesLayer, System.Collections.Generic.IReadOnlyDictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, float, TinyLife.Objects.ClothesIntention, TinyLife.Objects.StylePreference, params TinyLife.Utilities.ColorScheme[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 155
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nCreates a new clothes item with the given data, producing a texture layout according to the rules described in https://docs.tinylifegame.com/articles/creating_textures.html.\n"
  example: []
  syntax:
    content: public Clothes(string name, ClothesLayer layer, IReadOnlyDictionary<Point, TextureRegion> textures, Point textureRegion, float price, ClothesIntention intentions, StylePreference stylePreference, params ColorScheme[] colors)
    parameters:
    - id: name
      type: System.String
      description: The name of this clothes item
    - id: layer
      type: TinyLife.Objects.ClothesLayer
      description: The <xref href="TinyLife.Objects.ClothesLayer" data-throw-if-not-resolved="false"></xref> that this clothes item should render on
    - id: textures
      type: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The texture atlas to use for this clothing item.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The top left (standing frame 1) <xref href="TinyLife.Objects.Clothes.TextureRegion" data-throw-if-not-resolved="false"></xref> that this clothes item uses in the world
    - id: price
      type: System.Single
      description: The price of this piece of clothing
    - id: intentions
      type: TinyLife.Objects.ClothesIntention
      description: A set of <xref href="TinyLife.Objects.ClothesIntention" data-throw-if-not-resolved="false"></xref> flags that determine what this clothes item can be used for
    - id: stylePreference
      type: TinyLife.Objects.StylePreference
      description: The style preference that this clothing item falls into. A clothing item&apos;s style preference slightly influences whether it will be chosen in <xref href="TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random%2cTinyLife.Objects.Person%2cTinyLife.Objects.ClothesLayer%2cTinyLife.Objects.ClothesIntention%2cSystem.Nullable%7bTinyLife.Objects.StylePreference%7d%2cSystem.Boolean%2cSystem.Int32%2cSystem.Func%7bTinyLife.Objects.Clothes%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref>.
    - id: colors
      type: TinyLife.Utilities.ColorScheme[]
      description: The set of <xref href="TinyLife.Utilities.ColorScheme" data-throw-if-not-resolved="false"></xref>s that this clothes item can have its colors selected from, where each entry corresponds to a texture layer.
    content.vb: Public Sub New(name As String, layer As ClothesLayer, textures As IReadOnlyDictionary(Of Point, TextureRegion), textureRegion As Point, price As Single, intentions As ClothesIntention, stylePreference As StylePreference, ParamArray colors As ColorScheme())
  overload: TinyLife.Objects.Clothes.#ctor*
  nameWithType.vb: Clothes.New(String, ClothesLayer, IReadOnlyDictionary(Of Point, TextureRegion), Point, Single, ClothesIntention, StylePreference, ParamArray ColorScheme())
  fullName.vb: TinyLife.Objects.Clothes.New(String, TinyLife.Objects.ClothesLayer, System.Collections.Generic.IReadOnlyDictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, Single, TinyLife.Objects.ClothesIntention, TinyLife.Objects.StylePreference, ParamArray TinyLife.Utilities.ColorScheme())
  name.vb: New(String, ClothesLayer, IReadOnlyDictionary(Of Point, TextureRegion), Point, Single, ClothesIntention, StylePreference, ParamArray ColorScheme())
- uid: TinyLife.Objects.Clothes.GetDescription(TinyLife.Objects.Person)
  commentId: M:TinyLife.Objects.Clothes.GetDescription(TinyLife.Objects.Person)
  id: GetDescription(TinyLife.Objects.Person)
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: GetDescription(Person)
  nameWithType: Clothes.GetDescription(Person)
  fullName: TinyLife.Objects.Clothes.GetDescription(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetDescription
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 187
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nReturns this clothes item&apos;s description, which is displayed in the <xref href=\"TinyLife.Uis.CharacterCreator\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method returns this clothes item&apos;s <xref href=\"TinyLife.Objects.Clothes.Intentions\" data-throw-if-not-resolved=\"false\"></xref>&apos; description, as well as any additional description info returned by <xref href=\"TinyLife.Objects.Clothes.Description\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IEnumerable<string> GetDescription(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person who is wearing this clothing item, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: This clothes item&apos;s description.
    content.vb: Public Function GetDescription(person As Person) As IEnumerable(Of String)
  overload: TinyLife.Objects.Clothes.GetDescription*
- uid: TinyLife.Objects.Clothes.AreCompatible(TinyLife.Objects.Clothes,TinyLife.Objects.Clothes)
  commentId: M:TinyLife.Objects.Clothes.AreCompatible(TinyLife.Objects.Clothes,TinyLife.Objects.Clothes)
  id: AreCompatible(TinyLife.Objects.Clothes,TinyLife.Objects.Clothes)
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: AreCompatible(Clothes, Clothes)
  nameWithType: Clothes.AreCompatible(Clothes, Clothes)
  fullName: TinyLife.Objects.Clothes.AreCompatible(TinyLife.Objects.Clothes, TinyLife.Objects.Clothes)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AreCompatible
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 199
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA utility function that checks the passed two <xref href=\"TinyLife.Objects.Clothes\" data-throw-if-not-resolved=\"false\"></xref> items&apos; <xref href=\"TinyLife.Objects.Clothes.IsIncompatible\" data-throw-if-not-resolved=\"false\"></xref> functions and returns whether they are compatible, meaning whether they can be worn together in the same <xref href=\"TinyLife.Objects.Outfit\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static bool AreCompatible(Clothes clothes, Clothes other)
    parameters:
    - id: clothes
      type: TinyLife.Objects.Clothes
      description: The first clothes item.
    - id: other
      type: TinyLife.Objects.Clothes
      description: The second clothes item.
    return:
      type: System.Boolean
      description: Whether the two clothes items are compatible.
    content.vb: Public Shared Function AreCompatible(clothes As Clothes, other As Clothes) As Boolean
  overload: TinyLife.Objects.Clothes.AreCompatible*
- uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  commentId: M:TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  id: Register(TinyLife.Objects.Clothes)
  parent: TinyLife.Objects.Clothes
  langs:
  - csharp
  - vb
  name: Register(Clothes)
  nameWithType: Clothes.Register(Clothes)
  fullName: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Clothes.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/Objects/Clothes.cs
    startLine: 208
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nRegister the given clothes instance to the <xref href=\"TinyLife.Objects.Clothes.Types\" data-throw-if-not-resolved=\"false\"></xref> registry\n"
  example: []
  syntax:
    content: public static Clothes Register(Clothes clothes)
    parameters:
    - id: clothes
      type: TinyLife.Objects.Clothes
      description: The clothes to register
    return:
      type: TinyLife.Objects.Clothes
      description: The passed <code data-dev-comment-type="paramref" class="paramref">clothes</code>, for chaining.
    content.vb: Public Shared Function Register(clothes As Clothes) As Clothes
  overload: TinyLife.Objects.Clothes.Register*
references:
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  commentId: M:TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  name: Register(Clothes)
  nameWithType: Clothes.Register(Clothes)
  fullName: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
  spec.csharp:
  - uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
    name: Register
  - name: (
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Clothes.Register(TinyLife.Objects.Clothes)
    name: Register
  - name: (
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Clothes.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Clothes>(Clothes)
  nameWithType: Extensions.JsonCopy<Clothes>(Clothes)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Clothes>(TinyLife.Objects.Clothes)
  nameWithType.vb: Extensions.JsonCopy(Of Clothes)(Clothes)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Clothes)(TinyLife.Objects.Clothes)
  name.vb: JsonCopy(Of Clothes)(Clothes)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Clothes)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Clothes)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: )
  - name: (
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Objects.Clothes
  commentId: T:TinyLife.Objects.Clothes
  parent: TinyLife.Objects
  name: Clothes
  nameWithType: Clothes
  fullName: TinyLife.Objects.Clothes
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Objects.Clothes}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Objects.Clothes}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Clothes>
  nameWithType: ReadOnlyDictionary<string, Clothes>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Objects.Clothes>
  nameWithType.vb: ReadOnlyDictionary(Of String, Clothes)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Objects.Clothes)
  name.vb: ReadOnlyDictionary(Of String, Clothes)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Objects.ClothesLayer
  commentId: T:TinyLife.Objects.ClothesLayer
  parent: TinyLife.Objects
  name: ClothesLayer
  nameWithType: ClothesLayer
  fullName: TinyLife.Objects.ClothesLayer
- uid: TinyLife.Objects.ClothesLayer[]
  isExternal: true
  name: ClothesLayer[]
  nameWithType: ClothesLayer[]
  fullName: TinyLife.Objects.ClothesLayer[]
  nameWithType.vb: ClothesLayer()
  fullName.vb: TinyLife.Objects.ClothesLayer()
  name.vb: ClothesLayer()
  spec.csharp:
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: (
  - name: )
- uid: TinyLife.Objects.ClothesIntention
  commentId: T:TinyLife.Objects.ClothesIntention
  parent: TinyLife.Objects
  name: ClothesIntention
  nameWithType: ClothesIntention
  fullName: TinyLife.Objects.ClothesIntention
- uid: TinyLife.Objects.ClothesIntention[]
  isExternal: true
  name: ClothesIntention[]
  nameWithType: ClothesIntention[]
  fullName: TinyLife.Objects.ClothesIntention[]
  nameWithType.vb: ClothesIntention()
  fullName.vb: TinyLife.Objects.ClothesIntention()
  name.vb: ClothesIntention()
  spec.csharp:
  - uid: TinyLife.Objects.ClothesIntention
    name: ClothesIntention
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.ClothesIntention
    name: ClothesIntention
  - name: (
  - name: )
- uid: TinyLife.Objects.Clothes.StylePreference
  commentId: F:TinyLife.Objects.Clothes.StylePreference
  name: StylePreference
  nameWithType: Clothes.StylePreference
  fullName: TinyLife.Objects.Clothes.StylePreference
- uid: TinyLife.Objects.StylePreference[]
  isExternal: true
  name: StylePreference[]
  nameWithType: StylePreference[]
  fullName: TinyLife.Objects.StylePreference[]
  nameWithType.vb: StylePreference()
  fullName.vb: TinyLife.Objects.StylePreference()
  name.vb: StylePreference()
  spec.csharp:
  - uid: TinyLife.Objects.StylePreference
    name: StylePreference
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Objects.StylePreference
    name: StylePreference
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Objects.Clothes.Types
  commentId: F:TinyLife.Objects.Clothes.Types
  name: Types
  nameWithType: Clothes.Types
  fullName: TinyLife.Objects.Clothes.Types
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Objects.Clothes.TextureRegion
  commentId: F:TinyLife.Objects.Clothes.TextureRegion
  name: TextureRegion
  nameWithType: Clothes.TextureRegion
  fullName: TinyLife.Objects.Clothes.TextureRegion
- uid: TinyLife.Objects.Clothes.Colors
  commentId: F:TinyLife.Objects.Clothes.Colors
  name: Colors
  nameWithType: Clothes.Colors
  fullName: TinyLife.Objects.Clothes.Colors
- uid: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<Point, TextureRegion>
  nameWithType: IReadOnlyDictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.IReadOnlyDictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: IReadOnlyDictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: IReadOnlyDictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: TinyLife.Objects.Clothes.Textures
  commentId: F:TinyLife.Objects.Clothes.Textures
  name: Textures
  nameWithType: Clothes.Textures
  fullName: TinyLife.Objects.Clothes.Textures
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.Person,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
  commentId: M:TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.Person,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: SetRandomClothesItem(Random, Person, ClothesLayer, ClothesIntention, StylePreference?, bool, int, Func<Clothes, bool>)
  nameWithType: Outfit.SetRandomClothesItem(Random, Person, ClothesLayer, ClothesIntention, StylePreference?, bool, int, Func<Clothes, bool>)
  fullName: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random, TinyLife.Objects.Person, TinyLife.Objects.ClothesLayer, TinyLife.Objects.ClothesIntention, TinyLife.Objects.StylePreference?, bool, int, System.Func<TinyLife.Objects.Clothes, bool>)
  nameWithType.vb: Outfit.SetRandomClothesItem(Random, Person, ClothesLayer, ClothesIntention, StylePreference?, Boolean, Integer, Func(Of Clothes, Boolean))
  fullName.vb: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random, TinyLife.Objects.Person, TinyLife.Objects.ClothesLayer, TinyLife.Objects.ClothesIntention, TinyLife.Objects.StylePreference?, Boolean, Integer, System.Func(Of TinyLife.Objects.Clothes, Boolean))
  name.vb: SetRandomClothesItem(Random, Person, ClothesLayer, ClothesIntention, StylePreference?, Boolean, Integer, Func(Of Clothes, Boolean))
  spec.csharp:
  - uid: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.Person,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
    name: SetRandomClothesItem
  - name: (
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ClothesIntention
    name: ClothesIntention
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.StylePreference
    name: StylePreference
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Outfit.SetRandomClothesItem(System.Random,TinyLife.Objects.Person,TinyLife.Objects.ClothesLayer,TinyLife.Objects.ClothesIntention,System.Nullable{TinyLife.Objects.StylePreference},System.Boolean,System.Int32,System.Func{TinyLife.Objects.Clothes,System.Boolean})
    name: SetRandomClothesItem
  - name: (
  - uid: System.Random
    name: Random
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.random
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ClothesIntention
    name: ClothesIntention
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.StylePreference
    name: StylePreference
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Objects.StylePreference
  commentId: T:TinyLife.Objects.StylePreference
  parent: TinyLife.Objects
  name: StylePreference
  nameWithType: StylePreference
  fullName: TinyLife.Objects.StylePreference
- uid: TinyLife.Objects.Clothes.Icon*
  commentId: Overload:TinyLife.Objects.Clothes.Icon
  name: Icon
  nameWithType: Clothes.Icon
  fullName: TinyLife.Objects.Clothes.Icon
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.World.Household.ClothesStorage
  commentId: F:TinyLife.World.Household.ClothesStorage
  name: ClothesStorage
  nameWithType: Household.ClothesStorage
  fullName: TinyLife.World.Household.ClothesStorage
- uid: TinyLife.Objects.Clothes.NonBuyable*
  commentId: Overload:TinyLife.Objects.Clothes.NonBuyable
  name: NonBuyable
  nameWithType: Clothes.NonBuyable
  fullName: TinyLife.Objects.Clothes.NonBuyable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.AgeGroup.Adult
  commentId: F:TinyLife.Objects.AgeGroup.Adult
  name: Adult
  nameWithType: AgeGroup.Adult
  fullName: TinyLife.Objects.AgeGroup.Adult
- uid: TinyLife.Objects.Clothes.Ages*
  commentId: Overload:TinyLife.Objects.Clothes.Ages
  name: Ages
  nameWithType: Clothes.Ages
  fullName: TinyLife.Objects.Clothes.Ages
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Objects.Pose
  commentId: T:TinyLife.Objects.Pose
  parent: TinyLife.Objects
  name: Pose
  nameWithType: Pose
  fullName: TinyLife.Objects.Pose
- uid: TinyLife.Utilities.Extensions.GetDepth(TinyLife.Objects.ClothesLayer)
  commentId: M:TinyLife.Utilities.Extensions.GetDepth(TinyLife.Objects.ClothesLayer)
  name: GetDepth(ClothesLayer)
  nameWithType: Extensions.GetDepth(ClothesLayer)
  fullName: TinyLife.Utilities.Extensions.GetDepth(TinyLife.Objects.ClothesLayer)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetDepth(TinyLife.Objects.ClothesLayer)
    name: GetDepth
  - name: (
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetDepth(TinyLife.Objects.ClothesLayer)
    name: GetDepth
  - name: (
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: )
- uid: TinyLife.Objects.Clothes.DepthFunction*
  commentId: Overload:TinyLife.Objects.Clothes.DepthFunction
  name: DepthFunction
  nameWithType: Clothes.DepthFunction
  fullName: TinyLife.Objects.Clothes.DepthFunction
- uid: System.Func{System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32},System.Single}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32},System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(Pose Pose, Direction2 Rotation, int Layer), float>
  nameWithType: Func<(Pose Pose, Direction2 Rotation, int Layer), float>
  fullName: System.Func<(TinyLife.Objects.Pose Pose, MLEM.Misc.Direction2 Rotation, int Layer), float>
  nameWithType.vb: Func(Of (Pose As Pose, Rotation As Direction2, Layer As Integer), Single)
  fullName.vb: System.Func(Of (Pose As TinyLife.Objects.Pose, Rotation As MLEM.Misc.Direction2, Layer As Integer), Single)
  name.vb: Func(Of (Pose As Pose, Rotation As Direction2, Layer As Integer), Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Objects.Pose
    name: Pose
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32}.Pose
    name: Pose
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.pose,mlem.misc.direction2,system.int32-.pose
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32}.Rotation
    name: Rotation
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.pose,mlem.misc.direction2,system.int32-.rotation
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32}.Layer
    name: Layer
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.pose,mlem.misc.direction2,system.int32-.layer
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32}.Pose
    name: Pose
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.pose,mlem.misc.direction2,system.int32-.pose
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Pose
    name: Pose
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32}.Rotation
    name: Rotation
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.pose,mlem.misc.direction2,system.int32-.rotation
  - name: " "
  - name: As
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Pose,MLEM.Misc.Direction2,System.Int32}.Layer
    name: Layer
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.pose,mlem.misc.direction2,system.int32-.layer
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.Clothes.Layer
  commentId: F:TinyLife.Objects.Clothes.Layer
  name: Layer
  nameWithType: Clothes.Layer
  fullName: TinyLife.Objects.Clothes.Layer
- uid: TinyLife.Objects.Clothes.TextureBehaviorLayer*
  commentId: Overload:TinyLife.Objects.Clothes.TextureBehaviorLayer
  name: TextureBehaviorLayer
  nameWithType: Clothes.TextureBehaviorLayer
  fullName: TinyLife.Objects.Clothes.TextureBehaviorLayer
- uid: System.Nullable{TinyLife.Objects.ClothesLayer}
  commentId: T:System.Nullable{TinyLife.Objects.ClothesLayer}
  parent: System
  definition: System.Nullable`1
  name: ClothesLayer?
  nameWithType: ClothesLayer?
  fullName: TinyLife.Objects.ClothesLayer?
  spec.csharp:
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: '?'
  spec.vb:
  - uid: TinyLife.Objects.ClothesLayer
    name: ClothesLayer
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.Outfit
  commentId: T:TinyLife.Objects.Outfit
  parent: TinyLife.Objects
  name: Outfit
  nameWithType: Outfit
  fullName: TinyLife.Objects.Outfit
- uid: TinyLife.Objects.Outfit.Intentions
  commentId: F:TinyLife.Objects.Outfit.Intentions
  name: Intentions
  nameWithType: Outfit.Intentions
  fullName: TinyLife.Objects.Outfit.Intentions
- uid: TinyLife.Objects.Clothes.Intentions
  commentId: F:TinyLife.Objects.Clothes.Intentions
  name: Intentions
  nameWithType: Clothes.Intentions
  fullName: TinyLife.Objects.Clothes.Intentions
- uid: TinyLife.Objects.Clothes.RandomWeight*
  commentId: Overload:TinyLife.Objects.Clothes.RandomWeight
  name: RandomWeight
  nameWithType: Clothes.RandomWeight
  fullName: TinyLife.Objects.Clothes.RandomWeight
- uid: System.Func{TinyLife.Objects.Clothes,TinyLife.Objects.Outfit,System.Single}
  commentId: T:System.Func{TinyLife.Objects.Clothes,TinyLife.Objects.Outfit,System.Single}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<Clothes, Outfit, float>
  nameWithType: Func<Clothes, Outfit, float>
  fullName: System.Func<TinyLife.Objects.Clothes, TinyLife.Objects.Outfit, float>
  nameWithType.vb: Func(Of Clothes, Outfit, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.Clothes, TinyLife.Objects.Outfit, Single)
  name.vb: Func(Of Clothes, Outfit, Single)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Outfit
    name: Outfit
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Outfit
    name: Outfit
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.Clothes.RandomColorWeight*
  commentId: Overload:TinyLife.Objects.Clothes.RandomColorWeight
  name: RandomColorWeight
  nameWithType: Clothes.RandomColorWeight
  fullName: TinyLife.Objects.Clothes.RandomColorWeight
- uid: System.Func{TinyLife.Objects.Clothes,TinyLife.Utilities.ColorScheme,System.Int32,System.Single}
  commentId: T:System.Func{TinyLife.Objects.Clothes,TinyLife.Utilities.ColorScheme,System.Int32,System.Single}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<Clothes, ColorScheme, int, float>
  nameWithType: Func<Clothes, ColorScheme, int, float>
  fullName: System.Func<TinyLife.Objects.Clothes, TinyLife.Utilities.ColorScheme, int, float>
  nameWithType.vb: Func(Of Clothes, ColorScheme, Integer, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.Clothes, TinyLife.Utilities.ColorScheme, Integer, Single)
  name.vb: Func(Of Clothes, ColorScheme, Integer, Single)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Objects.Clothes.IsIncompatible*
  commentId: Overload:TinyLife.Objects.Clothes.IsIncompatible
  name: IsIncompatible
  nameWithType: Clothes.IsIncompatible
  fullName: TinyLife.Objects.Clothes.IsIncompatible
- uid: System.Func{TinyLife.Objects.Clothes,TinyLife.Objects.Clothes,System.Boolean}
  commentId: T:System.Func{TinyLife.Objects.Clothes,TinyLife.Objects.Clothes,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<Clothes, Clothes, bool>
  nameWithType: Func<Clothes, Clothes, bool>
  fullName: System.Func<TinyLife.Objects.Clothes, TinyLife.Objects.Clothes, bool>
  nameWithType.vb: Func(Of Clothes, Clothes, Boolean)
  fullName.vb: System.Func(Of TinyLife.Objects.Clothes, TinyLife.Objects.Clothes, Boolean)
  name.vb: Func(Of Clothes, Clothes, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Objects.Clothes.LayersToHide*
  commentId: Overload:TinyLife.Objects.Clothes.LayersToHide
  name: LayersToHide
  nameWithType: Clothes.LayersToHide
  fullName: TinyLife.Objects.Clothes.LayersToHide
- uid: TinyLife.Uis.CharacterCreator
  commentId: T:TinyLife.Uis.CharacterCreator
  parent: TinyLife.Uis
  name: CharacterCreator
  nameWithType: CharacterCreator
  fullName: TinyLife.Uis.CharacterCreator
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.Clothes.Description*
  commentId: Overload:TinyLife.Objects.Clothes.Description
  name: Description
  nameWithType: Clothes.Description
  fullName: TinyLife.Objects.Clothes.Description
- uid: System.Action{TinyLife.Objects.Clothes,TinyLife.Objects.Person,System.Collections.Generic.List{System.String}}
  commentId: T:System.Action{TinyLife.Objects.Clothes,TinyLife.Objects.Person,System.Collections.Generic.List{System.String}}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<Clothes, Person, List<string>>
  nameWithType: Action<Clothes, Person, List<string>>
  fullName: System.Action<TinyLife.Objects.Clothes, TinyLife.Objects.Person, System.Collections.Generic.List<string>>
  nameWithType.vb: Action(Of Clothes, Person, List(Of String))
  fullName.vb: System.Action(Of TinyLife.Objects.Clothes, TinyLife.Objects.Person, System.Collections.Generic.List(Of String))
  name.vb: Action(Of Clothes, Person, List(Of String))
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Clothes
    name: Clothes
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: TinyLife.Objects.Clothes.SourceString*
  commentId: Overload:TinyLife.Objects.Clothes.SourceString
  name: SourceString
  nameWithType: Clothes.SourceString
  fullName: TinyLife.Objects.Clothes.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Objects.Clothes.#ctor*
  commentId: Overload:TinyLife.Objects.Clothes.#ctor
  name: Clothes
  nameWithType: Clothes.Clothes
  fullName: TinyLife.Objects.Clothes.Clothes
  nameWithType.vb: Clothes.New
  fullName.vb: TinyLife.Objects.Clothes.New
  name.vb: New
- uid: TinyLife.Objects.Clothes.Description
  commentId: P:TinyLife.Objects.Clothes.Description
  name: Description
  nameWithType: Clothes.Description
  fullName: TinyLife.Objects.Clothes.Description
- uid: TinyLife.Objects.Clothes.GetDescription*
  commentId: Overload:TinyLife.Objects.Clothes.GetDescription
  name: GetDescription
  nameWithType: Clothes.GetDescription
  fullName: TinyLife.Objects.Clothes.GetDescription
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.Clothes.IsIncompatible
  commentId: P:TinyLife.Objects.Clothes.IsIncompatible
  name: IsIncompatible
  nameWithType: Clothes.IsIncompatible
  fullName: TinyLife.Objects.Clothes.IsIncompatible
- uid: TinyLife.Objects.Clothes.AreCompatible*
  commentId: Overload:TinyLife.Objects.Clothes.AreCompatible
  name: AreCompatible
  nameWithType: Clothes.AreCompatible
  fullName: TinyLife.Objects.Clothes.AreCompatible
- uid: TinyLife.Objects.Clothes.Register*
  commentId: Overload:TinyLife.Objects.Clothes.Register
  name: Register
  nameWithType: Clothes.Register
  fullName: TinyLife.Objects.Clothes.Register
