### YamlMime:ManagedReference
items:
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  id: IEmotionSource
  parent: TinyLife.Emotions
  children:
  - TinyLife.Emotions.IEmotionSource.SourceString
  langs:
  - csharp
  - vb
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
  type: Interface
  source:
    remote:
      path: TinyLife/Emotions/IEmotionSource.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IEmotionSource
    path: ../TinyLife/Emotions/IEmotionSource.cs
    startLine: 11
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nThis interface can be added to classes that should be able to represent a cause of an emotion.\nBy default, several of the game&apos;s objects, including <xref href=\"TinyLife.Objects.FurnitureType\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.PersonalityType\" data-throw-if-not-resolved=\"false\"></xref> have this interface.\nTo combine multiple emotion sources into one, you can use <xref href=\"TinyLife.Emotions.CombinedEmotionSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IEmotionSource
    content.vb: Public Interface IEmotionSource
  extensionMethods:
  - TinyLife.Emotions.IEmotionSource.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  id: SourceString
  parent: TinyLife.Emotions.IEmotionSource
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
  type: Property
  source:
    remote:
      path: TinyLife/Emotions/IEmotionSource.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SourceString
    path: ../TinyLife/Emotions/IEmotionSource.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA (localized) string that is displayed when hovering over an <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that has this source\n"
  example: []
  syntax:
    content: string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SourceString As String
  overload: TinyLife.Emotions.IEmotionSource.SourceString*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Emotions.CombinedEmotionSource
  commentId: T:TinyLife.Emotions.CombinedEmotionSource
  name: CombinedEmotionSource
  nameWithType: CombinedEmotionSource
  fullName: TinyLife.Emotions.CombinedEmotionSource
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
- uid: TinyLife.Emotions.IEmotionSource.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<IEmotionSource>()
  nameWithType: Extensions.JsonCopy<IEmotionSource>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.IEmotionSource>()
  nameWithType.vb: Extensions.JsonCopy(Of IEmotionSource)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.IEmotionSource)()
  name.vb: JsonCopy(Of IEmotionSource)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<IEmotionSource>
    nameWithType: Extensions.JsonCopy<IEmotionSource>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.IEmotionSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of IEmotionSource)
    nameWithType: Extensions.JsonCopy(Of IEmotionSource)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.IEmotionSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Emotions.IEmotionSource.SourceString*
  commentId: Overload:TinyLife.Emotions.IEmotionSource.SourceString
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
