### YamlMime:ManagedReference
items:
- uid: TinyLife.ChoicePromptInfo
  commentId: T:TinyLife.ChoicePromptInfo
  id: ChoicePromptInfo
  parent: TinyLife
  children:
  - TinyLife.ChoicePromptInfo.#ctor(System.String,TinyLife.ChoicePromptInfo.Option[])
  - TinyLife.ChoicePromptInfo.CreatePromptContent(TinyLife.Objects.Person,TinyLife.Uis.CoveringGroup)
  - TinyLife.ChoicePromptInfo.Name
  - TinyLife.ChoicePromptInfo.Options
  langs:
  - csharp
  - vb
  name: ChoicePromptInfo
  nameWithType: ChoicePromptInfo
  fullName: TinyLife.ChoicePromptInfo
  type: Class
  source:
    remote:
      path: TinyLife/Actions/ChoicePromptInfo.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ChoicePromptInfo
    path: ../TinyLife/Actions/ChoicePromptInfo.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA choice prompt info is a set of data that can be used in <xref href=\"TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)\" data-throw-if-not-resolved=\"false\"></xref> to display a set of options to the player, one of which is randomly chosen to be &quot;correct&quot;, causing a positive effect to happen. Choice prompts are used by <xref href=\"TinyLife.Goals.JobType\" data-throw-if-not-resolved=\"false\"></xref>, but can also be used in custom circumstances.\n"
  example: []
  syntax:
    content: public class ChoicePromptInfo
    content.vb: Public Class ChoicePromptInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.ChoicePromptInfo.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.ChoicePromptInfo.Name
  commentId: F:TinyLife.ChoicePromptInfo.Name
  id: Name
  parent: TinyLife.ChoicePromptInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ChoicePromptInfo.Name
  fullName: TinyLife.ChoicePromptInfo.Name
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ChoicePromptInfo.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Actions/ChoicePromptInfo.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThis choice prompt&apos;s name, which will be localized.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.ChoicePromptInfo.Options
  commentId: F:TinyLife.ChoicePromptInfo.Options
  id: Options
  parent: TinyLife.ChoicePromptInfo
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ChoicePromptInfo.Options
  fullName: TinyLife.ChoicePromptInfo.Options
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ChoicePromptInfo.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Options
    path: ../TinyLife/Actions/ChoicePromptInfo.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThis choice prompt&apos;s set of <xref href=\"TinyLife.ChoicePromptInfo.Option\" data-throw-if-not-resolved=\"false\"></xref> instances, one of which will randomly be chosen as the correct option.\n"
  example: []
  syntax:
    content: public readonly ChoicePromptInfo.Option[] Options
    return:
      type: TinyLife.ChoicePromptInfo.Option[]
    content.vb: Public ReadOnly Options As ChoicePromptInfo.Option()
- uid: TinyLife.ChoicePromptInfo.#ctor(System.String,TinyLife.ChoicePromptInfo.Option[])
  commentId: M:TinyLife.ChoicePromptInfo.#ctor(System.String,TinyLife.ChoicePromptInfo.Option[])
  id: '#ctor(System.String,TinyLife.ChoicePromptInfo.Option[])'
  parent: TinyLife.ChoicePromptInfo
  langs:
  - csharp
  - vb
  name: ChoicePromptInfo(string, params Option[])
  nameWithType: ChoicePromptInfo.ChoicePromptInfo(string, params ChoicePromptInfo.Option[])
  fullName: TinyLife.ChoicePromptInfo.ChoicePromptInfo(string, params TinyLife.ChoicePromptInfo.Option[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/ChoicePromptInfo.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/ChoicePromptInfo.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nCreates a new choice prompt info with the given settings.\n"
  example: []
  syntax:
    content: public ChoicePromptInfo(string name, params ChoicePromptInfo.Option[] options)
    parameters:
    - id: name
      type: System.String
      description: This choice prompt&apos;s name, which will be localized.
    - id: options
      type: TinyLife.ChoicePromptInfo.Option[]
      description: This choice prompt&apos;s set of <xref href="TinyLife.ChoicePromptInfo.Option" data-throw-if-not-resolved="false"></xref> instances, one of which will randomly be chosen as the correct option.
    content.vb: Public Sub New(name As String, ParamArray options As ChoicePromptInfo.Option())
  overload: TinyLife.ChoicePromptInfo.#ctor*
  nameWithType.vb: ChoicePromptInfo.New(String, ParamArray ChoicePromptInfo.Option())
  fullName.vb: TinyLife.ChoicePromptInfo.New(String, ParamArray TinyLife.ChoicePromptInfo.Option())
  name.vb: New(String, ParamArray Option())
- uid: TinyLife.ChoicePromptInfo.CreatePromptContent(TinyLife.Objects.Person,TinyLife.Uis.CoveringGroup)
  commentId: M:TinyLife.ChoicePromptInfo.CreatePromptContent(TinyLife.Objects.Person,TinyLife.Uis.CoveringGroup)
  id: CreatePromptContent(TinyLife.Objects.Person,TinyLife.Uis.CoveringGroup)
  parent: TinyLife.ChoicePromptInfo
  langs:
  - csharp
  - vb
  name: CreatePromptContent(Person, CoveringGroup)
  nameWithType: ChoicePromptInfo.CreatePromptContent(Person, CoveringGroup)
  fullName: TinyLife.ChoicePromptInfo.CreatePromptContent(TinyLife.Objects.Person, TinyLife.Uis.CoveringGroup)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ChoicePromptInfo.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreatePromptContent
    path: ../TinyLife/Actions/ChoicePromptInfo.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nCreates the UI content for this choice prompt. This method is mainly used by <xref href=\"TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IEnumerable<Element> CreatePromptContent(Person person, CoveringGroup prompt)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that should be affected by this choice prompt.
    - id: prompt
      type: TinyLife.Uis.CoveringGroup
      description: The prompt that should be closed when an option is selected.
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
      description: The elements that make up the choice prompt.
    content.vb: Public Function CreatePromptContent(person As Person, prompt As CoveringGroup) As IEnumerable(Of Element)
  overload: TinyLife.ChoicePromptInfo.CreatePromptContent*
references:
- uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  commentId: M:TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  parent: TinyLife.Actions.Action
  name: OpenChoicePrompt(ChoicePromptInfo)
  nameWithType: Action.OpenChoicePrompt(ChoicePromptInfo)
  fullName: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
    name: OpenChoicePrompt
  - name: (
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
    name: OpenChoicePrompt
  - name: (
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  parent: TinyLife.Goals
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.ChoicePromptInfo.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ChoicePromptInfo>(ChoicePromptInfo)
  nameWithType: Extensions.JsonCopy<ChoicePromptInfo>(ChoicePromptInfo)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.ChoicePromptInfo>(TinyLife.ChoicePromptInfo)
  nameWithType.vb: Extensions.JsonCopy(Of ChoicePromptInfo)(ChoicePromptInfo)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.ChoicePromptInfo)(TinyLife.ChoicePromptInfo)
  name.vb: JsonCopy(Of ChoicePromptInfo)(ChoicePromptInfo)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.ChoicePromptInfo)
    name: JsonCopy
  - name: <
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: '>'
  - name: (
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.ChoicePromptInfo)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
  - name: (
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.ChoicePromptInfo.Option
  commentId: T:TinyLife.ChoicePromptInfo.Option
  name: ChoicePromptInfo.Option
  nameWithType: ChoicePromptInfo.Option
  fullName: TinyLife.ChoicePromptInfo.Option
  spec.csharp:
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: .
  - uid: TinyLife.ChoicePromptInfo.Option
    name: Option
  spec.vb:
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: .
  - uid: TinyLife.ChoicePromptInfo.Option
    name: Option
- uid: TinyLife.ChoicePromptInfo.Option[]
  isExternal: true
  name: Option[]
  nameWithType: ChoicePromptInfo.Option[]
  fullName: TinyLife.ChoicePromptInfo.Option[]
  nameWithType.vb: ChoicePromptInfo.Option()
  fullName.vb: TinyLife.ChoicePromptInfo.Option()
  name.vb: Option()
  spec.csharp:
  - uid: TinyLife.ChoicePromptInfo.Option
    name: Option
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.ChoicePromptInfo.Option
    name: Option
  - name: (
  - name: )
- uid: TinyLife.ChoicePromptInfo.#ctor*
  commentId: Overload:TinyLife.ChoicePromptInfo.#ctor
  name: ChoicePromptInfo
  nameWithType: ChoicePromptInfo.ChoicePromptInfo
  fullName: TinyLife.ChoicePromptInfo.ChoicePromptInfo
  nameWithType.vb: ChoicePromptInfo.New
  fullName.vb: TinyLife.ChoicePromptInfo.New
  name.vb: New
- uid: TinyLife.ChoicePromptInfo.CreatePromptContent*
  commentId: Overload:TinyLife.ChoicePromptInfo.CreatePromptContent
  name: CreatePromptContent
  nameWithType: ChoicePromptInfo.CreatePromptContent
  fullName: TinyLife.ChoicePromptInfo.CreatePromptContent
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Uis.CoveringGroup
  commentId: T:TinyLife.Uis.CoveringGroup
  parent: TinyLife.Uis
  name: CoveringGroup
  nameWithType: CoveringGroup
  fullName: TinyLife.Uis.CoveringGroup
- uid: System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Element>
  nameWithType: IEnumerable<Element>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Ui.Elements.Element>
  nameWithType.vb: IEnumerable(Of Element)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Ui.Elements.Element)
  name.vb: IEnumerable(Of Element)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
