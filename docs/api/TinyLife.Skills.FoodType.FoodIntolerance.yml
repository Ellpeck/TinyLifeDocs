### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.FoodType.FoodIntolerance
  commentId: T:TinyLife.Skills.FoodType.FoodIntolerance
  id: FoodType.FoodIntolerance
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.FoodType.FoodIntolerance.None
  - TinyLife.Skills.FoodType.FoodIntolerance.NotPescetarian
  - TinyLife.Skills.FoodType.FoodIntolerance.NotVegan
  - TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian
  langs:
  - csharp
  - vb
  name: FoodType.FoodIntolerance
  nameWithType: FoodType.FoodIntolerance
  fullName: TinyLife.Skills.FoodType.FoodIntolerance
  type: Enum
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FoodIntolerance
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 588
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA flag enumeration that represents a set of food intolerances for a <xref href=\"TinyLife.Skills.FoodType\" data-throw-if-not-resolved=\"false\"></xref>, which determines what food can be eaten by a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> based on their <xref href=\"TinyLife.PersonalityType\" data-throw-if-not-resolved=\"false\"></xref>.\nSee <xref href=\"TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance%2cTinyLife.Objects.Person)\" data-throw-if-not-resolved=\"false\"></xref> to retrieve matching personalities.\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum FoodIntolerance
    content.vb: >-
      <Flags>

      Public Enum FoodIntolerance
  extensionMethods:
  - TinyLife.Skills.FoodType.FoodIntolerance.TinyLife.Utilities.Extensions.JsonCopy``1
  - TinyLife.Skills.FoodType.FoodIntolerance.TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Objects.Person)
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.Skills.FoodType.FoodIntolerance.None
  commentId: F:TinyLife.Skills.FoodType.FoodIntolerance.None
  id: None
  parent: TinyLife.Skills.FoodType.FoodIntolerance
  langs:
  - csharp
  - vb
  name: None
  nameWithType: FoodType.FoodIntolerance.None
  fullName: TinyLife.Skills.FoodType.FoodIntolerance.None
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: None
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 594
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nNo food intolerance.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: TinyLife.Skills.FoodType.FoodIntolerance
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Skills.FoodType.FoodIntolerance.NotVegan
  commentId: F:TinyLife.Skills.FoodType.FoodIntolerance.NotVegan
  id: NotVegan
  parent: TinyLife.Skills.FoodType.FoodIntolerance
  langs:
  - csharp
  - vb
  name: NotVegan
  nameWithType: FoodType.FoodIntolerance.NotVegan
  fullName: TinyLife.Skills.FoodType.FoodIntolerance.NotVegan
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NotVegan
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 598
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA food intolerance representing a food item that is not vegan.\n"
  example: []
  syntax:
    content: NotVegan = 1
    return:
      type: TinyLife.Skills.FoodType.FoodIntolerance
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian
  commentId: F:TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian
  id: NotVegetarian
  parent: TinyLife.Skills.FoodType.FoodIntolerance
  langs:
  - csharp
  - vb
  name: NotVegetarian
  nameWithType: FoodType.FoodIntolerance.NotVegetarian
  fullName: TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NotVegetarian
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 602
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA food intolerance representing a food item that is not vegetarian, which also includes the <xref href=\"TinyLife.Skills.FoodType.FoodIntolerance.NotVegan\" data-throw-if-not-resolved=\"false\"></xref> flag.\n"
  example: []
  syntax:
    content: NotVegetarian = 3
    return:
      type: TinyLife.Skills.FoodType.FoodIntolerance
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Skills.FoodType.FoodIntolerance.NotPescetarian
  commentId: F:TinyLife.Skills.FoodType.FoodIntolerance.NotPescetarian
  id: NotPescetarian
  parent: TinyLife.Skills.FoodType.FoodIntolerance
  langs:
  - csharp
  - vb
  name: NotPescetarian
  nameWithType: FoodType.FoodIntolerance.NotPescetarian
  fullName: TinyLife.Skills.FoodType.FoodIntolerance.NotPescetarian
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NotPescetarian
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 606
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA food intolerance representing a food item that is not pescetarian, which also includes the <xref href=\"TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian\" data-throw-if-not-resolved=\"false\"></xref> (and thus, <xref href=\"TinyLife.Skills.FoodType.FoodIntolerance.NotVegan\" data-throw-if-not-resolved=\"false\"></xref>) flag.\n"
  example: []
  syntax:
    content: NotPescetarian = 7
    return:
      type: TinyLife.Skills.FoodType.FoodIntolerance
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance,TinyLife.Objects.Person)
  commentId: M:TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance,TinyLife.Objects.Person)
  name: GetPersonality(FoodType.FoodIntolerance, Person)
  nameWithType: Extensions.GetPersonality(FoodType.FoodIntolerance, Person)
  fullName: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance, TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance,TinyLife.Objects.Person)
    name: GetPersonality
    nameWithType: Extensions.GetPersonality
    fullName: TinyLife.Utilities.Extensions.GetPersonality
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Skills.FoodType.FoodIntolerance
    name: FoodType.FoodIntolerance
    nameWithType: FoodType.FoodIntolerance
    fullName: TinyLife.Skills.FoodType.FoodIntolerance
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance,TinyLife.Objects.Person)
    name: GetPersonality
    nameWithType: Extensions.GetPersonality
    fullName: TinyLife.Utilities.Extensions.GetPersonality
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Skills.FoodType.FoodIntolerance
    name: FoodType.FoodIntolerance
    nameWithType: FoodType.FoodIntolerance
    fullName: TinyLife.Skills.FoodType.FoodIntolerance
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
- uid: TinyLife.Skills.FoodType.FoodIntolerance.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<FoodType.FoodIntolerance>()
  nameWithType: Extensions.JsonCopy<FoodType.FoodIntolerance>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.FoodIntolerance>()
  nameWithType.vb: Extensions.JsonCopy(Of FoodType.FoodIntolerance)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.FoodIntolerance)()
  name.vb: JsonCopy(Of FoodType.FoodIntolerance)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<FoodType.FoodIntolerance>
    nameWithType: Extensions.JsonCopy<FoodType.FoodIntolerance>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.FoodIntolerance>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of FoodType.FoodIntolerance)
    nameWithType: Extensions.JsonCopy(Of FoodType.FoodIntolerance)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.FoodIntolerance)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Skills.FoodType.FoodIntolerance.TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Objects.Person)
  commentId: M:TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance,TinyLife.Objects.Person)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Skills.FoodType.FoodIntolerance,TinyLife.Objects.Person)
  name: GetPersonality(Person)
  nameWithType: Extensions.GetPersonality(Person)
  fullName: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Objects.Person)
    name: GetPersonality
    nameWithType: Extensions.GetPersonality
    fullName: TinyLife.Utilities.Extensions.GetPersonality
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetPersonality(TinyLife.Objects.Person)
    name: GetPersonality
    nameWithType: Extensions.GetPersonality
    fullName: TinyLife.Utilities.Extensions.GetPersonality
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Skills.FoodType.FoodIntolerance
  commentId: T:TinyLife.Skills.FoodType.FoodIntolerance
  parent: TinyLife.Skills
  name: FoodType.FoodIntolerance
  nameWithType: FoodType.FoodIntolerance
  fullName: TinyLife.Skills.FoodType.FoodIntolerance
- uid: TinyLife.Skills.FoodType.FoodIntolerance.NotVegan
  commentId: F:TinyLife.Skills.FoodType.FoodIntolerance.NotVegan
  isExternal: true
- uid: TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian
  commentId: F:TinyLife.Skills.FoodType.FoodIntolerance.NotVegetarian
  isExternal: true
