### YamlMime:ManagedReference
items:
- uid: TinyLife.World.RoofStyle
  commentId: T:TinyLife.World.RoofStyle
  id: RoofStyle
  parent: TinyLife.World
  children:
  - TinyLife.World.RoofStyle.Custom
  - TinyLife.World.RoofStyle.Flat
  - TinyLife.World.RoofStyle.Gable
  langs:
  - csharp
  - vb
  name: RoofStyle
  nameWithType: RoofStyle
  fullName: TinyLife.World.RoofStyle
  type: Enum
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoofStyle
    path: ../TinyLife/World/Roof.cs
    startLine: 396
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA style for a <xref href=\"TinyLife.World.RoofType\" data-throw-if-not-resolved=\"false\"></xref> to have.\nIf <xref href=\"TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Rectangle%2cMLEM.Misc.Direction2%2cSystem.Int32%5b%5d%2cTinyLife.World.Wallpaper%2cSystem.Single%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)\" data-throw-if-not-resolved=\"false\"></xref> has custom behavior for a custom roof type, <xref href=\"TinyLife.World.RoofStyle.Custom\" data-throw-if-not-resolved=\"false\"></xref> should be used.\n"
  example: []
  syntax:
    content: public enum RoofStyle
    content.vb: Public Enum RoofStyle
  extensionMethods:
  - TinyLife.World.RoofStyle.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.RoofStyle.Flat
  commentId: F:TinyLife.World.RoofStyle.Flat
  id: Flat
  parent: TinyLife.World.RoofStyle
  langs:
  - csharp
  - vb
  name: Flat
  nameWithType: RoofStyle.Flat
  fullName: TinyLife.World.RoofStyle.Flat
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Flat
    path: ../TinyLife/World/Roof.cs
    startLine: 401
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA flat roof style\n"
  example: []
  syntax:
    content: Flat = 0
    return:
      type: TinyLife.World.RoofStyle
- uid: TinyLife.World.RoofStyle.Gable
  commentId: F:TinyLife.World.RoofStyle.Gable
  id: Gable
  parent: TinyLife.World.RoofStyle
  langs:
  - csharp
  - vb
  name: Gable
  nameWithType: RoofStyle.Gable
  fullName: TinyLife.World.RoofStyle.Gable
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Gable
    path: ../TinyLife/World/Roof.cs
    startLine: 405
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA gabled roof style\n"
  example: []
  syntax:
    content: Gable = 1
    return:
      type: TinyLife.World.RoofStyle
- uid: TinyLife.World.RoofStyle.Custom
  commentId: F:TinyLife.World.RoofStyle.Custom
  id: Custom
  parent: TinyLife.World.RoofStyle
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: RoofStyle.Custom
  fullName: TinyLife.World.RoofStyle.Custom
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Custom
    path: ../TinyLife/World/Roof.cs
    startLine: 409
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA custom roof style\n"
  example: []
  syntax:
    content: Custom = 2
    return:
      type: TinyLife.World.RoofStyle
references:
- uid: TinyLife.World.RoofType
  commentId: T:TinyLife.World.RoofType
  parent: TinyLife.World
  name: RoofType
  nameWithType: RoofType
  fullName: TinyLife.World.RoofType
- uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, int[], Wallpaper, float, Color?)
  nameWithType: RoofType.Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, int[], Wallpaper, float, Color?)
  fullName: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, int[], TinyLife.World.Wallpaper, float, Microsoft.Xna.Framework.Color?)
  nameWithType.vb: RoofType.Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, Integer(), Wallpaper, Single, Color?)
  fullName.vb: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, Integer(), TinyLife.World.Wallpaper, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, Integer(), Wallpaper, Single, Color?)
  spec.csharp:
  - uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.World.RoofStyle.Custom
  commentId: F:TinyLife.World.RoofStyle.Custom
  name: Custom
  nameWithType: RoofStyle.Custom
  fullName: TinyLife.World.RoofStyle.Custom
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: TinyLife.World.RoofStyle.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<RoofStyle>(RoofStyle)
  nameWithType: Extensions.JsonCopy<RoofStyle>(RoofStyle)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.RoofStyle>(TinyLife.World.RoofStyle)
  nameWithType.vb: Extensions.JsonCopy(Of RoofStyle)(RoofStyle)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.RoofStyle)(TinyLife.World.RoofStyle)
  name.vb: JsonCopy(Of RoofStyle)(RoofStyle)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.RoofStyle)
    name: JsonCopy
  - name: <
  - uid: TinyLife.World.RoofStyle
    name: RoofStyle
  - name: '>'
  - name: (
  - uid: TinyLife.World.RoofStyle
    name: RoofStyle
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.RoofStyle)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.RoofStyle
    name: RoofStyle
  - name: )
  - name: (
  - uid: TinyLife.World.RoofStyle
    name: RoofStyle
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.World.RoofStyle
  commentId: T:TinyLife.World.RoofStyle
  parent: TinyLife.World
  name: RoofStyle
  nameWithType: RoofStyle
  fullName: TinyLife.World.RoofStyle
