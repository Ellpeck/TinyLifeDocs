### YamlMime:ManagedReference
items:
- uid: TinyLife.World.RoofStyle
  commentId: T:TinyLife.World.RoofStyle
  id: RoofStyle
  parent: TinyLife.World
  children:
  - TinyLife.World.RoofStyle.Custom
  - TinyLife.World.RoofStyle.Flat
  - TinyLife.World.RoofStyle.Gable
  langs:
  - csharp
  - vb
  name: RoofStyle
  nameWithType: RoofStyle
  fullName: TinyLife.World.RoofStyle
  type: Enum
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoofStyle
    path: ../TinyLife/World/Roof.cs
    startLine: 351
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA style for a <xref href=\"TinyLife.World.RoofType\" data-throw-if-not-resolved=\"false\"></xref> to have.\nIf <xref href=\"TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Rectangle%2cMLEM.Misc.Direction2%2cSystem.Int32%2cTinyLife.World.Wallpaper%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> has custom behavior for a custom roof type, <xref href=\"TinyLife.World.RoofStyle.Custom\" data-throw-if-not-resolved=\"false\"></xref> should be used.\n"
  example: []
  syntax:
    content: public enum RoofStyle
    content.vb: Public Enum RoofStyle
  extensionMethods:
  - TinyLife.World.RoofStyle.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.World.RoofStyle.Flat
  commentId: F:TinyLife.World.RoofStyle.Flat
  id: Flat
  parent: TinyLife.World.RoofStyle
  langs:
  - csharp
  - vb
  name: Flat
  nameWithType: RoofStyle.Flat
  fullName: TinyLife.World.RoofStyle.Flat
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Flat
    path: ../TinyLife/World/Roof.cs
    startLine: 356
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA flat roof style\n"
  example: []
  syntax:
    content: Flat = 0
    return:
      type: TinyLife.World.RoofStyle
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.RoofStyle.Gable
  commentId: F:TinyLife.World.RoofStyle.Gable
  id: Gable
  parent: TinyLife.World.RoofStyle
  langs:
  - csharp
  - vb
  name: Gable
  nameWithType: RoofStyle.Gable
  fullName: TinyLife.World.RoofStyle.Gable
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Gable
    path: ../TinyLife/World/Roof.cs
    startLine: 360
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA gabled roof style\n"
  example: []
  syntax:
    content: Gable = 1
    return:
      type: TinyLife.World.RoofStyle
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.RoofStyle.Custom
  commentId: F:TinyLife.World.RoofStyle.Custom
  id: Custom
  parent: TinyLife.World.RoofStyle
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: RoofStyle.Custom
  fullName: TinyLife.World.RoofStyle.Custom
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Custom
    path: ../TinyLife/World/Roof.cs
    startLine: 364
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA custom roof style\n"
  example: []
  syntax:
    content: Custom = 2
    return:
      type: TinyLife.World.RoofStyle
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.World.RoofType
  commentId: T:TinyLife.World.RoofType
  parent: TinyLife.World
  name: RoofType
  nameWithType: RoofType
  fullName: TinyLife.World.RoofType
- uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32,TinyLife.World.Wallpaper,System.Single)
  commentId: M:TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32,TinyLife.World.Wallpaper,System.Single)
  isExternal: true
- uid: TinyLife.World.RoofStyle.Custom
  commentId: F:TinyLife.World.RoofStyle.Custom
  isExternal: true
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: TinyLife.World.RoofStyle.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<RoofStyle>()
  nameWithType: Extensions.JsonCopy<RoofStyle>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.RoofStyle>()
  nameWithType.vb: Extensions.JsonCopy(Of RoofStyle)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.RoofStyle)()
  name.vb: JsonCopy(Of RoofStyle)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<RoofStyle>
    nameWithType: Extensions.JsonCopy<RoofStyle>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.RoofStyle>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of RoofStyle)
    nameWithType: Extensions.JsonCopy(Of RoofStyle)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.RoofStyle)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.RoofStyle
  commentId: T:TinyLife.World.RoofStyle
  parent: TinyLife.World
  name: RoofStyle
  nameWithType: RoofStyle
  fullName: TinyLife.World.RoofStyle
