### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  id: ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  children: []
  langs:
  - csharp
  - vb
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  type: Delegate
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanExecuteDelegate
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 204
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA delegate method used for <xref href=\"TinyLife.Actions.ActionType.TypeSettings.CanExecute\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public delegate CanExecuteResult CanExecuteDelegate(ActionInfo info, bool automatic);
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether or not the action was started by a <xref href="TinyLife.Objects.PersonAi" data-throw-if-not-resolved="false"></xref> rather than manually
    return:
      type: TinyLife.Actions.CanExecuteResult
    content.vb: Public Delegate Function CanExecuteDelegate(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  extensionMethods:
  - TinyLife.Actions.ActionType.CanExecuteDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: TinyLife.Actions.ActionType.TypeSettings.CanExecute
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.CanExecute
  isExternal: true
- uid: TinyLife.Objects.PersonAi
  commentId: T:TinyLife.Objects.PersonAi
  name: PersonAi
  nameWithType: PersonAi
  fullName: TinyLife.Objects.PersonAi
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ActionType.CanExecuteDelegate>()
  nameWithType: Extensions.JsonCopy<ActionType.CanExecuteDelegate>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionType.CanExecuteDelegate>()
  nameWithType.vb: Extensions.JsonCopy(Of ActionType.CanExecuteDelegate)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionType.CanExecuteDelegate)()
  name.vb: JsonCopy(Of ActionType.CanExecuteDelegate)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<ActionType.CanExecuteDelegate>
    nameWithType: Extensions.JsonCopy<ActionType.CanExecuteDelegate>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionType.CanExecuteDelegate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of ActionType.CanExecuteDelegate)
    nameWithType: Extensions.JsonCopy(Of ActionType.CanExecuteDelegate)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionType.CanExecuteDelegate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
