### YamlMime:ManagedReference
items:
- uid: TinyLife.GenealogyType
  commentId: T:TinyLife.GenealogyType
  id: GenealogyType
  parent: TinyLife
  children:
  - TinyLife.GenealogyType.Child
  - TinyLife.GenealogyType.Cousin
  - TinyLife.GenealogyType.DistantlyRelated
  - TinyLife.GenealogyType.Grandchild
  - TinyLife.GenealogyType.Grandparent
  - TinyLife.GenealogyType.Nibling
  - TinyLife.GenealogyType.Parent
  - TinyLife.GenealogyType.Pibling
  - TinyLife.GenealogyType.Sibling
  - TinyLife.GenealogyType.Unrelated
  langs:
  - csharp
  - vb
  name: GenealogyType
  nameWithType: GenealogyType
  fullName: TinyLife.GenealogyType
  type: Enum
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GenealogyType
    path: ../TinyLife/Relationship.cs
    startLine: 539
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn enumeration that represents the type that a <xref href=\"TinyLife.Relationship\" data-throw-if-not-resolved=\"false\"></xref>&apos;s genealogy can have.\nNote that these typs are deliberately gender-neutral.\n"
  example: []
  syntax:
    content: public enum GenealogyType
    content.vb: Public Enum GenealogyType
  extensionMethods:
  - TinyLife.GenealogyType.TinyLife.Utilities.Extensions.GetOpposite
  - TinyLife.GenealogyType.TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType)
  - TinyLife.GenealogyType.TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.Objects.AgeGroup)
  - TinyLife.GenealogyType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.GenealogyType.Unrelated
  commentId: F:TinyLife.GenealogyType.Unrelated
  id: Unrelated
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Unrelated
  nameWithType: GenealogyType.Unrelated
  fullName: TinyLife.GenealogyType.Unrelated
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Unrelated
    path: ../TinyLife/Relationship.cs
    startLine: 544
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents two unrelated people\n"
  example: []
  syntax:
    content: Unrelated = 0
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Parent
  commentId: F:TinyLife.GenealogyType.Parent
  id: Parent
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: GenealogyType.Parent
  fullName: TinyLife.GenealogyType.Parent
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Parent
    path: ../TinyLife/Relationship.cs
    startLine: 548
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a parent of a <xref href=\"TinyLife.GenealogyType.Child\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Parent = 1
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Child
  commentId: F:TinyLife.GenealogyType.Child
  id: Child
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: GenealogyType.Child
  fullName: TinyLife.GenealogyType.Child
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Child
    path: ../TinyLife/Relationship.cs
    startLine: 552
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a child of a <xref href=\"TinyLife.GenealogyType.Parent\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Child = 2
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Sibling
  commentId: F:TinyLife.GenealogyType.Sibling
  id: Sibling
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Sibling
  nameWithType: GenealogyType.Sibling
  fullName: TinyLife.GenealogyType.Sibling
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Sibling
    path: ../TinyLife/Relationship.cs
    startLine: 556
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a sibling\n"
  example: []
  syntax:
    content: Sibling = 3
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Nibling
  commentId: F:TinyLife.GenealogyType.Nibling
  id: Nibling
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Nibling
  nameWithType: GenealogyType.Nibling
  fullName: TinyLife.GenealogyType.Nibling
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Nibling
    path: ../TinyLife/Relationship.cs
    startLine: 560
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a nibling (niece or nephew) of a <xref href=\"TinyLife.GenealogyType.Pibling\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Nibling = 4
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Pibling
  commentId: F:TinyLife.GenealogyType.Pibling
  id: Pibling
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Pibling
  nameWithType: GenealogyType.Pibling
  fullName: TinyLife.GenealogyType.Pibling
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Pibling
    path: ../TinyLife/Relationship.cs
    startLine: 564
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a pibling (aunt or uncle) or a <xref href=\"TinyLife.GenealogyType.Nibling\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Pibling = 5
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Grandparent
  commentId: F:TinyLife.GenealogyType.Grandparent
  id: Grandparent
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Grandparent
  nameWithType: GenealogyType.Grandparent
  fullName: TinyLife.GenealogyType.Grandparent
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Grandparent
    path: ../TinyLife/Relationship.cs
    startLine: 568
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a grandparent of a <xref href=\"TinyLife.GenealogyType.Grandchild\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Grandparent = 6
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Grandchild
  commentId: F:TinyLife.GenealogyType.Grandchild
  id: Grandchild
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Grandchild
  nameWithType: GenealogyType.Grandchild
  fullName: TinyLife.GenealogyType.Grandchild
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Grandchild
    path: ../TinyLife/Relationship.cs
    startLine: 572
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a grandchild of a <xref href=\"TinyLife.GenealogyType.Grandparent\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: Grandchild = 7
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Cousin
  commentId: F:TinyLife.GenealogyType.Cousin
  id: Cousin
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: Cousin
  nameWithType: GenealogyType.Cousin
  fullName: TinyLife.GenealogyType.Cousin
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Cousin
    path: ../TinyLife/Relationship.cs
    startLine: 576
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents a cousin.\n"
  example: []
  syntax:
    content: Cousin = 8
    return:
      type: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.DistantlyRelated
  commentId: F:TinyLife.GenealogyType.DistantlyRelated
  id: DistantlyRelated
  parent: TinyLife.GenealogyType
  langs:
  - csharp
  - vb
  name: DistantlyRelated
  nameWithType: GenealogyType.DistantlyRelated
  fullName: TinyLife.GenealogyType.DistantlyRelated
  type: Field
  source:
    remote:
      path: TinyLife/Relationship.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DistantlyRelated
    path: ../TinyLife/Relationship.cs
    startLine: 580
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA genealogy type that represents that two people are related, but not in any way listed above.\n"
  example: []
  syntax:
    content: DistantlyRelated = 1000
    return:
      type: TinyLife.GenealogyType
references:
- uid: TinyLife.Relationship
  commentId: T:TinyLife.Relationship
  parent: TinyLife
  name: Relationship
  nameWithType: Relationship
  fullName: TinyLife.Relationship
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.GenealogyType.TinyLife.Utilities.Extensions.GetOpposite
  commentId: M:TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  name: GetOpposite(GenealogyType)
  nameWithType: Extensions.GetOpposite(GenealogyType)
  fullName: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
    name: GetOpposite
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
    name: GetOpposite
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
- uid: TinyLife.GenealogyType.TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType)
  commentId: M:TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
  name: GetTransitive(GenealogyType, GenealogyType)
  nameWithType: Extensions.GetTransitive(GenealogyType, GenealogyType)
  fullName: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType, TinyLife.GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
    name: GetTransitive
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
    name: GetTransitive
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
- uid: TinyLife.GenealogyType.TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.Objects.AgeGroup)
  commentId: M:TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
  name: IsAgeAppropriate(GenealogyType, AgeGroup)
  nameWithType: Extensions.IsAgeAppropriate(GenealogyType, AgeGroup)
  fullName: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType, TinyLife.Objects.AgeGroup)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
    name: IsAgeAppropriate
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
    name: IsAgeAppropriate
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
  - name: )
- uid: TinyLife.GenealogyType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GenealogyType>(GenealogyType)
  nameWithType: Extensions.JsonCopy<GenealogyType>(GenealogyType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.GenealogyType>(TinyLife.GenealogyType)
  nameWithType.vb: Extensions.JsonCopy(Of GenealogyType)(GenealogyType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.GenealogyType)(TinyLife.GenealogyType)
  name.vb: JsonCopy(Of GenealogyType)(GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.GenealogyType)
    name: JsonCopy
  - name: <
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: '>'
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.GenealogyType)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
- uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  commentId: M:TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  name: GetOpposite(GenealogyType)
  nameWithType: Extensions.GetOpposite(GenealogyType)
  fullName: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
    name: GetOpposite
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetOpposite(TinyLife.GenealogyType)
    name: GetOpposite
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
  commentId: M:TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
  name: GetTransitive(GenealogyType, GenealogyType)
  nameWithType: Extensions.GetTransitive(GenealogyType, GenealogyType)
  fullName: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType, TinyLife.GenealogyType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
    name: GetTransitive
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.GetTransitive(TinyLife.GenealogyType,TinyLife.GenealogyType)
    name: GetTransitive
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: )
- uid: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
  commentId: M:TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
  name: IsAgeAppropriate(GenealogyType, AgeGroup)
  nameWithType: Extensions.IsAgeAppropriate(GenealogyType, AgeGroup)
  fullName: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType, TinyLife.Objects.AgeGroup)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
    name: IsAgeAppropriate
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.IsAgeAppropriate(TinyLife.GenealogyType,TinyLife.Objects.AgeGroup)
    name: IsAgeAppropriate
  - name: (
  - uid: TinyLife.GenealogyType
    name: GenealogyType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.GenealogyType
  commentId: T:TinyLife.GenealogyType
  parent: TinyLife
  name: GenealogyType
  nameWithType: GenealogyType
  fullName: TinyLife.GenealogyType
- uid: TinyLife.GenealogyType.Child
  commentId: F:TinyLife.GenealogyType.Child
  name: Child
  nameWithType: GenealogyType.Child
  fullName: TinyLife.GenealogyType.Child
- uid: TinyLife.GenealogyType.Parent
  commentId: F:TinyLife.GenealogyType.Parent
  name: Parent
  nameWithType: GenealogyType.Parent
  fullName: TinyLife.GenealogyType.Parent
- uid: TinyLife.GenealogyType.Pibling
  commentId: F:TinyLife.GenealogyType.Pibling
  name: Pibling
  nameWithType: GenealogyType.Pibling
  fullName: TinyLife.GenealogyType.Pibling
- uid: TinyLife.GenealogyType.Nibling
  commentId: F:TinyLife.GenealogyType.Nibling
  name: Nibling
  nameWithType: GenealogyType.Nibling
  fullName: TinyLife.GenealogyType.Nibling
- uid: TinyLife.GenealogyType.Grandchild
  commentId: F:TinyLife.GenealogyType.Grandchild
  name: Grandchild
  nameWithType: GenealogyType.Grandchild
  fullName: TinyLife.GenealogyType.Grandchild
- uid: TinyLife.GenealogyType.Grandparent
  commentId: F:TinyLife.GenealogyType.Grandparent
  name: Grandparent
  nameWithType: GenealogyType.Grandparent
  fullName: TinyLife.GenealogyType.Grandparent
