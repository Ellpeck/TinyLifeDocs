### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Typeless.SocialTypelessAction
  commentId: T:TinyLife.Actions.Typeless.SocialTypelessAction
  id: SocialTypelessAction
  parent: TinyLife.Actions.Typeless
  children:
  - TinyLife.Actions.Typeless.SocialTypelessAction.#ctor(TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.Typeless.SocialTypelessAction.IsMain
  - TinyLife.Actions.Typeless.SocialTypelessAction.Partner
  - TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  - TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  - TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  - TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  - TinyLife.Actions.Typeless.SocialTypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  langs:
  - csharp
  - vb
  name: SocialTypelessAction
  nameWithType: SocialTypelessAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction
  type: Class
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SocialTypelessAction
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 10
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nA social typeless action is an extension of <xref href=\"TinyLife.Actions.Typeless.TypelessAction\" data-throw-if-not-resolved=\"false\"></xref> that expects the underlying <xref href=\"TinyLife.Actions.Typeless.TypelessAction.Parent\" data-throw-if-not-resolved=\"false\"></xref> to be a <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref>. It contains utility properteis such as <xref href=\"TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction\" data-throw-if-not-resolved=\"false\"></xref> that receive information about the social action parent.\n"
  example: []
  syntax:
    content: 'public class SocialTypelessAction : TypelessAction, IGenericDataHolder'
    content.vb: >-
      Public Class SocialTypelessAction
          Inherits TypelessAction
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Actions.Typeless.TypelessAction
  derivedClasses:
  - TinyLife.Actions.SocialAction.StartPartnerAction
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Actions.Typeless.TypelessAction.Random
  - TinyLife.Actions.Typeless.TypelessAction.Info
  - TinyLife.Actions.Typeless.TypelessAction.StartedAutomatically
  - TinyLife.Actions.Typeless.TypelessAction.Parent
  - TinyLife.Actions.Typeless.TypelessAction.Map
  - TinyLife.Actions.Typeless.TypelessAction.Person
  - TinyLife.Actions.Typeless.TypelessAction.ElapsedTime
  - TinyLife.Actions.Typeless.TypelessAction.PlayerPromptOpen
  - TinyLife.Actions.Typeless.TypelessAction.InProgressTime
  - TinyLife.Actions.Typeless.TypelessAction.FullyInProgress
  - TinyLife.Actions.Typeless.TypelessAction.ForceResult
  - TinyLife.Actions.Typeless.TypelessAction.Initialize
  - TinyLife.Actions.Typeless.TypelessAction.IsCompleted
  - TinyLife.Actions.Typeless.TypelessAction.OnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Typeless.TypelessAction.Validate(TinyLife.Objects.Person)
  - TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}})
  - TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt(System.String,System.Action,System.Action)
  - TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String)
  - TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  - TinyLife.Actions.Typeless.TypelessAction.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  - TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
  - TinyLife.Actions.Typeless.TypelessAction.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull(TinyLife.Objects.Person,TinyLife.NeedType,TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Typeless.TypelessAction.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  - TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  - TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
  - TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.Typeless.TypelessAction.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.Typeless.SocialTypelessAction.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  id: SocialParent
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: SocialParent
  nameWithType: SocialTypelessAction.SocialParent
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  type: Property
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SocialParent
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 15
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nThe <xref href=\"TinyLife.Actions.Typeless.TypelessAction.Parent\" data-throw-if-not-resolved=\"false\"></xref> as a <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref>. It is expected that this returns a nonnull result.\n"
  example: []
  syntax:
    content: protected SocialAction SocialParent { get; }
    parameters: []
    return:
      type: TinyLife.Actions.SocialAction
    content.vb: Protected ReadOnly Property SocialParent As SocialAction
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.IsMain
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.IsMain
  id: IsMain
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: IsMain
  nameWithType: SocialTypelessAction.IsMain
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.IsMain
  type: Property
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsMain
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nReturns whether the <xref href=\"TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"TinyLife.Actions.SocialAction.IsMain\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected bool IsMain { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property IsMain As Boolean
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.IsMain*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.Partner
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.Partner
  id: Partner
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: Partner
  nameWithType: SocialTypelessAction.Partner
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.Partner
  type: Property
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Partner
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nReturns a reference to the <xref href=\"TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Actions.SocialAction.Partner\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected Person Partner { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Protected ReadOnly Property Partner As Person
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.Partner*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  id: PartnerSocialAction
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: PartnerSocialAction
  nameWithType: SocialTypelessAction.PartnerSocialAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  type: Property
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PartnerSocialAction
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nReturns a reference to the <xref href=\"TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Actions.SocialAction.PartnerAction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected SocialAction PartnerSocialAction { get; }
    parameters: []
    return:
      type: TinyLife.Actions.SocialAction
    content.vb: Protected ReadOnly Property PartnerSocialAction As SocialAction
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  id: PartnerTypelessAction
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: PartnerTypelessAction
  nameWithType: SocialTypelessAction.PartnerTypelessAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  type: Property
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PartnerTypelessAction
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nReturns a reference to a similar instance of a <xref href=\"TinyLife.Actions.Typeless.SocialTypelessAction\" data-throw-if-not-resolved=\"false\"></xref> that is currently active as a child of the <xref href=\"TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that this might return null if the partner&apos;s and this action are out of sync, or if this action is only started by one of the involved people.\n"
  example: []
  syntax:
    content: protected SocialTypelessAction PartnerTypelessAction { get; }
    parameters: []
    return:
      type: TinyLife.Actions.Typeless.SocialTypelessAction
    content.vb: Protected ReadOnly Property PartnerTypelessAction As SocialTypelessAction
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.#ctor(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.Typeless.SocialTypelessAction.#ctor(TinyLife.Actions.ActionInfo)
  id: '#ctor(TinyLife.Actions.ActionInfo)'
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: SocialTypelessAction(ActionInfo)
  nameWithType: SocialTypelessAction.SocialTypelessAction(ActionInfo)
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.SocialTypelessAction(TinyLife.Actions.ActionInfo)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nCreates a new typeless action with the given action information\n"
  example: []
  syntax:
    content: public SocialTypelessAction(ActionInfo info)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The information for this action
    content.vb: Public Sub New(info As ActionInfo)
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Typeless.SocialTypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: SocialTypelessAction.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nThis method is called every update frame if this action is currently active.\nBy default, only the <xref href=\"TinyLife.Actions.Typeless.TypelessAction.ElapsedTime\" data-throw-if-not-resolved=\"false\"></xref> is modified in this method and <xref href=\"TinyLife.Objects.MapObject.ActionUpdate(TinyLife.Actions.Action%2cMicrosoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: public override void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed, in game time
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overridden: TinyLife.Actions.Typeless.TypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  commentId: M:TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  id: TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  langs:
  - csharp
  - vb
  name: TryForceResult(CompletionType, Nullable<CanExecuteResult>, MapObject)
  nameWithType: SocialTypelessAction.TryForceResult(CompletionType, Nullable<CanExecuteResult>, MapObject)
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult(TinyLife.Actions.CompletionType, System.Nullable<TinyLife.Actions.CanExecuteResult>, TinyLife.Objects.MapObject)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Typeless/SocialTypelessAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TryForceResult
    path: ../TinyLife/Actions/Typeless/SocialTypelessAction.cs
    startLine: 46
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Typeless
  summary: "\nThis is an external version of <xref href=\"TinyLife.Actions.Typeless.TypelessAction.ForceResult\" data-throw-if-not-resolved=\"false\"></xref> which can be called from outside sources, like a <xref href=\"TinyLife.Objects.BreakableFurniture\" data-throw-if-not-resolved=\"false\"></xref> object.\nA reason is provided that can be used to decide whether the external object can cause this action to fail.\nBy default, this action sets <xref href=\"TinyLife.Actions.Typeless.TypelessAction.ForceResult\" data-throw-if-not-resolved=\"false\"></xref> to true and returns true if <xref href=\"TinyLife.Actions.ActionType.TypeSettings.IgnoreObjectConditions\" data-throw-if-not-resolved=\"false\"></xref> doesn&apos;t return true.\n"
  example: []
  syntax:
    content: public override bool TryForceResult(CompletionType result, CanExecuteResult? reason = null, MapObject source = null)
    parameters:
    - id: result
      type: TinyLife.Actions.CompletionType
      description: The result to force.
    - id: reason
      type: System.Nullable{TinyLife.Actions.CanExecuteResult}
      description: The reason for this action to fail. Can be null.
    - id: source
      type: TinyLife.Objects.MapObject
      description: The object that is trying to force this action to fail. Can be null.
    return:
      type: System.Boolean
      description: Whether this action was successfully forced to fail (if returning true, <xref href="TinyLife.Actions.Typeless.TypelessAction.ForceResult" data-throw-if-not-resolved="false"></xref> should also be set to true).
    content.vb: Public Overrides Function TryForceResult(result As CompletionType, reason As CanExecuteResult? = Nothing, source As MapObject = Nothing) As Boolean
  overridden: TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  overload: TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult*
  nameWithType.vb: SocialTypelessAction.TryForceResult(CompletionType, Nullable(Of CanExecuteResult), MapObject)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult(TinyLife.Actions.CompletionType, System.Nullable(Of TinyLife.Actions.CanExecuteResult), TinyLife.Objects.MapObject)
  name.vb: TryForceResult(CompletionType, Nullable(Of CanExecuteResult), MapObject)
references:
- uid: TinyLife.Actions.Typeless.TypelessAction
  commentId: T:TinyLife.Actions.Typeless.TypelessAction
  parent: TinyLife.Actions.Typeless
  name: TypelessAction
  nameWithType: TypelessAction
  fullName: TinyLife.Actions.Typeless.TypelessAction
- uid: TinyLife.Actions.Typeless.TypelessAction.Parent
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.Parent
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Parent
  nameWithType: TypelessAction.Parent
  fullName: TinyLife.Actions.Typeless.TypelessAction.Parent
- uid: TinyLife.Actions.SocialAction
  commentId: T:TinyLife.Actions.SocialAction
  parent: TinyLife.Actions
  name: SocialAction
  nameWithType: SocialAction
  fullName: TinyLife.Actions.SocialAction
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  name: PartnerTypelessAction
  nameWithType: SocialTypelessAction.PartnerTypelessAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
- uid: TinyLife.Actions.Typeless
  commentId: N:TinyLife.Actions.Typeless
  name: TinyLife.Actions.Typeless
  nameWithType: TinyLife.Actions.Typeless
  fullName: TinyLife.Actions.Typeless
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Actions.Typeless.TypelessAction.Random
  commentId: F:TinyLife.Actions.Typeless.TypelessAction.Random
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Random
  nameWithType: TypelessAction.Random
  fullName: TinyLife.Actions.Typeless.TypelessAction.Random
- uid: TinyLife.Actions.Typeless.TypelessAction.Info
  commentId: F:TinyLife.Actions.Typeless.TypelessAction.Info
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Info
  nameWithType: TypelessAction.Info
  fullName: TinyLife.Actions.Typeless.TypelessAction.Info
- uid: TinyLife.Actions.Typeless.TypelessAction.StartedAutomatically
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.StartedAutomatically
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: StartedAutomatically
  nameWithType: TypelessAction.StartedAutomatically
  fullName: TinyLife.Actions.Typeless.TypelessAction.StartedAutomatically
- uid: TinyLife.Actions.Typeless.TypelessAction.Map
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.Map
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Map
  nameWithType: TypelessAction.Map
  fullName: TinyLife.Actions.Typeless.TypelessAction.Map
- uid: TinyLife.Actions.Typeless.TypelessAction.Person
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.Person
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Person
  nameWithType: TypelessAction.Person
  fullName: TinyLife.Actions.Typeless.TypelessAction.Person
- uid: TinyLife.Actions.Typeless.TypelessAction.ElapsedTime
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.ElapsedTime
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: ElapsedTime
  nameWithType: TypelessAction.ElapsedTime
  fullName: TinyLife.Actions.Typeless.TypelessAction.ElapsedTime
- uid: TinyLife.Actions.Typeless.TypelessAction.PlayerPromptOpen
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.PlayerPromptOpen
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: PlayerPromptOpen
  nameWithType: TypelessAction.PlayerPromptOpen
  fullName: TinyLife.Actions.Typeless.TypelessAction.PlayerPromptOpen
- uid: TinyLife.Actions.Typeless.TypelessAction.InProgressTime
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.InProgressTime
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: InProgressTime
  nameWithType: TypelessAction.InProgressTime
  fullName: TinyLife.Actions.Typeless.TypelessAction.InProgressTime
- uid: TinyLife.Actions.Typeless.TypelessAction.FullyInProgress
  commentId: P:TinyLife.Actions.Typeless.TypelessAction.FullyInProgress
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: FullyInProgress
  nameWithType: TypelessAction.FullyInProgress
  fullName: TinyLife.Actions.Typeless.TypelessAction.FullyInProgress
- uid: TinyLife.Actions.Typeless.TypelessAction.ForceResult
  commentId: F:TinyLife.Actions.Typeless.TypelessAction.ForceResult
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: ForceResult
  nameWithType: TypelessAction.ForceResult
  fullName: TinyLife.Actions.Typeless.TypelessAction.ForceResult
- uid: TinyLife.Actions.Typeless.TypelessAction.Initialize
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.Initialize
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Initialize()
  nameWithType: TypelessAction.Initialize()
  fullName: TinyLife.Actions.Typeless.TypelessAction.Initialize()
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Initialize
    name: Initialize
    nameWithType: TypelessAction.Initialize
    fullName: TinyLife.Actions.Typeless.TypelessAction.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Initialize
    name: Initialize
    nameWithType: TypelessAction.Initialize
    fullName: TinyLife.Actions.Typeless.TypelessAction.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.IsCompleted
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.IsCompleted
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: IsCompleted()
  nameWithType: TypelessAction.IsCompleted()
  fullName: TinyLife.Actions.Typeless.TypelessAction.IsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.IsCompleted
    name: IsCompleted
    nameWithType: TypelessAction.IsCompleted
    fullName: TinyLife.Actions.Typeless.TypelessAction.IsCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.IsCompleted
    name: IsCompleted
    nameWithType: TypelessAction.IsCompleted
    fullName: TinyLife.Actions.Typeless.TypelessAction.IsCompleted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: OnCompleted(CompletionType)
  nameWithType: TypelessAction.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.Typeless.TypelessAction.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    nameWithType: TypelessAction.OnCompleted
    fullName: TinyLife.Actions.Typeless.TypelessAction.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    nameWithType: TypelessAction.OnCompleted
    fullName: TinyLife.Actions.Typeless.TypelessAction.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.Validate(TinyLife.Objects.Person)
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: Validate(Person)
  nameWithType: TypelessAction.Validate(Person)
  fullName: TinyLife.Actions.Typeless.TypelessAction.Validate(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Validate(TinyLife.Objects.Person)
    name: Validate
    nameWithType: TypelessAction.Validate
    fullName: TinyLife.Actions.Typeless.TypelessAction.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Validate(TinyLife.Objects.Person)
    name: Validate
    nameWithType: TypelessAction.Validate
    fullName: TinyLife.Actions.Typeless.TypelessAction.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}})
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}})
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: OpenPlayerPrompt(String, Predicate<Panel>, Action<Panel>, Boolean, Func<CoveringGroup, IEnumerable<Element>>)
  nameWithType: TypelessAction.OpenPlayerPrompt(String, Predicate<Panel>, Action<Panel>, Boolean, Func<CoveringGroup, IEnumerable<Element>>)
  fullName: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String, System.Predicate<MLEM.Ui.Elements.Panel>, System.Action<MLEM.Ui.Elements.Panel>, System.Boolean, System.Func<TinyLife.Uis.CoveringGroup, System.Collections.Generic.IEnumerable<MLEM.Ui.Elements.Element>>)
  nameWithType.vb: TypelessAction.OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Func(Of CoveringGroup, IEnumerable(Of Element)))
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String, System.Predicate(Of MLEM.Ui.Elements.Panel), System.Action(Of MLEM.Ui.Elements.Panel), System.Boolean, System.Func(Of TinyLife.Uis.CoveringGroup, System.Collections.Generic.IEnumerable(Of MLEM.Ui.Elements.Element)))
  name.vb: OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Func(Of CoveringGroup, IEnumerable(Of Element)))
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}})
    name: OpenPlayerPrompt
    nameWithType: TypelessAction.OpenPlayerPrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    nameWithType: CoveringGroup
    fullName: TinyLife.Uis.CoveringGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}})
    name: OpenPlayerPrompt
    nameWithType: TypelessAction.OpenPlayerPrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenPlayerPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    nameWithType: Panel
    fullName: MLEM.Ui.Elements.Panel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
    nameWithType: CoveringGroup
    fullName: TinyLife.Uis.CoveringGroup
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt(System.String,System.Action,System.Action)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt(System.String,System.Action,System.Action)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: OpenYesNoPrompt(String, Action, Action)
  nameWithType: TypelessAction.OpenYesNoPrompt(String, Action, Action)
  fullName: TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt(System.String, System.Action, System.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt(System.String,System.Action,System.Action)
    name: OpenYesNoPrompt
    nameWithType: TypelessAction.OpenYesNoPrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt(System.String,System.Action,System.Action)
    name: OpenYesNoPrompt
    nameWithType: TypelessAction.OpenYesNoPrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenYesNoPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: OpenTextPrompt(String, Action<String>, Predicate<String>, TextField.Rule, String)
  nameWithType: TypelessAction.OpenTextPrompt(String, Action<String>, Predicate<String>, TextField.Rule, String)
  fullName: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String, System.Action<System.String>, System.Predicate<System.String>, MLEM.Ui.Elements.TextField.Rule, System.String)
  nameWithType.vb: TypelessAction.OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule, String)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String, System.Action(Of System.String), System.Predicate(Of System.String), MLEM.Ui.Elements.TextField.Rule, System.String)
  name.vb: OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule, String)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String)
    name: OpenTextPrompt
    nameWithType: TypelessAction.OpenTextPrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: TextField.Rule
    nameWithType: TextField.Rule
    fullName: MLEM.Ui.Elements.TextField.Rule
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String)
    name: OpenTextPrompt
    nameWithType: TypelessAction.OpenTextPrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenTextPrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: TextField.Rule
    nameWithType: TextField.Rule
    fullName: MLEM.Ui.Elements.TextField.Rule
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: OpenChoicePrompt(ChoicePromptInfo)
  nameWithType: TypelessAction.OpenChoicePrompt(ChoicePromptInfo)
  fullName: TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
    name: OpenChoicePrompt
    nameWithType: TypelessAction.OpenChoicePrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
    nameWithType: ChoicePromptInfo
    fullName: TinyLife.ChoicePromptInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt(TinyLife.ChoicePromptInfo)
    name: OpenChoicePrompt
    nameWithType: TypelessAction.OpenChoicePrompt
    fullName: TinyLife.Actions.Typeless.TypelessAction.OpenChoicePrompt
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.ChoicePromptInfo
    name: ChoicePromptInfo
    nameWithType: ChoicePromptInfo
    fullName: TinyLife.ChoicePromptInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: SpeakAlone(GameTime, Single, EmoteCategory, SpeakStyle, Int32)
  nameWithType: TypelessAction.SpeakAlone(GameTime, Single, EmoteCategory, SpeakStyle, Int32)
  fullName: TinyLife.Actions.Typeless.TypelessAction.SpeakAlone(Microsoft.Xna.Framework.GameTime, System.Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, System.Int32)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
    name: SpeakAlone
    nameWithType: TypelessAction.SpeakAlone
    fullName: TinyLife.Actions.Typeless.TypelessAction.SpeakAlone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
    name: SpeakAlone
    nameWithType: TypelessAction.SpeakAlone
    fullName: TinyLife.Actions.Typeless.TypelessAction.SpeakAlone
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, Nullable<EmoteCategory>, Nullable<SpeakStyle>, Int32)
  nameWithType: TypelessAction.SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, Nullable<EmoteCategory>, Nullable<SpeakStyle>, Int32)
  fullName: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, System.Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, System.Nullable<TinyLife.Actions.EmoteCategory>, System.Nullable<TinyLife.Objects.SpeakStyle>, System.Int32)
  nameWithType.vb: TypelessAction.SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, Nullable(Of EmoteCategory), Nullable(Of SpeakStyle), Int32)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, System.Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, System.Nullable(Of TinyLife.Actions.EmoteCategory), System.Nullable(Of TinyLife.Objects.SpeakStyle), System.Int32)
  name.vb: SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, Nullable(Of EmoteCategory), Nullable(Of SpeakStyle), Int32)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
    name: SpeakInConversation
    nameWithType: TypelessAction.SpeakInConversation
    fullName: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
    name: SpeakInConversation
    nameWithType: TypelessAction.SpeakInConversation
    fullName: TinyLife.Actions.Typeless.TypelessAction.SpeakInConversation
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
    nameWithType: EmoteCategory
    fullName: TinyLife.Actions.EmoteCategory
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
    nameWithType: SpeakStyle
    fullName: TinyLife.Objects.SpeakStyle
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: CompleteInTime(TimeSpan, Boolean, SkillType, Single, Boolean)
  nameWithType: TypelessAction.CompleteInTime(TimeSpan, Boolean, SkillType, Single, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.CompleteInTime(System.TimeSpan, System.Boolean, TinyLife.Skills.SkillType, System.Single, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteInTime
    nameWithType: TypelessAction.CompleteInTime
    fullName: TinyLife.Actions.Typeless.TypelessAction.CompleteInTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    nameWithType: SkillType
    fullName: TinyLife.Skills.SkillType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.CompleteInTime(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteInTime
    nameWithType: TypelessAction.CompleteInTime
    fullName: TinyLife.Actions.Typeless.TypelessAction.CompleteInTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    nameWithType: SkillType
    fullName: TinyLife.Skills.SkillType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull(TinyLife.Objects.Person,TinyLife.NeedType,TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull(TinyLife.Objects.Person,TinyLife.NeedType,TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: CompleteIfNeedFull(Person, NeedType, CompletionType)
  nameWithType: TypelessAction.CompleteIfNeedFull(Person, NeedType, CompletionType)
  fullName: TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull(TinyLife.Objects.Person, TinyLife.NeedType, TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull(TinyLife.Objects.Person,TinyLife.NeedType,TinyLife.Actions.CompletionType)
    name: CompleteIfNeedFull
    nameWithType: TypelessAction.CompleteIfNeedFull
    fullName: TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.NeedType
    name: NeedType
    nameWithType: NeedType
    fullName: TinyLife.NeedType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull(TinyLife.Objects.Person,TinyLife.NeedType,TinyLife.Actions.CompletionType)
    name: CompleteIfNeedFull
    nameWithType: TypelessAction.CompleteIfNeedFull
    fullName: TinyLife.Actions.Typeless.TypelessAction.CompleteIfNeedFull
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.NeedType
    name: NeedType
    nameWithType: NeedType
    fullName: TinyLife.NeedType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  nameWithType: TypelessAction.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, System.Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
    nameWithType: TypelessAction.PickUpAndGoTo
    fullName: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
    nameWithType: TypelessAction.PickUpAndGoTo
    fullName: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: PickUpAndGoTo(ActionInfo, Func<Furniture, Boolean>, Func<Furniture, Boolean>, Boolean)
  nameWithType: TypelessAction.PickUpAndGoTo(ActionInfo, Func<Furniture, Boolean>, Func<Furniture, Boolean>, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo, System.Func<TinyLife.Objects.Furniture, System.Boolean>, System.Func<TinyLife.Objects.Furniture, System.Boolean>, System.Boolean)
  nameWithType.vb: TypelessAction.PickUpAndGoTo(ActionInfo, Func(Of Furniture, Boolean), Func(Of Furniture, Boolean), Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo, System.Func(Of TinyLife.Objects.Furniture, System.Boolean), System.Func(Of TinyLife.Objects.Furniture, System.Boolean), System.Boolean)
  name.vb: PickUpAndGoTo(ActionInfo, Func(Of Furniture, Boolean), Func(Of Furniture, Boolean), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
    name: PickUpAndGoTo
    nameWithType: TypelessAction.PickUpAndGoTo
    fullName: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
    name: PickUpAndGoTo
    nameWithType: TypelessAction.PickUpAndGoTo
    fullName: TinyLife.Actions.Typeless.TypelessAction.PickUpAndGoTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: Sit(Furniture, Single, ActionSpot)
  nameWithType: TypelessAction.Sit(Furniture, Single, ActionSpot)
  fullName: TinyLife.Actions.Typeless.TypelessAction.Sit(TinyLife.Objects.Furniture, System.Single, TinyLife.Objects.ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
    name: Sit
    nameWithType: TypelessAction.Sit
    fullName: TinyLife.Actions.Typeless.TypelessAction.Sit
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
    name: Sit
    nameWithType: TypelessAction.Sit
    fullName: TinyLife.Actions.Typeless.TypelessAction.Sit
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: GetFreeChair(Person, Furniture)
  nameWithType: TypelessAction.GetFreeChair(Person, Furniture)
  fullName: TinyLife.Actions.Typeless.TypelessAction.GetFreeChair(TinyLife.Objects.Person, TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
    nameWithType: TypelessAction.GetFreeChair
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetFreeChair
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
    nameWithType: TypelessAction.GetFreeChair
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetFreeChair
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: GetFreeChairs(Person, Furniture, Func<Direction2, Boolean>)
  nameWithType: TypelessAction.GetFreeChairs(Person, Furniture, Func<Direction2, Boolean>)
  fullName: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person, TinyLife.Objects.Furniture, System.Func<MLEM.Misc.Direction2, System.Boolean>)
  nameWithType.vb: TypelessAction.GetFreeChairs(Person, Furniture, Func(Of Direction2, Boolean))
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person, TinyLife.Objects.Furniture, System.Func(Of MLEM.Misc.Direction2, System.Boolean))
  name.vb: GetFreeChairs(Person, Furniture, Func(Of Direction2, Boolean))
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
    name: GetFreeChairs
    nameWithType: TypelessAction.GetFreeChairs
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
    name: GetFreeChairs
    nameWithType: TypelessAction.GetFreeChairs
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetFreeChairs
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindAllFreePeople(Person, ActionType, Nullable<Vector2>, Nullable<Single>, Boolean)
  nameWithType: TypelessAction.FindAllFreePeople(Person, ActionType, Nullable<Vector2>, Nullable<Single>, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person, TinyLife.Actions.ActionType, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean)
  nameWithType.vb: TypelessAction.FindAllFreePeople(Person, ActionType, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person, TinyLife.Actions.ActionType, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean)
  name.vb: FindAllFreePeople(Person, ActionType, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreePeople
    nameWithType: TypelessAction.FindAllFreePeople
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreePeople
    nameWithType: TypelessAction.FindAllFreePeople
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreePeople
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable<Vector2>, Nullable<Single>, Boolean, Boolean)
  nameWithType: TypelessAction.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable<Vector2>, Nullable<Single>, Boolean, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Boolean, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean, System.Boolean)
  nameWithType.vb: TypelessAction.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable(Of Vector2), Nullable(Of Single), Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Boolean, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean, System.Boolean)
  name.vb: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Nullable(Of Vector2), Nullable(Of Single), Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
    nameWithType: TypelessAction.FindAllFreeFurniture
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
    nameWithType: TypelessAction.FindAllFreeFurniture
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindAllFreeWalls(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  nameWithType: TypelessAction.FindAllFreeWalls(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean)
  nameWithType.vb: TypelessAction.FindAllFreeWalls(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean)
  name.vb: FindAllFreeWalls(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
    nameWithType: TypelessAction.FindAllFreeWalls
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
    nameWithType: TypelessAction.FindAllFreeWalls
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeWalls
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindAllFreeGround(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  nameWithType: TypelessAction.FindAllFreeGround(Person, Nullable<Vector2>, Nullable<Single>, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Nullable<System.Single>, System.Boolean)
  nameWithType.vb: TypelessAction.FindAllFreeGround(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Nullable(Of System.Single), System.Boolean)
  name.vb: FindAllFreeGround(Person, Nullable(Of Vector2), Nullable(Of Single), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
    nameWithType: TypelessAction.FindAllFreeGround
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
    nameWithType: TypelessAction.FindAllFreeGround
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllFreeGround
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable<Vector2>, Boolean, Boolean)
  nameWithType: TypelessAction.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable<Vector2>, Boolean, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Boolean, System.Boolean)
  nameWithType.vb: TypelessAction.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable(Of Vector2), Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Boolean, System.Boolean)
  name.vb: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Nullable(Of Vector2), Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindFreeFurniture
    nameWithType: TypelessAction.FindFreeFurniture
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindFreeFurniture
    nameWithType: TypelessAction.FindFreeFurniture
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindFreeFurniture
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
    nameWithType: ObjectCategory
    fullName: TinyLife.Objects.ObjectCategory
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindAllActionObjects(Person, ActionType, Nullable<Vector2>)
  nameWithType: TypelessAction.FindAllActionObjects(Person, ActionType, Nullable<Vector2>)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, System.Nullable<Microsoft.Xna.Framework.Vector2>)
  nameWithType.vb: TypelessAction.FindAllActionObjects(Person, ActionType, Nullable(Of Vector2))
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, System.Nullable(Of Microsoft.Xna.Framework.Vector2))
  name.vb: FindAllActionObjects(Person, ActionType, Nullable(Of Vector2))
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: FindAllActionObjects
    nameWithType: TypelessAction.FindAllActionObjects
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: FindAllActionObjects
    nameWithType: TypelessAction.FindAllActionObjects
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindAllActionObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: FindValidActionObjects(Person, ActionType, Boolean, Nullable<Vector2>, Boolean)
  nameWithType: TypelessAction.FindValidActionObjects(Person, ActionType, Boolean, Nullable<Vector2>, Boolean)
  fullName: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, System.Boolean, System.Nullable<Microsoft.Xna.Framework.Vector2>, System.Boolean)
  nameWithType.vb: TypelessAction.FindValidActionObjects(Person, ActionType, Boolean, Nullable(Of Vector2), Boolean)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, System.Boolean, System.Nullable(Of Microsoft.Xna.Framework.Vector2), System.Boolean)
  name.vb: FindValidActionObjects(Person, ActionType, Boolean, Nullable(Of Vector2), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
    name: FindValidActionObjects
    nameWithType: TypelessAction.FindValidActionObjects
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean)
    name: FindValidActionObjects
    nameWithType: TypelessAction.FindValidActionObjects
    fullName: TinyLife.Actions.Typeless.TypelessAction.FindValidActionObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionType
    name: ActionType
    nameWithType: ActionType
    fullName: TinyLife.Actions.ActionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: GetRandomVariety(IEnumerable<ActionVariety>, ActionInfo)
  nameWithType: TypelessAction.GetRandomVariety(IEnumerable<ActionVariety>, ActionInfo)
  fullName: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionVariety>, TinyLife.Actions.ActionInfo)
  nameWithType.vb: TypelessAction.GetRandomVariety(IEnumerable(Of ActionVariety), ActionInfo)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionVariety), TinyLife.Actions.ActionInfo)
  name.vb: GetRandomVariety(IEnumerable(Of ActionVariety), ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
    name: GetRandomVariety
    nameWithType: TypelessAction.GetRandomVariety
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
    nameWithType: ActionVariety
    fullName: TinyLife.Actions.ActionVariety
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
    name: GetRandomVariety
    nameWithType: TypelessAction.GetRandomVariety
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetRandomVariety
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
    nameWithType: ActionVariety
    fullName: TinyLife.Actions.ActionVariety
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    nameWithType: ActionInfo
    fullName: TinyLife.Actions.ActionInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Typeless.TypelessAction
  name: GetTableSpot(Furniture, ActionSpot)
  nameWithType: TypelessAction.GetTableSpot(Furniture, ActionSpot)
  fullName: TinyLife.Actions.Typeless.TypelessAction.GetTableSpot(TinyLife.Objects.Furniture, TinyLife.Objects.ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
    nameWithType: TypelessAction.GetTableSpot
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetTableSpot
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
    nameWithType: TypelessAction.GetTableSpot
    fullName: TinyLife.Actions.Typeless.TypelessAction.GetTableSpot
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
    nameWithType: Furniture
    fullName: TinyLife.Objects.Furniture
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
    nameWithType: ActionSpot
    fullName: TinyLife.Objects.ActionSpot
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: InvokeForBoth(Person, Person, Action<Person, Person>)
  nameWithType: TypelessAction.InvokeForBoth(Person, Person, Action<Person, Person>)
  fullName: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person, TinyLife.Objects.Person, System.Action<TinyLife.Objects.Person, TinyLife.Objects.Person>)
  nameWithType.vb: TypelessAction.InvokeForBoth(Person, Person, Action(Of Person, Person))
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person, TinyLife.Objects.Person, System.Action(Of TinyLife.Objects.Person, TinyLife.Objects.Person))
  name.vb: InvokeForBoth(Person, Person, Action(Of Person, Person))
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
    nameWithType: TypelessAction.InvokeForBoth
    fullName: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
    nameWithType: TypelessAction.InvokeForBoth
    fullName: TinyLife.Actions.Typeless.TypelessAction.InvokeForBoth
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<SocialTypelessAction>()
  nameWithType: Extensions.JsonCopy<SocialTypelessAction>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Typeless.SocialTypelessAction>()
  nameWithType.vb: Extensions.JsonCopy(Of SocialTypelessAction)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Typeless.SocialTypelessAction)()
  name.vb: JsonCopy(Of SocialTypelessAction)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<SocialTypelessAction>
    nameWithType: Extensions.JsonCopy<SocialTypelessAction>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Typeless.SocialTypelessAction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of SocialTypelessAction)
    nameWithType: Extensions.JsonCopy(Of SocialTypelessAction)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Typeless.SocialTypelessAction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Actions.Typeless.SocialTypelessAction
  commentId: T:TinyLife.Actions.Typeless.SocialTypelessAction
  parent: TinyLife.Actions.Typeless
  name: SocialTypelessAction
  nameWithType: SocialTypelessAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  name: SocialParent
  nameWithType: SocialTypelessAction.SocialParent
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  name: SocialParent
  nameWithType: SocialTypelessAction.SocialParent
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.SocialParent
- uid: TinyLife.Actions.SocialAction.IsMain
  commentId: P:TinyLife.Actions.SocialAction.IsMain
  parent: TinyLife.Actions.SocialAction
  name: IsMain
  nameWithType: SocialAction.IsMain
  fullName: TinyLife.Actions.SocialAction.IsMain
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.IsMain*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.IsMain
  name: IsMain
  nameWithType: SocialTypelessAction.IsMain
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.IsMain
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Actions.SocialAction.Partner
  commentId: P:TinyLife.Actions.SocialAction.Partner
  parent: TinyLife.Actions.SocialAction
  name: Partner
  nameWithType: SocialAction.Partner
  fullName: TinyLife.Actions.SocialAction.Partner
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.Partner*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.Partner
  name: Partner
  nameWithType: SocialTypelessAction.Partner
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.Partner
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Actions.SocialAction.PartnerAction
  commentId: P:TinyLife.Actions.SocialAction.PartnerAction
  parent: TinyLife.Actions.SocialAction
  name: PartnerAction
  nameWithType: SocialAction.PartnerAction
  fullName: TinyLife.Actions.SocialAction.PartnerAction
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  name: PartnerSocialAction
  nameWithType: SocialTypelessAction.PartnerSocialAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  commentId: P:TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
  parent: TinyLife.Actions.Typeless.SocialTypelessAction
  name: PartnerSocialAction
  nameWithType: SocialTypelessAction.PartnerSocialAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerSocialAction
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
  name: PartnerTypelessAction
  nameWithType: SocialTypelessAction.PartnerTypelessAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.PartnerTypelessAction
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.#ctor*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.#ctor
  name: SocialTypelessAction
  nameWithType: SocialTypelessAction.SocialTypelessAction
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.SocialTypelessAction
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.Typeless.TypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: TypelessAction.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Actions.Typeless.TypelessAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: TypelessAction.Update
    fullName: TinyLife.Actions.Typeless.TypelessAction.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: TypelessAction.Update
    fullName: TinyLife.Actions.Typeless.TypelessAction.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.Update*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.Update
  name: Update
  nameWithType: SocialTypelessAction.Update
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  commentId: M:TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  parent: TinyLife.Actions.Typeless.TypelessAction
  isExternal: true
  name: TryForceResult(CompletionType, Nullable<CanExecuteResult>, MapObject)
  nameWithType: TypelessAction.TryForceResult(CompletionType, Nullable<CanExecuteResult>, MapObject)
  fullName: TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType, System.Nullable<TinyLife.Actions.CanExecuteResult>, TinyLife.Objects.MapObject)
  nameWithType.vb: TypelessAction.TryForceResult(CompletionType, Nullable(Of CanExecuteResult), MapObject)
  fullName.vb: TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType, System.Nullable(Of TinyLife.Actions.CanExecuteResult), TinyLife.Objects.MapObject)
  name.vb: TryForceResult(CompletionType, Nullable(Of CanExecuteResult), MapObject)
  spec.csharp:
  - uid: TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
    name: TryForceResult
    nameWithType: TypelessAction.TryForceResult
    fullName: TinyLife.Actions.Typeless.TypelessAction.TryForceResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    nameWithType: CanExecuteResult
    fullName: TinyLife.Actions.CanExecuteResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    nameWithType: MapObject
    fullName: TinyLife.Objects.MapObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Typeless.TypelessAction.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
    name: TryForceResult
    nameWithType: TypelessAction.TryForceResult
    fullName: TinyLife.Actions.Typeless.TypelessAction.TryForceResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    nameWithType: CanExecuteResult
    fullName: TinyLife.Actions.CanExecuteResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    nameWithType: MapObject
    fullName: TinyLife.Objects.MapObject
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult*
  commentId: Overload:TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult
  name: TryForceResult
  nameWithType: SocialTypelessAction.TryForceResult
  fullName: TinyLife.Actions.Typeless.SocialTypelessAction.TryForceResult
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: System.Nullable{TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Nullable{TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CanExecuteResult>
  nameWithType: Nullable<CanExecuteResult>
  fullName: System.Nullable<TinyLife.Actions.CanExecuteResult>
  nameWithType.vb: Nullable(Of CanExecuteResult)
  fullName.vb: System.Nullable(Of TinyLife.Actions.CanExecuteResult)
  name.vb: Nullable(Of CanExecuteResult)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    nameWithType: CanExecuteResult
    fullName: TinyLife.Actions.CanExecuteResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
    nameWithType: CanExecuteResult
    fullName: TinyLife.Actions.CanExecuteResult
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
