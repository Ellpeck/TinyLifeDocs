### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.WatchTvAction
  commentId: T:TinyLife.Actions.WatchTvAction
  id: WatchTvAction
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.WatchTvAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,TinyLife.Actions.WatchTvAction.Channel)
  - TinyLife.Actions.WatchTvAction.AndThenInitialize
  - TinyLife.Actions.WatchTvAction.AndThenIsCompleted
  - TinyLife.Actions.WatchTvAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.WatchTvAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.WatchTvAction.CanMultitask(TinyLife.Actions.Action)
  - TinyLife.Actions.WatchTvAction.CreateFirstActions
  - TinyLife.Actions.WatchTvAction.FullyInProgress
  - TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
  - TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
  - TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
  langs:
  - csharp
  - vb
  name: WatchTvAction
  nameWithType: WatchTvAction
  fullName: TinyLife.Actions.WatchTvAction
  type: Class
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WatchTvAction
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nWatch tv action is the action that is created by the <xref href=\"TinyLife.Actions.ActionType.WatchTv\" data-throw-if-not-resolved=\"false\"></xref> action types.\nThis action class is exposed as its behavior is rather complex, taking into account the possible locations that a person can stand or sit while watching TV.\nSee <xref href=\"TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person%2cTinyLife.Objects.Furniture%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> for more information.\n"
  example: []
  syntax:
    content: 'public class WatchTvAction : MultiAction, IGenericDataHolder'
    content.vb: Public Class WatchTvAction Inherits MultiAction Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Actions.Action
  - TinyLife.Actions.MultiAction
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Actions.MultiAction.Handler
  - TinyLife.Actions.MultiAction.MainElapsedTime
  - TinyLife.Actions.MultiAction.InProgressTime
  - TinyLife.Actions.MultiAction.CurrentStage
  - TinyLife.Actions.MultiAction.CreateLastActions
  - TinyLife.Actions.MultiAction.PreInitialize
  - TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.MultiAction.Initialize
  - TinyLife.Actions.MultiAction.IsCompleted
  - TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  - TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  - TinyLife.Actions.MultiAction.CanStartNow
  - TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  - TinyLife.Actions.Action.Random
  - TinyLife.Actions.Action.Type
  - TinyLife.Actions.Action.Info
  - TinyLife.Actions.Action.Id
  - TinyLife.Actions.Action.StartedAutomatically
  - TinyLife.Actions.Action.Parent
  - TinyLife.Actions.Action.Map
  - TinyLife.Actions.Action.Person
  - TinyLife.Actions.Action.ElapsedTime
  - TinyLife.Actions.Action.PlayerPromptOpen
  - TinyLife.Actions.Action.ForceResult
  - TinyLife.Actions.Action.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  - TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Action.GetIconObject
  - TinyLife.Actions.Action.CausesExtremelyFastSpeed
  - TinyLife.Actions.Action.GetDisplayName
  - TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  - TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  - TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
  - TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
  - TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
  - TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  - TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  - TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
  - TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  - TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
  - TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  - TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
  - TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Action.GetChildren(System.Boolean)
  - TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
  - TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  - TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  - TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  - TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  - TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  - TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  - TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  - TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  - TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
  - TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  - TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  - TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.WatchTvAction.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.WatchTvAction.FullyInProgress
  commentId: P:TinyLife.Actions.WatchTvAction.FullyInProgress
  id: FullyInProgress
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: FullyInProgress
  nameWithType: WatchTvAction.FullyInProgress
  fullName: TinyLife.Actions.WatchTvAction.FullyInProgress
  type: Property
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FullyInProgress
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns whether this action is currently &quot;properly&quot; in progress.\nThis is used by <xref href=\"TinyLife.Actions.MultiAction\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref> and returns true only once the first actions are completed or the conversation has started, respectively.\nBy default, this property is true if <xref href=\"TinyLife.Actions.Action.InProgressTime\" data-throw-if-not-resolved=\"false\"></xref> is greater than <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override bool FullyInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
      description: Whether this action is fully in progress
    content.vb: Public Overrides ReadOnly Property FullyInProgress As Boolean
  overridden: TinyLife.Actions.Action.FullyInProgress
  overload: TinyLife.Actions.WatchTvAction.FullyInProgress*
- uid: TinyLife.Actions.WatchTvAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,TinyLife.Actions.WatchTvAction.Channel)
  commentId: M:TinyLife.Actions.WatchTvAction.#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,TinyLife.Actions.WatchTvAction.Channel)
  id: '#ctor(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,TinyLife.Actions.WatchTvAction.Channel)'
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: WatchTvAction(ActionType, ActionInfo, Channel)
  nameWithType: WatchTvAction.WatchTvAction(ActionType, ActionInfo, WatchTvAction.Channel)
  fullName: TinyLife.Actions.WatchTvAction.WatchTvAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, TinyLife.Actions.WatchTvAction.Channel)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  example: []
  syntax:
    content: public WatchTvAction(ActionType type, ActionInfo info, WatchTvAction.Channel channel)
    parameters:
    - id: type
      type: TinyLife.Actions.ActionType
    - id: info
      type: TinyLife.Actions.ActionInfo
    - id: channel
      type: TinyLife.Actions.WatchTvAction.Channel
    content.vb: Public Sub New(type As ActionType, info As ActionInfo, channel As WatchTvAction.Channel)
  overload: TinyLife.Actions.WatchTvAction.#ctor*
  nameWithType.vb: WatchTvAction.New(ActionType, ActionInfo, WatchTvAction.Channel)
  fullName.vb: TinyLife.Actions.WatchTvAction.New(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, TinyLife.Actions.WatchTvAction.Channel)
  name.vb: New(ActionType, ActionInfo, Channel)
- uid: TinyLife.Actions.WatchTvAction.CreateFirstActions
  commentId: M:TinyLife.Actions.WatchTvAction.CreateFirstActions
  id: CreateFirstActions
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: CreateFirstActions()
  nameWithType: WatchTvAction.CreateFirstActions()
  fullName: TinyLife.Actions.WatchTvAction.CreateFirstActions()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateFirstActions
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 43
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturn a set of actions that should be executed before this action.\nEven if the yield statement is used, all actions will be collected into a list at the start of this action&apos;s invocation.\nIf no action gets returned in this function, this action fails.\nIf the returned set only contains <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null\">null</a> items, no first actions will be executed.\n"
  example: []
  syntax:
    content: protected override IEnumerable<Action> CreateFirstActions()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
      description: A set of actions that should run before this action
    content.vb: Protected Overrides Function CreateFirstActions() As IEnumerable(Of Action)
  overridden: TinyLife.Actions.MultiAction.CreateFirstActions
  overload: TinyLife.Actions.WatchTvAction.CreateFirstActions*
- uid: TinyLife.Actions.WatchTvAction.AndThenInitialize
  commentId: M:TinyLife.Actions.WatchTvAction.AndThenInitialize
  id: AndThenInitialize
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: AndThenInitialize()
  nameWithType: WatchTvAction.AndThenInitialize()
  fullName: TinyLife.Actions.WatchTvAction.AndThenInitialize()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenInitialize
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nInitializes the main action.\nThis method is called after <xref href=\"TinyLife.Actions.MultiAction.Handler\" data-throw-if-not-resolved=\"false\"></xref> has all completed.\n"
  example: []
  syntax:
    content: protected override void AndThenInitialize()
    content.vb: Protected Overrides Sub AndThenInitialize()
  overridden: TinyLife.Actions.MultiAction.AndThenInitialize
  overload: TinyLife.Actions.WatchTvAction.AndThenInitialize*
- uid: TinyLife.Actions.WatchTvAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.WatchTvAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: AndThenUpdate(GameTime, TimeSpan, float)
  nameWithType: WatchTvAction.AndThenUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.WatchTvAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenUpdate
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nMultiAction version of <xref href=\"TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is called every update frame while the main action is active.\nBy default, only <xref href=\"TinyLife.Actions.MultiAction.MainElapsedTime\" data-throw-if-not-resolved=\"false\"></xref> is increased.\n"
  example: []
  syntax:
    content: protected override void AndThenUpdate(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed, in game time
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Overrides Sub AndThenUpdate(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overridden: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  overload: TinyLife.Actions.WatchTvAction.AndThenUpdate*
  nameWithType.vb: WatchTvAction.AndThenUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.WatchTvAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: AndThenUpdate(GameTime, TimeSpan, Single)
- uid: TinyLife.Actions.WatchTvAction.AndThenIsCompleted
  commentId: M:TinyLife.Actions.WatchTvAction.AndThenIsCompleted
  id: AndThenIsCompleted
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: AndThenIsCompleted()
  nameWithType: WatchTvAction.AndThenIsCompleted()
  fullName: TinyLife.Actions.WatchTvAction.AndThenIsCompleted()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenIsCompleted
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 128
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nMultiAction version of <xref href=\"TinyLife.Actions.MultiAction.IsCompleted\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method returns whether or not the main action is completed.\n"
  example: []
  syntax:
    content: protected override CompletionType AndThenIsCompleted()
    return:
      type: TinyLife.Actions.CompletionType
      description: Whether the main action is completed
    content.vb: Protected Overrides Function AndThenIsCompleted() As CompletionType
  overridden: TinyLife.Actions.MultiAction.AndThenIsCompleted
  overload: TinyLife.Actions.WatchTvAction.AndThenIsCompleted*
- uid: TinyLife.Actions.WatchTvAction.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.WatchTvAction.CanMultitask(TinyLife.Actions.Action)
  id: CanMultitask(TinyLife.Actions.Action)
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: CanMultitask(Action)
  nameWithType: WatchTvAction.CanMultitask(Action)
  fullName: TinyLife.Actions.WatchTvAction.CanMultitask(TinyLife.Actions.Action)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanMultitask
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 137
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturn true on this method if this action can be multi-tasked along with the passed <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref>.\nTo actually check this property, <xref href=\"TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action%2cTinyLife.Actions.Action)\" data-throw-if-not-resolved=\"false\"></xref> should be used as it compares both objects.\nA multi-tasking is an action that is currently active along with another action.\nBy default, multi-tasking is disallowed for any action.\n"
  example: []
  syntax:
    content: public override bool CanMultitask(Action other)
    parameters:
    - id: other
      type: TinyLife.Actions.Action
      description: The action to multi-task with
    return:
      type: System.Boolean
      description: Whether this action can be multi-tasked
    content.vb: Public Overrides Function CanMultitask(other As Action) As Boolean
  overridden: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  overload: TinyLife.Actions.WatchTvAction.CanMultitask*
- uid: TinyLife.Actions.WatchTvAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.WatchTvAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  id: AndThenOnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: AndThenOnCompleted(CompletionType)
  nameWithType: WatchTvAction.AndThenOnCompleted(CompletionType)
  fullName: TinyLife.Actions.WatchTvAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AndThenOnCompleted
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 147
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nMultiAction version of <xref href=\"TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method gets called when the main action completes.\n"
  example: []
  syntax:
    content: protected override void AndThenOnCompleted(CompletionType type)
    parameters:
    - id: type
      type: TinyLife.Actions.CompletionType
      description: The completion of the main action
    content.vb: Protected Overrides Sub AndThenOnCompleted(type As CompletionType)
  overridden: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  overload: TinyLife.Actions.WatchTvAction.AndThenOnCompleted*
- uid: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
  commentId: M:TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
  id: GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: GetViewingArea(Furniture, int)
  nameWithType: WatchTvAction.GetViewingArea(Furniture, int)
  fullName: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture, int)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetViewingArea
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 183
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a rectangle in world space that represents all possible positions for a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> to stand or sit so they can see a tv&apos;s screen\n"
  example: []
  syntax:
    content: public static IEnumerable<Point> GetViewingArea(Furniture tv, int range = 5)
    parameters:
    - id: tv
      type: TinyLife.Objects.Furniture
      description: The tv whose screen should be visible
    - id: range
      type: System.Int32
      description: The range of the viewing area, or 5 by default
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Point}
      description: The viewing area of the tv
    content.vb: Public Shared Function GetViewingArea(tv As Furniture, range As Integer = 5) As IEnumerable(Of Point)
  overload: TinyLife.Actions.WatchTvAction.GetViewingArea*
  nameWithType.vb: WatchTvAction.GetViewingArea(Furniture, Integer)
  fullName.vb: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture, Integer)
  name.vb: GetViewingArea(Furniture, Integer)
- uid: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
  commentId: M:TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
  id: GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: GetSeating(Person, Furniture, int)
  nameWithType: WatchTvAction.GetSeating(Person, Furniture, int)
  fullName: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person, TinyLife.Objects.Furniture, int)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetSeating
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 197
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a furniture object that has the <xref href=\"TinyLife.Objects.ObjectCategory.Chair\" data-throw-if-not-resolved=\"false\"></xref> category and that is in the <xref href=\"TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> of the given tv\n"
  example: []
  syntax:
    content: public static Furniture GetSeating(Person person, Furniture tv, int range = 5)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that wants to sit
    - id: tv
      type: TinyLife.Objects.Furniture
      description: The tv whose screen should be visible
    - id: range
      type: System.Int32
      description: The range of the viewing area, or 5 by default
    return:
      type: TinyLife.Objects.Furniture
      description: A seat, or null if there is none
    content.vb: Public Shared Function GetSeating(person As Person, tv As Furniture, range As Integer = 5) As Furniture
  overload: TinyLife.Actions.WatchTvAction.GetSeating*
  nameWithType.vb: WatchTvAction.GetSeating(Person, Furniture, Integer)
  fullName.vb: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person, TinyLife.Objects.Furniture, Integer)
  name.vb: GetSeating(Person, Furniture, Integer)
- uid: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
  commentId: M:TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
  id: GetViewers(TinyLife.Objects.Furniture,System.Int32)
  parent: TinyLife.Actions.WatchTvAction
  langs:
  - csharp
  - vb
  name: GetViewers(Furniture, int)
  nameWithType: WatchTvAction.GetViewers(Furniture, int)
  fullName: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture, int)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/WatchTvAction.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetViewers
    path: ../TinyLife/Actions/WatchTvAction.cs
    startLine: 211
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a set of <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> instances that are currently executing an action that extends <xref href=\"TinyLife.Actions.WatchTvAction\" data-throw-if-not-resolved=\"false\"></xref> on the given tv\n"
  example: []
  syntax:
    content: public static IEnumerable<Person> GetViewers(Furniture tv, int range = 5)
    parameters:
    - id: tv
      type: TinyLife.Objects.Furniture
      description: The tv
    - id: range
      type: System.Int32
      description: The range of the viewing area, or 5 by default
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
      description: Everyone watching the tv
    content.vb: Public Shared Function GetViewers(tv As Furniture, range As Integer = 5) As IEnumerable(Of Person)
  overload: TinyLife.Actions.WatchTvAction.GetViewers*
  nameWithType.vb: WatchTvAction.GetViewers(Furniture, Integer)
  fullName.vb: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture, Integer)
  name.vb: GetViewers(Furniture, Integer)
references:
- uid: TinyLife.Actions.ActionType.WatchTv
  commentId: F:TinyLife.Actions.ActionType.WatchTv
  name: WatchTv
  nameWithType: ActionType.WatchTv
  fullName: TinyLife.Actions.ActionType.WatchTv
- uid: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
  commentId: M:TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetViewers(Furniture, int)
  nameWithType: WatchTvAction.GetViewers(Furniture, int)
  fullName: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture, int)
  nameWithType.vb: WatchTvAction.GetViewers(Furniture, Integer)
  fullName.vb: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture, Integer)
  name.vb: GetViewers(Furniture, Integer)
  spec.csharp:
  - uid: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
    name: GetViewers
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.WatchTvAction.GetViewers(TinyLife.Objects.Furniture,System.Int32)
    name: GetViewers
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
  commentId: M:TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetViewingArea(Furniture, int)
  nameWithType: WatchTvAction.GetViewingArea(Furniture, int)
  fullName: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture, int)
  nameWithType.vb: WatchTvAction.GetViewingArea(Furniture, Integer)
  fullName.vb: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture, Integer)
  name.vb: GetViewingArea(Furniture, Integer)
  spec.csharp:
  - uid: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
    name: GetViewingArea
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.WatchTvAction.GetViewingArea(TinyLife.Objects.Furniture,System.Int32)
    name: GetViewingArea
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
  commentId: M:TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetSeating(Person, Furniture, int)
  nameWithType: WatchTvAction.GetSeating(Person, Furniture, int)
  fullName: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person, TinyLife.Objects.Furniture, int)
  nameWithType.vb: WatchTvAction.GetSeating(Person, Furniture, Integer)
  fullName.vb: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person, TinyLife.Objects.Furniture, Integer)
  name.vb: GetSeating(Person, Furniture, Integer)
  spec.csharp:
  - uid: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
    name: GetSeating
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.WatchTvAction.GetSeating(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Int32)
    name: GetSeating
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.MultiAction
  commentId: T:TinyLife.Actions.MultiAction
  parent: TinyLife.Actions
  name: MultiAction
  nameWithType: MultiAction
  fullName: TinyLife.Actions.MultiAction
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Actions.MultiAction.Handler
  commentId: F:TinyLife.Actions.MultiAction.Handler
  parent: TinyLife.Actions.MultiAction
  name: Handler
  nameWithType: MultiAction.Handler
  fullName: TinyLife.Actions.MultiAction.Handler
- uid: TinyLife.Actions.MultiAction.MainElapsedTime
  commentId: P:TinyLife.Actions.MultiAction.MainElapsedTime
  parent: TinyLife.Actions.MultiAction
  name: MainElapsedTime
  nameWithType: MultiAction.MainElapsedTime
  fullName: TinyLife.Actions.MultiAction.MainElapsedTime
- uid: TinyLife.Actions.MultiAction.InProgressTime
  commentId: P:TinyLife.Actions.MultiAction.InProgressTime
  parent: TinyLife.Actions.MultiAction
  name: InProgressTime
  nameWithType: MultiAction.InProgressTime
  fullName: TinyLife.Actions.MultiAction.InProgressTime
- uid: TinyLife.Actions.MultiAction.CurrentStage
  commentId: P:TinyLife.Actions.MultiAction.CurrentStage
  parent: TinyLife.Actions.MultiAction
  name: CurrentStage
  nameWithType: MultiAction.CurrentStage
  fullName: TinyLife.Actions.MultiAction.CurrentStage
- uid: TinyLife.Actions.MultiAction.CreateLastActions
  commentId: M:TinyLife.Actions.MultiAction.CreateLastActions
  parent: TinyLife.Actions.MultiAction
  name: CreateLastActions()
  nameWithType: MultiAction.CreateLastActions()
  fullName: TinyLife.Actions.MultiAction.CreateLastActions()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CreateLastActions
    name: CreateLastActions
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CreateLastActions
    name: CreateLastActions
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.PreInitialize
  commentId: M:TinyLife.Actions.MultiAction.PreInitialize
  parent: TinyLife.Actions.MultiAction
  name: PreInitialize()
  nameWithType: MultiAction.PreInitialize()
  fullName: TinyLife.Actions.MultiAction.PreInitialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.PreInitialize
    name: PreInitialize
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.PreInitialize
    name: PreInitialize
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: PreCompleted(CompletionType)
  nameWithType: MultiAction.PreCompleted(CompletionType)
  fullName: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
    name: PreCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.PreCompleted(TinyLife.Actions.CompletionType)
    name: PreCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.MultiAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Update(GameTime, TimeSpan, float)
  nameWithType: MultiAction.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: MultiAction.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.MultiAction.Initialize
  commentId: M:TinyLife.Actions.MultiAction.Initialize
  parent: TinyLife.Actions.MultiAction
  name: Initialize()
  nameWithType: MultiAction.Initialize()
  fullName: TinyLife.Actions.MultiAction.Initialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.IsCompleted
  commentId: M:TinyLife.Actions.MultiAction.IsCompleted
  parent: TinyLife.Actions.MultiAction
  name: IsCompleted()
  nameWithType: MultiAction.IsCompleted()
  fullName: TinyLife.Actions.MultiAction.IsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.IsCompleted
    name: IsCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.IsCompleted
    name: IsCompleted
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: OnCompleted(CompletionType)
  nameWithType: MultiAction.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  parent: TinyLife.Actions.MultiAction
  name: Validate(Person)
  nameWithType: MultiAction.Validate(Person)
  fullName: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
    name: Validate
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.Validate(TinyLife.Objects.Person)
    name: Validate
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  parent: TinyLife.Actions.MultiAction
  name: CanCancel(Action)
  nameWithType: MultiAction.CanCancel(Action)
  fullName: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
    name: CanCancel
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CanCancel(TinyLife.Actions.Action)
    name: CanCancel
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: TinyLife.Actions.MultiAction.CanStartNow
  commentId: M:TinyLife.Actions.MultiAction.CanStartNow
  parent: TinyLife.Actions.MultiAction
  name: CanStartNow()
  nameWithType: MultiAction.CanStartNow()
  fullName: TinyLife.Actions.MultiAction.CanStartNow()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CanStartNow
    name: CanStartNow
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CanStartNow
    name: CanStartNow
  - name: (
  - name: )
- uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  commentId: M:TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  parent: TinyLife.Actions.MultiAction
  name: GoToActionLocation(ObjectCategory)
  nameWithType: MultiAction.GoToActionLocation(ObjectCategory)
  fullName: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
    name: GoToActionLocation
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.GoToActionLocation(TinyLife.Objects.ObjectCategory)
    name: GoToActionLocation
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: )
- uid: TinyLife.Actions.Action.Random
  commentId: F:TinyLife.Actions.Action.Random
  parent: TinyLife.Actions.Action
  name: Random
  nameWithType: Action.Random
  fullName: TinyLife.Actions.Action.Random
- uid: TinyLife.Actions.Action.Type
  commentId: F:TinyLife.Actions.Action.Type
  parent: TinyLife.Actions.Action
  name: Type
  nameWithType: Action.Type
  fullName: TinyLife.Actions.Action.Type
- uid: TinyLife.Actions.Action.Info
  commentId: F:TinyLife.Actions.Action.Info
  parent: TinyLife.Actions.Action
  name: Info
  nameWithType: Action.Info
  fullName: TinyLife.Actions.Action.Info
- uid: TinyLife.Actions.Action.Id
  commentId: F:TinyLife.Actions.Action.Id
  parent: TinyLife.Actions.Action
  name: Id
  nameWithType: Action.Id
  fullName: TinyLife.Actions.Action.Id
- uid: TinyLife.Actions.Action.StartedAutomatically
  commentId: P:TinyLife.Actions.Action.StartedAutomatically
  parent: TinyLife.Actions.Action
  name: StartedAutomatically
  nameWithType: Action.StartedAutomatically
  fullName: TinyLife.Actions.Action.StartedAutomatically
- uid: TinyLife.Actions.Action.Parent
  commentId: P:TinyLife.Actions.Action.Parent
  parent: TinyLife.Actions.Action
  name: Parent
  nameWithType: Action.Parent
  fullName: TinyLife.Actions.Action.Parent
- uid: TinyLife.Actions.Action.Map
  commentId: P:TinyLife.Actions.Action.Map
  parent: TinyLife.Actions.Action
  name: Map
  nameWithType: Action.Map
  fullName: TinyLife.Actions.Action.Map
- uid: TinyLife.Actions.Action.Person
  commentId: P:TinyLife.Actions.Action.Person
  parent: TinyLife.Actions.Action
  name: Person
  nameWithType: Action.Person
  fullName: TinyLife.Actions.Action.Person
- uid: TinyLife.Actions.Action.ElapsedTime
  commentId: P:TinyLife.Actions.Action.ElapsedTime
  parent: TinyLife.Actions.Action
  name: ElapsedTime
  nameWithType: Action.ElapsedTime
  fullName: TinyLife.Actions.Action.ElapsedTime
- uid: TinyLife.Actions.Action.PlayerPromptOpen
  commentId: P:TinyLife.Actions.Action.PlayerPromptOpen
  parent: TinyLife.Actions.Action
  name: PlayerPromptOpen
  nameWithType: Action.PlayerPromptOpen
  fullName: TinyLife.Actions.Action.PlayerPromptOpen
- uid: TinyLife.Actions.Action.ForceResult
  commentId: F:TinyLife.Actions.Action.ForceResult
  parent: TinyLife.Actions.Action
  name: ForceResult
  nameWithType: Action.ForceResult
  fullName: TinyLife.Actions.Action.ForceResult
- uid: TinyLife.Actions.Action.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  commentId: M:TinyLife.Actions.Action.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
  parent: TinyLife.Actions.Action
  name: TryForceResult(CompletionType, CanExecuteResult?, MapObject)
  nameWithType: Action.TryForceResult(CompletionType, CanExecuteResult?, MapObject)
  fullName: TinyLife.Actions.Action.TryForceResult(TinyLife.Actions.CompletionType, TinyLife.Actions.CanExecuteResult?, TinyLife.Objects.MapObject)
  spec.csharp:
  - uid: TinyLife.Actions.Action.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
    name: TryForceResult
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.MapObject
    name: MapObject
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.TryForceResult(TinyLife.Actions.CompletionType,System.Nullable{TinyLife.Actions.CanExecuteResult},TinyLife.Objects.MapObject)
    name: TryForceResult
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.MapObject
    name: MapObject
  - name: )
- uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Action
  name: GetNextAction(CompletionType)
  nameWithType: Action.GetNextAction(CompletionType)
  fullName: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.Action.GetIconObject
  commentId: M:TinyLife.Actions.Action.GetIconObject
  parent: TinyLife.Actions.Action
  name: GetIconObject()
  nameWithType: Action.GetIconObject()
  fullName: TinyLife.Actions.Action.GetIconObject()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetIconObject
    name: GetIconObject
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetIconObject
    name: GetIconObject
  - name: (
  - name: )
- uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
  commentId: M:TinyLife.Actions.Action.CausesExtremelyFastSpeed
  parent: TinyLife.Actions.Action
  name: CausesExtremelyFastSpeed()
  nameWithType: Action.CausesExtremelyFastSpeed()
  fullName: TinyLife.Actions.Action.CausesExtremelyFastSpeed()
  spec.csharp:
  - uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
    name: CausesExtremelyFastSpeed
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CausesExtremelyFastSpeed
    name: CausesExtremelyFastSpeed
  - name: (
  - name: )
- uid: TinyLife.Actions.Action.GetDisplayName
  commentId: M:TinyLife.Actions.Action.GetDisplayName
  parent: TinyLife.Actions.Action
  name: GetDisplayName()
  nameWithType: Action.GetDisplayName()
  fullName: TinyLife.Actions.Action.GetDisplayName()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetDisplayName
    name: GetDisplayName
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetDisplayName
    name: GetDisplayName
  - name: (
  - name: )
- uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  commentId: M:TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
  parent: TinyLife.Actions.Action
  name: CanEnqueueConversation(Person, ActionType)
  nameWithType: Action.CanEnqueueConversation(Person, ActionType)
  fullName: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person, TinyLife.Actions.ActionType)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
    name: CanEnqueueConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanEnqueueConversation(TinyLife.Objects.Person,TinyLife.Actions.ActionType)
    name: CanEnqueueConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
- uid: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  commentId: M:TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: OnChildCompleted(Action, CompletionType, bool)
  nameWithType: Action.OnChildCompleted(Action, CompletionType, bool)
  fullName: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, bool)
  nameWithType.vb: Action.OnChildCompleted(Action, CompletionType, Boolean)
  fullName.vb: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action, TinyLife.Actions.CompletionType, Boolean)
  name.vb: OnChildCompleted(Action, CompletionType, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnChildCompleted
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OnChildCompleted(TinyLife.Actions.Action,TinyLife.Actions.CompletionType,System.Boolean)
    name: OnChildCompleted
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenPlayerPrompt(string, Predicate<Panel>, Action<Panel>, bool, Func<CoveringGroup, IEnumerable<Element>>, TextureRegion)
  nameWithType: Action.OpenPlayerPrompt(string, Predicate<Panel>, Action<Panel>, bool, Func<CoveringGroup, IEnumerable<Element>>, TextureRegion)
  fullName: TinyLife.Actions.Action.OpenPlayerPrompt(string, System.Predicate<MLEM.Ui.Elements.Panel>, System.Action<MLEM.Ui.Elements.Panel>, bool, System.Func<TinyLife.Uis.CoveringGroup, System.Collections.Generic.IEnumerable<MLEM.Ui.Elements.Element>>, MLEM.Textures.TextureRegion)
  nameWithType.vb: Action.OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Func(Of CoveringGroup, IEnumerable(Of Element)), TextureRegion)
  fullName.vb: TinyLife.Actions.Action.OpenPlayerPrompt(String, System.Predicate(Of MLEM.Ui.Elements.Panel), System.Action(Of MLEM.Ui.Elements.Panel), Boolean, System.Func(Of TinyLife.Uis.CoveringGroup, System.Collections.Generic.IEnumerable(Of MLEM.Ui.Elements.Element)), MLEM.Textures.TextureRegion)
  name.vb: OpenPlayerPrompt(String, Predicate(Of Panel), Action(Of Panel), Boolean, Func(Of CoveringGroup, IEnumerable(Of Element)), TextureRegion)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
    name: OpenPlayerPrompt
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenPlayerPrompt(System.String,System.Predicate{MLEM.Ui.Elements.Panel},System.Action{MLEM.Ui.Elements.Panel},System.Boolean,System.Func{TinyLife.Uis.CoveringGroup,System.Collections.Generic.IEnumerable{MLEM.Ui.Elements.Element}},MLEM.Textures.TextureRegion)
    name: OpenPlayerPrompt
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Uis.CoveringGroup
    name: CoveringGroup
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenYesNoPrompt(string, Action, Action, TextureRegion)
  nameWithType: Action.OpenYesNoPrompt(string, Action, Action, TextureRegion)
  fullName: TinyLife.Actions.Action.OpenYesNoPrompt(string, System.Action, System.Action, MLEM.Textures.TextureRegion)
  nameWithType.vb: Action.OpenYesNoPrompt(String, Action, Action, TextureRegion)
  fullName.vb: TinyLife.Actions.Action.OpenYesNoPrompt(String, System.Action, System.Action, MLEM.Textures.TextureRegion)
  name.vb: OpenYesNoPrompt(String, Action, Action, TextureRegion)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
    name: OpenYesNoPrompt
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenYesNoPrompt(System.String,System.Action,System.Action,MLEM.Textures.TextureRegion)
    name: OpenYesNoPrompt
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: OpenTextPrompt(string, Action<string>, Predicate<string>, Rule, string, TextureRegion)
  nameWithType: Action.OpenTextPrompt(string, Action<string>, Predicate<string>, TextField.Rule, string, TextureRegion)
  fullName: TinyLife.Actions.Action.OpenTextPrompt(string, System.Action<string>, System.Predicate<string>, MLEM.Ui.Elements.TextField.Rule, string, MLEM.Textures.TextureRegion)
  nameWithType.vb: Action.OpenTextPrompt(String, Action(Of String), Predicate(Of String), TextField.Rule, String, TextureRegion)
  fullName.vb: TinyLife.Actions.Action.OpenTextPrompt(String, System.Action(Of String), System.Predicate(Of String), MLEM.Ui.Elements.TextField.Rule, String, MLEM.Textures.TextureRegion)
  name.vb: OpenTextPrompt(String, Action(Of String), Predicate(Of String), Rule, String, TextureRegion)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
    name: OpenTextPrompt
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenTextPrompt(System.String,System.Action{System.String},System.Predicate{System.String},MLEM.Ui.Elements.TextField.Rule,System.String,MLEM.Textures.TextureRegion)
    name: OpenTextPrompt
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  commentId: M:TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  parent: TinyLife.Actions.Action
  name: OpenChoicePrompt(ChoicePromptInfo)
  nameWithType: Action.OpenChoicePrompt(ChoicePromptInfo)
  fullName: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
    name: OpenChoicePrompt
  - name: (
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.OpenChoicePrompt(TinyLife.Actions.ChoicePromptInfo)
    name: OpenChoicePrompt
  - name: (
  - uid: TinyLife.Actions.ChoicePromptInfo
    name: ChoicePromptInfo
  - name: )
- uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  commentId: M:TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SpeakAlone(GameTime, float, EmoteCategory, SpeakStyle, int)
  nameWithType: Action.SpeakAlone(GameTime, float, EmoteCategory, SpeakStyle, int)
  fullName: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime, float, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, int)
  nameWithType.vb: Action.SpeakAlone(GameTime, Single, EmoteCategory, SpeakStyle, Integer)
  fullName.vb: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime, Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, Integer)
  name.vb: SpeakAlone(GameTime, Single, EmoteCategory, SpeakStyle, Integer)
  spec.csharp:
  - uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
    name: SpeakAlone
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.SpeakAlone(Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Int32)
    name: SpeakAlone
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
  commentId: M:TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SpeakInConversation(Person, GameTime, float, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, int)
  nameWithType: Action.SpeakInConversation(Person, GameTime, float, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, int)
  fullName: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, float, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, TinyLife.Actions.EmoteCategory?, TinyLife.Objects.SpeakStyle?, int)
  nameWithType.vb: Action.SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, Integer)
  fullName.vb: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, TinyLife.Actions.EmoteCategory?, TinyLife.Objects.SpeakStyle?, Integer)
  name.vb: SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, Integer)
  spec.csharp:
  - uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
    name: SpeakInConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32)
    name: SpeakInConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  parent: TinyLife.Actions.Action
  name: FacePartner(Person)
  nameWithType: Action.FacePartner(Person)
  fullName: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
    name: FacePartner
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FacePartner(TinyLife.Objects.Person)
    name: FacePartner
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
  parent: TinyLife.Actions.Action
  name: CompleteIfNeedFull(NeedType, Person)
  nameWithType: Action.CompleteIfNeedFull(NeedType, Person)
  fullName: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType, TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
    name: CompleteIfNeedFull
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteIfNeedFull(TinyLife.NeedType,TinyLife.Objects.Person)
    name: CompleteIfNeedFull
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  commentId: M:TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: CompleteIfTimeUp(TimeSpan, bool, SkillType, float, bool)
  nameWithType: Action.CompleteIfTimeUp(TimeSpan, bool, SkillType, float, bool)
  fullName: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan, bool, TinyLife.Skills.SkillType, float, bool)
  nameWithType.vb: Action.CompleteIfTimeUp(TimeSpan, Boolean, SkillType, Single, Boolean)
  fullName.vb: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan, Boolean, TinyLife.Skills.SkillType, Single, Boolean)
  name.vb: CompleteIfTimeUp(TimeSpan, Boolean, SkillType, Single, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteIfTimeUp
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CompleteIfTimeUp(System.TimeSpan,System.Boolean,TinyLife.Skills.SkillType,System.Single,System.Boolean)
    name: CompleteIfTimeUp
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
  commentId: M:TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
  parent: TinyLife.Actions.Action
  name: CancelIfEmotional(params EmotionType[])
  nameWithType: Action.CancelIfEmotional(params EmotionType[])
  fullName: TinyLife.Actions.Action.CancelIfEmotional(params TinyLife.Emotions.EmotionType[])
  nameWithType.vb: Action.CancelIfEmotional(ParamArray EmotionType())
  fullName.vb: TinyLife.Actions.Action.CancelIfEmotional(ParamArray TinyLife.Emotions.EmotionType())
  name.vb: CancelIfEmotional(ParamArray EmotionType())
  spec.csharp:
  - uid: TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
    name: CancelIfEmotional
  - name: (
  - name: params
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CancelIfEmotional(TinyLife.Emotions.EmotionType[])
    name: CancelIfEmotional
  - name: (
  - name: ParamArray
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Sit(Furniture, float, ActionSpot)
  nameWithType: Action.Sit(Furniture, float, ActionSpot)
  fullName: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture, float, TinyLife.Objects.ActionSpot)
  nameWithType.vb: Action.Sit(Furniture, Single, ActionSpot)
  fullName.vb: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture, Single, TinyLife.Objects.ActionSpot)
  name.vb: Sit(Furniture, Single, ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
    name: Sit
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.Sit(TinyLife.Objects.Furniture,System.Single,TinyLife.Objects.ActionSpot)
    name: Sit
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
- uid: TinyLife.Actions.Action.GetChildren(System.Boolean)
  commentId: M:TinyLife.Actions.Action.GetChildren(System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetChildren(bool)
  nameWithType: Action.GetChildren(bool)
  fullName: TinyLife.Actions.Action.GetChildren(bool)
  nameWithType.vb: Action.GetChildren(Boolean)
  fullName.vb: TinyLife.Actions.Action.GetChildren(Boolean)
  name.vb: GetChildren(Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetChildren(System.Boolean)
    name: GetChildren
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetChildren(System.Boolean)
    name: GetChildren
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
  commentId: M:TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetChild<T>(Guid, bool)
  nameWithType: Action.GetChild<T>(Guid, bool)
  fullName: TinyLife.Actions.Action.GetChild<T>(System.Guid, bool)
  nameWithType.vb: Action.GetChild(Of T)(Guid, Boolean)
  fullName.vb: TinyLife.Actions.Action.GetChild(Of T)(System.Guid, Boolean)
  name.vb: GetChild(Of T)(Guid, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
    name: GetChild
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetChild``1(System.Guid,System.Boolean)
    name: GetChild
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  commentId: M:TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, bool)
  nameWithType: Action.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, bool)
  fullName: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, bool)
  nameWithType.vb: Action.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  fullName.vb: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, Boolean)
  name.vb: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  commentId: M:TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: PickUpAndGoTo(ActionInfo, Func<Furniture, bool>, Func<Furniture, bool>, bool)
  nameWithType: Action.PickUpAndGoTo(ActionInfo, Func<Furniture, bool>, Func<Furniture, bool>, bool)
  fullName: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, System.Func<TinyLife.Objects.Furniture, bool>, System.Func<TinyLife.Objects.Furniture, bool>, bool)
  nameWithType.vb: Action.PickUpAndGoTo(ActionInfo, Func(Of Furniture, Boolean), Func(Of Furniture, Boolean), Boolean)
  fullName.vb: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, System.Func(Of TinyLife.Objects.Furniture, Boolean), System.Func(Of TinyLife.Objects.Furniture, Boolean), Boolean)
  name.vb: PickUpAndGoTo(ActionInfo, Func(Of Furniture, Boolean), Func(Of Furniture, Boolean), Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
  parent: TinyLife.Actions.Action
  name: GetFreeChair(Person, Furniture)
  nameWithType: Action.GetFreeChair(Person, Furniture)
  fullName: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person, TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetFreeChair(TinyLife.Objects.Person,TinyLife.Objects.Furniture)
    name: GetFreeChair
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
- uid: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  commentId: M:TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: GetFreeChairs(Person, Furniture, Func<Direction2, bool>)
  nameWithType: Action.GetFreeChairs(Person, Furniture, Func<Direction2, bool>)
  fullName: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person, TinyLife.Objects.Furniture, System.Func<MLEM.Misc.Direction2, bool>)
  nameWithType.vb: Action.GetFreeChairs(Person, Furniture, Func(Of Direction2, Boolean))
  fullName.vb: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person, TinyLife.Objects.Furniture, System.Func(Of MLEM.Misc.Direction2, Boolean))
  name.vb: GetFreeChairs(Person, Furniture, Func(Of Direction2, Boolean))
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
    name: GetFreeChairs
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetFreeChairs(TinyLife.Objects.Person,TinyLife.Objects.Furniture,System.Func{MLEM.Misc.Direction2,System.Boolean})
    name: GetFreeChairs
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  commentId: M:TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  parent: TinyLife.Actions.Action
  name: GetSeatCategory(Person)
  nameWithType: Action.GetSeatCategory(Person)
  fullName: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
    name: GetSeatCategory
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetSeatCategory(TinyLife.Objects.Person)
    name: GetSeatCategory
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindAllFreePeople(Person, ActionType, Vector2?, float?, bool, bool, bool, bool)
  nameWithType: Action.FindAllFreePeople(Person, ActionType, Vector2?, float?, bool, bool, bool, bool)
  fullName: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person, TinyLife.Actions.ActionType, Microsoft.Xna.Framework.Vector2?, float?, bool, bool, bool, bool)
  nameWithType.vb: Action.FindAllFreePeople(Person, ActionType, Vector2?, Single?, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person, TinyLife.Actions.ActionType, Microsoft.Xna.Framework.Vector2?, Single?, Boolean, Boolean, Boolean, Boolean)
  name.vb: FindAllFreePeople(Person, ActionType, Vector2?, Single?, Boolean, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: FindAllFreePeople
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreePeople(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: FindAllFreePeople
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, bool, Vector2?, float?, bool, bool)
  nameWithType: Action.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, bool, Vector2?, float?, bool, bool)
  fullName: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, bool, Microsoft.Xna.Framework.Vector2?, float?, bool, bool)
  nameWithType.vb: Action.FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Vector2?, Single?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, Boolean, Microsoft.Xna.Framework.Vector2?, Single?, Boolean, Boolean)
  name.vb: FindAllFreeFurniture(Person, ObjectCategory, FurnitureType, Boolean, Vector2?, Single?, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean,System.Boolean)
    name: FindAllFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindAllFreeWalls(Person, Vector2?, float?, bool)
  nameWithType: Action.FindAllFreeWalls(Person, Vector2?, float?, bool)
  fullName: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person, Microsoft.Xna.Framework.Vector2?, float?, bool)
  nameWithType.vb: Action.FindAllFreeWalls(Person, Vector2?, Single?, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person, Microsoft.Xna.Framework.Vector2?, Single?, Boolean)
  name.vb: FindAllFreeWalls(Person, Vector2?, Single?, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeWalls(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeWalls
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: FindAllFreeGround(Person, Vector2?, float?, bool)
  nameWithType: Action.FindAllFreeGround(Person, Vector2?, float?, bool)
  fullName: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person, Microsoft.Xna.Framework.Vector2?, float?, bool)
  nameWithType.vb: Action.FindAllFreeGround(Person, Vector2?, Single?, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person, Microsoft.Xna.Framework.Vector2?, Single?, Boolean)
  name.vb: FindAllFreeGround(Person, Vector2?, Single?, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllFreeGround(TinyLife.Objects.Person,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Nullable{System.Single},System.Boolean)
    name: FindAllFreeGround
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Vector2?, bool, bool)
  nameWithType: Action.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Vector2?, bool, bool)
  fullName: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, Microsoft.Xna.Framework.Vector2?, bool, bool)
  nameWithType.vb: Action.FindFreeFurniture(Person, ObjectCategory, FurnitureType, Vector2?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person, TinyLife.Objects.ObjectCategory, TinyLife.Objects.FurnitureType, Microsoft.Xna.Framework.Vector2?, Boolean, Boolean)
  name.vb: FindFreeFurniture(Person, ObjectCategory, FurnitureType, Vector2?, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindFreeFurniture(TinyLife.Objects.Person,TinyLife.Objects.ObjectCategory,TinyLife.Objects.FurnitureType,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindFreeFurniture
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: TinyLife.Actions.Action
  isExternal: true
  name: FindAllActionObjects(Person, ActionType, Vector2?)
  nameWithType: Action.FindAllActionObjects(Person, ActionType, Vector2?)
  fullName: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, Microsoft.Xna.Framework.Vector2?)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: FindAllActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindAllActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Nullable{Microsoft.Xna.Framework.Vector2})
    name: FindAllActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: FindValidActionObjects(Person, ActionType, bool, Vector2?, bool, bool)
  nameWithType: Action.FindValidActionObjects(Person, ActionType, bool, Vector2?, bool, bool)
  fullName: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, bool, Microsoft.Xna.Framework.Vector2?, bool, bool)
  nameWithType.vb: Action.FindValidActionObjects(Person, ActionType, Boolean, Vector2?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person, TinyLife.Actions.ActionType, Boolean, Microsoft.Xna.Framework.Vector2?, Boolean, Boolean)
  name.vb: FindValidActionObjects(Person, ActionType, Boolean, Vector2?, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindValidActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.FindValidActionObjects(TinyLife.Objects.Person,TinyLife.Actions.ActionType,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Boolean,System.Boolean)
    name: FindValidActionObjects
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
  commentId: M:TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: TryGetRandomValidVariety(ActionType, ActionInfo, bool, out ActionVariety)
  nameWithType: Action.TryGetRandomValidVariety(ActionType, ActionInfo, bool, out ActionVariety)
  fullName: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool, out TinyLife.Actions.ActionVariety)
  nameWithType.vb: Action.TryGetRandomValidVariety(ActionType, ActionInfo, Boolean, ActionVariety)
  fullName.vb: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean, TinyLife.Actions.ActionVariety)
  name.vb: TryGetRandomValidVariety(ActionType, ActionInfo, Boolean, ActionVariety)
  spec.csharp:
  - uid: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
    name: TryGetRandomValidVariety
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.TryGetRandomValidVariety(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionVariety@)
    name: TryGetRandomValidVariety
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
- uid: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: GetRandomValidVariety(IEnumerable<ActionVariety>, ActionInfo)
  nameWithType: Action.GetRandomValidVariety(IEnumerable<ActionVariety>, ActionInfo)
  fullName: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionVariety>, TinyLife.Actions.ActionInfo)
  nameWithType.vb: Action.GetRandomValidVariety(IEnumerable(Of ActionVariety), ActionInfo)
  fullName.vb: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionVariety), TinyLife.Actions.ActionInfo)
  name.vb: GetRandomValidVariety(IEnumerable(Of ActionVariety), ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
    name: GetRandomValidVariety
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: '>'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetRandomValidVariety(System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety},TinyLife.Actions.ActionInfo)
    name: GetRandomValidVariety
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  commentId: M:TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
  parent: TinyLife.Actions.Action
  name: GetTableSpot(Furniture, ActionSpot)
  nameWithType: Action.GetTableSpot(Furniture, ActionSpot)
  fullName: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture, TinyLife.Objects.ActionSpot)
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetTableSpot(TinyLife.Objects.Furniture,TinyLife.Objects.ActionSpot)
    name: GetTableSpot
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ActionSpot
    name: ActionSpot
  - name: )
- uid: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  commentId: M:TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: InvokeForBoth(Person, Person, Action<Person, Person>)
  nameWithType: Action.InvokeForBoth(Person, Person, Action<Person, Person>)
  fullName: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person, TinyLife.Objects.Person, System.Action<TinyLife.Objects.Person, TinyLife.Objects.Person>)
  nameWithType.vb: Action.InvokeForBoth(Person, Person, Action(Of Person, Person))
  fullName.vb: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person, TinyLife.Objects.Person, System.Action(Of TinyLife.Objects.Person, TinyLife.Objects.Person))
  name.vb: InvokeForBoth(Person, Person, Action(Of Person, Person))
  spec.csharp:
  - uid: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.InvokeForBoth(TinyLife.Objects.Person,TinyLife.Objects.Person,System.Action{TinyLife.Objects.Person,TinyLife.Objects.Person})
    name: InvokeForBoth
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
  - name: )
- uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
  parent: TinyLife.Actions.Action
  name: CanMultitask(Action, Action)
  nameWithType: Action.CanMultitask(Action, Action)
  fullName: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action, TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action,TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(string, object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(string, object)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.WatchTvAction.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<WatchTvAction>(WatchTvAction)
  nameWithType: Extensions.JsonCopy<WatchTvAction>(WatchTvAction)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.WatchTvAction>(TinyLife.Actions.WatchTvAction)
  nameWithType.vb: Extensions.JsonCopy(Of WatchTvAction)(WatchTvAction)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.WatchTvAction)(TinyLife.Actions.WatchTvAction)
  name.vb: JsonCopy(Of WatchTvAction)(WatchTvAction)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.WatchTvAction)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Actions.WatchTvAction
    name: WatchTvAction
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.WatchTvAction
    name: WatchTvAction
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.WatchTvAction)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.WatchTvAction
    name: WatchTvAction
  - name: )
  - name: (
  - uid: TinyLife.Actions.WatchTvAction
    name: WatchTvAction
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Actions.Action.FullyInProgress
  commentId: P:TinyLife.Actions.Action.FullyInProgress
  parent: TinyLife.Actions.Action
  name: FullyInProgress
  nameWithType: Action.FullyInProgress
  fullName: TinyLife.Actions.Action.FullyInProgress
- uid: TinyLife.Actions.WatchTvAction.FullyInProgress*
  commentId: Overload:TinyLife.Actions.WatchTvAction.FullyInProgress
  name: FullyInProgress
  nameWithType: WatchTvAction.FullyInProgress
  fullName: TinyLife.Actions.WatchTvAction.FullyInProgress
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Actions.WatchTvAction.#ctor*
  commentId: Overload:TinyLife.Actions.WatchTvAction.#ctor
  name: WatchTvAction
  nameWithType: WatchTvAction.WatchTvAction
  fullName: TinyLife.Actions.WatchTvAction.WatchTvAction
  nameWithType.vb: WatchTvAction.New
  fullName.vb: TinyLife.Actions.WatchTvAction.New
  name.vb: New
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.WatchTvAction.Channel
  commentId: T:TinyLife.Actions.WatchTvAction.Channel
  parent: TinyLife.Actions
  name: WatchTvAction.Channel
  nameWithType: WatchTvAction.Channel
  fullName: TinyLife.Actions.WatchTvAction.Channel
  spec.csharp:
  - uid: TinyLife.Actions.WatchTvAction
    name: WatchTvAction
  - name: .
  - uid: TinyLife.Actions.WatchTvAction.Channel
    name: Channel
  spec.vb:
  - uid: TinyLife.Actions.WatchTvAction
    name: WatchTvAction
  - name: .
  - uid: TinyLife.Actions.WatchTvAction.Channel
    name: Channel
- uid: TinyLife.Actions.MultiAction.CreateFirstActions
  commentId: M:TinyLife.Actions.MultiAction.CreateFirstActions
  parent: TinyLife.Actions.MultiAction
  name: CreateFirstActions()
  nameWithType: MultiAction.CreateFirstActions()
  fullName: TinyLife.Actions.MultiAction.CreateFirstActions()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.CreateFirstActions
    name: CreateFirstActions
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.CreateFirstActions
    name: CreateFirstActions
  - name: (
  - name: )
- uid: TinyLife.Actions.WatchTvAction.CreateFirstActions*
  commentId: Overload:TinyLife.Actions.WatchTvAction.CreateFirstActions
  name: CreateFirstActions
  nameWithType: WatchTvAction.CreateFirstActions
  fullName: TinyLife.Actions.WatchTvAction.CreateFirstActions
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Action>
  nameWithType: IEnumerable<Action>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Action>
  nameWithType.vb: IEnumerable(Of Action)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Action)
  name.vb: IEnumerable(Of Action)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.Action
    name: Action
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Actions.MultiAction.AndThenInitialize
  commentId: M:TinyLife.Actions.MultiAction.AndThenInitialize
  parent: TinyLife.Actions.MultiAction
  name: AndThenInitialize()
  nameWithType: MultiAction.AndThenInitialize()
  fullName: TinyLife.Actions.MultiAction.AndThenInitialize()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenInitialize
    name: AndThenInitialize
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenInitialize
    name: AndThenInitialize
  - name: (
  - name: )
- uid: TinyLife.Actions.WatchTvAction.AndThenInitialize*
  commentId: Overload:TinyLife.Actions.WatchTvAction.AndThenInitialize
  name: AndThenInitialize
  nameWithType: WatchTvAction.AndThenInitialize
  fullName: TinyLife.Actions.WatchTvAction.AndThenInitialize
- uid: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.MultiAction
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: AndThenUpdate(GameTime, TimeSpan, float)
  nameWithType: MultiAction.AndThenUpdate(GameTime, TimeSpan, float)
  fullName: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: MultiAction.AndThenUpdate(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: AndThenUpdate(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: AndThenUpdate
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.WatchTvAction.AndThenUpdate*
  commentId: Overload:TinyLife.Actions.WatchTvAction.AndThenUpdate
  name: AndThenUpdate
  nameWithType: WatchTvAction.AndThenUpdate
  fullName: TinyLife.Actions.WatchTvAction.AndThenUpdate
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Actions.MultiAction.AndThenIsCompleted
  commentId: M:TinyLife.Actions.MultiAction.AndThenIsCompleted
  parent: TinyLife.Actions.MultiAction
  name: AndThenIsCompleted()
  nameWithType: MultiAction.AndThenIsCompleted()
  fullName: TinyLife.Actions.MultiAction.AndThenIsCompleted()
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenIsCompleted
    name: AndThenIsCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenIsCompleted
    name: AndThenIsCompleted
  - name: (
  - name: )
- uid: TinyLife.Actions.WatchTvAction.AndThenIsCompleted*
  commentId: Overload:TinyLife.Actions.WatchTvAction.AndThenIsCompleted
  name: AndThenIsCompleted
  nameWithType: WatchTvAction.AndThenIsCompleted
  fullName: TinyLife.Actions.WatchTvAction.AndThenIsCompleted
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  parent: TinyLife.Actions.Action
  name: CanMultitask(Action)
  nameWithType: Action.CanMultitask(Action)
  fullName: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
  spec.csharp:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.CanMultitask(TinyLife.Actions.Action)
    name: CanMultitask
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: )
- uid: TinyLife.Actions.WatchTvAction.CanMultitask*
  commentId: Overload:TinyLife.Actions.WatchTvAction.CanMultitask
  name: CanMultitask
  nameWithType: WatchTvAction.CanMultitask
  fullName: TinyLife.Actions.WatchTvAction.CanMultitask
- uid: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.MultiAction
  name: AndThenOnCompleted(CompletionType)
  nameWithType: MultiAction.AndThenOnCompleted(CompletionType)
  fullName: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
    name: AndThenOnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.MultiAction.AndThenOnCompleted(TinyLife.Actions.CompletionType)
    name: AndThenOnCompleted
  - name: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
  - name: )
- uid: TinyLife.Actions.WatchTvAction.AndThenOnCompleted*
  commentId: Overload:TinyLife.Actions.WatchTvAction.AndThenOnCompleted
  name: AndThenOnCompleted
  nameWithType: WatchTvAction.AndThenOnCompleted
  fullName: TinyLife.Actions.WatchTvAction.AndThenOnCompleted
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Actions.WatchTvAction.GetViewingArea*
  commentId: Overload:TinyLife.Actions.WatchTvAction.GetViewingArea
  name: GetViewingArea
  nameWithType: WatchTvAction.GetViewingArea
  fullName: TinyLife.Actions.WatchTvAction.GetViewingArea
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Point}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Point}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Point>
  nameWithType: IEnumerable<Point>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Point>
  nameWithType.vb: IEnumerable(Of Point)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Point)
  name.vb: IEnumerable(Of Point)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.Objects.ObjectCategory.Chair
  commentId: F:TinyLife.Objects.ObjectCategory.Chair
  name: Chair
  nameWithType: ObjectCategory.Chair
  fullName: TinyLife.Objects.ObjectCategory.Chair
- uid: TinyLife.Actions.WatchTvAction.GetSeating*
  commentId: Overload:TinyLife.Actions.WatchTvAction.GetSeating
  name: GetSeating
  nameWithType: WatchTvAction.GetSeating
  fullName: TinyLife.Actions.WatchTvAction.GetSeating
- uid: TinyLife.Actions.WatchTvAction
  commentId: T:TinyLife.Actions.WatchTvAction
  name: WatchTvAction
  nameWithType: WatchTvAction
  fullName: TinyLife.Actions.WatchTvAction
- uid: TinyLife.Actions.WatchTvAction.GetViewers*
  commentId: Overload:TinyLife.Actions.WatchTvAction.GetViewers
  name: GetViewers
  nameWithType: WatchTvAction.GetViewers
  fullName: TinyLife.Actions.WatchTvAction.GetViewers
- uid: System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Objects.Person}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Person>
  nameWithType: IEnumerable<Person>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Objects.Person>
  nameWithType.vb: IEnumerable(Of Person)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Objects.Person)
  name.vb: IEnumerable(Of Person)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
