### YamlMime:ManagedReference
items:
- uid: TinyLife.World.MapSection
  commentId: T:TinyLife.World.MapSection
  id: MapSection
  parent: TinyLife.World
  children:
  - TinyLife.World.MapSection.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Point)
  - TinyLife.World.MapSection.Bleed
  - TinyLife.World.MapSection.MinorUpdateMinutes
  - TinyLife.World.MapSection.Pos
  - TinyLife.World.MapSection.SectionPos
  - TinyLife.World.MapSection.Size
  - TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.World.MapSection.Validate
  - TinyLife.World.MapSection.ValidateEarly(TinyLife.World.Map)
  langs:
  - csharp
  - vb
  name: MapSection
  nameWithType: MapSection
  fullName: TinyLife.World.MapSection
  type: Class
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MapSection
    path: ../TinyLife/World/MapSection.cs
    startLine: 15
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA map section is a small area in a <xref href=\"TinyLife.World.MapSection.Map\" data-throw-if-not-resolved=\"false\"></xref> that actually contains the area&apos;s objects.\nA map section is always <xref href=\"TinyLife.World.MapSection.Size\" data-throw-if-not-resolved=\"false\"></xref>x<xref href=\"TinyLife.World.MapSection.Size\" data-throw-if-not-resolved=\"false\"></xref> tiles large.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class MapSection : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class MapSection Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.MapSection.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.World.MapSection.Size
  commentId: F:TinyLife.World.MapSection.Size
  id: Size
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: MapSection.Size
  fullName: TinyLife.World.MapSection.Size
  type: Field
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Size
    path: ../TinyLife/World/MapSection.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe constant size of each map section.\nThis value is set to 8.\n"
  example: []
  syntax:
    content: public const int Size = 8
    return:
      type: System.Int32
    content.vb: Public Const Size As Integer = 8
- uid: TinyLife.World.MapSection.Bleed
  commentId: F:TinyLife.World.MapSection.Bleed
  id: Bleed
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: Bleed
  nameWithType: MapSection.Bleed
  fullName: TinyLife.World.MapSection.Bleed
  type: Field
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Bleed
    path: ../TinyLife/World/MapSection.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA constant value that determines the radius of how many sections (in addition to its own section) a <xref href=\"TinyLife.World.Room\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> can span.\nThis value is used by <xref href=\"TinyLife.World.Map.GetRoom(Microsoft.Xna.Framework.Point)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.World.Map.GetRoofs(MLEM.Misc.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.World.Map.GetRoof(Microsoft.Xna.Framework.Point)\" data-throw-if-not-resolved=\"false\"></xref> to query additional sections.\nThis value is set to 2.\n"
  example: []
  syntax:
    content: public const int Bleed = 2
    return:
      type: System.Int32
    content.vb: Public Const Bleed As Integer = 2
- uid: TinyLife.World.MapSection.MinorUpdateMinutes
  commentId: F:TinyLife.World.MapSection.MinorUpdateMinutes
  id: MinorUpdateMinutes
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: MinorUpdateMinutes
  nameWithType: MapSection.MinorUpdateMinutes
  fullName: TinyLife.World.MapSection.MinorUpdateMinutes
  type: Field
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MinorUpdateMinutes
    path: ../TinyLife/World/MapSection.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe amount of minutes of in-game time that have to pass before an <xref href=\"TinyLife.Objects.IUpdatingObject\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow\" data-throw-if-not-resolved=\"false\"></xref> flag set to <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool\">true</a> is updated in <xref href=\"TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float MinorUpdateMinutes = 10
    return:
      type: System.Single
    content.vb: Public Const MinorUpdateMinutes As Single = 10
- uid: TinyLife.World.MapSection.SectionPos
  commentId: F:TinyLife.World.MapSection.SectionPos
  id: SectionPos
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: SectionPos
  nameWithType: MapSection.SectionPos
  fullName: TinyLife.World.MapSection.SectionPos
  type: Field
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SectionPos
    path: ../TinyLife/World/MapSection.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe position, in section coordinates, of this section on the map.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Point SectionPos
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: >-
      <DataMember>

      Public ReadOnly SectionPos As Point
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.MapSection.Pos
  commentId: P:TinyLife.World.MapSection.Pos
  id: Pos
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: Pos
  nameWithType: MapSection.Pos
  fullName: TinyLife.World.MapSection.Pos
  type: Property
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Pos
    path: ../TinyLife/World/MapSection.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe position, in tile coordinates, of this section&apos;s top left corner.\n"
  example: []
  syntax:
    content: public Point Pos { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly Property Pos As Point
  overload: TinyLife.World.MapSection.Pos*
- uid: TinyLife.World.MapSection.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.MapSection.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Point)
  id: '#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Point)'
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: MapSection(Map, Point)
  nameWithType: MapSection.MapSection(Map, Point)
  fullName: TinyLife.World.MapSection.MapSection(TinyLife.World.Map, Microsoft.Xna.Framework.Point)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/MapSection.cs
    startLine: 71
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new map section on the given map, with the given section position.\nAlso fills this map&apos;s tile array with the Grass tile.\n"
  example: []
  syntax:
    content: public MapSection(Map map, Point sectionPos)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map
    - id: sectionPos
      type: Microsoft.Xna.Framework.Point
      description: The section coordinates
    content.vb: Public Sub New(map As Map, sectionPos As Point)
  overload: TinyLife.World.MapSection.#ctor*
  nameWithType.vb: MapSection.New(Map, Point)
  fullName.vb: TinyLife.World.MapSection.New(TinyLife.World.Map, Microsoft.Xna.Framework.Point)
  name.vb: New(Map, Point)
- uid: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, float)
  nameWithType: MapSection.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/World/MapSection.cs
    startLine: 88
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nUpdates this map section and all of the objects on it\n"
  example: []
  syntax:
    content: public void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed in game
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.World.MapSection.Update*
  nameWithType.vb: MapSection.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
- uid: TinyLife.World.MapSection.ValidateEarly(TinyLife.World.Map)
  commentId: M:TinyLife.World.MapSection.ValidateEarly(TinyLife.World.Map)
  id: ValidateEarly(TinyLife.World.Map)
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: ValidateEarly(Map)
  nameWithType: MapSection.ValidateEarly(Map)
  fullName: TinyLife.World.MapSection.ValidateEarly(TinyLife.World.Map)
  type: Method
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ValidateEarly
    path: ../TinyLife/World/MapSection.cs
    startLine: 110
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nValidates this map section early, setting its map, and adding its objects to the appropriate collections, and validating the section&apos;s tiles.\nThis method is called for all <xref href=\"TinyLife.World.MapSection.Map\" data-throw-if-not-resolved=\"false\"></xref> sections before <xref href=\"TinyLife.World.MapSection.Validate\" data-throw-if-not-resolved=\"false\"></xref> is called for any sections.\n"
  example: []
  syntax:
    content: public void ValidateEarly(Map map)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that this section is on.
    content.vb: Public Sub ValidateEarly(map As Map)
  overload: TinyLife.World.MapSection.ValidateEarly*
- uid: TinyLife.World.MapSection.Validate
  commentId: M:TinyLife.World.MapSection.Validate
  id: Validate
  parent: TinyLife.World.MapSection
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: MapSection.Validate()
  fullName: TinyLife.World.MapSection.Validate()
  type: Method
  source:
    remote:
      path: TinyLife/World/MapSection.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/World/MapSection.cs
    startLine: 136
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThis method is called when this object is loaded from disk.\nWhen called on a map section, each of its <xref href=\"TinyLife.Objects.MapObject\" data-throw-if-not-resolved=\"false\"></xref> instances is validated.\n"
  example: []
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate()
  overload: TinyLife.World.MapSection.Validate*
references:
- uid: TinyLife.World.MapSection.Map
  commentId: F:TinyLife.World.MapSection.Map
  name: Map
  nameWithType: MapSection.Map
  fullName: TinyLife.World.MapSection.Map
- uid: TinyLife.World.MapSection.Size
  commentId: F:TinyLife.World.MapSection.Size
  name: Size
  nameWithType: MapSection.Size
  fullName: TinyLife.World.MapSection.Size
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(string, object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(string, object)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.MapSection.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<MapSection>(MapSection)
  nameWithType: Extensions.JsonCopy<MapSection>(MapSection)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.MapSection>(TinyLife.World.MapSection)
  nameWithType.vb: Extensions.JsonCopy(Of MapSection)(MapSection)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.MapSection)(TinyLife.World.MapSection)
  name.vb: JsonCopy(Of MapSection)(MapSection)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.MapSection)
    name: JsonCopy
  - name: <
  - uid: TinyLife.World.MapSection
    name: MapSection
  - name: '>'
  - name: (
  - uid: TinyLife.World.MapSection
    name: MapSection
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.MapSection)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.MapSection
    name: MapSection
  - name: )
  - name: (
  - uid: TinyLife.World.MapSection
    name: MapSection
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  parent: TinyLife.World
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: TinyLife.World.Map.GetRoom(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Map.GetRoom(Microsoft.Xna.Framework.Point)
  isExternal: true
  name: GetRoom(Point)
  nameWithType: Map.GetRoom(Point)
  fullName: TinyLife.World.Map.GetRoom(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.World.Map.GetRoom(Microsoft.Xna.Framework.Point)
    name: GetRoom
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetRoom(Microsoft.Xna.Framework.Point)
    name: GetRoom
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.World.Map.GetRoofs(MLEM.Misc.RectangleF)
  commentId: M:TinyLife.World.Map.GetRoofs(MLEM.Misc.RectangleF)
  isExternal: true
  name: GetRoofs(RectangleF)
  nameWithType: Map.GetRoofs(RectangleF)
  fullName: TinyLife.World.Map.GetRoofs(MLEM.Misc.RectangleF)
  spec.csharp:
  - uid: TinyLife.World.Map.GetRoofs(MLEM.Misc.RectangleF)
    name: GetRoofs
  - name: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetRoofs(MLEM.Misc.RectangleF)
    name: GetRoofs
  - name: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: TinyLife.World.Map.GetRoof(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Map.GetRoof(Microsoft.Xna.Framework.Point)
  isExternal: true
  name: GetRoof(Point)
  nameWithType: Map.GetRoof(Point)
  fullName: TinyLife.World.Map.GetRoof(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.World.Map.GetRoof(Microsoft.Xna.Framework.Point)
    name: GetRoof
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetRoof(Microsoft.Xna.Framework.Point)
    name: GetRoof
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Objects.IUpdatingObject
  commentId: T:TinyLife.Objects.IUpdatingObject
  parent: TinyLife.Objects
  name: IUpdatingObject
  nameWithType: IUpdatingObject
  fullName: TinyLife.Objects.IUpdatingObject
- uid: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  commentId: P:TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
  parent: TinyLife.Objects.IUpdatingObject
  name: IsMinorUpdateNow
  nameWithType: IUpdatingObject.IsMinorUpdateNow
  fullName: TinyLife.Objects.IUpdatingObject.IsMinorUpdateNow
- uid: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Update(GameTime, TimeSpan, float)
  nameWithType: MapSection.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: MapSection.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.World.MapSection.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.MapSection.Pos*
  commentId: Overload:TinyLife.World.MapSection.Pos
  name: Pos
  nameWithType: MapSection.Pos
  fullName: TinyLife.World.MapSection.Pos
- uid: TinyLife.World.MapSection.#ctor*
  commentId: Overload:TinyLife.World.MapSection.#ctor
  name: MapSection
  nameWithType: MapSection.MapSection
  fullName: TinyLife.World.MapSection.MapSection
  nameWithType.vb: MapSection.New
  fullName.vb: TinyLife.World.MapSection.New
  name.vb: New
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.World.MapSection.Update*
  commentId: Overload:TinyLife.World.MapSection.Update
  name: Update
  nameWithType: MapSection.Update
  fullName: TinyLife.World.MapSection.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.World.MapSection.Validate
  commentId: M:TinyLife.World.MapSection.Validate
  name: Validate()
  nameWithType: MapSection.Validate()
  fullName: TinyLife.World.MapSection.Validate()
  spec.csharp:
  - uid: TinyLife.World.MapSection.Validate
    name: Validate
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.MapSection.Validate
    name: Validate
  - name: (
  - name: )
- uid: TinyLife.World.MapSection.ValidateEarly*
  commentId: Overload:TinyLife.World.MapSection.ValidateEarly
  name: ValidateEarly
  nameWithType: MapSection.ValidateEarly
  fullName: TinyLife.World.MapSection.ValidateEarly
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.World.MapSection.Validate*
  commentId: Overload:TinyLife.World.MapSection.Validate
  name: Validate
  nameWithType: MapSection.Validate
  fullName: TinyLife.World.MapSection.Validate
