### YamlMime:ManagedReference
items:
- uid: TinyLife.SaveHandler
  commentId: T:TinyLife.SaveHandler
  id: SaveHandler
  parent: TinyLife
  children:
  - TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  - TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  - TinyLife.SaveHandler.GetGameDir
  - TinyLife.SaveHandler.GetSaveDir(System.String)
  - TinyLife.SaveHandler.GetSavesDir
  - TinyLife.SaveHandler.OnGameLoaded
  - TinyLife.SaveHandler.OnGameSaved
  - TinyLife.SaveHandler.OnSaveDataCreated
  - TinyLife.SaveHandler.OnSaveDataLoaded
  - TinyLife.SaveHandler.OnSaveLoadError
  langs:
  - csharp
  - vb
  name: SaveHandler
  nameWithType: SaveHandler
  fullName: TinyLife.SaveHandler
  type: Class
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SaveHandler
    path: ../TinyLife/SaveHandler.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA utility class used by the game for various actions and information related to saving and loading.\n"
  example: []
  syntax:
    content: public static class SaveHandler
    content.vb: Public Module SaveHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.SaveHandler.OnGameSaved
  commentId: E:TinyLife.SaveHandler.OnGameSaved
  id: OnGameSaved
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnGameSaved
  nameWithType: SaveHandler.OnGameSaved
  fullName: TinyLife.SaveHandler.OnGameSaved
  type: Event
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnGameSaved
    path: ../TinyLife/SaveHandler.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn event that is raised before and after the game is saved.\n"
  example: []
  syntax:
    content: public static event Action<GameImpl, EventPhase> OnGameSaved
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
    content.vb: Public Shared Event OnGameSaved As Action(Of GameImpl, EventPhase)
- uid: TinyLife.SaveHandler.OnGameLoaded
  commentId: E:TinyLife.SaveHandler.OnGameLoaded
  id: OnGameLoaded
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnGameLoaded
  nameWithType: SaveHandler.OnGameLoaded
  fullName: TinyLife.SaveHandler.OnGameLoaded
  type: Event
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnGameLoaded
    path: ../TinyLife/SaveHandler.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn event that is raised before and after the game is loaded.\n"
  example: []
  syntax:
    content: public static event Action<GameImpl, EventPhase> OnGameLoaded
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
    content.vb: Public Shared Event OnGameLoaded As Action(Of GameImpl, EventPhase)
- uid: TinyLife.SaveHandler.OnSaveDataCreated
  commentId: E:TinyLife.SaveHandler.OnSaveDataCreated
  id: OnSaveDataCreated
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnSaveDataCreated
  nameWithType: SaveHandler.OnSaveDataCreated
  fullName: TinyLife.SaveHandler.OnSaveDataCreated
  type: Event
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnSaveDataCreated
    path: ../TinyLife/SaveHandler.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn event that is raised when the game&apos;s <xref href=\"TinyLife.SaveHandler.SaveData\" data-throw-if-not-resolved=\"false\"></xref> is loaded.\n"
  example: []
  syntax:
    content: public static event Action<GameImpl, SaveHandler.SaveData> OnSaveDataCreated
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
    content.vb: Public Shared Event OnSaveDataCreated As Action(Of GameImpl, SaveHandler.SaveData)
- uid: TinyLife.SaveHandler.OnSaveDataLoaded
  commentId: E:TinyLife.SaveHandler.OnSaveDataLoaded
  id: OnSaveDataLoaded
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnSaveDataLoaded
  nameWithType: SaveHandler.OnSaveDataLoaded
  fullName: TinyLife.SaveHandler.OnSaveDataLoaded
  type: Event
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnSaveDataLoaded
    path: ../TinyLife/SaveHandler.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn event that is raised when the game&apos;s <xref href=\"TinyLife.SaveHandler.SaveData\" data-throw-if-not-resolved=\"false\"></xref> is saved.\n"
  example: []
  syntax:
    content: public static event Action<GameImpl, SaveHandler.SaveData> OnSaveDataLoaded
    return:
      type: System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
    content.vb: Public Shared Event OnSaveDataLoaded As Action(Of GameImpl, SaveHandler.SaveData)
- uid: TinyLife.SaveHandler.OnSaveLoadError
  commentId: E:TinyLife.SaveHandler.OnSaveLoadError
  id: OnSaveLoadError
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: OnSaveLoadError
  nameWithType: SaveHandler.OnSaveLoadError
  fullName: TinyLife.SaveHandler.OnSaveLoadError
  type: Event
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnSaveLoadError
    path: ../TinyLife/SaveHandler.cs
    startLine: 46
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn event that is raised when a <xref href=\"Newtonsoft.Json.JsonSerializer\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Newtonsoft.Json.JsonSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref> created in <xref href=\"TinyLife.SaveHandler.CreateSerializer(System.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref> is used for serialization or deserialization, and an error occurs.\nThis event is a subscription to <xref href=\"Newtonsoft.Json.JsonSerializerSettings.Error\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static event EventHandler<(ErrorEventArgs, EventPhase)> OnSaveLoadError
    return:
      type: System.EventHandler{System.ValueTuple{Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}}
    content.vb: Public Shared Event OnSaveLoadError As EventHandler(Of (ErrorEventArgs, EventPhase))
- uid: TinyLife.SaveHandler.GetGameDir
  commentId: M:TinyLife.SaveHandler.GetGameDir
  id: GetGameDir
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetGameDir()
  nameWithType: SaveHandler.GetGameDir()
  fullName: TinyLife.SaveHandler.GetGameDir()
  type: Method
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetGameDir
    path: ../TinyLife/SaveHandler.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns a <xref href=\"System.IO.DirectoryInfo\" data-throw-if-not-resolved=\"false\"></xref> that points to the game&apos;s data directory.\nFor more information on where this directory is stored, see https://docs.tinylifegame.com/articles/game_dir.html.\n"
  example: []
  syntax:
    content: public static DirectoryInfo GetGameDir()
    return:
      type: System.IO.DirectoryInfo
      description: The game&apos;s data directory.
    content.vb: Public Shared Function GetGameDir() As DirectoryInfo
  overload: TinyLife.SaveHandler.GetGameDir*
- uid: TinyLife.SaveHandler.GetSavesDir
  commentId: M:TinyLife.SaveHandler.GetSavesDir
  id: GetSavesDir
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetSavesDir()
  nameWithType: SaveHandler.GetSavesDir()
  fullName: TinyLife.SaveHandler.GetSavesDir()
  type: Method
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetSavesDir
    path: ../TinyLife/SaveHandler.cs
    startLine: 65
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns a <xref href=\"System.IO.DirectoryInfo\" data-throw-if-not-resolved=\"false\"></xref> that points to the game&apos;s saves directory.\nThis method returns a subdirectory of <xref href=\"TinyLife.SaveHandler.GetGameDir\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static DirectoryInfo GetSavesDir()
    return:
      type: System.IO.DirectoryInfo
      description: The game&apos;s saves directory.
    content.vb: Public Shared Function GetSavesDir() As DirectoryInfo
  overload: TinyLife.SaveHandler.GetSavesDir*
- uid: TinyLife.SaveHandler.GetSaveDir(System.String)
  commentId: M:TinyLife.SaveHandler.GetSaveDir(System.String)
  id: GetSaveDir(System.String)
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: GetSaveDir(string)
  nameWithType: SaveHandler.GetSaveDir(string)
  fullName: TinyLife.SaveHandler.GetSaveDir(string)
  type: Method
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetSaveDir
    path: ../TinyLife/SaveHandler.cs
    startLine: 75
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns a <xref href=\"System.IO.DirectoryInfo\" data-throw-if-not-resolved=\"false\"></xref> that points to the directory that a save with the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> is or would be stored in.\nThis method returns a subdirectory of <xref href=\"TinyLife.SaveHandler.GetSavesDir\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static DirectoryInfo GetSaveDir(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.IO.DirectoryInfo
      description: The directory for the given save.
    content.vb: Public Shared Function GetSaveDir(name As String) As DirectoryInfo
  overload: TinyLife.SaveHandler.GetSaveDir*
  nameWithType.vb: SaveHandler.GetSaveDir(String)
  fullName.vb: TinyLife.SaveHandler.GetSaveDir(String)
  name.vb: GetSaveDir(String)
- uid: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  commentId: M:TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  id: CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: CreateSerializerSettings(EventHandler<ErrorEventArgs>)
  nameWithType: SaveHandler.CreateSerializerSettings(EventHandler<ErrorEventArgs>)
  fullName: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>)
  type: Method
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateSerializerSettings
    path: ../TinyLife/SaveHandler.cs
    startLine: 85
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nCreates a new instance of <xref href=\"Newtonsoft.Json.JsonSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref>, initialized to some default values for saving and loading <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> and, specifically, <xref href=\"TinyLife.Objects.MapObject\" data-throw-if-not-resolved=\"false\"></xref> instances.\nAdditionally, an <code data-dev-comment-type=\"paramref\" class=\"paramref\">errorHandler</code> can optionally be attached to determine what should happen when a serialization error occurs.\n"
  example: []
  syntax:
    content: public static JsonSerializerSettings CreateSerializerSettings(EventHandler<ErrorEventArgs> errorHandler)
    parameters:
    - id: errorHandler
      type: System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
      description: An optional error handler.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: A new instance of <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> with some default values set.
    content.vb: Public Shared Function CreateSerializerSettings(errorHandler As EventHandler(Of ErrorEventArgs)) As JsonSerializerSettings
  overload: TinyLife.SaveHandler.CreateSerializerSettings*
  nameWithType.vb: SaveHandler.CreateSerializerSettings(EventHandler(Of ErrorEventArgs))
  fullName.vb: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs))
  name.vb: CreateSerializerSettings(EventHandler(Of ErrorEventArgs))
- uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  commentId: M:TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  id: CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  parent: TinyLife.SaveHandler
  langs:
  - csharp
  - vb
  name: CreateSerializer(EventHandler<ErrorEventArgs>)
  nameWithType: SaveHandler.CreateSerializer(EventHandler<ErrorEventArgs>)
  fullName: TinyLife.SaveHandler.CreateSerializer(System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>)
  type: Method
  source:
    remote:
      path: TinyLife/SaveHandler.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateSerializer
    path: ../TinyLife/SaveHandler.cs
    startLine: 109
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nCreates a new <xref href=\"Newtonsoft.Json.JsonSerializer\" data-throw-if-not-resolved=\"false\"></xref> that uses the <xref href=\"Newtonsoft.Json.JsonSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref> returned in <xref href=\"TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler%7bNewtonsoft.Json.Serialization.ErrorEventArgs%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static JsonSerializer CreateSerializer(EventHandler<ErrorEventArgs> errorHandler = null)
    parameters:
    - id: errorHandler
      type: System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
      description: An optional error handler.
    return:
      type: Newtonsoft.Json.JsonSerializer
      description: A new <xref href="Newtonsoft.Json.JsonSerializer" data-throw-if-not-resolved="false"></xref> with some default values set.
    content.vb: Public Shared Function CreateSerializer(errorHandler As EventHandler(Of ErrorEventArgs) = Nothing) As JsonSerializer
  overload: TinyLife.SaveHandler.CreateSerializer*
  nameWithType.vb: SaveHandler.CreateSerializer(EventHandler(Of ErrorEventArgs))
  fullName.vb: TinyLife.SaveHandler.CreateSerializer(System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs))
  name.vb: CreateSerializer(EventHandler(Of ErrorEventArgs))
references:
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
  commentId: T:System.Action{TinyLife.GameImpl,TinyLife.Mods.EventPhase}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<GameImpl, EventPhase>
  nameWithType: Action<GameImpl, EventPhase>
  fullName: System.Action<TinyLife.GameImpl, TinyLife.Mods.EventPhase>
  nameWithType.vb: Action(Of GameImpl, EventPhase)
  fullName.vb: System.Action(Of TinyLife.GameImpl, TinyLife.Mods.EventPhase)
  name.vb: Action(Of GameImpl, EventPhase)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.SaveHandler.SaveData
  commentId: T:TinyLife.SaveHandler.SaveData
  name: SaveHandler.SaveData
  nameWithType: SaveHandler.SaveData
  fullName: TinyLife.SaveHandler.SaveData
  spec.csharp:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
  spec.vb:
  - uid: TinyLife.SaveHandler
    name: SaveHandler
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
- uid: System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
  commentId: T:System.Action{TinyLife.GameImpl,TinyLife.SaveHandler.SaveData}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<GameImpl, SaveHandler.SaveData>
  nameWithType: Action<GameImpl, SaveHandler.SaveData>
  fullName: System.Action<TinyLife.GameImpl, TinyLife.SaveHandler.SaveData>
  nameWithType.vb: Action(Of GameImpl, SaveHandler.SaveData)
  fullName.vb: System.Action(Of TinyLife.GameImpl, TinyLife.SaveHandler.SaveData)
  name.vb: Action(Of GameImpl, SaveHandler.SaveData)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.GameImpl
    name: GameImpl
  - name: ','
  - name: " "
  - uid: TinyLife.SaveHandler
    name: SaveHandler
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.GameImpl
    name: GameImpl
  - name: ','
  - name: " "
  - uid: TinyLife.SaveHandler
    name: SaveHandler
  - name: .
  - uid: TinyLife.SaveHandler.SaveData
    name: SaveData
  - name: )
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  commentId: M:TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: CreateSerializer(EventHandler<ErrorEventArgs>)
  nameWithType: SaveHandler.CreateSerializer(EventHandler<ErrorEventArgs>)
  fullName: TinyLife.SaveHandler.CreateSerializer(System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>)
  nameWithType.vb: SaveHandler.CreateSerializer(EventHandler(Of ErrorEventArgs))
  fullName.vb: TinyLife.SaveHandler.CreateSerializer(System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs))
  name.vb: CreateSerializer(EventHandler(Of ErrorEventArgs))
  spec.csharp:
  - uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
    name: CreateSerializer
  - name: (
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.CreateSerializer(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
    name: CreateSerializer
  - name: (
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
  - name: )
- uid: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  commentId: M:TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: CreateSerializerSettings(EventHandler<ErrorEventArgs>)
  nameWithType: SaveHandler.CreateSerializerSettings(EventHandler<ErrorEventArgs>)
  fullName: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>)
  nameWithType.vb: SaveHandler.CreateSerializerSettings(EventHandler(Of ErrorEventArgs))
  fullName.vb: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs))
  name.vb: CreateSerializerSettings(EventHandler(Of ErrorEventArgs))
  spec.csharp:
  - uid: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
    name: CreateSerializerSettings
  - name: (
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.CreateSerializerSettings(System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs})
    name: CreateSerializerSettings
  - name: (
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
  - name: )
- uid: Newtonsoft.Json.JsonSerializerSettings.Error
  commentId: P:Newtonsoft.Json.JsonSerializerSettings.Error
  isExternal: true
  name: Error
  nameWithType: JsonSerializerSettings.Error
  fullName: Newtonsoft.Json.JsonSerializerSettings.Error
- uid: System.EventHandler{System.ValueTuple{Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}}
  commentId: T:System.EventHandler{System.ValueTuple{Newtonsoft.Json.Serialization.ErrorEventArgs,TinyLife.Mods.EventPhase}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<(ErrorEventArgs, EventPhase)>
  nameWithType: EventHandler<(ErrorEventArgs, EventPhase)>
  fullName: System.EventHandler<(Newtonsoft.Json.Serialization.ErrorEventArgs, TinyLife.Mods.EventPhase)>
  nameWithType.vb: EventHandler(Of (ErrorEventArgs, EventPhase))
  fullName.vb: System.EventHandler(Of (Newtonsoft.Json.Serialization.ErrorEventArgs, TinyLife.Mods.EventPhase))
  name.vb: EventHandler(Of (ErrorEventArgs, EventPhase))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: (
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.EventPhase
    name: EventPhase
  - name: )
  - name: )
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: TinyLife.SaveHandler.GetGameDir*
  commentId: Overload:TinyLife.SaveHandler.GetGameDir
  name: GetGameDir
  nameWithType: SaveHandler.GetGameDir
  fullName: TinyLife.SaveHandler.GetGameDir
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: TinyLife.SaveHandler.GetGameDir
  commentId: M:TinyLife.SaveHandler.GetGameDir
  name: GetGameDir()
  nameWithType: SaveHandler.GetGameDir()
  fullName: TinyLife.SaveHandler.GetGameDir()
  spec.csharp:
  - uid: TinyLife.SaveHandler.GetGameDir
    name: GetGameDir
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.GetGameDir
    name: GetGameDir
  - name: (
  - name: )
- uid: TinyLife.SaveHandler.GetSavesDir*
  commentId: Overload:TinyLife.SaveHandler.GetSavesDir
  name: GetSavesDir
  nameWithType: SaveHandler.GetSavesDir
  fullName: TinyLife.SaveHandler.GetSavesDir
- uid: TinyLife.SaveHandler.GetSavesDir
  commentId: M:TinyLife.SaveHandler.GetSavesDir
  name: GetSavesDir()
  nameWithType: SaveHandler.GetSavesDir()
  fullName: TinyLife.SaveHandler.GetSavesDir()
  spec.csharp:
  - uid: TinyLife.SaveHandler.GetSavesDir
    name: GetSavesDir
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.SaveHandler.GetSavesDir
    name: GetSavesDir
  - name: (
  - name: )
- uid: TinyLife.SaveHandler.GetSaveDir*
  commentId: Overload:TinyLife.SaveHandler.GetSaveDir
  name: GetSaveDir
  nameWithType: SaveHandler.GetSaveDir
  fullName: TinyLife.SaveHandler.GetSaveDir
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.SaveHandler.CreateSerializerSettings*
  commentId: Overload:TinyLife.SaveHandler.CreateSerializerSettings
  name: CreateSerializerSettings
  nameWithType: SaveHandler.CreateSerializerSettings
  fullName: TinyLife.SaveHandler.CreateSerializerSettings
- uid: System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
  commentId: T:System.EventHandler{Newtonsoft.Json.Serialization.ErrorEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ErrorEventArgs>
  nameWithType: EventHandler<ErrorEventArgs>
  fullName: System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs>
  nameWithType.vb: EventHandler(Of ErrorEventArgs)
  fullName.vb: System.EventHandler(Of Newtonsoft.Json.Serialization.ErrorEventArgs)
  name.vb: EventHandler(Of ErrorEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Newtonsoft.Json.Serialization.ErrorEventArgs
    name: ErrorEventArgs
    isExternal: true
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.SaveHandler.CreateSerializer*
  commentId: Overload:TinyLife.SaveHandler.CreateSerializer
  name: CreateSerializer
  nameWithType: SaveHandler.CreateSerializer
  fullName: TinyLife.SaveHandler.CreateSerializer
