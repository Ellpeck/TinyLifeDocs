### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Soundscape.IntensityDelegate
  commentId: T:TinyLife.World.Soundscape.IntensityDelegate
  id: Soundscape.IntensityDelegate
  parent: TinyLife.World
  children: []
  langs:
  - csharp
  - vb
  name: Soundscape.IntensityDelegate
  nameWithType: Soundscape.IntensityDelegate
  fullName: TinyLife.World.Soundscape.IntensityDelegate
  type: Delegate
  source:
    remote:
      path: TinyLife/World/Soundscape.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IntensityDelegate
    path: ../TinyLife/World/Soundscape.cs
    startLine: 114
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA delegate method used by <xref href=\"TinyLife.World.Soundscape\" data-throw-if-not-resolved=\"false\"></xref> to determine the volume that an ambient sound should have.\nThe returned volume should be between 0 and 1, where 0 means the soundscape will not be played at all.\n"
  example: []
  syntax:
    content: public delegate float IntensityDelegate(Map map, Vector2 cameraWorldPos);
    parameters:
    - id: map
      type: TinyLife.World.Map
    - id: cameraWorldPos
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: System.Single
    content.vb: Public Delegate Function IntensityDelegate(map As Map, cameraWorldPos As Vector2) As Single
  extensionMethods:
  - TinyLife.World.Soundscape.IntensityDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: TinyLife.World.Soundscape
  commentId: T:TinyLife.World.Soundscape
  name: Soundscape
  nameWithType: Soundscape
  fullName: TinyLife.World.Soundscape
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: TinyLife.World.Soundscape.IntensityDelegate.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Soundscape.IntensityDelegate>()
  nameWithType: Extensions.JsonCopy<Soundscape.IntensityDelegate>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Soundscape.IntensityDelegate>()
  nameWithType.vb: Extensions.JsonCopy(Of Soundscape.IntensityDelegate)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Soundscape.IntensityDelegate)()
  name.vb: JsonCopy(Of Soundscape.IntensityDelegate)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Soundscape.IntensityDelegate>
    nameWithType: Extensions.JsonCopy<Soundscape.IntensityDelegate>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Soundscape.IntensityDelegate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Soundscape.IntensityDelegate)
    nameWithType: Extensions.JsonCopy(Of Soundscape.IntensityDelegate)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Soundscape.IntensityDelegate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
