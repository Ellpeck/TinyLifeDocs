### YamlMime:ManagedReference
items:
- uid: TinyLife.World.MapAudioEmitter
  commentId: T:TinyLife.World.MapAudioEmitter
  id: MapAudioEmitter
  parent: TinyLife.World
  children:
  - TinyLife.World.MapAudioEmitter.WorldPosition
  langs:
  - csharp
  - vb
  name: MapAudioEmitter
  nameWithType: MapAudioEmitter
  fullName: TinyLife.World.MapAudioEmitter
  type: Class
  source:
    remote:
      path: TinyLife/World/MapAudioEmitter.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MapAudioEmitter
    path: ../TinyLife/World/MapAudioEmitter.cs
    startLine: 9
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nAn extension of the <xref href=\"Microsoft.Xna.Framework.Audio.AudioEmitter\" data-throw-if-not-resolved=\"false\"></xref> class that also stores the emitter&apos;s <xref href=\"TinyLife.World.MapAudioEmitter.WorldPosition\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class MapAudioEmitter : AudioEmitter'
    content.vb: >-
      Public Class MapAudioEmitter
          Inherits AudioEmitter
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Audio.AudioEmitter
  inheritedMembers:
  - Microsoft.Xna.Framework.Audio.AudioEmitter.DopplerScale
  - Microsoft.Xna.Framework.Audio.AudioEmitter.Forward
  - Microsoft.Xna.Framework.Audio.AudioEmitter.Position
  - Microsoft.Xna.Framework.Audio.AudioEmitter.Up
  - Microsoft.Xna.Framework.Audio.AudioEmitter.Velocity
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.MapAudioEmitter.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.World.MapAudioEmitter.WorldPosition
  commentId: P:TinyLife.World.MapAudioEmitter.WorldPosition
  id: WorldPosition
  parent: TinyLife.World.MapAudioEmitter
  langs:
  - csharp
  - vb
  name: WorldPosition
  nameWithType: MapAudioEmitter.WorldPosition
  fullName: TinyLife.World.MapAudioEmitter.WorldPosition
  type: Property
  source:
    remote:
      path: TinyLife/World/MapAudioEmitter.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WorldPosition
    path: ../TinyLife/World/MapAudioEmitter.cs
    startLine: 14
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThis audio emitter&apos;s <xref href=\"Microsoft.Xna.Framework.Audio.AudioEmitter.Position\" data-throw-if-not-resolved=\"false\"></xref>, but measured in world coordinates\n"
  example: []
  syntax:
    content: public Vector2 WorldPosition { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property WorldPosition As Vector2
  overload: TinyLife.World.MapAudioEmitter.WorldPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Xna.Framework.Audio.AudioEmitter
  commentId: T:Microsoft.Xna.Framework.Audio.AudioEmitter
  parent: Microsoft.Xna.Framework.Audio
  isExternal: true
  name: AudioEmitter
  nameWithType: AudioEmitter
  fullName: Microsoft.Xna.Framework.Audio.AudioEmitter
- uid: TinyLife.World.MapAudioEmitter.WorldPosition
  commentId: P:TinyLife.World.MapAudioEmitter.WorldPosition
  isExternal: true
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Xna.Framework.Audio.AudioEmitter.DopplerScale
  commentId: P:Microsoft.Xna.Framework.Audio.AudioEmitter.DopplerScale
  parent: Microsoft.Xna.Framework.Audio.AudioEmitter
  isExternal: true
  name: DopplerScale
  nameWithType: AudioEmitter.DopplerScale
  fullName: Microsoft.Xna.Framework.Audio.AudioEmitter.DopplerScale
- uid: Microsoft.Xna.Framework.Audio.AudioEmitter.Forward
  commentId: P:Microsoft.Xna.Framework.Audio.AudioEmitter.Forward
  parent: Microsoft.Xna.Framework.Audio.AudioEmitter
  isExternal: true
  name: Forward
  nameWithType: AudioEmitter.Forward
  fullName: Microsoft.Xna.Framework.Audio.AudioEmitter.Forward
- uid: Microsoft.Xna.Framework.Audio.AudioEmitter.Position
  commentId: P:Microsoft.Xna.Framework.Audio.AudioEmitter.Position
  parent: Microsoft.Xna.Framework.Audio.AudioEmitter
  isExternal: true
  name: Position
  nameWithType: AudioEmitter.Position
  fullName: Microsoft.Xna.Framework.Audio.AudioEmitter.Position
- uid: Microsoft.Xna.Framework.Audio.AudioEmitter.Up
  commentId: P:Microsoft.Xna.Framework.Audio.AudioEmitter.Up
  parent: Microsoft.Xna.Framework.Audio.AudioEmitter
  isExternal: true
  name: Up
  nameWithType: AudioEmitter.Up
  fullName: Microsoft.Xna.Framework.Audio.AudioEmitter.Up
- uid: Microsoft.Xna.Framework.Audio.AudioEmitter.Velocity
  commentId: P:Microsoft.Xna.Framework.Audio.AudioEmitter.Velocity
  parent: Microsoft.Xna.Framework.Audio.AudioEmitter
  isExternal: true
  name: Velocity
  nameWithType: AudioEmitter.Velocity
  fullName: Microsoft.Xna.Framework.Audio.AudioEmitter.Velocity
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.MapAudioEmitter.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<MapAudioEmitter>()
  nameWithType: Extensions.JsonCopy<MapAudioEmitter>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.MapAudioEmitter>()
  nameWithType.vb: Extensions.JsonCopy(Of MapAudioEmitter)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.MapAudioEmitter)()
  name.vb: JsonCopy(Of MapAudioEmitter)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<MapAudioEmitter>
    nameWithType: Extensions.JsonCopy<MapAudioEmitter>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.MapAudioEmitter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of MapAudioEmitter)
    nameWithType: Extensions.JsonCopy(Of MapAudioEmitter)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.MapAudioEmitter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework.Audio
  commentId: N:Microsoft.Xna.Framework.Audio
  isExternal: true
  name: Microsoft.Xna.Framework.Audio
  nameWithType: Microsoft.Xna.Framework.Audio
  fullName: Microsoft.Xna.Framework.Audio
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.MapAudioEmitter.WorldPosition*
  commentId: Overload:TinyLife.World.MapAudioEmitter.WorldPosition
  name: WorldPosition
  nameWithType: MapAudioEmitter.WorldPosition
  fullName: TinyLife.World.MapAudioEmitter.WorldPosition
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
