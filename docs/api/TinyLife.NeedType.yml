### YamlMime:ManagedReference
items:
- uid: TinyLife.NeedType
  commentId: T:TinyLife.NeedType
  id: NeedType
  parent: TinyLife
  children:
  - TinyLife.NeedType.#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType},System.Func{TinyLife.Objects.Person,System.TimeSpan},System.Single,System.Single)
  - TinyLife.NeedType.Energy
  - TinyLife.NeedType.Entertainment
  - TinyLife.NeedType.Hunger
  - TinyLife.NeedType.Hygiene
  - TinyLife.NeedType.Name
  - TinyLife.NeedType.NeedLowAction
  - TinyLife.NeedType.NeedLowTime
  - TinyLife.NeedType.PassiveReduction
  - TinyLife.NeedType.Register(TinyLife.NeedType)
  - TinyLife.NeedType.Social
  - TinyLife.NeedType.SolveImportance
  - TinyLife.NeedType.SolvePercentage
  - TinyLife.NeedType.SourceString
  - TinyLife.NeedType.Toilet
  - TinyLife.NeedType.Types
  langs:
  - csharp
  - vb
  name: NeedType
  nameWithType: NeedType
  fullName: TinyLife.NeedType
  type: Class
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NeedType
    path: ../TinyLife/Need.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA need is a desire that a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> can have to a given extent.\nTo register a custom need type, use <xref href=\"TinyLife.NeedType.Register(TinyLife.NeedType)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(NeedType.Converter))]

      public class NeedType : IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(NeedType.Converter))>

      Public Class NeedType Implements IEmotionSource
  inheritance:
  - System.Object
  implements:
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.NeedType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.NeedType.Types
  commentId: F:TinyLife.NeedType.Types
  id: Types
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: NeedType.Types
  fullName: TinyLife.NeedType.Types
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Types
    path: ../TinyLife/Need.cs
    startLine: 99
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA list of all of the need types that are currently registered.\nRegister custom need types using <xref href=\"TinyLife.NeedType.Register(TinyLife.NeedType)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static readonly ReadOnlyCollection<NeedType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{TinyLife.NeedType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyCollection(Of NeedType)
- uid: TinyLife.NeedType.Energy
  commentId: F:TinyLife.NeedType.Energy
  id: Energy
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Energy
  nameWithType: NeedType.Energy
  fullName: TinyLife.NeedType.Energy
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Energy
    path: ../TinyLife/Need.cs
    startLine: 101
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly NeedType Energy
    return:
      type: TinyLife.NeedType
    content.vb: Public Shared ReadOnly Energy As NeedType
- uid: TinyLife.NeedType.Hunger
  commentId: F:TinyLife.NeedType.Hunger
  id: Hunger
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Hunger
  nameWithType: NeedType.Hunger
  fullName: TinyLife.NeedType.Hunger
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Hunger
    path: ../TinyLife/Need.cs
    startLine: 118
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly NeedType Hunger
    return:
      type: TinyLife.NeedType
    content.vb: Public Shared ReadOnly Hunger As NeedType
- uid: TinyLife.NeedType.Social
  commentId: F:TinyLife.NeedType.Social
  id: Social
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Social
  nameWithType: NeedType.Social
  fullName: TinyLife.NeedType.Social
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Social
    path: ../TinyLife/Need.cs
    startLine: 125
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly NeedType Social
    return:
      type: TinyLife.NeedType
    content.vb: Public Shared ReadOnly Social As NeedType
- uid: TinyLife.NeedType.Toilet
  commentId: F:TinyLife.NeedType.Toilet
  id: Toilet
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Toilet
  nameWithType: NeedType.Toilet
  fullName: TinyLife.NeedType.Toilet
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Toilet
    path: ../TinyLife/Need.cs
    startLine: 136
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly NeedType Toilet
    return:
      type: TinyLife.NeedType
    content.vb: Public Shared ReadOnly Toilet As NeedType
- uid: TinyLife.NeedType.Hygiene
  commentId: F:TinyLife.NeedType.Hygiene
  id: Hygiene
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Hygiene
  nameWithType: NeedType.Hygiene
  fullName: TinyLife.NeedType.Hygiene
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Hygiene
    path: ../TinyLife/Need.cs
    startLine: 143
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly NeedType Hygiene
    return:
      type: TinyLife.NeedType
    content.vb: Public Shared ReadOnly Hygiene As NeedType
- uid: TinyLife.NeedType.Entertainment
  commentId: F:TinyLife.NeedType.Entertainment
  id: Entertainment
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Entertainment
  nameWithType: NeedType.Entertainment
  fullName: TinyLife.NeedType.Entertainment
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Entertainment
    path: ../TinyLife/Need.cs
    startLine: 144
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: public static readonly NeedType Entertainment
    return:
      type: TinyLife.NeedType
    content.vb: Public Shared ReadOnly Entertainment As NeedType
- uid: TinyLife.NeedType.Name
  commentId: F:TinyLife.NeedType.Name
  id: Name
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NeedType.Name
  fullName: TinyLife.NeedType.Name
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Need.cs
    startLine: 151
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe name of this need.\nUsed for <xref href=\"TinyLife.Localization\" data-throw-if-not-resolved=\"false\"></xref> purposes and saving to disk.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.NeedType.PassiveReduction
  commentId: F:TinyLife.NeedType.PassiveReduction
  id: PassiveReduction
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: PassiveReduction
  nameWithType: NeedType.PassiveReduction
  fullName: TinyLife.NeedType.PassiveReduction
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PassiveReduction
    path: ../TinyLife/Need.cs
    startLine: 155
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe amount that a need instance&apos;s <xref href=\"TinyLife.Need.Value\" data-throw-if-not-resolved=\"false\"></xref> is reduced by automatically every update frame\n"
  example: []
  syntax:
    content: public readonly Func<Person, float> PassiveReduction
    return:
      type: System.Func{TinyLife.Objects.Person,System.Single}
    content.vb: Public ReadOnly PassiveReduction As Func(Of Person, Single)
- uid: TinyLife.NeedType.NeedLowAction
  commentId: F:TinyLife.NeedType.NeedLowAction
  id: NeedLowAction
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: NeedLowAction
  nameWithType: NeedType.NeedLowAction
  fullName: TinyLife.NeedType.NeedLowAction
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NeedLowAction
    path: ../TinyLife/Need.cs
    startLine: 159
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref> that is constructed and executed when this need type&apos;s <xref href=\"TinyLife.Need.Value\" data-throw-if-not-resolved=\"false\"></xref> is very low\n"
  example: []
  syntax:
    content: public readonly Func<Person, ActionType> NeedLowAction
    return:
      type: System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType}
    content.vb: Public ReadOnly NeedLowAction As Func(Of Person, ActionType)
- uid: TinyLife.NeedType.NeedLowTime
  commentId: F:TinyLife.NeedType.NeedLowTime
  id: NeedLowTime
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: NeedLowTime
  nameWithType: NeedType.NeedLowTime
  fullName: TinyLife.NeedType.NeedLowTime
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: NeedLowTime
    path: ../TinyLife/Need.cs
    startLine: 163
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe amount of in-game time that needs to pass until <xref href=\"TinyLife.NeedType.NeedLowAction\" data-throw-if-not-resolved=\"false\"></xref> is constructed and enqueued\n"
  example: []
  syntax:
    content: public readonly Func<Person, TimeSpan> NeedLowTime
    return:
      type: System.Func{TinyLife.Objects.Person,System.TimeSpan}
    content.vb: Public ReadOnly NeedLowTime As Func(Of Person, TimeSpan)
- uid: TinyLife.NeedType.SolveImportance
  commentId: F:TinyLife.NeedType.SolveImportance
  id: SolveImportance
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: SolveImportance
  nameWithType: NeedType.SolveImportance
  fullName: TinyLife.NeedType.SolveImportance
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SolveImportance
    path: ../TinyLife/Need.cs
    startLine: 168
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe priority for solving this need over other needs, where higher numbers represent a more urgent need.\nThis value defaults to 0, meaning it has no special importance.\n"
  example: []
  syntax:
    content: public readonly float SolveImportance
    return:
      type: System.Single
    content.vb: Public ReadOnly SolveImportance As Single
- uid: TinyLife.NeedType.SolvePercentage
  commentId: F:TinyLife.NeedType.SolvePercentage
  id: SolvePercentage
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: SolvePercentage
  nameWithType: NeedType.SolvePercentage
  fullName: TinyLife.NeedType.SolvePercentage
  type: Field
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SolvePercentage
    path: ../TinyLife/Need.cs
    startLine: 172
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe percentage that this need has to be at or below for it to be auto-solved based on <xref href=\"TinyLife.Actions.ActionType.AiSettings.SolvedNeeds\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly float SolvePercentage
    return:
      type: System.Single
    content.vb: Public ReadOnly SolvePercentage As Single
- uid: TinyLife.NeedType.SourceString
  commentId: P:TinyLife.NeedType.SourceString
  id: SourceString
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: NeedType.SourceString
  fullName: TinyLife.NeedType.SourceString
  type: Property
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SourceString
    path: ../TinyLife/Need.cs
    startLine: 174
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA (localized) string that is displayed when hovering over an <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that has this source\n"
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.NeedType.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.NeedType.#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType},System.Func{TinyLife.Objects.Person,System.TimeSpan},System.Single,System.Single)
  commentId: M:TinyLife.NeedType.#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType},System.Func{TinyLife.Objects.Person,System.TimeSpan},System.Single,System.Single)
  id: '#ctor(System.String,System.Func{TinyLife.Objects.Person,System.Single},System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType},System.Func{TinyLife.Objects.Person,System.TimeSpan},System.Single,System.Single)'
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: NeedType(string, Func<Person, float>, Func<Person, ActionType>, Func<Person, TimeSpan>, float, float)
  nameWithType: NeedType.NeedType(string, Func<Person, float>, Func<Person, ActionType>, Func<Person, TimeSpan>, float, float)
  fullName: TinyLife.NeedType.NeedType(string, System.Func<TinyLife.Objects.Person, float>, System.Func<TinyLife.Objects.Person, TinyLife.Actions.ActionType>, System.Func<TinyLife.Objects.Person, System.TimeSpan>, float, float)
  type: Constructor
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Need.cs
    startLine: 185
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nInstantiates a new need type with the given settings\n"
  example: []
  syntax:
    content: public NeedType(string name, Func<Person, float> passiveReduction, Func<Person, ActionType> needLowAction = null, Func<Person, TimeSpan> needLowTime = null, float solveImportance = 0, float solvePercentage = 0.5)
    parameters:
    - id: name
      type: System.String
      description: The name of this need
    - id: passiveReduction
      type: System.Func{TinyLife.Objects.Person,System.Single}
      description: The amount that this need instance&apos;s <xref href="TinyLife.Need.Value" data-throw-if-not-resolved="false"></xref> is reduced by automatically every update frame
    - id: needLowAction
      type: System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType}
      description: The action that is executed when this need&apos;s value is very low
    - id: needLowTime
      type: System.Func{TinyLife.Objects.Person,System.TimeSpan}
      description: The amount of in-game time until <code data-dev-comment-type="paramref" class="paramref">needLowAction</code> is enqueued
    - id: solveImportance
      type: System.Single
      description: The priority for solving this need over other needs, where higher numbers are more urgent
    - id: solvePercentage
      type: System.Single
      description: The percentage that this need has to be at or below for it to be auto-solved based on <xref href="TinyLife.Actions.ActionType.AiSettings.SolvedNeeds" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(name As String, passiveReduction As Func(Of Person, Single), needLowAction As Func(Of Person, ActionType) = Nothing, needLowTime As Func(Of Person, TimeSpan) = Nothing, solveImportance As Single = 0, solvePercentage As Single = 0.5)
  overload: TinyLife.NeedType.#ctor*
  nameWithType.vb: NeedType.New(String, Func(Of Person, Single), Func(Of Person, ActionType), Func(Of Person, TimeSpan), Single, Single)
  fullName.vb: TinyLife.NeedType.New(String, System.Func(Of TinyLife.Objects.Person, Single), System.Func(Of TinyLife.Objects.Person, TinyLife.Actions.ActionType), System.Func(Of TinyLife.Objects.Person, System.TimeSpan), Single, Single)
  name.vb: New(String, Func(Of Person, Single), Func(Of Person, ActionType), Func(Of Person, TimeSpan), Single, Single)
- uid: TinyLife.NeedType.Register(TinyLife.NeedType)
  commentId: M:TinyLife.NeedType.Register(TinyLife.NeedType)
  id: Register(TinyLife.NeedType)
  parent: TinyLife.NeedType
  langs:
  - csharp
  - vb
  name: Register(NeedType)
  nameWithType: NeedType.Register(NeedType)
  fullName: TinyLife.NeedType.Register(TinyLife.NeedType)
  type: Method
  source:
    remote:
      path: TinyLife/Need.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/Need.cs
    startLine: 199
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nRegister the <xref href=\"TinyLife.NeedType\" data-throw-if-not-resolved=\"false\"></xref> specified to the <xref href=\"TinyLife.NeedType.Types\" data-throw-if-not-resolved=\"false\"></xref> dictionary\n"
  example: []
  syntax:
    content: public static NeedType Register(NeedType type)
    parameters:
    - id: type
      type: TinyLife.NeedType
      description: The need type to register
    return:
      type: TinyLife.NeedType
      description: The need typep passed, for chaining
    content.vb: Public Shared Function Register(type As NeedType) As NeedType
  overload: TinyLife.NeedType.Register*
references:
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.NeedType.Register(TinyLife.NeedType)
  commentId: M:TinyLife.NeedType.Register(TinyLife.NeedType)
  name: Register(NeedType)
  nameWithType: NeedType.Register(NeedType)
  fullName: TinyLife.NeedType.Register(TinyLife.NeedType)
  spec.csharp:
  - uid: TinyLife.NeedType.Register(TinyLife.NeedType)
    name: Register
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: )
  spec.vb:
  - uid: TinyLife.NeedType.Register(TinyLife.NeedType)
    name: Register
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.NeedType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<NeedType>(NeedType)
  nameWithType: Extensions.JsonCopy<NeedType>(NeedType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.NeedType>(TinyLife.NeedType)
  nameWithType.vb: Extensions.JsonCopy(Of NeedType)(NeedType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.NeedType)(TinyLife.NeedType)
  name.vb: JsonCopy(Of NeedType)(NeedType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.NeedType)
    name: JsonCopy
  - name: <
  - uid: TinyLife.NeedType
    name: NeedType
  - name: '>'
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.NeedType)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
  - name: )
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.Collections.ObjectModel.ReadOnlyCollection{TinyLife.NeedType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{TinyLife.NeedType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<NeedType>
  nameWithType: ReadOnlyCollection<NeedType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<TinyLife.NeedType>
  nameWithType.vb: ReadOnlyCollection(Of NeedType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of TinyLife.NeedType)
  name.vb: ReadOnlyCollection(Of NeedType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: TinyLife.NeedType
    name: NeedType
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.NeedType
  commentId: T:TinyLife.NeedType
  parent: TinyLife
  name: NeedType
  nameWithType: NeedType
  fullName: TinyLife.NeedType
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Need.Value
  commentId: P:TinyLife.Need.Value
  name: Value
  nameWithType: Need.Value
  fullName: TinyLife.Need.Value
- uid: System.Func{TinyLife.Objects.Person,System.Single}
  commentId: T:System.Func{TinyLife.Objects.Person,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Person, float>
  nameWithType: Func<Person, float>
  fullName: System.Func<TinyLife.Objects.Person, float>
  nameWithType.vb: Func(Of Person, Single)
  fullName.vb: System.Func(Of TinyLife.Objects.Person, Single)
  name.vb: Func(Of Person, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType}
  commentId: T:System.Func{TinyLife.Objects.Person,TinyLife.Actions.ActionType}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Person, ActionType>
  nameWithType: Func<Person, ActionType>
  fullName: System.Func<TinyLife.Objects.Person, TinyLife.Actions.ActionType>
  nameWithType.vb: Func(Of Person, ActionType)
  fullName.vb: System.Func(Of TinyLife.Objects.Person, TinyLife.Actions.ActionType)
  name.vb: Func(Of Person, ActionType)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: TinyLife.NeedType.NeedLowAction
  commentId: F:TinyLife.NeedType.NeedLowAction
  name: NeedLowAction
  nameWithType: NeedType.NeedLowAction
  fullName: TinyLife.NeedType.NeedLowAction
- uid: System.Func{TinyLife.Objects.Person,System.TimeSpan}
  commentId: T:System.Func{TinyLife.Objects.Person,System.TimeSpan}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Person, TimeSpan>
  nameWithType: Func<Person, TimeSpan>
  fullName: System.Func<TinyLife.Objects.Person, System.TimeSpan>
  nameWithType.vb: Func(Of Person, TimeSpan)
  fullName.vb: System.Func(Of TinyLife.Objects.Person, System.TimeSpan)
  name.vb: Func(Of Person, TimeSpan)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  commentId: F:TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  name: SolvedNeeds
  nameWithType: ActionType.AiSettings.SolvedNeeds
  fullName: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
- uid: TinyLife.NeedType.SourceString*
  commentId: Overload:TinyLife.NeedType.SourceString
  name: SourceString
  nameWithType: NeedType.SourceString
  fullName: TinyLife.NeedType.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.NeedType.#ctor*
  commentId: Overload:TinyLife.NeedType.#ctor
  name: NeedType
  nameWithType: NeedType.NeedType
  fullName: TinyLife.NeedType.NeedType
  nameWithType.vb: NeedType.New
  fullName.vb: TinyLife.NeedType.New
  name.vb: New
- uid: TinyLife.NeedType.Types
  commentId: F:TinyLife.NeedType.Types
  name: Types
  nameWithType: NeedType.Types
  fullName: TinyLife.NeedType.Types
- uid: TinyLife.NeedType.Register*
  commentId: Overload:TinyLife.NeedType.Register
  name: Register
  nameWithType: NeedType.Register
  fullName: TinyLife.NeedType.Register
