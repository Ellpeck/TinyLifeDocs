### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.IGoalTriggerable
  commentId: T:TinyLife.Goals.IGoalTriggerable
  id: IGoalTriggerable
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.IGoalTriggerable.Trigger(System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable},System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  - TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  - TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  langs:
  - csharp
  - vb
  name: IGoalTriggerable
  nameWithType: IGoalTriggerable
  fullName: TinyLife.Goals.IGoalTriggerable
  type: Interface
  source:
    remote:
      path: TinyLife/Goals/IGoalTriggerable.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IGoalTriggerable
    path: ../TinyLife/Goals/IGoalTriggerable.cs
    startLine: 9
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nAn interface that classes like <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref> implement to allow for them or their <xref href=\"TinyLife.Goals.AutoTriggerGoal\" data-throw-if-not-resolved=\"false\"></xref> instances to be triggered by a <xref href=\"TinyLife.Goals.GoalTrigger\" data-throw-if-not-resolved=\"false\"></xref> that is associated with an object and a value.\n"
  example: []
  syntax:
    content: public interface IGoalTriggerable
    content.vb: Public Interface IGoalTriggerable
  extensionMethods:
  - TinyLife.Goals.IGoalTriggerable.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  commentId: M:TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  id: TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  parent: TinyLife.Goals.IGoalTriggerable
  langs:
  - csharp
  - vb
  name: TryTrigger(object, GoalTrigger, object)
  nameWithType: IGoalTriggerable.TryTrigger(object, GoalTrigger, object)
  fullName: TinyLife.Goals.IGoalTriggerable.TryTrigger(object, TinyLife.Goals.GoalTrigger, object)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/IGoalTriggerable.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TryTrigger
    path: ../TinyLife/Goals/IGoalTriggerable.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nTries to trigger this goal triggerable.\nTo call this method more easily, use <xref href=\"TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable%2cSystem.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> or one of its overloads.\n"
  example: []
  syntax:
    content: bool TryTrigger(object obj, GoalTrigger trigger, object value)
    parameters:
    - id: obj
      type: System.Object
      description: The object that triggered the given <code data-dev-comment-type="paramref" class="paramref">trigger</code>.
    - id: trigger
      type: TinyLife.Goals.GoalTrigger
      description: The goal trigger that is triggering this <xref href="TinyLife.Goals.IGoalTriggerable" data-throw-if-not-resolved="false"></xref>.
    - id: value
      type: System.Object
      description: The value that is associated with the trigger, which is usually an amount that a value has changed by, an amount of money, or similar.
    return:
      type: System.Boolean
      description: Whether this goal was successfully triggered.
    content.vb: Function TryTrigger(obj As Object, trigger As GoalTrigger, value As Object) As Boolean
  overload: TinyLife.Goals.IGoalTriggerable.TryTrigger*
  nameWithType.vb: IGoalTriggerable.TryTrigger(Object, GoalTrigger, Object)
  fullName.vb: TinyLife.Goals.IGoalTriggerable.TryTrigger(Object, TinyLife.Goals.GoalTrigger, Object)
  name.vb: TryTrigger(Object, GoalTrigger, Object)
- uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  commentId: M:TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  id: Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  parent: TinyLife.Goals.IGoalTriggerable
  langs:
  - csharp
  - vb
  name: Trigger(IGoalTriggerable, object, GoalTrigger, params object[])
  nameWithType: IGoalTriggerable.Trigger(IGoalTriggerable, object, GoalTrigger, params object[])
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, object, TinyLife.Goals.GoalTrigger, params object[])
  type: Method
  source:
    remote:
      path: TinyLife/Goals/IGoalTriggerable.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Trigger
    path: ../TinyLife/Goals/IGoalTriggerable.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nTriggers all auto-triggered goals with the specified type constraint in the given <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen calling this method, it should ideally be called on a specific subclass like <xref href=\"TinyLife.Goals.AmountGoal\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Goals.ConditionedGoal\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Goals.DistinctGoal\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen calling this method for a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>, their <xref href=\"TinyLife.Objects.Person.GetCurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> should be used.\n"
  example: []
  syntax:
    content: public static bool Trigger(IGoalTriggerable set, object obj, GoalTrigger trigger, params object[] values)
    parameters:
    - id: set
      type: TinyLife.Goals.IGoalTriggerable
      description: The goal set to search for auto-triggered goals
    - id: obj
      type: System.Object
      description: The object that triggered the given <code data-dev-comment-type="paramref" class="paramref">trigger</code>.
    - id: trigger
      type: TinyLife.Goals.GoalTrigger
      description: The goal trigger that is triggering this <xref href="TinyLife.Goals.IGoalTriggerable" data-throw-if-not-resolved="false"></xref>.
    - id: values
      type: System.Object[]
      description: The values that is associated with the trigger, which is usually an amount that a value has changed by, an amount of money, or similar. The values will be passed individually to <xref href="TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Whether any goal was successfully triggered.
    content.vb: Public Shared Function Trigger([set] As IGoalTriggerable, obj As Object, trigger As GoalTrigger, ParamArray values As Object()) As Boolean
  overload: TinyLife.Goals.IGoalTriggerable.Trigger*
  nameWithType.vb: IGoalTriggerable.Trigger(IGoalTriggerable, Object, GoalTrigger, ParamArray Object())
  fullName.vb: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, Object, TinyLife.Goals.GoalTrigger, ParamArray Object())
  name.vb: Trigger(IGoalTriggerable, Object, GoalTrigger, ParamArray Object())
- uid: TinyLife.Goals.IGoalTriggerable.Trigger(System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable},System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  commentId: M:TinyLife.Goals.IGoalTriggerable.Trigger(System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable},System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  id: Trigger(System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable},System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  parent: TinyLife.Goals.IGoalTriggerable
  langs:
  - csharp
  - vb
  name: Trigger(IEnumerable<IGoalTriggerable>, object, GoalTrigger, params object[])
  nameWithType: IGoalTriggerable.Trigger(IEnumerable<IGoalTriggerable>, object, GoalTrigger, params object[])
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger(System.Collections.Generic.IEnumerable<TinyLife.Goals.IGoalTriggerable>, object, TinyLife.Goals.GoalTrigger, params object[])
  type: Method
  source:
    remote:
      path: TinyLife/Goals/IGoalTriggerable.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Trigger
    path: ../TinyLife/Goals/IGoalTriggerable.cs
    startLine: 55
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nTriggers all auto-triggered goals with the specified type constraint in the given set of <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref> instances.\nWhen calling this method, it should ideally be called on a specific subclass like <xref href=\"TinyLife.Goals.AmountGoal\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Goals.ConditionedGoal\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Goals.DistinctGoal\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen calling this method for a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>, their <xref href=\"TinyLife.Objects.Person.GetCurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> should be used.\n"
  example: []
  syntax:
    content: public static bool Trigger(IEnumerable<IGoalTriggerable> sets, object obj, GoalTrigger trigger, params object[] values)
    parameters:
    - id: sets
      type: System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable}
      description: The set of goal set instances to search for auto-triggered goals
    - id: obj
      type: System.Object
      description: The object that triggered the given <code data-dev-comment-type="paramref" class="paramref">trigger</code>.
    - id: trigger
      type: TinyLife.Goals.GoalTrigger
      description: The goal trigger that is triggering this <xref href="TinyLife.Goals.IGoalTriggerable" data-throw-if-not-resolved="false"></xref>.
    - id: values
      type: System.Object[]
      description: The values that is associated with the trigger, which is usually an amount that a value has changed by, an amount of money, or similar. The values will be passed individually to <xref href="TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Whether any goal was successfully triggered.
    content.vb: Public Shared Function Trigger(sets As IEnumerable(Of IGoalTriggerable), obj As Object, trigger As GoalTrigger, ParamArray values As Object()) As Boolean
  overload: TinyLife.Goals.IGoalTriggerable.Trigger*
  nameWithType.vb: IGoalTriggerable.Trigger(IEnumerable(Of IGoalTriggerable), Object, GoalTrigger, ParamArray Object())
  fullName.vb: TinyLife.Goals.IGoalTriggerable.Trigger(System.Collections.Generic.IEnumerable(Of TinyLife.Goals.IGoalTriggerable), Object, TinyLife.Goals.GoalTrigger, ParamArray Object())
  name.vb: Trigger(IEnumerable(Of IGoalTriggerable), Object, GoalTrigger, ParamArray Object())
references:
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.AutoTriggerGoal
  commentId: T:TinyLife.Goals.AutoTriggerGoal
  parent: TinyLife.Goals
  name: AutoTriggerGoal
  nameWithType: AutoTriggerGoal
  fullName: TinyLife.Goals.AutoTriggerGoal
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
- uid: TinyLife.Goals.IGoalTriggerable.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<IGoalTriggerable>(IGoalTriggerable)
  nameWithType: Extensions.JsonCopy<IGoalTriggerable>(IGoalTriggerable)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.IGoalTriggerable>(TinyLife.Goals.IGoalTriggerable)
  nameWithType.vb: Extensions.JsonCopy(Of IGoalTriggerable)(IGoalTriggerable)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.IGoalTriggerable)(TinyLife.Goals.IGoalTriggerable)
  name.vb: JsonCopy(Of IGoalTriggerable)(IGoalTriggerable)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.IGoalTriggerable)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.IGoalTriggerable)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: )
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  commentId: M:TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Trigger(IGoalTriggerable, object, GoalTrigger, params object[])
  nameWithType: IGoalTriggerable.Trigger(IGoalTriggerable, object, GoalTrigger, params object[])
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, object, TinyLife.Goals.GoalTrigger, params object[])
  nameWithType.vb: IGoalTriggerable.Trigger(IGoalTriggerable, Object, GoalTrigger, ParamArray Object())
  fullName.vb: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable, Object, TinyLife.Goals.GoalTrigger, ParamArray Object())
  name.vb: Trigger(IGoalTriggerable, Object, GoalTrigger, ParamArray Object())
  spec.csharp:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.IGoalTriggerable.Trigger(TinyLife.Goals.IGoalTriggerable,System.Object,TinyLife.Goals.GoalTrigger,System.Object[])
    name: Trigger
  - name: (
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Goals.IGoalTriggerable
  commentId: T:TinyLife.Goals.IGoalTriggerable
  parent: TinyLife.Goals
  name: IGoalTriggerable
  nameWithType: IGoalTriggerable
  fullName: TinyLife.Goals.IGoalTriggerable
- uid: TinyLife.Goals.IGoalTriggerable.TryTrigger*
  commentId: Overload:TinyLife.Goals.IGoalTriggerable.TryTrigger
  name: TryTrigger
  nameWithType: IGoalTriggerable.TryTrigger
  fullName: TinyLife.Goals.IGoalTriggerable.TryTrigger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Goals.AmountGoal
  commentId: T:TinyLife.Goals.AmountGoal
  name: AmountGoal
  nameWithType: AmountGoal
  fullName: TinyLife.Goals.AmountGoal
- uid: TinyLife.Goals.ConditionedGoal
  commentId: T:TinyLife.Goals.ConditionedGoal
  name: ConditionedGoal
  nameWithType: ConditionedGoal
  fullName: TinyLife.Goals.ConditionedGoal
- uid: TinyLife.Goals.DistinctGoal
  commentId: T:TinyLife.Goals.DistinctGoal
  name: DistinctGoal
  nameWithType: DistinctGoal
  fullName: TinyLife.Goals.DistinctGoal
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects.Person.GetCurrentGoals
  commentId: M:TinyLife.Objects.Person.GetCurrentGoals
  name: GetCurrentGoals()
  nameWithType: Person.GetCurrentGoals()
  fullName: TinyLife.Objects.Person.GetCurrentGoals()
  spec.csharp:
  - uid: TinyLife.Objects.Person.GetCurrentGoals
    name: GetCurrentGoals
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.GetCurrentGoals
    name: GetCurrentGoals
  - name: (
  - name: )
- uid: TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  commentId: M:TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: TryTrigger(object, GoalTrigger, object)
  nameWithType: IGoalTriggerable.TryTrigger(object, GoalTrigger, object)
  fullName: TinyLife.Goals.IGoalTriggerable.TryTrigger(object, TinyLife.Goals.GoalTrigger, object)
  nameWithType.vb: IGoalTriggerable.TryTrigger(Object, GoalTrigger, Object)
  fullName.vb: TinyLife.Goals.IGoalTriggerable.TryTrigger(Object, TinyLife.Goals.GoalTrigger, Object)
  name.vb: TryTrigger(Object, GoalTrigger, Object)
  spec.csharp:
  - uid: TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
    name: TryTrigger
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.IGoalTriggerable.TryTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
    name: TryTrigger
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Goals.IGoalTriggerable.Trigger*
  commentId: Overload:TinyLife.Goals.IGoalTriggerable.Trigger
  name: Trigger
  nameWithType: IGoalTriggerable.Trigger
  fullName: TinyLife.Goals.IGoalTriggerable.Trigger
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Goals.IGoalTriggerable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IGoalTriggerable>
  nameWithType: IEnumerable<IGoalTriggerable>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Goals.IGoalTriggerable>
  nameWithType.vb: IEnumerable(Of IGoalTriggerable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Goals.IGoalTriggerable)
  name.vb: IEnumerable(Of IGoalTriggerable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.IGoalTriggerable
    name: IGoalTriggerable
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
