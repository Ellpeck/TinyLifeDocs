### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Particle
  commentId: T:TinyLife.Objects.Particle
  id: Particle
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Particle.#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2)
  - TinyLife.Objects.Particle.#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2)
  - TinyLife.Objects.Particle.Animation
  - TinyLife.Objects.Particle.CameraMotion
  - TinyLife.Objects.Particle.CameraOffset
  - TinyLife.Objects.Particle.Color
  - TinyLife.Objects.Particle.DepthOffset
  - TinyLife.Objects.Particle.DepthPosOffset
  - TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Objects.Particle.DrawOffset
  - TinyLife.Objects.Particle.ForceOutside
  - TinyLife.Objects.Particle.Friction
  - TinyLife.Objects.Particle.Gravity
  - TinyLife.Objects.Particle.IgnoreParentDrawPos
  - TinyLife.Objects.Particle.Map
  - TinyLife.Objects.Particle.Motion
  - TinyLife.Objects.Particle.ParentInfo
  - TinyLife.Objects.Particle.Position
  - TinyLife.Objects.Particle.Scale
  - TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  - TinyLife.Objects.Particle.SpriteEffects
  - TinyLife.Objects.Particle.TimeLived
  - TinyLife.Objects.Particle.TimeToLive
  - TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Objects.Particle.UpdateWhenPaused
  langs:
  - csharp
  - vb
  name: Particle
  nameWithType: Particle
  fullName: TinyLife.Objects.Particle
  type: Class
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Particle
    path: ../TinyLife/Objects/Particle.cs
    startLine: 17
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA particle is a <xref href=\"MLEM.Animations.SpriteAnimation\" data-throw-if-not-resolved=\"false\"></xref> that can be moved and displayed in world space.\nA particle is simply a <xref href=\"TinyLife.Objects.MapObject\" data-throw-if-not-resolved=\"false\"></xref> that does not collide or interact directly with the world, but has all of the same properties.\nA new particle can be added for display using <xref href=\"TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2%2cSystem.Func%7bMicrosoft.Xna.Framework.Vector2%2cTinyLife.Objects.Particle%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class Particle
    content.vb: Public Class Particle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Particle.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Objects.Particle.Map
  commentId: P:TinyLife.Objects.Particle.Map
  id: Map
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Particle.Map
  fullName: TinyLife.Objects.Particle.Map
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Map
    path: ../TinyLife/Objects/Particle.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe map that this particle is on.\nNote that this always returns <xref href=\"TinyLife.GameImpl.Map\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected static Map Map { get; }
    parameters: []
    return:
      type: TinyLife.World.Map
    content.vb: Protected Shared ReadOnly Property Map As Map
  overload: TinyLife.Objects.Particle.Map*
  modifiers.csharp:
  - protected
  - static
  - get
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: TinyLife.Objects.Particle.Friction
  commentId: F:TinyLife.Objects.Particle.Friction
  id: Friction
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Friction
  nameWithType: Particle.Friction
  fullName: TinyLife.Objects.Particle.Friction
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Friction
    path: ../TinyLife/Objects/Particle.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe friction that is applied to this particle&apos;s <xref href=\"TinyLife.Objects.Particle.Motion\" data-throw-if-not-resolved=\"false\"></xref> every <xref href=\"TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> frame\n"
  example: []
  syntax:
    content: public Vector2 Friction
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Friction As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.TimeToLive
  commentId: F:TinyLife.Objects.Particle.TimeToLive
  id: TimeToLive
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: TimeToLive
  nameWithType: Particle.TimeToLive
  fullName: TinyLife.Objects.Particle.TimeToLive
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TimeToLive
    path: ../TinyLife/Objects/Particle.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe amount of real time that this particle should stay alive for until it disappears\n"
  example: []
  syntax:
    content: public TimeSpan TimeToLive
    return:
      type: System.TimeSpan
    content.vb: Public TimeToLive As TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Position
  commentId: F:TinyLife.Objects.Particle.Position
  id: Position
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Particle.Position
  fullName: TinyLife.Objects.Particle.Position
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Position
    path: ../TinyLife/Objects/Particle.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe position in the world of this particle\n"
  example: []
  syntax:
    content: public Vector2 Position
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Position As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Motion
  commentId: F:TinyLife.Objects.Particle.Motion
  id: Motion
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Motion
  nameWithType: Particle.Motion
  fullName: TinyLife.Objects.Particle.Motion
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Motion
    path: ../TinyLife/Objects/Particle.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe amount that this particle&apos;s <xref href=\"TinyLife.Objects.Particle.Position\" data-throw-if-not-resolved=\"false\"></xref> is modified by each <xref href=\"TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> frame\n"
  example: []
  syntax:
    content: public Vector2 Motion
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Motion As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.DepthPosOffset
  commentId: F:TinyLife.Objects.Particle.DepthPosOffset
  id: DepthPosOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: DepthPosOffset
  nameWithType: Particle.DepthPosOffset
  fullName: TinyLife.Objects.Particle.DepthPosOffset
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DepthPosOffset
    path: ../TinyLife/Objects/Particle.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe amount of tiles that this particle&apos;s depth display calculation is offset by, from its <xref href=\"TinyLife.Objects.Particle.Position\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Vector2 DepthPosOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public DepthPosOffset As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.DepthOffset
  commentId: F:TinyLife.Objects.Particle.DepthOffset
  id: DepthOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: DepthOffset
  nameWithType: Particle.DepthOffset
  fullName: TinyLife.Objects.Particle.DepthOffset
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DepthOffset
    path: ../TinyLife/Objects/Particle.cs
    startLine: 49
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA value that is passed to <xref href=\"TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> as the depth offset when the particle&apos;s depth is calculated.\n"
  example: []
  syntax:
    content: public float DepthOffset
    return:
      type: System.Single
    content.vb: Public DepthOffset As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.DrawOffset
  commentId: F:TinyLife.Objects.Particle.DrawOffset
  id: DrawOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: DrawOffset
  nameWithType: Particle.DrawOffset
  fullName: TinyLife.Objects.Particle.DrawOffset
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DrawOffset
    path: ../TinyLife/Objects/Particle.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe amount of tiles that this particle&apos;s display position is offset by, from its <xref href=\"TinyLife.Objects.Particle.Position\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Vector2 DrawOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public DrawOffset As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Scale
  commentId: F:TinyLife.Objects.Particle.Scale
  id: Scale
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Particle.Scale
  fullName: TinyLife.Objects.Particle.Scale
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Scale
    path: ../TinyLife/Objects/Particle.cs
    startLine: 57
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn <xref href=\"MLEM.Misc.Easings.Easing\" data-throw-if-not-resolved=\"false\"></xref> that determines how this particle&apos;s scale (display size) changes based on its <xref href=\"TinyLife.Objects.Particle.TimeToLive\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Objects.Particle.TimeLived\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Easings.Easing Scale
    return:
      type: MLEM.Misc.Easings.Easing
    content.vb: Public Scale As Easings.Easing
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Gravity
  commentId: F:TinyLife.Objects.Particle.Gravity
  id: Gravity
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: Particle.Gravity
  fullName: TinyLife.Objects.Particle.Gravity
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Gravity
    path: ../TinyLife/Objects/Particle.cs
    startLine: 61
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe particle&apos;s gravity, which determines how much its <xref href=\"TinyLife.Objects.Particle.Motion\" data-throw-if-not-resolved=\"false\"></xref> is affected every <xref href=\"TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> frame. Defaults to 0.\n"
  example: []
  syntax:
    content: public float Gravity
    return:
      type: System.Single
    content.vb: Public Gravity As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.CameraMotion
  commentId: F:TinyLife.Objects.Particle.CameraMotion
  id: CameraMotion
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: CameraMotion
  nameWithType: Particle.CameraMotion
  fullName: TinyLife.Objects.Particle.CameraMotion
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraMotion
    path: ../TinyLife/Objects/Particle.cs
    startLine: 67
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe motion that this particle&apos;s <xref href=\"TinyLife.Objects.Particle.CameraOffset\" data-throw-if-not-resolved=\"false\"></xref> is moved by every update frame.\nIf <xref href=\"TinyLife.Objects.Particle.Gravity\" data-throw-if-not-resolved=\"false\"></xref> is set, this value is modified by <xref href=\"TinyLife.Objects.Particle.Gravity\" data-throw-if-not-resolved=\"false\"></xref> every update frame as well.\nThis value is not affected by <xref href=\"TinyLife.Objects.Particle.Friction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Vector2 CameraMotion
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public CameraMotion As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.CameraOffset
  commentId: F:TinyLife.Objects.Particle.CameraOffset
  id: CameraOffset
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: CameraOffset
  nameWithType: Particle.CameraOffset
  fullName: TinyLife.Objects.Particle.CameraOffset
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraOffset
    path: ../TinyLife/Objects/Particle.cs
    startLine: 71
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe offset from this particle&apos;s <xref href=\"TinyLife.Objects.Particle.Position\" data-throw-if-not-resolved=\"false\"></xref> that is added in visual space only, using <xref href=\"TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Vector2 CameraOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public CameraOffset As Vector2
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.ParentInfo
  commentId: F:TinyLife.Objects.Particle.ParentInfo
  id: ParentInfo
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: ParentInfo
  nameWithType: Particle.ParentInfo
  fullName: TinyLife.Objects.Particle.ParentInfo
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ParentInfo
    path: ../TinyLife/Objects/Particle.cs
    startLine: 75
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA <xref href=\"TinyLife.Objects.Particle.ParentInfo\" data-throw-if-not-resolved=\"false\"></xref> that contains the object that this particle should be rendered in relation to.\n"
  example: []
  syntax:
    content: public ParentInfo ParentInfo
    return:
      type: TinyLife.Objects.ParentInfo
    content.vb: Public ParentInfo As ParentInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.IgnoreParentDrawPos
  commentId: F:TinyLife.Objects.Particle.IgnoreParentDrawPos
  id: IgnoreParentDrawPos
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: IgnoreParentDrawPos
  nameWithType: Particle.IgnoreParentDrawPos
  fullName: TinyLife.Objects.Particle.IgnoreParentDrawPos
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IgnoreParentDrawPos
    path: ../TinyLife/Objects/Particle.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis value indicates whether the visual position of the <xref href=\"TinyLife.Objects.Particle.ParentInfo\" data-throw-if-not-resolved=\"false\"></xref> should be ignored when drawing.\n"
  example: []
  syntax:
    content: public bool IgnoreParentDrawPos
    return:
      type: System.Boolean
    content.vb: Public IgnoreParentDrawPos As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.UpdateWhenPaused
  commentId: F:TinyLife.Objects.Particle.UpdateWhenPaused
  id: UpdateWhenPaused
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: UpdateWhenPaused
  nameWithType: Particle.UpdateWhenPaused
  fullName: TinyLife.Objects.Particle.UpdateWhenPaused
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UpdateWhenPaused
    path: ../TinyLife/Objects/Particle.cs
    startLine: 84
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThis value indicates whether this particle&apos;s <xref href=\"TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> method should still be called when the game is paused.\nThis should be set to true when spawning particles in build mode, as the game is paused during that time.\n"
  example: []
  syntax:
    content: public bool UpdateWhenPaused
    return:
      type: System.Boolean
    content.vb: Public UpdateWhenPaused As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Color
  commentId: F:TinyLife.Objects.Particle.Color
  id: Color
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Particle.Color
  fullName: TinyLife.Objects.Particle.Color
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Color
    path: ../TinyLife/Objects/Particle.cs
    startLine: 88
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe color to render this particle with, or <xref href=\"Microsoft.Xna.Framework.Color.White\" data-throw-if-not-resolved=\"false\"></xref> by default.\n"
  example: []
  syntax:
    content: public Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Color As Color
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.SpriteEffects
  commentId: F:TinyLife.Objects.Particle.SpriteEffects
  id: SpriteEffects
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: SpriteEffects
  nameWithType: Particle.SpriteEffects
  fullName: TinyLife.Objects.Particle.SpriteEffects
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpriteEffects
    path: ../TinyLife/Objects/Particle.cs
    startLine: 92
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe <xref href=\"TinyLife.Objects.Particle.SpriteEffects\" data-throw-if-not-resolved=\"false\"></xref> that should be applied when drawing this particle.\n"
  example: []
  syntax:
    content: public SpriteEffects SpriteEffects
    return:
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
    content.vb: Public SpriteEffects As SpriteEffects
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.ForceOutside
  commentId: F:TinyLife.Objects.Particle.ForceOutside
  id: ForceOutside
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: ForceOutside
  nameWithType: Particle.ForceOutside
  fullName: TinyLife.Objects.Particle.ForceOutside
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ForceOutside
    path: ../TinyLife/Objects/Particle.cs
    startLine: 97
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nWhether this particle should always be displayed as if it were outside (rather than in the room its <xref href=\"TinyLife.Objects.Particle.Position\" data-throw-if-not-resolved=\"false\"></xref> is in).\nThis field is used for particles like chimney smoke, which always draw above the room on the outside.\n"
  example: []
  syntax:
    content: public bool ForceOutside
    return:
      type: System.Boolean
    content.vb: Public ForceOutside As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Animation
  commentId: F:TinyLife.Objects.Particle.Animation
  id: Animation
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Animation
  nameWithType: Particle.Animation
  fullName: TinyLife.Objects.Particle.Animation
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Animation
    path: ../TinyLife/Objects/Particle.cs
    startLine: 102
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe <xref href=\"MLEM.Animations.SpriteAnimation\" data-throw-if-not-resolved=\"false\"></xref> that this particle displays over its lifespan\n"
  example: []
  syntax:
    content: protected readonly SpriteAnimation Animation
    return:
      type: MLEM.Animations.SpriteAnimation
    content.vb: Protected ReadOnly Animation As SpriteAnimation
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: TinyLife.Objects.Particle.TimeLived
  commentId: F:TinyLife.Objects.Particle.TimeLived
  id: TimeLived
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: TimeLived
  nameWithType: Particle.TimeLived
  fullName: TinyLife.Objects.Particle.TimeLived
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TimeLived
    path: ../TinyLife/Objects/Particle.cs
    startLine: 107
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe amount of real time that this particle has lived for.\nThis time span will always be lower than or equal to <xref href=\"TinyLife.Objects.Particle.TimeToLive\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected TimeSpan TimeLived
    return:
      type: System.TimeSpan
    content.vb: Protected TimeLived As TimeSpan
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TinyLife.Objects.Particle.#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Objects.Particle.#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2)
  id: '#ctor(MLEM.Textures.TextureRegion,System.TimeSpan,Microsoft.Xna.Framework.Vector2)'
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Particle(TextureRegion, TimeSpan, Vector2)
  nameWithType: Particle.Particle(TextureRegion, TimeSpan, Vector2)
  fullName: TinyLife.Objects.Particle.Particle(MLEM.Textures.TextureRegion, System.TimeSpan, Microsoft.Xna.Framework.Vector2)
  type: Constructor
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Objects/Particle.cs
    startLine: 115
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nCreates a new particle with the given settings\n"
  example: []
  syntax:
    content: public Particle(TextureRegion region, TimeSpan timeToLive, Vector2 position)
    parameters:
    - id: region
      type: MLEM.Textures.TextureRegion
      description: The texture that this particle should display with
    - id: timeToLive
      type: System.TimeSpan
      description: The amount of real time that this particle should stay alive for
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that this particle should have, in world space
    content.vb: Public Sub New(region As TextureRegion, timeToLive As TimeSpan, position As Vector2)
  overload: TinyLife.Objects.Particle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Objects.Particle.#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2)
  id: '#ctor(MLEM.Animations.SpriteAnimation,System.TimeSpan,Microsoft.Xna.Framework.Vector2)'
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Particle(SpriteAnimation, TimeSpan, Vector2)
  nameWithType: Particle.Particle(SpriteAnimation, TimeSpan, Vector2)
  fullName: TinyLife.Objects.Particle.Particle(MLEM.Animations.SpriteAnimation, System.TimeSpan, Microsoft.Xna.Framework.Vector2)
  type: Constructor
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Objects/Particle.cs
    startLine: 124
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nCreates a new particle with the given settings\n"
  example: []
  syntax:
    content: public Particle(SpriteAnimation animation, TimeSpan timeToLive, Vector2 position)
    parameters:
    - id: animation
      type: MLEM.Animations.SpriteAnimation
      description: The animation that this particle should display with
    - id: timeToLive
      type: System.TimeSpan
      description: The amount of real time that this particle should stay alive for
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that this particle should have, in world space
    content.vb: Public Sub New(animation As SpriteAnimation, timeToLive As TimeSpan, position As Vector2)
  overload: TinyLife.Objects.Particle.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: Particle.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Objects/Particle.cs
    startLine: 136
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe update method, which is called every update frame by the underlying <xref href=\"TinyLife.Objects.Particle.Map\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last call
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Objects.Particle.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Particle.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Particle.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/Objects/Particle.cs
    startLine: 162
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nDraws this particle on the current <xref href=\"TinyLife.Objects.Particle.Map\" data-throw-if-not-resolved=\"false\"></xref>, at the current <xref href=\"TinyLife.Objects.Particle.Position\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The current time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch)
  overload: TinyLife.Objects.Particle.Draw*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  commentId: M:TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  id: Spawn(Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  parent: TinyLife.Objects.Particle
  langs:
  - csharp
  - vb
  name: Spawn(Vector2, Func<Vector2, Particle>)
  nameWithType: Particle.Spawn(Vector2, Func<Vector2, Particle>)
  fullName: TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2, System.Func<Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle>)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Particle.cs
      branch: 0.29.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Spawn
    path: ../TinyLife/Objects/Particle.cs
    startLine: 178
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nSpawns a new particle with the given settings.\nThe particle is only spawned if the resulting display position would currently be visible for the <xref href=\"TinyLife.GameImpl.Camera\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Spawn(Vector2 position, Func<Vector2, Particle> particleFunction)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position in world space that the particle should be spawned at.
    - id: particleFunction
      type: System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle}
      description: A function that is invoked if the particle can be spawned.
    content.vb: Public Shared Sub Spawn(position As Vector2, particleFunction As Func(Of Vector2, Particle))
  overload: TinyLife.Objects.Particle.Spawn*
  nameWithType.vb: Particle.Spawn(Vector2, Func(Of Vector2, Particle))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2, System.Func(Of Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle))
  name.vb: Spawn(Vector2, Func(Of Vector2, Particle))
references:
- uid: MLEM.Animations.SpriteAnimation
  commentId: T:MLEM.Animations.SpriteAnimation
  parent: MLEM.Animations
  isExternal: true
  name: SpriteAnimation
  nameWithType: SpriteAnimation
  fullName: MLEM.Animations.SpriteAnimation
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  commentId: M:TinyLife.Objects.Particle.Spawn(Microsoft.Xna.Framework.Vector2,System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle})
  isExternal: true
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Objects.Particle.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Particle>()
  nameWithType: Extensions.JsonCopy<Particle>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Particle>()
  nameWithType.vb: Extensions.JsonCopy(Of Particle)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Particle)()
  name.vb: JsonCopy(Of Particle)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Particle>
    nameWithType: Extensions.JsonCopy<Particle>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Particle>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Particle)
    nameWithType: Extensions.JsonCopy(Of Particle)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Particle)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Animations
  commentId: N:MLEM.Animations
  isExternal: true
  name: MLEM.Animations
  nameWithType: MLEM.Animations
  fullName: MLEM.Animations
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.GameImpl.Map
  commentId: P:TinyLife.GameImpl.Map
  isExternal: true
- uid: TinyLife.Objects.Particle.Map*
  commentId: Overload:TinyLife.Objects.Particle.Map
  name: Map
  nameWithType: Particle.Map
  fullName: TinyLife.Objects.Particle.Map
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: TinyLife.Objects.Particle.Motion
  commentId: F:TinyLife.Objects.Particle.Motion
  isExternal: true
- uid: TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Particle.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Objects.Particle.Position
  commentId: F:TinyLife.Objects.Particle.Position
  isExternal: true
- uid: TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Map.GetDepth(Microsoft.Xna.Framework.Vector2,System.Single,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MLEM.Misc.Easings.Easing
  commentId: T:MLEM.Misc.Easings.Easing
  parent: MLEM.Misc
  isExternal: true
  name: Easings.Easing
  nameWithType: Easings.Easing
  fullName: MLEM.Misc.Easings.Easing
- uid: TinyLife.Objects.Particle.TimeToLive
  commentId: F:TinyLife.Objects.Particle.TimeToLive
  isExternal: true
- uid: TinyLife.Objects.Particle.TimeLived
  commentId: F:TinyLife.Objects.Particle.TimeLived
  isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Objects.Particle.CameraOffset
  commentId: F:TinyLife.Objects.Particle.CameraOffset
  isExternal: true
- uid: TinyLife.Objects.Particle.Gravity
  commentId: F:TinyLife.Objects.Particle.Gravity
  isExternal: true
- uid: TinyLife.Objects.Particle.Friction
  commentId: F:TinyLife.Objects.Particle.Friction
  isExternal: true
- uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  isExternal: true
- uid: TinyLife.Objects.Particle.ParentInfo
  commentId: F:TinyLife.Objects.Particle.ParentInfo
  isExternal: true
- uid: TinyLife.Objects.ParentInfo
  commentId: T:TinyLife.Objects.ParentInfo
  parent: TinyLife.Objects
  name: ParentInfo
  nameWithType: ParentInfo
  fullName: TinyLife.Objects.ParentInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Xna.Framework.Color.White
  commentId: P:Microsoft.Xna.Framework.Color.White
  isExternal: true
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: TinyLife.Objects.Particle.SpriteEffects
  commentId: F:TinyLife.Objects.Particle.SpriteEffects
  isExternal: true
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteEffects
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteEffects
  nameWithType: SpriteEffects
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
- uid: TinyLife.Objects.Particle.#ctor*
  commentId: Overload:TinyLife.Objects.Particle.#ctor
  name: Particle
  nameWithType: Particle.Particle
  fullName: TinyLife.Objects.Particle.Particle
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: TinyLife.Objects.Particle.Map
  commentId: P:TinyLife.Objects.Particle.Map
  isExternal: true
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  isExternal: true
- uid: TinyLife.Objects.Particle.Update*
  commentId: Overload:TinyLife.Objects.Particle.Update
  name: Update
  nameWithType: Particle.Update
  fullName: TinyLife.Objects.Particle.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.Objects.Particle.Draw*
  commentId: Overload:TinyLife.Objects.Particle.Draw
  name: Draw
  nameWithType: Particle.Draw
  fullName: TinyLife.Objects.Particle.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  isExternal: true
- uid: TinyLife.Objects.Particle.Spawn*
  commentId: Overload:TinyLife.Objects.Particle.Spawn
  name: Spawn
  nameWithType: Particle.Spawn
  fullName: TinyLife.Objects.Particle.Spawn
- uid: System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle}
  commentId: T:System.Func{Microsoft.Xna.Framework.Vector2,TinyLife.Objects.Particle}
  parent: System
  definition: System.Func`2
  name: Func<Vector2, Particle>
  nameWithType: Func<Vector2, Particle>
  fullName: System.Func<Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle>
  nameWithType.vb: Func(Of Vector2, Particle)
  fullName.vb: System.Func(Of Microsoft.Xna.Framework.Vector2, TinyLife.Objects.Particle)
  name.vb: Func(Of Vector2, Particle)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Particle
    name: Particle
    nameWithType: Particle
    fullName: TinyLife.Objects.Particle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Particle
    name: Particle
    nameWithType: Particle
    fullName: TinyLife.Objects.Particle
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
