### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  id: Roof
  parent: TinyLife.World
  children:
  - TinyLife.World.Roof.#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,System.Nullable{System.Int32},MLEM.Misc.Direction2,System.Int32[])
  - TinyLife.World.Roof.Area
  - TinyLife.World.Roof.Color
  - TinyLife.World.Roof.Colors
  - TinyLife.World.Roof.Floor
  - TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room,TinyLife.Tools.UndoableAction)
  - TinyLife.World.Roof.GetPrice
  - TinyLife.World.Roof.GetRoofAttachedFurnitureOffset(Microsoft.Xna.Framework.Vector2)
  - TinyLife.World.Roof.Rotation
  - TinyLife.World.Roof.Type
  - TinyLife.World.Roof.Validate
  - TinyLife.World.Roof.Wallpaper
  langs:
  - csharp
  - vb
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
  type: Class
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Roof
    path: ../TinyLife/World/Roof.cs
    startLine: 259
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA roof is an object on a <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> that is on a higher level and cannot be interacted with by people\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Roof
    content.vb: >-
      <DataContract>

      Public Class Roof
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Roof.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.Type
  commentId: F:TinyLife.World.Roof.Type
  id: Type
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Roof.Type
  fullName: TinyLife.World.Roof.Type
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Type
    path: ../TinyLife/World/Roof.cs
    startLine: 266
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe <xref href=\"TinyLife.World.RoofType\" data-throw-if-not-resolved=\"false\"></xref> that this roof has\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly RoofType Type
    return:
      type: TinyLife.World.RoofType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As RoofType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.Color
  commentId: F:TinyLife.World.Roof.Color
  id: Color
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Roof.Color
  fullName: TinyLife.World.Roof.Color
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Color
    path: ../TinyLife/World/Roof.cs
    startLine: 271
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe color index in in <xref href=\"TinyLife.Utilities.ColorScheme.WarmDark\" data-throw-if-not-resolved=\"false\"></xref> that this roof uses for its top\n"
  example: []
  syntax:
    content: >-
      [DataMember(EmitDefaultValue = false)]

      [Obsolete("Use the new Colors array instead")]

      public readonly int Color
    return:
      type: System.Int32
    content.vb: >-
      <DataMember(EmitDefaultValue:=False)>

      <Obsolete("Use the new Colors array instead")>

      Public ReadOnly Color As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: EmitDefaultValue
      type: System.Boolean
      value: false
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use the new Colors array instead
- uid: TinyLife.World.Roof.Colors
  commentId: P:TinyLife.World.Roof.Colors
  id: Colors
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: Roof.Colors
  fullName: TinyLife.World.Roof.Colors
  type: Property
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Colors
    path: ../TinyLife/World/Roof.cs
    startLine: 275
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe colors that this roof should have\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int[] Colors { get; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: >-
      <DataMember>

      Public Property Colors As Integer()
  overload: TinyLife.World.Roof.Colors*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.Rotation
  commentId: P:TinyLife.World.Roof.Rotation
  id: Rotation
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Roof.Rotation
  fullName: TinyLife.World.Roof.Rotation
  type: Property
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Rotation
    path: ../TinyLife/World/Roof.cs
    startLine: 281
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe rotation that this roof has.\nThis is only relevant for roofs that don&apos;t have the <xref href=\"TinyLife.World.RoofStyle.Flat\" data-throw-if-not-resolved=\"false\"></xref> style.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 Rotation { get; }
    parameters: []
    return:
      type: MLEM.Misc.Direction2
    content.vb: >-
      <DataMember>

      Public Property Rotation As Direction2
  overload: TinyLife.World.Roof.Rotation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.Area
  commentId: P:TinyLife.World.Roof.Area
  id: Area
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Roof.Area
  fullName: TinyLife.World.Roof.Area
  type: Property
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Area
    path: ../TinyLife/World/Roof.cs
    startLine: 286
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe area that this roof covers\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Rectangle Area { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: >-
      <DataMember>

      Public Property Area As Rectangle
  overload: TinyLife.World.Roof.Area*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.Floor
  commentId: P:TinyLife.World.Roof.Floor
  id: Floor
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: Roof.Floor
  fullName: TinyLife.World.Roof.Floor
  type: Property
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Floor
    path: ../TinyLife/World/Roof.cs
    startLine: 292
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe floor this roof is on.\nThis is an optional property for backwards compatibility, however it is internally expected to always be nonnull.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int? Floor { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember>

      Public Property Floor As Integer?
  overload: TinyLife.World.Roof.Floor*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.Wallpaper
  commentId: F:TinyLife.World.Roof.Wallpaper
  id: Wallpaper
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Wallpaper
  nameWithType: Roof.Wallpaper
  fullName: TinyLife.World.Roof.Wallpaper
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Wallpaper
    path: ../TinyLife/World/Roof.cs
    startLine: 299
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe <xref href=\"TinyLife.World.Roof.Wallpaper\" data-throw-if-not-resolved=\"false\"></xref> that is applied to this roof.\nThis defaults to the Default wallpaper.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Wallpaper Wallpaper
    return:
      type: TinyLife.World.Wallpaper
    content.vb: >-
      <DataMember>

      Public Wallpaper As Wallpaper
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Roof.#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,System.Nullable{System.Int32},MLEM.Misc.Direction2,System.Int32[])
  commentId: M:TinyLife.World.Roof.#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,System.Nullable{System.Int32},MLEM.Misc.Direction2,System.Int32[])
  id: '#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,System.Nullable{System.Int32},MLEM.Misc.Direction2,System.Int32[])'
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Roof(RoofType, Rectangle, int?, Direction2, int[])
  nameWithType: Roof.Roof(RoofType, Rectangle, int?, Direction2, int[])
  fullName: TinyLife.World.Roof.Roof(TinyLife.World.RoofType, Microsoft.Xna.Framework.Rectangle, int?, MLEM.Misc.Direction2, int[])
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/Roof.cs
    startLine: 309
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new roof with the given settings\n"
  example: []
  syntax:
    content: public Roof(RoofType type, Rectangle area, int? floor, Direction2 rotation, int[] colors)
    parameters:
    - id: type
      type: TinyLife.World.RoofType
      description: The type of the roof
    - id: area
      type: Microsoft.Xna.Framework.Rectangle
      description: The area that this roof covers
    - id: floor
      type: System.Nullable{System.Int32}
      description: The floor this roof is on.
    - id: rotation
      type: MLEM.Misc.Direction2
      description: This roof&apos;s rotation
    - id: colors
      type: System.Int32[]
      description: The colors that this roof should have
    content.vb: Public Sub New(type As RoofType, area As Rectangle, floor As Integer?, rotation As Direction2, colors As Integer())
  overload: TinyLife.World.Roof.#ctor*
  nameWithType.vb: Roof.New(RoofType, Rectangle, Integer?, Direction2, Integer())
  fullName.vb: TinyLife.World.Roof.New(TinyLife.World.RoofType, Microsoft.Xna.Framework.Rectangle, Integer?, MLEM.Misc.Direction2, Integer())
  name.vb: New(RoofType, Rectangle, Integer?, Direction2, Integer())
- uid: TinyLife.World.Roof.GetPrice
  commentId: M:TinyLife.World.Roof.GetPrice
  id: GetPrice
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: GetPrice()
  nameWithType: Roof.GetPrice()
  fullName: TinyLife.World.Roof.GetPrice()
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetPrice
    path: ../TinyLife/World/Roof.cs
    startLine: 322
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThis roof&apos;s price, which is based on <xref href=\"TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public float GetPrice()
    return:
      type: System.Single
      description: This roof&apos;s price.
    content.vb: Public Function GetPrice() As Single
  overload: TinyLife.World.Roof.GetPrice*
- uid: TinyLife.World.Roof.Validate
  commentId: M:TinyLife.World.Roof.Validate
  id: Validate
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Roof.Validate()
  fullName: TinyLife.World.Roof.Validate()
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/World/Roof.cs
    startLine: 330
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nValidates this roof instance, which is automatically done in <xref href=\"TinyLife.World.Map.Validate(System.Boolean%2cSystem.Action%7bSystem.String%7d%2cSystem.Action%7bSystem.Single%7d)\" data-throw-if-not-resolved=\"false\"></xref> when the map is loaded from disk\n"
  example: []
  syntax:
    content: public bool Validate()
    return:
      type: System.Boolean
      description: Whether this roof is still valid
    content.vb: Public Function Validate() As Boolean
  overload: TinyLife.World.Roof.Validate*
- uid: TinyLife.World.Roof.GetRoofAttachedFurnitureOffset(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.World.Roof.GetRoofAttachedFurnitureOffset(Microsoft.Xna.Framework.Vector2)
  id: GetRoofAttachedFurnitureOffset(Microsoft.Xna.Framework.Vector2)
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: GetRoofAttachedFurnitureOffset(Vector2)
  nameWithType: Roof.GetRoofAttachedFurnitureOffset(Vector2)
  fullName: TinyLife.World.Roof.GetRoofAttachedFurnitureOffset(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetRoofAttachedFurnitureOffset
    path: ../TinyLife/World/Roof.cs
    startLine: 347
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nReturns the offset that <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> attached to this roof should have when rendering.\nThis method uses <xref href=\"TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle%2cMLEM.Misc.Direction2%2cMicrosoft.Xna.Framework.Point)\" data-throw-if-not-resolved=\"false\"></xref> internally.\n"
  example: []
  syntax:
    content: public (Vector2 DrawOffset, float DepthOffset) GetRoofAttachedFurnitureOffset(Vector2 position)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the furniture is on.
    return:
      type: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}
      description: The draw and depth offset that the furniture should draw with.
    content.vb: Public Function GetRoofAttachedFurnitureOffset(position As Vector2) As (DrawOffset As Vector2, DepthOffset As Single)
  overload: TinyLife.World.Roof.GetRoofAttachedFurnitureOffset*
- uid: TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room,TinyLife.Tools.UndoableAction)
  id: GenerateRoof(TinyLife.World.Room,TinyLife.Tools.UndoableAction)
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: GenerateRoof(Room, UndoableAction)
  nameWithType: Roof.GenerateRoof(Room, UndoableAction)
  fullName: TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room, TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GenerateRoof
    path: ../TinyLife/World/Roof.cs
    startLine: 360
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nGenerates the roofing for the given <xref href=\"TinyLife.World.Room\" data-throw-if-not-resolved=\"false\"></xref> and adds it to the map.\nThe generated roofing is split into as few separate parts as possible by ordering the tiles the room covers.\n"
  example: []
  syntax:
    content: public static void GenerateRoof(Room room, UndoableAction action)
    parameters:
    - id: room
      type: TinyLife.World.Room
      description: The room to add roofing to
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    content.vb: Public Shared Sub GenerateRoof(room As Room, action As UndoableAction)
  overload: TinyLife.World.Roof.GenerateRoof*
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.Roof.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Roof>(Roof)
  nameWithType: Extensions.JsonCopy<Roof>(Roof)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Roof>(TinyLife.World.Roof)
  nameWithType.vb: Extensions.JsonCopy(Of Roof)(Roof)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Roof)(TinyLife.World.Roof)
  name.vb: JsonCopy(Of Roof)(Roof)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Roof)
    name: JsonCopy
  - name: <
  - uid: TinyLife.World.Roof
    name: Roof
  - name: '>'
  - name: (
  - uid: TinyLife.World.Roof
    name: Roof
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Roof)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Roof
    name: Roof
  - name: )
  - name: (
  - uid: TinyLife.World.Roof
    name: Roof
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.World.RoofType
  commentId: T:TinyLife.World.RoofType
  parent: TinyLife.World
  name: RoofType
  nameWithType: RoofType
  fullName: TinyLife.World.RoofType
- uid: TinyLife.Utilities.ColorScheme.WarmDark
  commentId: F:TinyLife.Utilities.ColorScheme.WarmDark
  name: WarmDark
  nameWithType: ColorScheme.WarmDark
  fullName: TinyLife.Utilities.ColorScheme.WarmDark
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.World.Roof.Colors*
  commentId: Overload:TinyLife.World.Roof.Colors
  name: Colors
  nameWithType: Roof.Colors
  fullName: TinyLife.World.Roof.Colors
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: TinyLife.World.RoofStyle.Flat
  commentId: F:TinyLife.World.RoofStyle.Flat
  name: Flat
  nameWithType: RoofStyle.Flat
  fullName: TinyLife.World.RoofStyle.Flat
- uid: TinyLife.World.Roof.Rotation*
  commentId: Overload:TinyLife.World.Roof.Rotation
  name: Rotation
  nameWithType: Roof.Rotation
  fullName: TinyLife.World.Roof.Rotation
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: TinyLife.World.Roof.Area*
  commentId: Overload:TinyLife.World.Roof.Area
  name: Area
  nameWithType: Roof.Area
  fullName: TinyLife.World.Roof.Area
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.Roof.Floor*
  commentId: Overload:TinyLife.World.Roof.Floor
  name: Floor
  nameWithType: Roof.Floor
  fullName: TinyLife.World.Roof.Floor
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Roof.Wallpaper
  commentId: F:TinyLife.World.Roof.Wallpaper
  name: Wallpaper
  nameWithType: Roof.Wallpaper
  fullName: TinyLife.World.Roof.Wallpaper
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: TinyLife.World.Roof.#ctor*
  commentId: Overload:TinyLife.World.Roof.#ctor
  name: Roof
  nameWithType: Roof.Roof
  fullName: TinyLife.World.Roof.Roof
  nameWithType.vb: Roof.New
  fullName.vb: TinyLife.World.Roof.New
  name.vb: New
- uid: TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  commentId: M:TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  isExternal: true
  name: GetPrice(Rectangle)
  nameWithType: RoofType.GetPrice(Rectangle)
  fullName: TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  spec.csharp:
  - uid: TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
    name: GetPrice
  - name: (
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
    name: GetPrice
  - name: (
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: )
- uid: TinyLife.World.Roof.GetPrice*
  commentId: Overload:TinyLife.World.Roof.GetPrice
  name: GetPrice
  nameWithType: Roof.GetPrice
  fullName: TinyLife.World.Roof.GetPrice
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.World.Map.Validate(System.Boolean,System.Action{System.String},System.Action{System.Single})
  commentId: M:TinyLife.World.Map.Validate(System.Boolean,System.Action{System.String},System.Action{System.Single})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Validate(bool, Action<string>, Action<float>)
  nameWithType: Map.Validate(bool, Action<string>, Action<float>)
  fullName: TinyLife.World.Map.Validate(bool, System.Action<string>, System.Action<float>)
  nameWithType.vb: Map.Validate(Boolean, Action(Of String), Action(Of Single))
  fullName.vb: TinyLife.World.Map.Validate(Boolean, System.Action(Of String), System.Action(Of Single))
  name.vb: Validate(Boolean, Action(Of String), Action(Of Single))
  spec.csharp:
  - uid: TinyLife.World.Map.Validate(System.Boolean,System.Action{System.String},System.Action{System.Single})
    name: Validate
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.Validate(System.Boolean,System.Action{System.String},System.Action{System.Single})
    name: Validate
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: TinyLife.World.Roof.Validate*
  commentId: Overload:TinyLife.World.Roof.Validate
  name: Validate
  nameWithType: Roof.Validate
  fullName: TinyLife.World.Roof.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  isExternal: true
  name: GetGableOffset(Rectangle, Direction2, Point)
  nameWithType: RoofType.GetGableOffset(Rectangle, Direction2, Point)
  fullName: TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
    name: GetGableOffset
  - name: (
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
    name: GetGableOffset
  - name: (
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.World.Roof.GetRoofAttachedFurnitureOffset*
  commentId: Overload:TinyLife.World.Roof.GetRoofAttachedFurnitureOffset
  name: GetRoofAttachedFurnitureOffset
  nameWithType: Roof.GetRoofAttachedFurnitureOffset
  fullName: TinyLife.World.Roof.GetRoofAttachedFurnitureOffset
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}
  commentId: T:System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.drawoffset
  name: (Vector2 DrawOffset, float DepthOffset)
  nameWithType: (Vector2 DrawOffset, float DepthOffset)
  fullName: (Microsoft.Xna.Framework.Vector2 DrawOffset, float DepthOffset)
  nameWithType.vb: (DrawOffset As Vector2, DepthOffset As Single)
  fullName.vb: (DrawOffset As Microsoft.Xna.Framework.Vector2, DepthOffset As Single)
  name.vb: (DrawOffset As Vector2, DepthOffset As Single)
  spec.csharp:
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.DrawOffset
    name: DrawOffset
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.drawoffset
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.DepthOffset
    name: DepthOffset
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.depthoffset
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.DrawOffset
    name: DrawOffset
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.drawoffset
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}.DepthOffset
    name: DepthOffset
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-microsoft.xna.framework.vector2,system.single-.depthoffset
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  parent: TinyLife.World
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
- uid: TinyLife.Tools.UndoableAction
  commentId: T:TinyLife.Tools.UndoableAction
  parent: TinyLife.Tools
  name: UndoableAction
  nameWithType: UndoableAction
  fullName: TinyLife.Tools.UndoableAction
- uid: TinyLife.World.Roof.GenerateRoof*
  commentId: Overload:TinyLife.World.Roof.GenerateRoof
  name: GenerateRoof
  nameWithType: Roof.GenerateRoof
  fullName: TinyLife.World.Roof.GenerateRoof
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
