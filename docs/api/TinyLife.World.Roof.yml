### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  id: Roof
  parent: TinyLife.World
  children:
  - TinyLife.World.Roof.#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32)
  - TinyLife.World.Roof.Area
  - TinyLife.World.Roof.Color
  - TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room)
  - TinyLife.World.Roof.GetPrice
  - TinyLife.World.Roof.Rotation
  - TinyLife.World.Roof.Type
  - TinyLife.World.Roof.Validate
  - TinyLife.World.Roof.Wallpaper
  langs:
  - csharp
  - vb
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
  type: Class
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Roof
    path: World/Roof.cs
    startLine: 232
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA roof is an object on a <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> that is on a higher level and cannot be interacted with by people\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Roof : IPricedObject
    content.vb: >-
      <DataContract>

      Public Class Roof
          Implements IPricedObject
  inheritance:
  - System.Object
  implements:
  - TinyLife.World.IPricedObject
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Roof.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.World.Roof.Type
  commentId: F:TinyLife.World.Roof.Type
  id: Type
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Roof.Type
  fullName: TinyLife.World.Roof.Type
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Type
    path: World/Roof.cs
    startLine: 239
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe <xref href=\"TinyLife.World.RoofType\" data-throw-if-not-resolved=\"false\"></xref> that this roof has\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly RoofType Type
    return:
      type: TinyLife.World.RoofType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As RoofType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.World.Roof.Rotation
  commentId: P:TinyLife.World.Roof.Rotation
  id: Rotation
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Roof.Rotation
  fullName: TinyLife.World.Roof.Rotation
  type: Property
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Rotation
    path: World/Roof.cs
    startLine: 244
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe rotation that this roof has.\nThis is only relevant for roofs that don&apos;t have the <xref href=\"TinyLife.World.RoofStyle.Flat\" data-throw-if-not-resolved=\"false\"></xref> style.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 Rotation { get; }
    parameters: []
    return:
      type: MLEM.Misc.Direction2
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Rotation As Direction2
  overload: TinyLife.World.Roof.Rotation*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.World.Roof.Color
  commentId: F:TinyLife.World.Roof.Color
  id: Color
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Roof.Color
  fullName: TinyLife.World.Roof.Color
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Color
    path: World/Roof.cs
    startLine: 250
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe color index in in <xref href=\"TinyLife.Utilities.ColorScheme.WarmDark\" data-throw-if-not-resolved=\"false\"></xref> that this roof uses for its top\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly int Color
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public ReadOnly Color As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.World.Roof.Area
  commentId: P:TinyLife.World.Roof.Area
  id: Area
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Roof.Area
  fullName: TinyLife.World.Roof.Area
  type: Property
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Area
    path: World/Roof.cs
    startLine: 254
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe area that this roof covers\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Rectangle Area { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Rectangle
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Area As Rectangle
  overload: TinyLife.World.Roof.Area*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.World.Roof.Wallpaper
  commentId: F:TinyLife.World.Roof.Wallpaper
  id: Wallpaper
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Wallpaper
  nameWithType: Roof.Wallpaper
  fullName: TinyLife.World.Roof.Wallpaper
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Wallpaper
    path: World/Roof.cs
    startLine: 261
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe <xref href=\"TinyLife.World.Roof.Wallpaper\" data-throw-if-not-resolved=\"false\"></xref> that is applied to this roof.\nThis defaults to the Default wallpaper.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Wallpaper Wallpaper
    return:
      type: TinyLife.World.Wallpaper
    content.vb: >-
      <DataMember>

      Public Wallpaper As Wallpaper
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.World.Roof.#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32)
  commentId: M:TinyLife.World.Roof.#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32)
  id: '#ctor(TinyLife.World.RoofType,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32)'
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Roof(RoofType, Rectangle, Direction2, Int32)
  nameWithType: Roof.Roof(RoofType, Rectangle, Direction2, Int32)
  fullName: TinyLife.World.Roof.Roof(TinyLife.World.RoofType, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, System.Int32)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: World/Roof.cs
    startLine: 270
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new roof with the given settings\n"
  example: []
  syntax:
    content: public Roof(RoofType type, Rectangle area, Direction2 rotation, int color)
    parameters:
    - id: type
      type: TinyLife.World.RoofType
      description: The type of the roof
    - id: area
      type: Microsoft.Xna.Framework.Rectangle
      description: The area that this roof covers
    - id: rotation
      type: MLEM.Misc.Direction2
      description: This roof&apos;s rotation
    - id: color
      type: System.Int32
      description: The color that this roof&apos;s wallpaper should have
    content.vb: Public Sub New(type As RoofType, area As Rectangle, rotation As Direction2, color As Integer)
  overload: TinyLife.World.Roof.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.World.Roof.GetPrice
  commentId: M:TinyLife.World.Roof.GetPrice
  id: GetPrice
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: GetPrice()
  nameWithType: Roof.GetPrice()
  fullName: TinyLife.World.Roof.GetPrice()
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetPrice
    path: World/Roof.cs
    startLine: 279
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nReturns the price that this object can be bought or sold for.\nNote that, like in the case of the <xref href=\"TinyLife.Objects.Painting\" data-throw-if-not-resolved=\"false\"></xref>, the returned price isn&apos;t necessarily the full price that the object can be sold for. Instead, the price returned here should be the price that this object has when bought or sold from the <xref href=\"TinyLife.Tools.FurnitureTool\" data-throw-if-not-resolved=\"false\"></xref> or similar.\n"
  example: []
  syntax:
    content: public float GetPrice()
    return:
      type: System.Single
      description: The object&apos;s price
    content.vb: Public Function GetPrice As Single
  overload: TinyLife.World.Roof.GetPrice*
  implements:
  - TinyLife.World.IPricedObject.GetPrice
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.World.Roof.Validate
  commentId: M:TinyLife.World.Roof.Validate
  id: Validate
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: Roof.Validate()
  fullName: TinyLife.World.Roof.Validate()
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: World/Roof.cs
    startLine: 287
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nValidates this roof instance, which is automatically done in <xref href=\"TinyLife.World.Map.Validate(System.Action%7bSystem.String%7d%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> when the map is loaded from disk\n"
  example: []
  syntax:
    content: public bool Validate()
    return:
      type: System.Boolean
      description: Whether this roof is still valid
    content.vb: Public Function Validate As Boolean
  overload: TinyLife.World.Roof.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room)
  commentId: M:TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room)
  id: GenerateRoof(TinyLife.World.Room)
  parent: TinyLife.World.Roof
  langs:
  - csharp
  - vb
  name: GenerateRoof(Room)
  nameWithType: Roof.GenerateRoof(Room)
  fullName: TinyLife.World.Roof.GenerateRoof(TinyLife.World.Room)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GenerateRoof
    path: World/Roof.cs
    startLine: 296
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nGenerates the roofing for the given <xref href=\"TinyLife.World.Room\" data-throw-if-not-resolved=\"false\"></xref> and adds it to the map.\nThe generated roofing is split into as few separate parts as possible by ordering the tiles the room covers.\n"
  example: []
  syntax:
    content: public static void GenerateRoof(Room room)
    parameters:
    - id: room
      type: TinyLife.World.Room
      description: The room to add roofing to
    content.vb: Public Shared Sub GenerateRoof(room As Room)
  overload: TinyLife.World.Roof.GenerateRoof*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TinyLife.World.IPricedObject
  commentId: T:TinyLife.World.IPricedObject
  parent: TinyLife.World
  name: IPricedObject
  nameWithType: IPricedObject
  fullName: TinyLife.World.IPricedObject
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Roof.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Roof>()
  nameWithType: Extensions.JsonCopy<Roof>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Roof>()
  nameWithType.vb: Extensions.JsonCopy(Of Roof)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Roof)()
  name.vb: JsonCopy(Of Roof)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Roof>
    nameWithType: Extensions.JsonCopy<Roof>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Roof>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Roof)
    nameWithType: Extensions.JsonCopy(Of Roof)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Roof)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.RoofType
  commentId: T:TinyLife.World.RoofType
  parent: TinyLife.World
  name: RoofType
  nameWithType: RoofType
  fullName: TinyLife.World.RoofType
- uid: TinyLife.World.RoofStyle.Flat
  commentId: F:TinyLife.World.RoofStyle.Flat
  isExternal: true
- uid: TinyLife.World.Roof.Rotation*
  commentId: Overload:TinyLife.World.Roof.Rotation
  name: Rotation
  nameWithType: Roof.Rotation
  fullName: TinyLife.World.Roof.Rotation
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.ColorScheme.WarmDark
  commentId: F:TinyLife.Utilities.ColorScheme.WarmDark
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.World.Roof.Area*
  commentId: Overload:TinyLife.World.Roof.Area
  name: Area
  nameWithType: Roof.Area
  fullName: TinyLife.World.Roof.Area
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: TinyLife.World.Roof.Wallpaper
  commentId: F:TinyLife.World.Roof.Wallpaper
  isExternal: true
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: TinyLife.World.Roof.#ctor*
  commentId: Overload:TinyLife.World.Roof.#ctor
  name: Roof
  nameWithType: Roof.Roof
  fullName: TinyLife.World.Roof.Roof
- uid: TinyLife.World.Roof.GetPrice*
  commentId: Overload:TinyLife.World.Roof.GetPrice
  name: GetPrice
  nameWithType: Roof.GetPrice
  fullName: TinyLife.World.Roof.GetPrice
- uid: TinyLife.World.IPricedObject.GetPrice
  commentId: M:TinyLife.World.IPricedObject.GetPrice
  parent: TinyLife.World.IPricedObject
  name: GetPrice()
  nameWithType: IPricedObject.GetPrice()
  fullName: TinyLife.World.IPricedObject.GetPrice()
  spec.csharp:
  - uid: TinyLife.World.IPricedObject.GetPrice
    name: GetPrice
    nameWithType: IPricedObject.GetPrice
    fullName: TinyLife.World.IPricedObject.GetPrice
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.IPricedObject.GetPrice
    name: GetPrice
    nameWithType: IPricedObject.GetPrice
    fullName: TinyLife.World.IPricedObject.GetPrice
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.World.Map.Validate(System.Action{System.String},System.Boolean)
  commentId: M:TinyLife.World.Map.Validate(System.Action{System.String},System.Boolean)
  isExternal: true
- uid: TinyLife.World.Roof.Validate*
  commentId: Overload:TinyLife.World.Roof.Validate
  name: Validate
  nameWithType: Roof.Validate
  fullName: TinyLife.World.Roof.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.World.Room
  commentId: T:TinyLife.World.Room
  parent: TinyLife.World
  name: Room
  nameWithType: Room
  fullName: TinyLife.World.Room
- uid: TinyLife.World.Roof.GenerateRoof*
  commentId: Overload:TinyLife.World.Roof.GenerateRoof
  name: GenerateRoof
  nameWithType: Roof.GenerateRoof
  fullName: TinyLife.World.Roof.GenerateRoof
