### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  commentId: T:TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  id: GetAndSitDownBehavior
  parent: TinyLife.Actions.Behaviors
  children:
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.#ctor(TinyLife.Actions.Action,System.Boolean,System.Boolean,TinyLife.Objects.FurnitureType[])
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem``1
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  langs:
  - csharp
  - vb
  name: GetAndSitDownBehavior
  nameWithType: GetAndSitDownBehavior
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  type: Class
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetAndSitDownBehavior
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nA get-and-sit-down behavior is a <xref href=\"TinyLife.Actions.Behaviors.MultiActionBehavior\" data-throw-if-not-resolved=\"false\"></xref> where a person gets an action object that can be picked up (like a plate of food) and interacts with it on a chair or at a standing desk.\nThis behavior considers a multitude of possible circumstances for the action, including the item being on a counter, on the ground, already on a valid table, in the person&apos;s hand, and more.\nNote that <xref href=\"TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction%60%601(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.FurnitureType%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> should be used to ensure that the correct interaction item is returned in every circumstance.\n"
  example: []
  syntax:
    content: 'public class GetAndSitDownBehavior : MultiActionBehavior'
    content.vb: >-
      Public Class GetAndSitDownBehavior
          Inherits MultiActionBehavior
  inheritance:
  - System.Object
  - TinyLife.Actions.Behaviors.ActionBehavior
  - TinyLife.Actions.Behaviors.MultiActionBehavior
  inheritedMembers:
  - TinyLife.Actions.Behaviors.ActionBehavior.Action
  - TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.#ctor(TinyLife.Actions.Action,System.Boolean,System.Boolean,TinyLife.Objects.FurnitureType[])
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.#ctor(TinyLife.Actions.Action,System.Boolean,System.Boolean,TinyLife.Objects.FurnitureType[])
  id: '#ctor(TinyLife.Actions.Action,System.Boolean,System.Boolean,TinyLife.Objects.FurnitureType[])'
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: GetAndSitDownBehavior(Action, Boolean, Boolean, FurnitureType[])
  nameWithType: GetAndSitDownBehavior.GetAndSitDownBehavior(Action, Boolean, Boolean, FurnitureType[])
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetAndSitDownBehavior(TinyLife.Actions.Action, System.Boolean, System.Boolean, TinyLife.Objects.FurnitureType[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nCreates a new get-and-sit-down behavior with the given settings\n"
  example: []
  syntax:
    content: public GetAndSitDownBehavior(Action action, bool forceTable, bool allowStandingDesk, params FurnitureType[] workItems)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action that uses this behavior
    - id: forceTable
      type: System.Boolean
      description: A property that determines whether this action requires a table to be executed. If this value is false, the person is able to sit down on a chair or a bench without a table if there is none present.
    - id: allowStandingDesk
      type: System.Boolean
      description: A property that determines whether this action can be executed at a <xref href="TinyLife.Objects.ObjectCategory.StandingDesk" data-throw-if-not-resolved="false"></xref>
    - id: workItems
      type: TinyLife.Objects.FurnitureType[]
      description: An array of <xref href="TinyLife.Objects.FurnitureType" data-throw-if-not-resolved="false"></xref> instances that represents all ietms which can be gotten and sat down with. This array is used to check the validity of a person&apos;s held item and items on tables.
    content.vb: Public Sub New(action As Action, forceTable As Boolean, allowStandingDesk As Boolean, ParamArray workItems As FurnitureType())
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.#ctor*
  nameWithType.vb: GetAndSitDownBehavior.GetAndSitDownBehavior(Action, Boolean, Boolean, FurnitureType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetAndSitDownBehavior(TinyLife.Actions.Action, System.Boolean, System.Boolean, TinyLife.Objects.FurnitureType())
  name.vb: GetAndSitDownBehavior(Action, Boolean, Boolean, FurnitureType())
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions
  id: CreateFirstActions
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: CreateFirstActions()
  nameWithType: GetAndSitDownBehavior.CreateFirstActions()
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateFirstActions
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nCreates a set of actions that should be executed before the main <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> starts.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.BehaviorMultiAction%601.CreateFirstActions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override IEnumerable<Action> CreateFirstActions()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
      description: ''
    content.vb: Public Overrides Function CreateFirstActions As IEnumerable(Of Action)
  overridden: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize
  id: Initialize
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: GetAndSitDownBehavior.Initialize()
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Initialize
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 93
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nInitializes this action behavior.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.MultiAction.AndThenInitialize\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override void Initialize()
    content.vb: Public Overrides Sub Initialize
  overridden: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: GetAndSitDownBehavior.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 106
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nUpdates this action behavior every update frame.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.MultiAction.AndThenUpdate(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last update frame
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overridden: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject
  id: GetIconObject
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: GetIconObject()
  nameWithType: GetAndSitDownBehavior.GetIconObject()
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetIconObject
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 125
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nReturns this action behavior&apos;s icon object.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.Action.GetIconObject\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, this method returns the underlying <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Actions.ActionInfo.GetActionObject%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override MapObject GetIconObject()
    return:
      type: TinyLife.Objects.MapObject
      description: The icon object
    content.vb: Public Overrides Function GetIconObject As MapObject
  overridden: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  id: GetNextAction(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: GetNextAction(CompletionType)
  nameWithType: GetAndSitDownBehavior.GetNextAction(CompletionType)
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetNextAction
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 130
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nReturns the action that should be executed after this action behavior&apos;s underlying <xref href=\"TinyLife.Actions.Behaviors.ActionBehavior.Action\" data-throw-if-not-resolved=\"false\"></xref> completes.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.Action.GetNextAction(TinyLife.Actions.CompletionType)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override Action GetNextAction(CompletionType completion)
    parameters:
    - id: completion
      type: TinyLife.Actions.CompletionType
      description: The underlying action&apos;s completion type
    return:
      type: TinyLife.Actions.Action
      description: The action that should be executed next, or null
    content.vb: Public Overrides Function GetNextAction(completion As CompletionType) As Action
  overridden: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem``1
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem``1
  id: GetInteractingItem``1
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: GetInteractingItem<T>()
  nameWithType: GetAndSitDownBehavior.GetInteractingItem<T>()
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem<T>()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetInteractingItem
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 144
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nA helper method that returns the item instance that is currently being interacted with in this action.\nSince this action type is rather complex, this is the favored way over <xref href=\"TinyLife.Actions.ActionInfo.GetActionObject%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      public T GetInteractingItem<T>()
          where T : Furniture
    typeParameters:
    - id: T
      description: The type that the object is expected to be
    return:
      type: '{T}'
      description: The object, or null if there is none
    content.vb: Public Function GetInteractingItem(Of T As Furniture) As T
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem*
  nameWithType.vb: GetAndSitDownBehavior.GetInteractingItem(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem(Of T)()
  name.vb: GetInteractingItem(Of T)()
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  id: GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  parent: TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  langs:
  - csharp
  - vb
  name: GetInteractingItemForAction<T>(ActionInfo, FurnitureType[])
  nameWithType: GetAndSitDownBehavior.GetInteractingItemForAction<T>(ActionInfo, FurnitureType[])
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction<T>(TinyLife.Actions.ActionInfo, TinyLife.Objects.FurnitureType[])
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetInteractingItemForAction
    path: ../TinyLife/Actions/Behaviors/GetAndSitDownBehavior.cs
    startLine: 170
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nA helper method that returns the item instance that is currently being interacted with in this action.\nSince this action type is rather complex, this is the favored way over <xref href=\"TinyLife.Actions.ActionInfo.GetActionObject%60%601\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      public static T GetInteractingItemForAction<T>(ActionInfo info, params FurnitureType[] workItems)
          where T : Furniture
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
    - id: workItems
      type: TinyLife.Objects.FurnitureType[]
    typeParameters:
    - id: T
      description: The type that the object is expected to be
    return:
      type: '{T}'
      description: The object, or null if there is none
    content.vb: Public Shared Function GetInteractingItemForAction(Of T As Furniture)(info As ActionInfo, ParamArray workItems As FurnitureType()) As T
  overload: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction*
  nameWithType.vb: GetAndSitDownBehavior.GetInteractingItemForAction(Of T)(ActionInfo, FurnitureType())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction(Of T)(TinyLife.Actions.ActionInfo, TinyLife.Objects.FurnitureType())
  name.vb: GetInteractingItemForAction(Of T)(ActionInfo, FurnitureType())
references:
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior
  commentId: T:TinyLife.Actions.Behaviors.MultiActionBehavior
  parent: TinyLife.Actions.Behaviors
  name: MultiActionBehavior
  nameWithType: MultiActionBehavior
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction``1(TinyLife.Actions.ActionInfo,TinyLife.Objects.FurnitureType[])
  isExternal: true
- uid: TinyLife.Actions.Behaviors
  commentId: N:TinyLife.Actions.Behaviors
  name: TinyLife.Actions.Behaviors
  nameWithType: TinyLife.Actions.Behaviors
  fullName: TinyLife.Actions.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TinyLife.Actions.Behaviors.ActionBehavior
  commentId: T:TinyLife.Actions.Behaviors.ActionBehavior
  parent: TinyLife.Actions.Behaviors
  name: ActionBehavior
  nameWithType: ActionBehavior
  fullName: TinyLife.Actions.Behaviors.ActionBehavior
- uid: TinyLife.Actions.Behaviors.ActionBehavior.Action
  commentId: F:TinyLife.Actions.Behaviors.ActionBehavior.Action
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: Action
  nameWithType: ActionBehavior.Action
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.Action
- uid: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: OnCompleted(CompletionType)
  nameWithType: ActionBehavior.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    nameWithType: ActionBehavior.OnCompleted
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    nameWithType: ActionBehavior.OnCompleted
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: CreateDefaultInstance<T>(Action)
  nameWithType: ActionBehavior.CreateDefaultInstance<T>(Action)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance<T>(TinyLife.Actions.Action)
  nameWithType.vb: ActionBehavior.CreateDefaultInstance(Of T)(Action)
  fullName.vb: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance(Of T)(TinyLife.Actions.Action)
  name.vb: CreateDefaultInstance(Of T)(Action)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
    name: CreateDefaultInstance<T>
    nameWithType: ActionBehavior.CreateDefaultInstance<T>
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
    name: CreateDefaultInstance(Of T)
    nameWithType: ActionBehavior.CreateDefaultInstance(Of T)
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GetAndSitDownBehavior>()
  nameWithType: Extensions.JsonCopy<GetAndSitDownBehavior>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Behaviors.GetAndSitDownBehavior>()
  nameWithType.vb: Extensions.JsonCopy(Of GetAndSitDownBehavior)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Behaviors.GetAndSitDownBehavior)()
  name.vb: JsonCopy(Of GetAndSitDownBehavior)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<GetAndSitDownBehavior>
    nameWithType: Extensions.JsonCopy<GetAndSitDownBehavior>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Behaviors.GetAndSitDownBehavior>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of GetAndSitDownBehavior)
    nameWithType: Extensions.JsonCopy(Of GetAndSitDownBehavior)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Behaviors.GetAndSitDownBehavior)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Objects.ObjectCategory.StandingDesk
  commentId: F:TinyLife.Objects.ObjectCategory.StandingDesk
  isExternal: true
- uid: TinyLife.Objects.FurnitureType
  commentId: T:TinyLife.Objects.FurnitureType
  parent: TinyLife.Objects
  name: FurnitureType
  nameWithType: FurnitureType
  fullName: TinyLife.Objects.FurnitureType
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.#ctor*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.#ctor
  name: GetAndSitDownBehavior
  nameWithType: GetAndSitDownBehavior.GetAndSitDownBehavior
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetAndSitDownBehavior
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Objects.FurnitureType[]
  isExternal: true
  name: FurnitureType[]
  nameWithType: FurnitureType[]
  fullName: TinyLife.Objects.FurnitureType[]
  nameWithType.vb: FurnitureType()
  fullName.vb: TinyLife.Objects.FurnitureType()
  name.vb: FurnitureType()
  spec.csharp:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.Objects.FurnitureType
    name: FurnitureType
    nameWithType: FurnitureType
    fullName: TinyLife.Objects.FurnitureType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  commentId: M:TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  parent: TinyLife.Actions.Behaviors.MultiActionBehavior
  name: CreateFirstActions()
  nameWithType: MultiActionBehavior.CreateFirstActions()
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions()
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
    name: CreateFirstActions
    nameWithType: MultiActionBehavior.CreateFirstActions
    fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
    name: CreateFirstActions
    nameWithType: MultiActionBehavior.CreateFirstActions
    fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions
  name: CreateFirstActions
  nameWithType: GetAndSitDownBehavior.CreateFirstActions
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.CreateFirstActions
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Action>
  nameWithType: IEnumerable<Action>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Action>
  nameWithType.vb: IEnumerable(Of Action)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Action)
  name.vb: IEnumerable(Of Action)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: Initialize()
  nameWithType: ActionBehavior.Initialize()
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.Initialize()
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
    name: Initialize
    nameWithType: ActionBehavior.Initialize
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
    name: Initialize
    nameWithType: ActionBehavior.Initialize
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize
  name: Initialize
  nameWithType: GetAndSitDownBehavior.Initialize
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Initialize
- uid: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  isExternal: true
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: ActionBehavior.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: ActionBehavior.Update
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: ActionBehavior.Update
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update
  name: Update
  nameWithType: GetAndSitDownBehavior.Update
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: GetIconObject()
  nameWithType: ActionBehavior.GetIconObject()
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject()
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
    name: GetIconObject
    nameWithType: ActionBehavior.GetIconObject
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
    name: GetIconObject
    nameWithType: ActionBehavior.GetIconObject
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject
  name: GetIconObject
  nameWithType: GetAndSitDownBehavior.GetIconObject
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetIconObject
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: GetNextAction(CompletionType)
  nameWithType: ActionBehavior.GetNextAction(CompletionType)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
    nameWithType: ActionBehavior.GetNextAction
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
    nameWithType: ActionBehavior.GetNextAction
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction
  name: GetNextAction
  nameWithType: GetAndSitDownBehavior.GetNextAction
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetNextAction
- uid: TinyLife.Actions.CompletionType
  commentId: T:TinyLife.Actions.CompletionType
  parent: TinyLife.Actions
  name: CompletionType
  nameWithType: CompletionType
  fullName: TinyLife.Actions.CompletionType
- uid: TinyLife.Actions.ActionInfo.GetActionObject``1
  commentId: M:TinyLife.Actions.ActionInfo.GetActionObject``1
  isExternal: true
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem
  name: GetInteractingItem
  nameWithType: GetAndSitDownBehavior.GetInteractingItem
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem``1
  commentId: M:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItem``1
  isExternal: true
- uid: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction*
  commentId: Overload:TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction
  name: GetInteractingItemForAction
  nameWithType: GetAndSitDownBehavior.GetInteractingItemForAction
  fullName: TinyLife.Actions.Behaviors.GetAndSitDownBehavior.GetInteractingItemForAction
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
