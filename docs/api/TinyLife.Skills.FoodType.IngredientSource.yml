### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  id: FoodType.IngredientSource
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.FoodType.IngredientSource.#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)
  - TinyLife.Skills.FoodType.IngredientSource.Barbecue
  - TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  - TinyLife.Skills.FoodType.IngredientSource.ChildStove
  - TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  - TinyLife.Skills.FoodType.IngredientSource.Container
  - TinyLife.Skills.FoodType.IngredientSource.Fridge
  - TinyLife.Skills.FoodType.IngredientSource.Name
  - TinyLife.Skills.FoodType.IngredientSource.OnEaten
  - TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  - TinyLife.Skills.FoodType.IngredientSource.Sink
  - TinyLife.Skills.FoodType.IngredientSource.TeaKit
  langs:
  - csharp
  - vb
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
  type: Class
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IngredientSource
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 463
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source represents a place that the ingredients for a <xref href=\"TinyLife.Skills.FoodType\" data-throw-if-not-resolved=\"false\"></xref> can be aquired from.\n"
  example: []
  syntax:
    content: public class FoodType.IngredientSource
    content.vb: Public Class FoodType.IngredientSource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.FoodType.IngredientSource.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Skills.FoodType.IngredientSource.Fridge
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Fridge
  id: Fridge
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Fridge
  nameWithType: FoodType.IngredientSource.Fridge
  fullName: TinyLife.Skills.FoodType.IngredientSource.Fridge
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Fridge
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 468
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that are created using the <xref href=\"TinyLife.Actions.ActionType.GetIngredientsSingle\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.GetIngredientsFamily\" data-throw-if-not-resolved=\"false\"></xref> actions\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource Fridge
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly Fridge As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  id: ProteinShakeMaker
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: ProteinShakeMaker
  nameWithType: FoodType.IngredientSource.ProteinShakeMaker
  fullName: TinyLife.Skills.FoodType.IngredientSource.ProteinShakeMaker
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ProteinShakeMaker
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 472
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that are created using the <xref href=\"TinyLife.Actions.ActionType.MixProteinShake\" data-throw-if-not-resolved=\"false\"></xref> action\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource ProteinShakeMaker
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly ProteinShakeMaker As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.Barbecue
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Barbecue
  id: Barbecue
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Barbecue
  nameWithType: FoodType.IngredientSource.Barbecue
  fullName: TinyLife.Skills.FoodType.IngredientSource.Barbecue
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Barbecue
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 476
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn ingredient source for objects that are created using the <xref href=\"TinyLife.Actions.ActionType.GrillFood\" data-throw-if-not-resolved=\"false\"></xref> action\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource Barbecue
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly Barbecue As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.ChildStove
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.ChildStove
  id: ChildStove
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: ChildStove
  nameWithType: FoodType.IngredientSource.ChildStove
  fullName: TinyLife.Skills.FoodType.IngredientSource.ChildStove
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ChildStove
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 480
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA stove that children can cook at.\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource ChildStove
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly ChildStove As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  id: CoffeeMachine
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: CoffeeMachine
  nameWithType: FoodType.IngredientSource.CoffeeMachine
  fullName: TinyLife.Skills.FoodType.IngredientSource.CoffeeMachine
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CoffeeMachine
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 484
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA coffee machine.\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource CoffeeMachine
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly CoffeeMachine As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.Sink
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Sink
  id: Sink
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Sink
  nameWithType: FoodType.IngredientSource.Sink
  fullName: TinyLife.Skills.FoodType.IngredientSource.Sink
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Sink
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 488
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA sink, used for getting water.\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource Sink
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly Sink As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  id: CafeDisplayCase
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: CafeDisplayCase
  nameWithType: FoodType.IngredientSource.CafeDisplayCase
  fullName: TinyLife.Skills.FoodType.IngredientSource.CafeDisplayCase
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CafeDisplayCase
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 492
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA cafe display case that a barista employee can get food out of for customers.\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource CafeDisplayCase
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly CafeDisplayCase As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.TeaKit
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.TeaKit
  id: TeaKit
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: TeaKit
  nameWithType: FoodType.IngredientSource.TeaKit
  fullName: TinyLife.Skills.FoodType.IngredientSource.TeaKit
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TeaKit
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 496
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA tea kit that can be used to make tea drinks.\n"
  example: []
  syntax:
    content: public static readonly FoodType.IngredientSource TeaKit
    return:
      type: TinyLife.Skills.FoodType.IngredientSource
    content.vb: Public Shared ReadOnly TeaKit As FoodType.IngredientSource
- uid: TinyLife.Skills.FoodType.IngredientSource.Name
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Name
  id: Name
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FoodType.IngredientSource.Name
  fullName: TinyLife.Skills.FoodType.IngredientSource.Name
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 501
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nThe name of this ingredient source.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Skills.FoodType.IngredientSource.Container
  commentId: F:TinyLife.Skills.FoodType.IngredientSource.Container
  id: Container
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: FoodType.IngredientSource.Container
  fullName: TinyLife.Skills.FoodType.IngredientSource.Container
  type: Field
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Container
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 505
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nThe <xref href=\"TinyLife.Skills.FoodType.ContainerType\" data-throw-if-not-resolved=\"false\"></xref> that this ingredient source creates by default.\n"
  example: []
  syntax:
    content: public readonly FoodType.ContainerType Container
    return:
      type: TinyLife.Skills.FoodType.ContainerType
    content.vb: Public ReadOnly Container As FoodType.ContainerType
- uid: TinyLife.Skills.FoodType.IngredientSource.OnEaten
  commentId: P:TinyLife.Skills.FoodType.IngredientSource.OnEaten
  id: OnEaten
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: OnEaten
  nameWithType: FoodType.IngredientSource.OnEaten
  fullName: TinyLife.Skills.FoodType.IngredientSource.OnEaten
  type: Property
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnEaten
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 511
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nAn action that is invoked when this food type is eaten.\nThis action is invoked at the same time as <xref href=\"TinyLife.Skills.FoodType.OnEaten\" data-throw-if-not-resolved=\"false\"></xref>, but for any <xref href=\"TinyLife.Skills.FoodType\" data-throw-if-not-resolved=\"false\"></xref>.\nThis action is invoked in <xref href=\"TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action%2cTinyLife.Objects.FoodTypedItem)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Action<Action, FoodTypedItem> OnEaten { get; init; }
    parameters: []
    return:
      type: System.Action{TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem}
    content.vb: Public Property OnEaten As Action(Of Action, FoodTypedItem)
  overload: TinyLife.Skills.FoodType.IngredientSource.OnEaten*
- uid: TinyLife.Skills.FoodType.IngredientSource.#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)
  commentId: M:TinyLife.Skills.FoodType.IngredientSource.#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)
  id: '#ctor(System.String,TinyLife.Skills.FoodType.ContainerType)'
  parent: TinyLife.Skills.FoodType.IngredientSource
  langs:
  - csharp
  - vb
  name: IngredientSource(string, ContainerType)
  nameWithType: FoodType.IngredientSource.IngredientSource(string, FoodType.ContainerType)
  fullName: TinyLife.Skills.FoodType.IngredientSource.IngredientSource(string, TinyLife.Skills.FoodType.ContainerType)
  type: Constructor
  source:
    remote:
      path: TinyLife/Skills/FoodType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Skills/FoodType.cs
    startLine: 518
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nCreates a new ingredient source with the given settings.\n"
  example: []
  syntax:
    content: public IngredientSource(string name, FoodType.ContainerType container = null)
    parameters:
    - id: name
      type: System.String
      description: The name of this ingredient source.
    - id: container
      type: TinyLife.Skills.FoodType.ContainerType
      description: he <xref href="TinyLife.Skills.FoodType.ContainerType" data-throw-if-not-resolved="false"></xref> that this ingredient source creates by default.
    content.vb: Public Sub New(name As String, container As FoodType.ContainerType = Nothing)
  overload: TinyLife.Skills.FoodType.IngredientSource.#ctor*
  nameWithType.vb: FoodType.IngredientSource.New(String, FoodType.ContainerType)
  fullName.vb: TinyLife.Skills.FoodType.IngredientSource.New(String, TinyLife.Skills.FoodType.ContainerType)
  name.vb: New(String, ContainerType)
references:
- uid: TinyLife.Skills.FoodType
  commentId: T:TinyLife.Skills.FoodType
  parent: TinyLife.Skills
  name: FoodType
  nameWithType: FoodType
  fullName: TinyLife.Skills.FoodType
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Skills.FoodType.IngredientSource.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<IngredientSource>(IngredientSource)
  nameWithType: Extensions.JsonCopy<FoodType.IngredientSource>(FoodType.IngredientSource)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.FoodType.IngredientSource>(TinyLife.Skills.FoodType.IngredientSource)
  nameWithType.vb: Extensions.JsonCopy(Of FoodType.IngredientSource)(FoodType.IngredientSource)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.FoodType.IngredientSource)(TinyLife.Skills.FoodType.IngredientSource)
  name.vb: JsonCopy(Of IngredientSource)(IngredientSource)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType.IngredientSource)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.FoodType.IngredientSource)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
  - name: )
  - name: (
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  name: GetIngredientsSingle
  nameWithType: ActionType.GetIngredientsSingle
  fullName: TinyLife.Actions.ActionType.GetIngredientsSingle
- uid: TinyLife.Actions.ActionType.GetIngredientsFamily
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsFamily
  name: GetIngredientsFamily
  nameWithType: ActionType.GetIngredientsFamily
  fullName: TinyLife.Actions.ActionType.GetIngredientsFamily
- uid: TinyLife.Skills.FoodType.IngredientSource
  commentId: T:TinyLife.Skills.FoodType.IngredientSource
  parent: TinyLife.Skills
  name: FoodType.IngredientSource
  nameWithType: FoodType.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
  - name: .
  - uid: TinyLife.Skills.FoodType.IngredientSource
    name: IngredientSource
- uid: TinyLife.Actions.ActionType.MixProteinShake
  commentId: F:TinyLife.Actions.ActionType.MixProteinShake
  name: MixProteinShake
  nameWithType: ActionType.MixProteinShake
  fullName: TinyLife.Actions.ActionType.MixProteinShake
- uid: TinyLife.Actions.ActionType.GrillFood
  commentId: F:TinyLife.Actions.ActionType.GrillFood
  name: GrillFood
  nameWithType: ActionType.GrillFood
  fullName: TinyLife.Actions.ActionType.GrillFood
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Skills.FoodType.ContainerType
  commentId: T:TinyLife.Skills.FoodType.ContainerType
  parent: TinyLife.Skills
  name: FoodType.ContainerType
  nameWithType: FoodType.ContainerType
  fullName: TinyLife.Skills.FoodType.ContainerType
  spec.csharp:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
  spec.vb:
  - uid: TinyLife.Skills.FoodType
    name: FoodType
  - name: .
  - uid: TinyLife.Skills.FoodType.ContainerType
    name: ContainerType
- uid: TinyLife.Skills.FoodType.OnEaten
  commentId: P:TinyLife.Skills.FoodType.OnEaten
  name: OnEaten
  nameWithType: FoodType.OnEaten
  fullName: TinyLife.Skills.FoodType.OnEaten
- uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
  commentId: M:TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
  name: InvokeOnEaten(Action, FoodTypedItem)
  nameWithType: FoodType.InvokeOnEaten(Action, FoodTypedItem)
  fullName: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action, TinyLife.Objects.FoodTypedItem)
  spec.csharp:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.FoodType.InvokeOnEaten(TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem)
    name: InvokeOnEaten
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
  - name: )
- uid: TinyLife.Skills.FoodType.IngredientSource.OnEaten*
  commentId: Overload:TinyLife.Skills.FoodType.IngredientSource.OnEaten
  name: OnEaten
  nameWithType: FoodType.IngredientSource.OnEaten
  fullName: TinyLife.Skills.FoodType.IngredientSource.OnEaten
- uid: System.Action{TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem}
  commentId: T:System.Action{TinyLife.Actions.Action,TinyLife.Objects.FoodTypedItem}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<Action, FoodTypedItem>
  nameWithType: Action<Action, FoodTypedItem>
  fullName: System.Action<TinyLife.Actions.Action, TinyLife.Objects.FoodTypedItem>
  nameWithType.vb: Action(Of Action, FoodTypedItem)
  fullName.vb: System.Action(Of TinyLife.Actions.Action, TinyLife.Objects.FoodTypedItem)
  name.vb: Action(Of Action, FoodTypedItem)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.FoodTypedItem
    name: FoodTypedItem
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Skills.FoodType.IngredientSource.#ctor*
  commentId: Overload:TinyLife.Skills.FoodType.IngredientSource.#ctor
  name: IngredientSource
  nameWithType: FoodType.IngredientSource.IngredientSource
  fullName: TinyLife.Skills.FoodType.IngredientSource.IngredientSource
  nameWithType.vb: FoodType.IngredientSource.New
  fullName.vb: TinyLife.Skills.FoodType.IngredientSource.New
  name.vb: New
