### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.LifeGoal.Instance
  commentId: T:TinyLife.Goals.LifeGoal.Instance
  id: LifeGoal.Instance
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.LifeGoal.Instance.#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)
  - TinyLife.Goals.LifeGoal.Instance.Advance
  - TinyLife.Goals.LifeGoal.Instance.Completed
  - TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  - TinyLife.Goals.LifeGoal.Instance.Goal
  - TinyLife.Goals.LifeGoal.Instance.Person
  - TinyLife.Goals.LifeGoal.Instance.Stage
  - TinyLife.Goals.LifeGoal.Instance.StageIndex
  - TinyLife.Goals.LifeGoal.Instance.Update
  - TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  langs:
  - csharp
  - vb
  name: LifeGoal.Instance
  nameWithType: LifeGoal.Instance
  fullName: TinyLife.Goals.LifeGoal.Instance
  type: Class
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Instance
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 183
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA class used to represent a currently active/ongoing <xref href=\"TinyLife.Goals.LifeGoal\" data-throw-if-not-resolved=\"false\"></xref> instance\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Instance
    content.vb: >-
      <DataContract>

      Public Class Instance
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.LifeGoal.Instance.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Goals.LifeGoal.Instance.Goal
  commentId: F:TinyLife.Goals.LifeGoal.Instance.Goal
  id: Goal
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Goal
  nameWithType: LifeGoal.Instance.Goal
  fullName: TinyLife.Goals.LifeGoal.Instance.Goal
  type: Field
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Goal
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 190
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe underlying <xref href=\"TinyLife.Goals.LifeGoal\" data-throw-if-not-resolved=\"false\"></xref> that this instance is tracking\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly LifeGoal Goal
    return:
      type: TinyLife.Goals.LifeGoal
    content.vb: >-
      <DataMember>

      Public ReadOnly Goal As LifeGoal
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  commentId: P:TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  id: CurrentGoals
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: CurrentGoals
  nameWithType: LifeGoal.Instance.CurrentGoals
  fullName: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  type: Property
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CurrentGoals
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 194
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe <xref href=\"TinyLife.Goals.GoalSet\" data-throw-if-not-resolved=\"false\"></xref> instance that represents the currently active stage of this life goal instance\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public GoalSet CurrentGoals { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSet
    content.vb: >-
      <DataMember>

      Public ReadOnly Property CurrentGoals As GoalSet
  overload: TinyLife.Goals.LifeGoal.Instance.CurrentGoals*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.LifeGoal.Instance.StageIndex
  commentId: P:TinyLife.Goals.LifeGoal.Instance.StageIndex
  id: StageIndex
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: StageIndex
  nameWithType: LifeGoal.Instance.StageIndex
  fullName: TinyLife.Goals.LifeGoal.Instance.StageIndex
  type: Property
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StageIndex
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 201
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe index in the <xref href=\"TinyLife.Goals.LifeGoal.Stages\" data-throw-if-not-resolved=\"false\"></xref> array that the <xref href=\"TinyLife.Goals.LifeGoal.Instance.CurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> are created from.\nTo get the <xref href=\"TinyLife.Goals.GoalSetInfo\" data-throw-if-not-resolved=\"false\"></xref> for this stage, use <xref href=\"TinyLife.Goals.LifeGoal.Instance.Stage\" data-throw-if-not-resolved=\"false\"></xref>.\nIf this value is greater than the length of <xref href=\"TinyLife.Goals.LifeGoal.Stages\" data-throw-if-not-resolved=\"false\"></xref>, this life goal is <xref href=\"TinyLife.Goals.LifeGoal.Instance.Completed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int StageIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public ReadOnly Property StageIndex As Integer
  overload: TinyLife.Goals.LifeGoal.Instance.StageIndex*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.LifeGoal.Instance.Person
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Person
  id: Person
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: LifeGoal.Instance.Person
  fullName: TinyLife.Goals.LifeGoal.Instance.Person
  type: Property
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Person
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 206
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe person that is currently working on this life goal\n"
  example: []
  syntax:
    content: public Person Person { get; }
    parameters: []
    return:
      type: TinyLife.Objects.Person
    content.vb: Public ReadOnly Property Person As Person
  overload: TinyLife.Goals.LifeGoal.Instance.Person*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.LifeGoal.Instance.Stage
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Stage
  id: Stage
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Stage
  nameWithType: LifeGoal.Instance.Stage
  fullName: TinyLife.Goals.LifeGoal.Instance.Stage
  type: Property
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Stage
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 211
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe <xref href=\"TinyLife.Goals.GoalSetInfo\" data-throw-if-not-resolved=\"false\"></xref> that the <xref href=\"TinyLife.Goals.LifeGoal.Instance.CurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> are created from.\nIf this value is null, this life goal is <xref href=\"TinyLife.Goals.LifeGoal.Instance.Completed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public GoalSetInfo Stage { get; }
    parameters: []
    return:
      type: TinyLife.Goals.GoalSetInfo
    content.vb: Public ReadOnly Property Stage As GoalSetInfo
  overload: TinyLife.Goals.LifeGoal.Instance.Stage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.LifeGoal.Instance.Completed
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Completed
  id: Completed
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: LifeGoal.Instance.Completed
  fullName: TinyLife.Goals.LifeGoal.Instance.Completed
  type: Property
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Completed
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 215
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns whether this life goal is considered complete, which is when <xref href=\"TinyLife.Goals.LifeGoal.Instance.Stage\" data-throw-if-not-resolved=\"false\"></xref> is null.\n"
  example: []
  syntax:
    content: public bool Completed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Completed As Boolean
  overload: TinyLife.Goals.LifeGoal.Instance.Completed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Goals.LifeGoal.Instance.#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)
  commentId: M:TinyLife.Goals.LifeGoal.Instance.#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)
  id: '#ctor(TinyLife.Objects.Person,TinyLife.Goals.LifeGoal,System.Int32)'
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Instance(Person, LifeGoal, Int32)
  nameWithType: LifeGoal.Instance.Instance(Person, LifeGoal, Int32)
  fullName: TinyLife.Goals.LifeGoal.Instance.Instance(TinyLife.Objects.Person, TinyLife.Goals.LifeGoal, System.Int32)
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 223
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCreates a new life goal instance from the given <xref href=\"TinyLife.Goals.LifeGoal\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Instance(Person person, LifeGoal goal, int stage = 0)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person to work on this life goal
    - id: goal
      type: TinyLife.Goals.LifeGoal
      description: The life goal information
    - id: stage
      type: System.Int32
      description: The stage to start out in, or 0 by default
    content.vb: Public Sub New(person As Person, goal As LifeGoal, stage As Integer = 0)
  overload: TinyLife.Goals.LifeGoal.Instance.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Goals.LifeGoal.Instance.Update
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Update
  id: Update
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LifeGoal.Instance.Update()
  fullName: TinyLife.Goals.LifeGoal.Instance.Update()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 233
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nUpdates this life goal, causing <xref href=\"TinyLife.Goals.LifeGoal.Instance.Advance\" data-throw-if-not-resolved=\"false\"></xref> to be called if the <xref href=\"TinyLife.Goals.LifeGoal.Instance.CurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> are completed\n"
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update
  overload: TinyLife.Goals.LifeGoal.Instance.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Goals.LifeGoal.Instance.Advance
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Advance
  id: Advance
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Advance()
  nameWithType: LifeGoal.Instance.Advance()
  fullName: TinyLife.Goals.LifeGoal.Instance.Advance()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Advance
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 243
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nForces this life goal to be advanced, regardless of whether the <xref href=\"TinyLife.Goals.LifeGoal.Instance.CurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> are completed+\n"
  example: []
  syntax:
    content: public void Advance()
    content.vb: Public Sub Advance
  overload: TinyLife.Goals.LifeGoal.Instance.Advance*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  id: Validate(TinyLife.Objects.Person)
  parent: TinyLife.Goals.LifeGoal.Instance
  langs:
  - csharp
  - vb
  name: Validate(Person)
  nameWithType: LifeGoal.Instance.Validate(Person)
  fullName: TinyLife.Goals.LifeGoal.Instance.Validate(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/LifeGoal.cs
      branch: 0.20.3-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/Goals/LifeGoal.cs
    startLine: 268
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nValidates this life goal instance and the underlying <xref href=\"TinyLife.Goals.LifeGoal.Instance.CurrentGoals\" data-throw-if-not-resolved=\"false\"></xref> when loading from disk\n"
  example: []
  syntax:
    content: public bool Validate(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person who is working on this life goal
    return:
      type: System.Boolean
      description: Whether this life goal is considered valid
    content.vb: Public Function Validate(person As Person) As Boolean
  overload: TinyLife.Goals.LifeGoal.Instance.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TinyLife.Goals.LifeGoal
  commentId: T:TinyLife.Goals.LifeGoal
  parent: TinyLife.Goals
  name: LifeGoal
  nameWithType: LifeGoal
  fullName: TinyLife.Goals.LifeGoal
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.LifeGoal.Instance.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<LifeGoal.Instance>()
  nameWithType: Extensions.JsonCopy<LifeGoal.Instance>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.LifeGoal.Instance>()
  nameWithType.vb: Extensions.JsonCopy(Of LifeGoal.Instance)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.LifeGoal.Instance)()
  name.vb: JsonCopy(Of LifeGoal.Instance)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<LifeGoal.Instance>
    nameWithType: Extensions.JsonCopy<LifeGoal.Instance>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.LifeGoal.Instance>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of LifeGoal.Instance)
    nameWithType: Extensions.JsonCopy(Of LifeGoal.Instance)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.LifeGoal.Instance)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.LifeGoal.Instance.CurrentGoals*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  name: CurrentGoals
  nameWithType: LifeGoal.Instance.CurrentGoals
  fullName: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
- uid: TinyLife.Goals.LifeGoal.Stages
  commentId: F:TinyLife.Goals.LifeGoal.Stages
  isExternal: true
- uid: TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  commentId: P:TinyLife.Goals.LifeGoal.Instance.CurrentGoals
  isExternal: true
- uid: TinyLife.Goals.GoalSetInfo
  commentId: T:TinyLife.Goals.GoalSetInfo
  parent: TinyLife.Goals
  name: GoalSetInfo
  nameWithType: GoalSetInfo
  fullName: TinyLife.Goals.GoalSetInfo
- uid: TinyLife.Goals.LifeGoal.Instance.Stage
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Stage
  isExternal: true
- uid: TinyLife.Goals.LifeGoal.Instance.Completed
  commentId: P:TinyLife.Goals.LifeGoal.Instance.Completed
  isExternal: true
- uid: TinyLife.Goals.LifeGoal.Instance.StageIndex*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.StageIndex
  name: StageIndex
  nameWithType: LifeGoal.Instance.StageIndex
  fullName: TinyLife.Goals.LifeGoal.Instance.StageIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.Goals.LifeGoal.Instance.Person*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Person
  name: Person
  nameWithType: LifeGoal.Instance.Person
  fullName: TinyLife.Goals.LifeGoal.Instance.Person
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Goals.LifeGoal.Instance.Stage*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Stage
  name: Stage
  nameWithType: LifeGoal.Instance.Stage
  fullName: TinyLife.Goals.LifeGoal.Instance.Stage
- uid: TinyLife.Goals.LifeGoal.Instance.Completed*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Completed
  name: Completed
  nameWithType: LifeGoal.Instance.Completed
  fullName: TinyLife.Goals.LifeGoal.Instance.Completed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.Goals.LifeGoal.Instance.#ctor*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.#ctor
  name: Instance
  nameWithType: LifeGoal.Instance.Instance
  fullName: TinyLife.Goals.LifeGoal.Instance.Instance
- uid: TinyLife.Goals.LifeGoal.Instance.Advance
  commentId: M:TinyLife.Goals.LifeGoal.Instance.Advance
  isExternal: true
- uid: TinyLife.Goals.LifeGoal.Instance.Update*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Update
  name: Update
  nameWithType: LifeGoal.Instance.Update
  fullName: TinyLife.Goals.LifeGoal.Instance.Update
- uid: TinyLife.Goals.LifeGoal.Instance.Advance*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Advance
  name: Advance
  nameWithType: LifeGoal.Instance.Advance
  fullName: TinyLife.Goals.LifeGoal.Instance.Advance
- uid: TinyLife.Goals.LifeGoal.Instance.Validate*
  commentId: Overload:TinyLife.Goals.LifeGoal.Instance.Validate
  name: Validate
  nameWithType: LifeGoal.Instance.Validate
  fullName: TinyLife.Goals.LifeGoal.Instance.Validate
