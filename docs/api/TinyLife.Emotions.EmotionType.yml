### YamlMime:ManagedReference
items:
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  id: EmotionType
  parent: TinyLife.Emotions
  children:
  - TinyLife.Emotions.EmotionType.#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory)
  - TinyLife.Emotions.EmotionType.Angry
  - TinyLife.Emotions.EmotionType.Asleep
  - TinyLife.Emotions.EmotionType.Bored
  - TinyLife.Emotions.EmotionType.Category
  - TinyLife.Emotions.EmotionType.Color
  - TinyLife.Emotions.EmotionType.Confident
  - TinyLife.Emotions.EmotionType.Creative
  - TinyLife.Emotions.EmotionType.Embarrassed
  - TinyLife.Emotions.EmotionType.Energetic
  - TinyLife.Emotions.EmotionType.Fine
  - TinyLife.Emotions.EmotionType.Focused
  - TinyLife.Emotions.EmotionType.Frisky
  - TinyLife.Emotions.EmotionType.Goofy
  - TinyLife.Emotions.EmotionType.Happy
  - TinyLife.Emotions.EmotionType.Icon
  - TinyLife.Emotions.EmotionType.Name
  - TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  - TinyLife.Emotions.EmotionType.Relaxed
  - TinyLife.Emotions.EmotionType.Sad
  - TinyLife.Emotions.EmotionType.Stunned
  - TinyLife.Emotions.EmotionType.Types
  - TinyLife.Emotions.EmotionType.Uncomfortable
  - TinyLife.Emotions.EmotionType.Uneasy
  langs:
  - csharp
  - vb
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
  type: Class
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EmotionType
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nAn emotion type is a type of feeling that a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> can have.\nThe emotion that a person has results from that person&apos;s applied <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"TinyLife.Emotions.EmotionModifier.Instance\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(StaticJsonConverter<EmotionType>), new object[] { typeof(EmotionType), "PrivateTypes" })]

      public class EmotionType
    content.vb: >-
      <JsonConverter(GetType(StaticJsonConverter(Of EmotionType)), New Object() { GetType(EmotionType), "PrivateTypes" })>

      Public Class EmotionType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Emotions.EmotionType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Emotions.EmotionType.Types
  commentId: F:TinyLife.Emotions.EmotionType.Types
  id: Types
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: EmotionType.Types
  fullName: TinyLife.Emotions.EmotionType.Types
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Types
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA registry of all <xref href=\"TinyLife.Emotions.EmotionType\" data-throw-if-not-resolved=\"false\"></xref> instances from the game and mods\n"
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, EmotionType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Emotions.EmotionType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, EmotionType)
- uid: TinyLife.Emotions.EmotionType.Fine
  commentId: F:TinyLife.Emotions.EmotionType.Fine
  id: Fine
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Fine
  nameWithType: EmotionType.Fine
  fullName: TinyLife.Emotions.EmotionType.Fine
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Fine
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Fine
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Fine As EmotionType
- uid: TinyLife.Emotions.EmotionType.Uncomfortable
  commentId: F:TinyLife.Emotions.EmotionType.Uncomfortable
  id: Uncomfortable
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Uncomfortable
  nameWithType: EmotionType.Uncomfortable
  fullName: TinyLife.Emotions.EmotionType.Uncomfortable
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Uncomfortable
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Uncomfortable
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Uncomfortable As EmotionType
- uid: TinyLife.Emotions.EmotionType.Asleep
  commentId: F:TinyLife.Emotions.EmotionType.Asleep
  id: Asleep
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Asleep
  nameWithType: EmotionType.Asleep
  fullName: TinyLife.Emotions.EmotionType.Asleep
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Asleep
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Asleep
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Asleep As EmotionType
- uid: TinyLife.Emotions.EmotionType.Happy
  commentId: F:TinyLife.Emotions.EmotionType.Happy
  id: Happy
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Happy
  nameWithType: EmotionType.Happy
  fullName: TinyLife.Emotions.EmotionType.Happy
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Happy
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Happy
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Happy As EmotionType
- uid: TinyLife.Emotions.EmotionType.Embarrassed
  commentId: F:TinyLife.Emotions.EmotionType.Embarrassed
  id: Embarrassed
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Embarrassed
  nameWithType: EmotionType.Embarrassed
  fullName: TinyLife.Emotions.EmotionType.Embarrassed
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Embarrassed
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Embarrassed
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Embarrassed As EmotionType
- uid: TinyLife.Emotions.EmotionType.Sad
  commentId: F:TinyLife.Emotions.EmotionType.Sad
  id: Sad
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Sad
  nameWithType: EmotionType.Sad
  fullName: TinyLife.Emotions.EmotionType.Sad
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Sad
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Sad
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Sad As EmotionType
- uid: TinyLife.Emotions.EmotionType.Bored
  commentId: F:TinyLife.Emotions.EmotionType.Bored
  id: Bored
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Bored
  nameWithType: EmotionType.Bored
  fullName: TinyLife.Emotions.EmotionType.Bored
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Bored
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Bored
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Bored As EmotionType
- uid: TinyLife.Emotions.EmotionType.Frisky
  commentId: F:TinyLife.Emotions.EmotionType.Frisky
  id: Frisky
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Frisky
  nameWithType: EmotionType.Frisky
  fullName: TinyLife.Emotions.EmotionType.Frisky
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Frisky
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Frisky
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Frisky As EmotionType
- uid: TinyLife.Emotions.EmotionType.Creative
  commentId: F:TinyLife.Emotions.EmotionType.Creative
  id: Creative
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Creative
  nameWithType: EmotionType.Creative
  fullName: TinyLife.Emotions.EmotionType.Creative
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Creative
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Creative
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Creative As EmotionType
- uid: TinyLife.Emotions.EmotionType.Focused
  commentId: F:TinyLife.Emotions.EmotionType.Focused
  id: Focused
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Focused
  nameWithType: EmotionType.Focused
  fullName: TinyLife.Emotions.EmotionType.Focused
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Focused
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Focused
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Focused As EmotionType
- uid: TinyLife.Emotions.EmotionType.Stunned
  commentId: F:TinyLife.Emotions.EmotionType.Stunned
  id: Stunned
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Stunned
  nameWithType: EmotionType.Stunned
  fullName: TinyLife.Emotions.EmotionType.Stunned
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Stunned
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Stunned
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Stunned As EmotionType
- uid: TinyLife.Emotions.EmotionType.Angry
  commentId: F:TinyLife.Emotions.EmotionType.Angry
  id: Angry
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Angry
  nameWithType: EmotionType.Angry
  fullName: TinyLife.Emotions.EmotionType.Angry
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Angry
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Angry
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Angry As EmotionType
- uid: TinyLife.Emotions.EmotionType.Energetic
  commentId: F:TinyLife.Emotions.EmotionType.Energetic
  id: Energetic
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Energetic
  nameWithType: EmotionType.Energetic
  fullName: TinyLife.Emotions.EmotionType.Energetic
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Energetic
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Energetic
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Energetic As EmotionType
- uid: TinyLife.Emotions.EmotionType.Uneasy
  commentId: F:TinyLife.Emotions.EmotionType.Uneasy
  id: Uneasy
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Uneasy
  nameWithType: EmotionType.Uneasy
  fullName: TinyLife.Emotions.EmotionType.Uneasy
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Uneasy
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Uneasy
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Uneasy As EmotionType
- uid: TinyLife.Emotions.EmotionType.Relaxed
  commentId: F:TinyLife.Emotions.EmotionType.Relaxed
  id: Relaxed
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Relaxed
  nameWithType: EmotionType.Relaxed
  fullName: TinyLife.Emotions.EmotionType.Relaxed
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Relaxed
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Relaxed
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Relaxed As EmotionType
- uid: TinyLife.Emotions.EmotionType.Confident
  commentId: F:TinyLife.Emotions.EmotionType.Confident
  id: Confident
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Confident
  nameWithType: EmotionType.Confident
  fullName: TinyLife.Emotions.EmotionType.Confident
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Confident
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Confident
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Confident As EmotionType
- uid: TinyLife.Emotions.EmotionType.Goofy
  commentId: F:TinyLife.Emotions.EmotionType.Goofy
  id: Goofy
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Goofy
  nameWithType: EmotionType.Goofy
  fullName: TinyLife.Emotions.EmotionType.Goofy
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Goofy
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  syntax:
    content: public static readonly EmotionType Goofy
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public Shared ReadOnly Goofy As EmotionType
- uid: TinyLife.Emotions.EmotionType.Name
  commentId: F:TinyLife.Emotions.EmotionType.Name
  id: Name
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EmotionType.Name
  fullName: TinyLife.Emotions.EmotionType.Name
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nThis emotion&apos;s name\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.Emotions.EmotionType.Icon
  commentId: F:TinyLife.Emotions.EmotionType.Icon
  id: Icon
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: EmotionType.Icon
  fullName: TinyLife.Emotions.EmotionType.Icon
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Icon
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nThis emotion&apos;s icon, which is used in the portrait section for a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> that has this emotion\n"
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.Emotions.EmotionType.Color
  commentId: F:TinyLife.Emotions.EmotionType.Color
  id: Color
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: EmotionType.Color
  fullName: TinyLife.Emotions.EmotionType.Color
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Color
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 57
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nThe color that represents this emotion.\nThe color is used as a backdrop for <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> instances of this type.\n"
  example: []
  syntax:
    content: public readonly Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public ReadOnly Color As Color
- uid: TinyLife.Emotions.EmotionType.Category
  commentId: F:TinyLife.Emotions.EmotionType.Category
  id: Category
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: EmotionType.Category
  fullName: TinyLife.Emotions.EmotionType.Category
  type: Field
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Category
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nThe <xref href=\"TinyLife.Emotions.EmotionType.TypeCategory\" data-throw-if-not-resolved=\"false\"></xref> that this emotion type fits into.\nThe category is used for ordering and organizing <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public readonly EmotionType.TypeCategory Category
    return:
      type: TinyLife.Emotions.EmotionType.TypeCategory
    content.vb: Public ReadOnly Category As EmotionType.TypeCategory
- uid: TinyLife.Emotions.EmotionType.#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory)
  commentId: M:TinyLife.Emotions.EmotionType.#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory)
  id: '#ctor(System.String,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color,TinyLife.Emotions.EmotionType.TypeCategory)'
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: EmotionType(string, TextureRegion, Color, TypeCategory)
  nameWithType: EmotionType.EmotionType(string, TextureRegion, Color, EmotionType.TypeCategory)
  fullName: TinyLife.Emotions.EmotionType.EmotionType(string, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, TinyLife.Emotions.EmotionType.TypeCategory)
  type: Constructor
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 71
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nCreates a new emotion type with the given settings\n"
  example: []
  syntax:
    content: public EmotionType(string name, TextureRegion icon, Color color, EmotionType.TypeCategory category)
    parameters:
    - id: name
      type: System.String
      description: The emotion type&apos;s name
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The emotion type&apos;s icon
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The emotion type&apos;s color
    - id: category
      type: TinyLife.Emotions.EmotionType.TypeCategory
      description: This emotion type&apos;s category
    content.vb: Public Sub New(name As String, icon As TextureRegion, color As Color, category As EmotionType.TypeCategory)
  overload: TinyLife.Emotions.EmotionType.#ctor*
  nameWithType.vb: EmotionType.New(String, TextureRegion, Color, EmotionType.TypeCategory)
  fullName.vb: TinyLife.Emotions.EmotionType.New(String, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color, TinyLife.Emotions.EmotionType.TypeCategory)
  name.vb: New(String, TextureRegion, Color, TypeCategory)
- uid: TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  commentId: M:TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  id: Register(TinyLife.Emotions.EmotionType)
  parent: TinyLife.Emotions.EmotionType
  langs:
  - csharp
  - vb
  name: Register(EmotionType)
  nameWithType: EmotionType.Register(EmotionType)
  fullName: TinyLife.Emotions.EmotionType.Register(TinyLife.Emotions.EmotionType)
  type: Method
  source:
    remote:
      path: TinyLife/Emotions/EmotionType.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/Emotions/EmotionType.cs
    startLine: 83
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nRegisters the given emotion type to the <xref href=\"TinyLife.Emotions.EmotionType.Types\" data-throw-if-not-resolved=\"false\"></xref> registry\n"
  example: []
  syntax:
    content: public static EmotionType Register(EmotionType type)
    parameters:
    - id: type
      type: TinyLife.Emotions.EmotionType
      description: The type to register
    return:
      type: TinyLife.Emotions.EmotionType
      description: The passed type, for chaining
    content.vb: Public Shared Function Register(type As EmotionType) As EmotionType
  overload: TinyLife.Emotions.EmotionType.Register*
references:
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Emotions.EmotionModifier.Instance
  commentId: T:TinyLife.Emotions.EmotionModifier.Instance
  parent: TinyLife.Emotions
  name: EmotionModifier.Instance
  nameWithType: EmotionModifier.Instance
  fullName: TinyLife.Emotions.EmotionModifier.Instance
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
  spec.vb:
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
  - name: .
  - uid: TinyLife.Emotions.EmotionModifier.Instance
    name: Instance
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Emotions.EmotionType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<EmotionType>(EmotionType)
  nameWithType: Extensions.JsonCopy<EmotionType>(EmotionType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.EmotionType>(TinyLife.Emotions.EmotionType)
  nameWithType.vb: Extensions.JsonCopy(Of EmotionType)(EmotionType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.EmotionType)(TinyLife.Emotions.EmotionType)
  name.vb: JsonCopy(Of EmotionType)(EmotionType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Emotions.EmotionType)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: '>'
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Emotions.EmotionType)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: )
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  parent: TinyLife.Emotions
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Emotions.EmotionType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Emotions.EmotionType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, EmotionType>
  nameWithType: ReadOnlyDictionary<string, EmotionType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Emotions.EmotionType>
  nameWithType.vb: ReadOnlyDictionary(Of String, EmotionType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Emotions.EmotionType)
  name.vb: ReadOnlyDictionary(Of String, EmotionType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Emotions.EmotionType.TypeCategory
  commentId: T:TinyLife.Emotions.EmotionType.TypeCategory
  parent: TinyLife.Emotions
  name: EmotionType.TypeCategory
  nameWithType: EmotionType.TypeCategory
  fullName: TinyLife.Emotions.EmotionType.TypeCategory
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: .
  - uid: TinyLife.Emotions.EmotionType.TypeCategory
    name: TypeCategory
  spec.vb:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: .
  - uid: TinyLife.Emotions.EmotionType.TypeCategory
    name: TypeCategory
- uid: TinyLife.Emotions.EmotionType.#ctor*
  commentId: Overload:TinyLife.Emotions.EmotionType.#ctor
  name: EmotionType
  nameWithType: EmotionType.EmotionType
  fullName: TinyLife.Emotions.EmotionType.EmotionType
  nameWithType.vb: EmotionType.New
  fullName.vb: TinyLife.Emotions.EmotionType.New
  name.vb: New
- uid: TinyLife.Emotions.EmotionType.Types
  commentId: F:TinyLife.Emotions.EmotionType.Types
  name: Types
  nameWithType: EmotionType.Types
  fullName: TinyLife.Emotions.EmotionType.Types
- uid: TinyLife.Emotions.EmotionType.Register*
  commentId: Overload:TinyLife.Emotions.EmotionType.Register
  name: Register
  nameWithType: EmotionType.Register
  fullName: TinyLife.Emotions.EmotionType.Register
