### YamlMime:ManagedReference
items:
- uid: TinyLife.World.RoofType
  commentId: T:TinyLife.World.RoofType
  id: RoofType
  parent: TinyLife.World
  children:
  - TinyLife.World.RoofType.#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme,TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)
  - TinyLife.World.RoofType.#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme[],TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)
  - TinyLife.World.RoofType.Colors
  - TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  - TinyLife.World.RoofType.DrawUi(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Int32[],System.Single)
  - TinyLife.World.RoofType.FlatSheetMetal
  - TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  - TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  - TinyLife.World.RoofType.Icon
  - TinyLife.World.RoofType.ModernFlat
  - TinyLife.World.RoofType.Name
  - TinyLife.World.RoofType.OldStyleFlat
  - TinyLife.World.RoofType.Price
  - TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  - TinyLife.World.RoofType.RoundedShingles
  - TinyLife.World.RoofType.SheetMetal
  - TinyLife.World.RoofType.SquareShingles
  - TinyLife.World.RoofType.Style
  - TinyLife.World.RoofType.TextureRegion
  - TinyLife.World.RoofType.Textures
  - TinyLife.World.RoofType.Thatch
  - TinyLife.World.RoofType.Types
  langs:
  - csharp
  - vb
  name: RoofType
  nameWithType: RoofType
  fullName: TinyLife.World.RoofType
  type: Class
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoofType
    path: ../TinyLife/World/Roof.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA roof type stores settings and configurations for <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> instances.\nTo register a new roof type, use <xref href=\"TinyLife.World.RoofType.Register(TinyLife.World.RoofType)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(StaticJsonConverter<RoofType>), new object[] { typeof(RoofType), "PrivateTypes" })]

      public class RoofType
    content.vb: >-
      <JsonConverter(GetType(StaticJsonConverter(Of RoofType)), New Object() { GetType(RoofType), "PrivateTypes" })>

      Public Class RoofType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.RoofType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.RoofType.Types
  commentId: F:TinyLife.World.RoofType.Types
  id: Types
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: RoofType.Types
  fullName: TinyLife.World.RoofType.Types
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Types
    path: ../TinyLife/World/Roof.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA registry of all of the <xref href=\"TinyLife.World.RoofType\" data-throw-if-not-resolved=\"false\"></xref> instances that are currently registered\n"
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, RoofType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.RoofType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, RoofType)
- uid: TinyLife.World.RoofType.ModernFlat
  commentId: F:TinyLife.World.RoofType.ModernFlat
  id: ModernFlat
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: ModernFlat
  nameWithType: RoofType.ModernFlat
  fullName: TinyLife.World.RoofType.ModernFlat
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ModernFlat
    path: ../TinyLife/World/Roof.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType ModernFlat
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly ModernFlat As RoofType
- uid: TinyLife.World.RoofType.OldStyleFlat
  commentId: F:TinyLife.World.RoofType.OldStyleFlat
  id: OldStyleFlat
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: OldStyleFlat
  nameWithType: RoofType.OldStyleFlat
  fullName: TinyLife.World.RoofType.OldStyleFlat
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OldStyleFlat
    path: ../TinyLife/World/Roof.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType OldStyleFlat
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly OldStyleFlat As RoofType
- uid: TinyLife.World.RoofType.SquareShingles
  commentId: F:TinyLife.World.RoofType.SquareShingles
  id: SquareShingles
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: SquareShingles
  nameWithType: RoofType.SquareShingles
  fullName: TinyLife.World.RoofType.SquareShingles
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SquareShingles
    path: ../TinyLife/World/Roof.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType SquareShingles
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly SquareShingles As RoofType
- uid: TinyLife.World.RoofType.SheetMetal
  commentId: F:TinyLife.World.RoofType.SheetMetal
  id: SheetMetal
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: SheetMetal
  nameWithType: RoofType.SheetMetal
  fullName: TinyLife.World.RoofType.SheetMetal
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SheetMetal
    path: ../TinyLife/World/Roof.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType SheetMetal
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly SheetMetal As RoofType
- uid: TinyLife.World.RoofType.FlatSheetMetal
  commentId: F:TinyLife.World.RoofType.FlatSheetMetal
  id: FlatSheetMetal
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: FlatSheetMetal
  nameWithType: RoofType.FlatSheetMetal
  fullName: TinyLife.World.RoofType.FlatSheetMetal
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FlatSheetMetal
    path: ../TinyLife/World/Roof.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType FlatSheetMetal
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly FlatSheetMetal As RoofType
- uid: TinyLife.World.RoofType.Thatch
  commentId: F:TinyLife.World.RoofType.Thatch
  id: Thatch
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Thatch
  nameWithType: RoofType.Thatch
  fullName: TinyLife.World.RoofType.Thatch
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Thatch
    path: ../TinyLife/World/Roof.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType Thatch
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly Thatch As RoofType
- uid: TinyLife.World.RoofType.RoundedShingles
  commentId: F:TinyLife.World.RoofType.RoundedShingles
  id: RoundedShingles
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: RoundedShingles
  nameWithType: RoofType.RoundedShingles
  fullName: TinyLife.World.RoofType.RoundedShingles
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoundedShingles
    path: ../TinyLife/World/Roof.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  syntax:
    content: public static readonly RoofType RoundedShingles
    return:
      type: TinyLife.World.RoofType
    content.vb: Public Shared ReadOnly RoundedShingles As RoofType
- uid: TinyLife.World.RoofType.Name
  commentId: F:TinyLife.World.RoofType.Name
  id: Name
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoofType.Name
  fullName: TinyLife.World.RoofType.Name
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Name
    path: ../TinyLife/World/Roof.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe name of this roof type, which is used to store it to disk\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
- uid: TinyLife.World.RoofType.Price
  commentId: F:TinyLife.World.RoofType.Price
  id: Price
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: RoofType.Price
  fullName: TinyLife.World.RoofType.Price
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Price
    path: ../TinyLife/World/Roof.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe price of a 1x1 rectangle of this roof type\n"
  example: []
  syntax:
    content: public readonly int Price
    return:
      type: System.Int32
    content.vb: Public ReadOnly Price As Integer
- uid: TinyLife.World.RoofType.Colors
  commentId: F:TinyLife.World.RoofType.Colors
  id: Colors
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Colors
  nameWithType: RoofType.Colors
  fullName: TinyLife.World.RoofType.Colors
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Colors
    path: ../TinyLife/World/Roof.cs
    startLine: 56
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe color scheme that this roof type can have.\n"
  example: []
  syntax:
    content: public readonly ColorScheme[] Colors
    return:
      type: TinyLife.Utilities.ColorScheme[]
    content.vb: Public ReadOnly Colors As ColorScheme()
- uid: TinyLife.World.RoofType.Textures
  commentId: F:TinyLife.World.RoofType.Textures
  id: Textures
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Textures
  nameWithType: RoofType.Textures
  fullName: TinyLife.World.RoofType.Textures
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Textures
    path: ../TinyLife/World/Roof.cs
    startLine: 60
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe textures that the <xref href=\"TinyLife.World.RoofType.TextureRegion\" data-throw-if-not-resolved=\"false\"></xref> should read from.\n"
  example: []
  syntax:
    content: public readonly IReadOnlyDictionary<Point, TextureRegion> Textures
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    content.vb: Public ReadOnly Textures As IReadOnlyDictionary(Of Point, TextureRegion)
- uid: TinyLife.World.RoofType.TextureRegion
  commentId: F:TinyLife.World.RoofType.TextureRegion
  id: TextureRegion
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: TextureRegion
  nameWithType: RoofType.TextureRegion
  fullName: TinyLife.World.RoofType.TextureRegion
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TextureRegion
    path: ../TinyLife/World/Roof.cs
    startLine: 64
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe initial, top-left texture region of this roof, which will be gathered from <xref href=\"TinyLife.World.RoofType.Textures\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly Point TextureRegion
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public ReadOnly TextureRegion As Point
- uid: TinyLife.World.RoofType.Style
  commentId: F:TinyLife.World.RoofType.Style
  id: Style
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: RoofType.Style
  fullName: TinyLife.World.RoofType.Style
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Style
    path: ../TinyLife/World/Roof.cs
    startLine: 69
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe <xref href=\"TinyLife.World.RoofStyle\" data-throw-if-not-resolved=\"false\"></xref> that this roof has.\nIf <xref href=\"TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch%2cTinyLife.World.Map%2cMicrosoft.Xna.Framework.Rectangle%2cMLEM.Misc.Direction2%2cSystem.Int32%5b%5d%2cTinyLife.World.Wallpaper%2cSystem.Single%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Color%7d)\" data-throw-if-not-resolved=\"false\"></xref> has completely custom behavior, the roof style is ignored, but can be set to <xref href=\"TinyLife.World.RoofStyle.Custom\" data-throw-if-not-resolved=\"false\"></xref> to signal this behavior to other mods.\n"
  example: []
  syntax:
    content: public readonly RoofStyle Style
    return:
      type: TinyLife.World.RoofStyle
    content.vb: Public ReadOnly Style As RoofStyle
- uid: TinyLife.World.RoofType.Icon
  commentId: F:TinyLife.World.RoofType.Icon
  id: Icon
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: RoofType.Icon
  fullName: TinyLife.World.RoofType.Icon
  type: Field
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Icon
    path: ../TinyLife/World/Roof.cs
    startLine: 74
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe build mode icon for this object, which represents the category / theme / mod that it comes from.\nIf this value is nonnull, the icon will be displayed in the corner of the build mode button for this object.\n"
  example: []
  syntax:
    content: public readonly TextureRegion Icon
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Icon As TextureRegion
- uid: TinyLife.World.RoofType.#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme[],TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.World.RoofType.#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme[],TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)
  id: '#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme[],TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)'
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: RoofType(string, int, ColorScheme[], RoofStyle, IReadOnlyDictionary<Point, TextureRegion>, Point, TextureRegion)
  nameWithType: RoofType.RoofType(string, int, ColorScheme[], RoofStyle, IReadOnlyDictionary<Point, TextureRegion>, Point, TextureRegion)
  fullName: TinyLife.World.RoofType.RoofType(string, int, TinyLife.Utilities.ColorScheme[], TinyLife.World.RoofStyle, System.Collections.Generic.IReadOnlyDictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/Roof.cs
    startLine: 86
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new roof type with the given settings\n"
  example: []
  syntax:
    content: public RoofType(string name, int price, ColorScheme[] colors, RoofStyle style, IReadOnlyDictionary<Point, TextureRegion> textures, Point textureRegion, TextureRegion icon = null)
    parameters:
    - id: name
      type: System.String
      description: The name that this roof type should have
    - id: price
      type: System.Int32
      description: The price for a 1x1 area of this roof type
    - id: colors
      type: TinyLife.Utilities.ColorScheme[]
      description: The color scheme that this roof type can have
    - id: style
      type: TinyLife.World.RoofStyle
      description: The <xref href="TinyLife.World.RoofStyle" data-throw-if-not-resolved="false"></xref> that this roof has
    - id: textures
      type: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The textures that the <code data-dev-comment-type="paramref" class="paramref">textureRegion</code> should read from.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The initial, top-left texture region of this roof, which will be gathered from <code data-dev-comment-type="paramref" class="paramref">textures</code>.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon that this roof should have in build mode
    content.vb: Public Sub New(name As String, price As Integer, colors As ColorScheme(), style As RoofStyle, textures As IReadOnlyDictionary(Of Point, TextureRegion), textureRegion As Point, icon As TextureRegion = Nothing)
  overload: TinyLife.World.RoofType.#ctor*
  nameWithType.vb: RoofType.New(String, Integer, ColorScheme(), RoofStyle, IReadOnlyDictionary(Of Point, TextureRegion), Point, TextureRegion)
  fullName.vb: TinyLife.World.RoofType.New(String, Integer, TinyLife.Utilities.ColorScheme(), TinyLife.World.RoofStyle, System.Collections.Generic.IReadOnlyDictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: New(String, Integer, ColorScheme(), RoofStyle, IReadOnlyDictionary(Of Point, TextureRegion), Point, TextureRegion)
- uid: TinyLife.World.RoofType.#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme,TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.World.RoofType.#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme,TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)
  id: '#ctor(System.String,System.Int32,TinyLife.Utilities.ColorScheme,TinyLife.World.RoofStyle,System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion)'
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: RoofType(string, int, ColorScheme, RoofStyle, IReadOnlyDictionary<Point, TextureRegion>, Point, TextureRegion)
  nameWithType: RoofType.RoofType(string, int, ColorScheme, RoofStyle, IReadOnlyDictionary<Point, TextureRegion>, Point, TextureRegion)
  fullName: TinyLife.World.RoofType.RoofType(string, int, TinyLife.Utilities.ColorScheme, TinyLife.World.RoofStyle, System.Collections.Generic.IReadOnlyDictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/Roof.cs
    startLine: 106
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new roof type with the given settings\n"
  example: []
  syntax:
    content: public RoofType(string name, int price, ColorScheme color, RoofStyle style, IReadOnlyDictionary<Point, TextureRegion> textures, Point textureRegion, TextureRegion icon = null)
    parameters:
    - id: name
      type: System.String
      description: The name that this roof type should have
    - id: price
      type: System.Int32
      description: The price for a 1x1 area of this roof type
    - id: color
      type: TinyLife.Utilities.ColorScheme
      description: The color scheme that this roof type can have
    - id: style
      type: TinyLife.World.RoofStyle
      description: The <xref href="TinyLife.World.RoofStyle" data-throw-if-not-resolved="false"></xref> that this roof has
    - id: textures
      type: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
      description: The textures that the <code data-dev-comment-type="paramref" class="paramref">textureRegion</code> should read from.
    - id: textureRegion
      type: Microsoft.Xna.Framework.Point
      description: The initial, top-left texture region of this roof, which will be gathered from <code data-dev-comment-type="paramref" class="paramref">textures</code>.
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon that this roof should have in build mode
    content.vb: Public Sub New(name As String, price As Integer, color As ColorScheme, style As RoofStyle, textures As IReadOnlyDictionary(Of Point, TextureRegion), textureRegion As Point, icon As TextureRegion = Nothing)
  overload: TinyLife.World.RoofType.#ctor*
  nameWithType.vb: RoofType.New(String, Integer, ColorScheme, RoofStyle, IReadOnlyDictionary(Of Point, TextureRegion), Point, TextureRegion)
  fullName.vb: TinyLife.World.RoofType.New(String, Integer, TinyLife.Utilities.ColorScheme, TinyLife.World.RoofStyle, System.Collections.Generic.IReadOnlyDictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: New(String, Integer, ColorScheme, RoofStyle, IReadOnlyDictionary(Of Point, TextureRegion), Point, TextureRegion)
- uid: TinyLife.World.RoofType.DrawUi(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Int32[],System.Single)
  commentId: M:TinyLife.World.RoofType.DrawUi(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Int32[],System.Single)
  id: DrawUi(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Ui.Elements.Element,System.Int32[],System.Single)
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: DrawUi(SpriteBatch, Element, int[], float)
  nameWithType: RoofType.DrawUi(SpriteBatch, Element, int[], float)
  fullName: TinyLife.World.RoofType.DrawUi(Microsoft.Xna.Framework.Graphics.SpriteBatch, MLEM.Ui.Elements.Element, int[], float)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DrawUi
    path: ../TinyLife/World/Roof.cs
    startLine: 116
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws a <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> in ui space, only drawing a 1x1 area of it\n"
  example: []
  syntax:
    content: public virtual void DrawUi(SpriteBatch batch, Element element, int[] colorIndices, float drawScale)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to draw the roof on
    - id: colorIndices
      type: System.Int32[]
      description: The color indices in this roof&apos;s <xref href="TinyLife.World.RoofType.Colors" data-throw-if-not-resolved="false"></xref>.
    - id: drawScale
      type: System.Single
      description: The scale to draw the roof with
    content.vb: Public Overridable Sub DrawUi(batch As SpriteBatch, element As Element, colorIndices As Integer(), drawScale As Single)
  overload: TinyLife.World.RoofType.DrawUi*
  nameWithType.vb: RoofType.DrawUi(SpriteBatch, Element, Integer(), Single)
  fullName.vb: TinyLife.World.RoofType.DrawUi(Microsoft.Xna.Framework.Graphics.SpriteBatch, MLEM.Ui.Elements.Element, Integer(), Single)
  name.vb: DrawUi(SpriteBatch, Element, Integer(), Single)
- uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, int[], Wallpaper, float, Color?)
  nameWithType: RoofType.Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, int[], Wallpaper, float, Color?)
  fullName: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, int[], TinyLife.World.Wallpaper, float, Microsoft.Xna.Framework.Color?)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/World/Roof.cs
    startLine: 138
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws the given <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> in world space\n"
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch, Map map, Rectangle area, Direction2 rotation, int[] colorIndices, Wallpaper wallpaper, float depthOffset = 0, Color? overrideColor = null)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s current time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    - id: map
      type: TinyLife.World.Map
      description: The map to draw on
    - id: area
      type: Microsoft.Xna.Framework.Rectangle
      description: The area the roof covers
    - id: rotation
      type: MLEM.Misc.Direction2
      description: The roof&apos;s rotation
    - id: colorIndices
      type: System.Int32[]
      description: The color indices in this roof&apos;s <xref href="TinyLife.World.RoofType.Colors" data-throw-if-not-resolved="false"></xref>.
    - id: wallpaper
      type: TinyLife.World.Wallpaper
      description: The wallpaper applied to the roof
    - id: depthOffset
      type: System.Single
      description: The value that should be added to the depth of this roof
    - id: overrideColor
      type: System.Nullable{Microsoft.Xna.Framework.Color}
      description: An override color that should be used instead of this roof&apos;s color, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to use the roof&apos;s color.
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch, map As Map, area As Rectangle, rotation As Direction2, colorIndices As Integer(), wallpaper As Wallpaper, depthOffset As Single = 0, overrideColor As Color? = Nothing)
  overload: TinyLife.World.RoofType.Draw*
  nameWithType.vb: RoofType.Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, Integer(), Wallpaper, Single, Color?)
  fullName.vb: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, Integer(), TinyLife.World.Wallpaper, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, Integer(), Wallpaper, Single, Color?)
- uid: TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  id: GetGableOffset(Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: GetGableOffset(Rectangle, Direction2, Point)
  nameWithType: RoofType.GetGableOffset(Rectangle, Direction2, Point)
  fullName: TinyLife.World.RoofType.GetGableOffset(Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetGableOffset
    path: ../TinyLife/World/Roof.cs
    startLine: 221
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nReturns the gable offset that <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> attached to this roof should be displayed with.\nBy default, this method returns an offset for roofs with the <xref href=\"TinyLife.World.RoofStyle.Gable\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"TinyLife.World.RoofType.Style\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual int GetGableOffset(Rectangle area, Direction2 rotation, Point innerPos)
    parameters:
    - id: area
      type: Microsoft.Xna.Framework.Rectangle
      description: The area that the roof covers.
    - id: rotation
      type: MLEM.Misc.Direction2
      description: The roof&apos;s rotation.
    - id: innerPos
      type: Microsoft.Xna.Framework.Point
      description: The position in the roof&apos;s <code data-dev-comment-type="paramref" class="paramref">area</code> that the object sits on.
    return:
      type: System.Int32
      description: The gable offset that this roof should have, in half tiles.
    content.vb: Public Overridable Function GetGableOffset(area As Rectangle, rotation As Direction2, innerPos As Point) As Integer
  overload: TinyLife.World.RoofType.GetGableOffset*
- uid: TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  commentId: M:TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  id: GetPrice(Microsoft.Xna.Framework.Rectangle)
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: GetPrice(Rectangle)
  nameWithType: RoofType.GetPrice(Rectangle)
  fullName: TinyLife.World.RoofType.GetPrice(Microsoft.Xna.Framework.Rectangle)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetPrice
    path: ../TinyLife/World/Roof.cs
    startLine: 239
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nReturns the price of this roof type for the given area.\nThis returns <xref href=\"TinyLife.World.RoofType.Price\" data-throw-if-not-resolved=\"false\"></xref>, multiplied by the area&apos;s size.\n"
  example: []
  syntax:
    content: public virtual int GetPrice(Rectangle area)
    parameters:
    - id: area
      type: Microsoft.Xna.Framework.Rectangle
      description: The area of roofing to get the price for
    return:
      type: System.Int32
      description: The price of the area
    content.vb: Public Overridable Function GetPrice(area As Rectangle) As Integer
  overload: TinyLife.World.RoofType.GetPrice*
- uid: TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  commentId: M:TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  id: Register(TinyLife.World.RoofType)
  parent: TinyLife.World.RoofType
  langs:
  - csharp
  - vb
  name: Register(RoofType)
  nameWithType: RoofType.Register(RoofType)
  fullName: TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  type: Method
  source:
    remote:
      path: TinyLife/World/Roof.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/World/Roof.cs
    startLine: 248
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nRegisters a new roof type with the given settings into the <xref href=\"TinyLife.World.RoofType.Types\" data-throw-if-not-resolved=\"false\"></xref> registry\n"
  example: []
  syntax:
    content: public static RoofType Register(RoofType type)
    parameters:
    - id: type
      type: TinyLife.World.RoofType
      description: The roof type to register
    return:
      type: TinyLife.World.RoofType
      description: The roof type passed, for chaining
    content.vb: Public Shared Function Register(type As RoofType) As RoofType
  overload: TinyLife.World.RoofType.Register*
references:
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  commentId: M:TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  name: Register(RoofType)
  nameWithType: RoofType.Register(RoofType)
  fullName: TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
  spec.csharp:
  - uid: TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
    name: Register
  - name: (
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: )
  spec.vb:
  - uid: TinyLife.World.RoofType.Register(TinyLife.World.RoofType)
    name: Register
  - name: (
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.RoofType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<RoofType>(RoofType)
  nameWithType: Extensions.JsonCopy<RoofType>(RoofType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.RoofType>(TinyLife.World.RoofType)
  nameWithType.vb: Extensions.JsonCopy(Of RoofType)(RoofType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.RoofType)(TinyLife.World.RoofType)
  name.vb: JsonCopy(Of RoofType)(RoofType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.RoofType)
    name: JsonCopy
  - name: <
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: '>'
  - name: (
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.RoofType)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: )
  - name: (
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.World.RoofType
  commentId: T:TinyLife.World.RoofType
  parent: TinyLife.World
  name: RoofType
  nameWithType: RoofType
  fullName: TinyLife.World.RoofType
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.RoofType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.World.RoofType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, RoofType>
  nameWithType: ReadOnlyDictionary<string, RoofType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.World.RoofType>
  nameWithType.vb: ReadOnlyDictionary(Of String, RoofType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.World.RoofType)
  name.vb: ReadOnlyDictionary(Of String, RoofType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.World.RoofType
    name: RoofType
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
- uid: TinyLife.World.RoofType.TextureRegion
  commentId: F:TinyLife.World.RoofType.TextureRegion
  name: TextureRegion
  nameWithType: RoofType.TextureRegion
  fullName: TinyLife.World.RoofType.TextureRegion
- uid: System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<Point, TextureRegion>
  nameWithType: IReadOnlyDictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.IReadOnlyDictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: IReadOnlyDictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: IReadOnlyDictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.World.RoofType.Textures
  commentId: F:TinyLife.World.RoofType.Textures
  name: Textures
  nameWithType: RoofType.Textures
  fullName: TinyLife.World.RoofType.Textures
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.RoofStyle
  commentId: T:TinyLife.World.RoofStyle
  parent: TinyLife.World
  name: RoofStyle
  nameWithType: RoofStyle
  fullName: TinyLife.World.RoofStyle
- uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  commentId: M:TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, int[], Wallpaper, float, Color?)
  nameWithType: RoofType.Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, int[], Wallpaper, float, Color?)
  fullName: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, int[], TinyLife.World.Wallpaper, float, Microsoft.Xna.Framework.Color?)
  nameWithType.vb: RoofType.Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, Integer(), Wallpaper, Single, Color?)
  fullName.vb: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, TinyLife.World.Map, Microsoft.Xna.Framework.Rectangle, MLEM.Misc.Direction2, Integer(), TinyLife.World.Wallpaper, Single, Microsoft.Xna.Framework.Color?)
  name.vb: Draw(GameTime, SpriteBatch, Map, Rectangle, Direction2, Integer(), Wallpaper, Single, Color?)
  spec.csharp:
  - uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.World.RoofType.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,TinyLife.World.Map,Microsoft.Xna.Framework.Rectangle,MLEM.Misc.Direction2,System.Int32[],TinyLife.World.Wallpaper,System.Single,System.Nullable{Microsoft.Xna.Framework.Color})
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.World.Wallpaper
    name: Wallpaper
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.World.RoofStyle.Custom
  commentId: F:TinyLife.World.RoofStyle.Custom
  name: Custom
  nameWithType: RoofStyle.Custom
  fullName: TinyLife.World.RoofStyle.Custom
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.World.RoofType.#ctor*
  commentId: Overload:TinyLife.World.RoofType.#ctor
  name: RoofType
  nameWithType: RoofType.RoofType
  fullName: TinyLife.World.RoofType.RoofType
  nameWithType.vb: RoofType.New
  fullName.vb: TinyLife.World.RoofType.New
  name.vb: New
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: TinyLife.World.RoofType.Colors
  commentId: F:TinyLife.World.RoofType.Colors
  name: Colors
  nameWithType: RoofType.Colors
  fullName: TinyLife.World.RoofType.Colors
- uid: TinyLife.World.RoofType.DrawUi*
  commentId: Overload:TinyLife.World.RoofType.DrawUi
  name: DrawUi
  nameWithType: RoofType.DrawUi
  fullName: TinyLife.World.RoofType.DrawUi
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.World.RoofType.Draw*
  commentId: Overload:TinyLife.World.RoofType.Draw
  name: Draw
  nameWithType: RoofType.Draw
  fullName: TinyLife.World.RoofType.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: System.Nullable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: Microsoft.Xna.Framework.Color?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.World.RoofStyle.Gable
  commentId: F:TinyLife.World.RoofStyle.Gable
  name: Gable
  nameWithType: RoofStyle.Gable
  fullName: TinyLife.World.RoofStyle.Gable
- uid: TinyLife.World.RoofType.Style
  commentId: F:TinyLife.World.RoofType.Style
  name: Style
  nameWithType: RoofType.Style
  fullName: TinyLife.World.RoofType.Style
- uid: TinyLife.World.RoofType.GetGableOffset*
  commentId: Overload:TinyLife.World.RoofType.GetGableOffset
  name: GetGableOffset
  nameWithType: RoofType.GetGableOffset
  fullName: TinyLife.World.RoofType.GetGableOffset
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.World.RoofType.Price
  commentId: F:TinyLife.World.RoofType.Price
  name: Price
  nameWithType: RoofType.Price
  fullName: TinyLife.World.RoofType.Price
- uid: TinyLife.World.RoofType.GetPrice*
  commentId: Overload:TinyLife.World.RoofType.GetPrice
  name: GetPrice
  nameWithType: RoofType.GetPrice
  fullName: TinyLife.World.RoofType.GetPrice
- uid: TinyLife.World.RoofType.Types
  commentId: F:TinyLife.World.RoofType.Types
  name: Types
  nameWithType: RoofType.Types
  fullName: TinyLife.World.RoofType.Types
- uid: TinyLife.World.RoofType.Register*
  commentId: Overload:TinyLife.World.RoofType.Register
  name: Register
  nameWithType: RoofType.Register
  fullName: TinyLife.World.RoofType.Register
