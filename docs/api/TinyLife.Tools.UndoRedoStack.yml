### YamlMime:ManagedReference
items:
- uid: TinyLife.Tools.UndoRedoStack
  commentId: T:TinyLife.Tools.UndoRedoStack
  id: UndoRedoStack
  parent: TinyLife.Tools
  children:
  - TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.UndoRedoStack.Clear
  - TinyLife.Tools.UndoRedoStack.Redo
  - TinyLife.Tools.UndoRedoStack.Undo
  langs:
  - csharp
  - vb
  name: UndoRedoStack
  nameWithType: UndoRedoStack
  fullName: TinyLife.Tools.UndoRedoStack
  type: Class
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UndoRedoStack
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 9
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nThe undo-redo stack controls undo and redo operations for various <xref href=\"TinyLife.Tools.Tool\" data-throw-if-not-resolved=\"false\"></xref> activities.\nTo add a new <xref href=\"TinyLife.Tools.UndoableAction\" data-throw-if-not-resolved=\"false\"></xref> to the stack, use <xref href=\"TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)\" data-throw-if-not-resolved=\"false\"></xref> or, more commonly, <xref href=\"TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class UndoRedoStack
    content.vb: Public Module UndoRedoStack
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)
  id: Add(TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.UndoRedoStack
  langs:
  - csharp
  - vb
  name: Add(UndoableAction)
  nameWithType: UndoRedoStack.Add(UndoableAction)
  fullName: TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Add
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nAdds the given <xref href=\"TinyLife.Tools.UndoableAction\" data-throw-if-not-resolved=\"false\"></xref> to the undo-redo stack.\nThis also clears all redoable actions out of the redo stack.\n"
  example: []
  syntax:
    content: public static void Add(UndoableAction action)
    parameters:
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The action to add.
    content.vb: Public Shared Sub Add(action As UndoableAction)
  overload: TinyLife.Tools.UndoRedoStack.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)
  id: AddAndExecute(TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.UndoRedoStack
  langs:
  - csharp
  - vb
  name: AddAndExecute(UndoableAction)
  nameWithType: UndoRedoStack.AddAndExecute(UndoableAction)
  fullName: TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AddAndExecute
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nAdds the given <xref href=\"TinyLife.Tools.UndoableAction\" data-throw-if-not-resolved=\"false\"></xref> to the undo-redo stack and executes its &quot;redo&quot; action right away.\nThis is useful for when the redo action is also the action that is executed initially, which is the case most of the time.\nThis also clears all redoable actions out of the redo stack.\n"
  example: []
  syntax:
    content: public static void AddAndExecute(UndoableAction action)
    parameters:
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The action to add and execute.
    content.vb: Public Shared Sub AddAndExecute(action As UndoableAction)
  overload: TinyLife.Tools.UndoRedoStack.AddAndExecute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Tools.UndoRedoStack.Undo
  commentId: M:TinyLife.Tools.UndoRedoStack.Undo
  id: Undo
  parent: TinyLife.Tools.UndoRedoStack
  langs:
  - csharp
  - vb
  name: Undo()
  nameWithType: UndoRedoStack.Undo()
  fullName: TinyLife.Tools.UndoRedoStack.Undo()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Undo
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nUndoes this undo-redo stack, undoing the most recent <xref href=\"TinyLife.Tools.UndoableAction\" data-throw-if-not-resolved=\"false\"></xref> and pushing it onto the redo stack.\n"
  example: []
  syntax:
    content: public static void Undo()
    content.vb: Public Shared Sub Undo
  overload: TinyLife.Tools.UndoRedoStack.Undo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Tools.UndoRedoStack.Redo
  commentId: M:TinyLife.Tools.UndoRedoStack.Redo
  id: Redo
  parent: TinyLife.Tools.UndoRedoStack
  langs:
  - csharp
  - vb
  name: Redo()
  nameWithType: UndoRedoStack.Redo()
  fullName: TinyLife.Tools.UndoRedoStack.Redo()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Redo
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nRedoes this undo-redo stack, redoing the most recently undone <xref href=\"TinyLife.Tools.UndoableAction\" data-throw-if-not-resolved=\"false\"></xref> and pushing it back onto the undo stack.\n"
  example: []
  syntax:
    content: public static void Redo()
    content.vb: Public Shared Sub Redo
  overload: TinyLife.Tools.UndoRedoStack.Redo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Tools.UndoRedoStack.Clear
  commentId: M:TinyLife.Tools.UndoRedoStack.Clear
  id: Clear
  parent: TinyLife.Tools.UndoRedoStack
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: UndoRedoStack.Clear()
  fullName: TinyLife.Tools.UndoRedoStack.Clear()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Clear
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 58
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nClears this undo-redo stack, clearing the internal undo and redo stacks.\n"
  example: []
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear
  overload: TinyLife.Tools.UndoRedoStack.Clear*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: TinyLife.Tools.UndoableAction
  commentId: T:TinyLife.Tools.UndoableAction
  parent: TinyLife.Tools
  name: UndoableAction
  nameWithType: UndoableAction
  fullName: TinyLife.Tools.UndoableAction
- uid: TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.UndoRedoStack.Add(TinyLife.Tools.UndoableAction)
  isExternal: true
- uid: TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.UndoRedoStack.AddAndExecute(TinyLife.Tools.UndoableAction)
  isExternal: true
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Tools.UndoRedoStack.Add*
  commentId: Overload:TinyLife.Tools.UndoRedoStack.Add
  name: Add
  nameWithType: UndoRedoStack.Add
  fullName: TinyLife.Tools.UndoRedoStack.Add
- uid: TinyLife.Tools.UndoRedoStack.AddAndExecute*
  commentId: Overload:TinyLife.Tools.UndoRedoStack.AddAndExecute
  name: AddAndExecute
  nameWithType: UndoRedoStack.AddAndExecute
  fullName: TinyLife.Tools.UndoRedoStack.AddAndExecute
- uid: TinyLife.Tools.UndoRedoStack.Undo*
  commentId: Overload:TinyLife.Tools.UndoRedoStack.Undo
  name: Undo
  nameWithType: UndoRedoStack.Undo
  fullName: TinyLife.Tools.UndoRedoStack.Undo
- uid: TinyLife.Tools.UndoRedoStack.Redo*
  commentId: Overload:TinyLife.Tools.UndoRedoStack.Redo
  name: Redo
  nameWithType: UndoRedoStack.Redo
  fullName: TinyLife.Tools.UndoRedoStack.Redo
- uid: TinyLife.Tools.UndoRedoStack.Clear*
  commentId: Overload:TinyLife.Tools.UndoRedoStack.Clear
  name: Clear
  nameWithType: UndoRedoStack.Clear
  fullName: TinyLife.Tools.UndoRedoStack.Clear
