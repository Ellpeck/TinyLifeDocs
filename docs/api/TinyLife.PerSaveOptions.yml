### YamlMime:ManagedReference
items:
- uid: TinyLife.PerSaveOptions
  commentId: T:TinyLife.PerSaveOptions
  id: PerSaveOptions
  parent: TinyLife
  children:
  - TinyLife.PerSaveOptions.AiImportantActions
  - TinyLife.PerSaveOptions.AiRelationships
  - TinyLife.PerSaveOptions.AiSkillBuilding
  - TinyLife.PerSaveOptions.DisableAiHousehold
  - TinyLife.PerSaveOptions.DisableAiSelected
  - TinyLife.PerSaveOptions.Instance
  - TinyLife.PerSaveOptions.Load(System.String)
  - TinyLife.PerSaveOptions.LoadedMods
  - TinyLife.PerSaveOptions.MapName
  - TinyLife.PerSaveOptions.MaxRegularVisitors
  - TinyLife.PerSaveOptions.Save(System.String)
  langs:
  - csharp
  - vb
  name: PerSaveOptions
  nameWithType: PerSaveOptions
  fullName: TinyLife.PerSaveOptions
  type: Class
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PerSaveOptions
    path: ../TinyLife/Options.cs
    startLine: 265
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s per-save options, which are displayed in the <xref href=\"TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> menu and saved to disk.\nNote that <xref href=\"TinyLife.PerSaveOptions.Instance\" data-throw-if-not-resolved=\"false\"></xref> is null if there is no <xref href=\"TinyLife.GameImpl.Map\" data-throw-if-not-resolved=\"false\"></xref> loaded.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class PerSaveOptions : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class PerSaveOptions
          Inherits JsonTypeSafeGenericDataHolder
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.PerSaveOptions.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.PerSaveOptions.Instance
  commentId: P:TinyLife.PerSaveOptions.Instance
  id: Instance
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: PerSaveOptions.Instance
  fullName: TinyLife.PerSaveOptions.Instance
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Instance
    path: ../TinyLife/Options.cs
    startLine: 272
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe static singleton instance of <xref href=\"TinyLife.PerSaveOptions\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that this value is null if there is no <xref href=\"TinyLife.GameImpl.Map\" data-throw-if-not-resolved=\"false\"></xref> loaded.\n"
  example: []
  syntax:
    content: public static PerSaveOptions Instance { get; }
    parameters: []
    return:
      type: TinyLife.PerSaveOptions
    content.vb: Public Shared ReadOnly Property Instance As PerSaveOptions
  overload: TinyLife.PerSaveOptions.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.PerSaveOptions.DisableAiSelected
  commentId: F:TinyLife.PerSaveOptions.DisableAiSelected
  id: DisableAiSelected
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: DisableAiSelected
  nameWithType: PerSaveOptions.DisableAiSelected
  fullName: TinyLife.PerSaveOptions.DisableAiSelected
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DisableAiSelected
    path: ../TinyLife/Options.cs
    startLine: 278
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the AI of the <xref href=\"TinyLife.Tools.PlayModeTool.SelectedPerson\" data-throw-if-not-resolved=\"false\"></xref> should be disabled or not\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisableAiSelected
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public DisableAiSelected As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.DisableAiHousehold
  commentId: F:TinyLife.PerSaveOptions.DisableAiHousehold
  id: DisableAiHousehold
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: DisableAiHousehold
  nameWithType: PerSaveOptions.DisableAiHousehold
  fullName: TinyLife.PerSaveOptions.DisableAiHousehold
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DisableAiHousehold
    path: ../TinyLife/Options.cs
    startLine: 283
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the AI of everyone in the <xref href=\"TinyLife.GameImpl.CurrentHousehold\" data-throw-if-not-resolved=\"false\"></xref> should be disabled or not\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool DisableAiHousehold
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public DisableAiHousehold As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.AiImportantActions
  commentId: F:TinyLife.PerSaveOptions.AiImportantActions
  id: AiImportantActions
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: AiImportantActions
  nameWithType: PerSaveOptions.AiImportantActions
  fullName: TinyLife.PerSaveOptions.AiImportantActions
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AiImportantActions
    path: ../TinyLife/Options.cs
    startLine: 289
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the AI should be able to execute important options, like paying the bills.\nThis option is intended to be used through <xref href=\"TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool AiImportantActions
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public AiImportantActions As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.AiSkillBuilding
  commentId: F:TinyLife.PerSaveOptions.AiSkillBuilding
  id: AiSkillBuilding
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: AiSkillBuilding
  nameWithType: PerSaveOptions.AiSkillBuilding
  fullName: TinyLife.PerSaveOptions.AiSkillBuilding
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AiSkillBuilding
    path: ../TinyLife/Options.cs
    startLine: 295
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the AI should be able to execute skill building actions like painting and programming.\nThis option is intended to be used through <xref href=\"TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person%2cTinyLife.Skills.SkillType)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool AiSkillBuilding
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public AiSkillBuilding As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.AiRelationships
  commentId: F:TinyLife.PerSaveOptions.AiRelationships
  id: AiRelationships
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: AiRelationships
  nameWithType: PerSaveOptions.AiRelationships
  fullName: TinyLife.PerSaveOptions.AiRelationships
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AiRelationships
    path: ../TinyLife/Options.cs
    startLine: 301
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the AI should be able to build complex relationships.\nThis option is intended to be used through <xref href=\"TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool AiRelationships
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public AiRelationships As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.MaxRegularVisitors
  commentId: F:TinyLife.PerSaveOptions.MaxRegularVisitors
  id: MaxRegularVisitors
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: MaxRegularVisitors
  nameWithType: PerSaveOptions.MaxRegularVisitors
  fullName: TinyLife.PerSaveOptions.MaxRegularVisitors
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MaxRegularVisitors
    path: ../TinyLife/Options.cs
    startLine: 307
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe maximum amount of regular visitors that the current map can have.\nWhen this value is changed, <xref href=\"TinyLife.World.Map.UpdateExternalPeople(System.Action%7bSystem.Single%7d)\" data-throw-if-not-resolved=\"false\"></xref> should be called to apply it.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int MaxRegularVisitors
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public MaxRegularVisitors As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.LoadedMods
  commentId: F:TinyLife.PerSaveOptions.LoadedMods
  id: LoadedMods
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: LoadedMods
  nameWithType: PerSaveOptions.LoadedMods
  fullName: TinyLife.PerSaveOptions.LoadedMods
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LoadedMods
    path: ../TinyLife/Options.cs
    startLine: 313
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA set of mod ids, mapped to their names, of mods that were loaded the last time this save game was played.\nThis dictionary is used to display a warning when a save is loaded with missing mods.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Dictionary<string, string> LoadedMods
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: >-
      <DataMember>

      Public LoadedMods As Dictionary(Of String, String)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.MapName
  commentId: F:TinyLife.PerSaveOptions.MapName
  id: MapName
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: MapName
  nameWithType: PerSaveOptions.MapName
  fullName: TinyLife.PerSaveOptions.MapName
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MapName
    path: ../TinyLife/Options.cs
    startLine: 319
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe name of the map that is used in this save game.\nDo not change this value, or the save will likely be corrupted.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string MapName
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public MapName As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.Save(System.String)
  commentId: M:TinyLife.PerSaveOptions.Save(System.String)
  id: Save(System.String)
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: PerSaveOptions.Save(String)
  fullName: TinyLife.PerSaveOptions.Save(System.String)
  type: Method
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Save
    path: ../TinyLife/Options.cs
    startLine: 324
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nSaves the options to the default options file path for the given save\n"
  example: []
  syntax:
    content: public void Save(string save)
    parameters:
    - id: save
      type: System.String
    content.vb: Public Sub Save(save As String)
  overload: TinyLife.PerSaveOptions.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.PerSaveOptions.Load(System.String)
  commentId: M:TinyLife.PerSaveOptions.Load(System.String)
  id: Load(System.String)
  parent: TinyLife.PerSaveOptions
  langs:
  - csharp
  - vb
  name: Load(String)
  nameWithType: PerSaveOptions.Load(String)
  fullName: TinyLife.PerSaveOptions.Load(System.String)
  type: Method
  source:
    remote:
      path: TinyLife/Options.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Load
    path: ../TinyLife/Options.cs
    startLine: 332
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nLoads the options from the default options file path for the given save\n"
  example: []
  syntax:
    content: public static PerSaveOptions Load(string save)
    parameters:
    - id: save
      type: System.String
    return:
      type: TinyLife.PerSaveOptions
    content.vb: Public Shared Function Load(save As String) As PerSaveOptions
  overload: TinyLife.PerSaveOptions.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean)
  commentId: M:TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean)
  isExternal: true
- uid: TinyLife.PerSaveOptions.Instance
  commentId: P:TinyLife.PerSaveOptions.Instance
  isExternal: true
- uid: TinyLife.GameImpl.Map
  commentId: P:TinyLife.GameImpl.Map
  isExternal: true
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.PerSaveOptions.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<PerSaveOptions>()
  nameWithType: Extensions.JsonCopy<PerSaveOptions>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.PerSaveOptions>()
  nameWithType.vb: Extensions.JsonCopy(Of PerSaveOptions)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.PerSaveOptions)()
  name.vb: JsonCopy(Of PerSaveOptions)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<PerSaveOptions>
    nameWithType: Extensions.JsonCopy<PerSaveOptions>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.PerSaveOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of PerSaveOptions)
    nameWithType: Extensions.JsonCopy(Of PerSaveOptions)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.PerSaveOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.PerSaveOptions
  commentId: T:TinyLife.PerSaveOptions
  parent: TinyLife
  name: PerSaveOptions
  nameWithType: PerSaveOptions
  fullName: TinyLife.PerSaveOptions
- uid: TinyLife.PerSaveOptions.Instance*
  commentId: Overload:TinyLife.PerSaveOptions.Instance
  name: Instance
  nameWithType: PerSaveOptions.Instance
  fullName: TinyLife.PerSaveOptions.Instance
- uid: TinyLife.Tools.PlayModeTool.SelectedPerson
  commentId: P:TinyLife.Tools.PlayModeTool.SelectedPerson
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TinyLife.GameImpl.CurrentHousehold
  commentId: P:TinyLife.GameImpl.CurrentHousehold
  isExternal: true
- uid: TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
- uid: TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person,TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person,TinyLife.Skills.SkillType)
  isExternal: true
- uid: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
- uid: TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
- uid: TinyLife.World.Map.UpdateExternalPeople(System.Action{System.Single})
  commentId: M:TinyLife.World.Map.UpdateExternalPeople(System.Action{System.Single})
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.PerSaveOptions.Save*
  commentId: Overload:TinyLife.PerSaveOptions.Save
  name: Save
  nameWithType: PerSaveOptions.Save
  fullName: TinyLife.PerSaveOptions.Save
- uid: TinyLife.PerSaveOptions.Load*
  commentId: Overload:TinyLife.PerSaveOptions.Load
  name: Load
  nameWithType: PerSaveOptions.Load
  fullName: TinyLife.PerSaveOptions.Load
