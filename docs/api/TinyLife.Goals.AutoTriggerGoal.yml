### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.AutoTriggerGoal
  commentId: T:TinyLife.Goals.AutoTriggerGoal
  id: AutoTriggerGoal
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.AutoTriggerGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)
  - TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  - TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  langs:
  - csharp
  - vb
  name: AutoTriggerGoal
  nameWithType: AutoTriggerGoal
  fullName: TinyLife.Goals.AutoTriggerGoal
  type: Class
  source:
    remote:
      path: TinyLife/Goals/AutoTriggerGoal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AutoTriggerGoal
    path: ../TinyLife/Goals/AutoTriggerGoal.cs
    startLine: 8
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nAn auto-triggered goal is intended to be used with <xref href=\"TinyLife.Goals.AutoGoalInfo\" data-throw-if-not-resolved=\"false\"></xref>. This is the base class for all auto-triggered goals.\nAuto-triggered goals do not need to be called, triggered or referenced manually, since they get triggered automatically based on a <xref href=\"TinyLife.Goals.GoalTrigger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class AutoTriggerGoal : Goal<AutoGoalInfo>, IGenericDataHolder'
    content.vb: >-
      Public MustInherit Class AutoTriggerGoal
          Inherits Goal(Of AutoGoalInfo)
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Goals.Goal
  - TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}
  derivedClasses:
  - TinyLife.Goals.AutoTriggerGoal`1
  - TinyLife.Goals.DistinctGoal
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}.Info
  - TinyLife.Goals.Goal.Name
  - TinyLife.Goals.Goal.Set
  - TinyLife.Goals.Goal.GetProgress
  - TinyLife.Goals.Goal.Reset
  - TinyLife.Goals.Goal.GetDisplayedProgress
  - TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.AutoTriggerGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TinyLife.Goals.AutoTriggerGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)
  commentId: M:TinyLife.Goals.AutoTriggerGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)
  id: '#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)'
  parent: TinyLife.Goals.AutoTriggerGoal
  langs:
  - csharp
  - vb
  name: AutoTriggerGoal(GoalSet, AutoGoalInfo)
  nameWithType: AutoTriggerGoal.AutoTriggerGoal(GoalSet, AutoGoalInfo)
  fullName: TinyLife.Goals.AutoTriggerGoal.AutoTriggerGoal(TinyLife.Goals.GoalSet, TinyLife.Goals.AutoGoalInfo)
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/AutoTriggerGoal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Goals/AutoTriggerGoal.cs
    startLine: 11
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  example: []
  syntax:
    content: protected AutoTriggerGoal(GoalSet set, AutoGoalInfo info)
    parameters:
    - id: set
      type: TinyLife.Goals.GoalSet
    - id: info
      type: TinyLife.Goals.AutoGoalInfo
    content.vb: Protected Sub New(set As GoalSet, info As AutoGoalInfo)
  overload: TinyLife.Goals.AutoTriggerGoal.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  commentId: M:TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  id: Trigger(System.Object)
  parent: TinyLife.Goals.AutoTriggerGoal
  langs:
  - csharp
  - vb
  name: Trigger(Object)
  nameWithType: AutoTriggerGoal.Trigger(Object)
  fullName: TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/AutoTriggerGoal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Trigger
    path: ../TinyLife/Goals/AutoTriggerGoal.cs
    startLine: 18
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCauses this auto-triggered goal to be triggered.\nThis method should only be called if <xref href=\"TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object%2cTinyLife.Goals.GoalTrigger%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n"
  example: []
  syntax:
    content: public abstract void Trigger(object value)
    parameters:
    - id: value
      type: System.Object
      description: The value to trigger.
    content.vb: Public MustOverride Sub Trigger(value As Object)
  overload: TinyLife.Goals.AutoTriggerGoal.Trigger*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  commentId: M:TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  id: CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  parent: TinyLife.Goals.AutoTriggerGoal
  langs:
  - csharp
  - vb
  name: CanTrigger(Object, GoalTrigger, Object)
  nameWithType: AutoTriggerGoal.CanTrigger(Object, GoalTrigger, Object)
  fullName: TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object, TinyLife.Goals.GoalTrigger, System.Object)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/AutoTriggerGoal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanTrigger
    path: ../TinyLife/Goals/AutoTriggerGoal.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns whether this auto-triggered goal can currently be triggered.\nIf this method returns <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, <xref href=\"TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> should always cause a change in this goal.\n"
  example: []
  syntax:
    content: public virtual bool CanTrigger(object obj, GoalTrigger trigger, object value)
    parameters:
    - id: obj
      type: System.Object
      description: The object that is triggering this goal.
    - id: trigger
      type: TinyLife.Goals.GoalTrigger
      description: The type of goal trigger that is triggering this goal.
    - id: value
      type: System.Object
      description: The value to trigger, which will be passed to <xref href="TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Whether this goal can be triggered right now.
    content.vb: Public Overridable Function CanTrigger(obj As Object, trigger As GoalTrigger, value As Object) As Boolean
  overload: TinyLife.Goals.AutoTriggerGoal.CanTrigger*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: TinyLife.Goals.AutoGoalInfo
  commentId: T:TinyLife.Goals.AutoGoalInfo
  parent: TinyLife.Goals
  name: AutoGoalInfo
  nameWithType: AutoGoalInfo
  fullName: TinyLife.Goals.AutoGoalInfo
- uid: TinyLife.Goals.GoalTrigger
  commentId: T:TinyLife.Goals.GoalTrigger
  parent: TinyLife.Goals
  name: GoalTrigger
  nameWithType: GoalTrigger
  fullName: TinyLife.Goals.GoalTrigger
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  parent: TinyLife.Goals
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
- uid: TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}
  commentId: T:TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.Goal`1
  name: Goal<AutoGoalInfo>
  nameWithType: Goal<AutoGoalInfo>
  fullName: TinyLife.Goals.Goal<TinyLife.Goals.AutoGoalInfo>
  nameWithType.vb: Goal(Of AutoGoalInfo)
  fullName.vb: TinyLife.Goals.Goal(Of TinyLife.Goals.AutoGoalInfo)
  name.vb: Goal(Of AutoGoalInfo)
  spec.csharp:
  - uid: TinyLife.Goals.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: TinyLife.Goals.Goal
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    nameWithType: AutoGoalInfo
    fullName: TinyLife.Goals.AutoGoalInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TinyLife.Goals.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: TinyLife.Goals.Goal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Goals.AutoGoalInfo
    name: AutoGoalInfo
    nameWithType: AutoGoalInfo
    fullName: TinyLife.Goals.AutoGoalInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}.Info
  commentId: P:TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}.Info
  parent: TinyLife.Goals.Goal{TinyLife.Goals.AutoGoalInfo}
  definition: TinyLife.Goals.Goal`1.Info
  name: Info
  nameWithType: Goal<AutoGoalInfo>.Info
  fullName: TinyLife.Goals.Goal<TinyLife.Goals.AutoGoalInfo>.Info
  nameWithType.vb: Goal(Of AutoGoalInfo).Info
  fullName.vb: TinyLife.Goals.Goal(Of TinyLife.Goals.AutoGoalInfo).Info
- uid: TinyLife.Goals.Goal.Name
  commentId: F:TinyLife.Goals.Goal.Name
  parent: TinyLife.Goals.Goal
  name: Name
  nameWithType: Goal.Name
  fullName: TinyLife.Goals.Goal.Name
- uid: TinyLife.Goals.Goal.Set
  commentId: P:TinyLife.Goals.Goal.Set
  parent: TinyLife.Goals.Goal
  name: Set
  nameWithType: Goal.Set
  fullName: TinyLife.Goals.Goal.Set
- uid: TinyLife.Goals.Goal.GetProgress
  commentId: M:TinyLife.Goals.Goal.GetProgress
  parent: TinyLife.Goals.Goal
  name: GetProgress()
  nameWithType: Goal.GetProgress()
  fullName: TinyLife.Goals.Goal.GetProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.Reset
  commentId: M:TinyLife.Goals.Goal.Reset
  parent: TinyLife.Goals.Goal
  name: Reset()
  nameWithType: Goal.Reset()
  fullName: TinyLife.Goals.Goal.Reset()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    nameWithType: Goal.Reset
    fullName: TinyLife.Goals.Goal.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    nameWithType: Goal.Reset
    fullName: TinyLife.Goals.Goal.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.GetDisplayedProgress
  commentId: M:TinyLife.Goals.Goal.GetDisplayedProgress
  parent: TinyLife.Goals.Goal
  name: GetDisplayedProgress()
  nameWithType: Goal.GetDisplayedProgress()
  fullName: TinyLife.Goals.Goal.GetDisplayedProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetDisplayedProgress
    name: GetDisplayedProgress
    nameWithType: Goal.GetDisplayedProgress
    fullName: TinyLife.Goals.Goal.GetDisplayedProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetDisplayedProgress
    name: GetDisplayedProgress
    nameWithType: Goal.GetDisplayedProgress
    fullName: TinyLife.Goals.Goal.GetDisplayedProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  parent: TinyLife.Goals.Goal
  name: Validate(GoalSet)
  nameWithType: Goal.Validate(GoalSet)
  fullName: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  spec.csharp:
  - uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: Goal.Validate
    fullName: TinyLife.Goals.Goal.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: Goal.Validate
    fullName: TinyLife.Goals.Goal.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<AutoTriggerGoal>()
  nameWithType: Extensions.JsonCopy<AutoTriggerGoal>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.AutoTriggerGoal>()
  nameWithType.vb: Extensions.JsonCopy(Of AutoTriggerGoal)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.AutoTriggerGoal)()
  name.vb: JsonCopy(Of AutoTriggerGoal)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<AutoTriggerGoal>
    nameWithType: Extensions.JsonCopy<AutoTriggerGoal>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.AutoTriggerGoal>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of AutoTriggerGoal)
    nameWithType: Extensions.JsonCopy(Of AutoTriggerGoal)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.AutoTriggerGoal)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: TinyLife.Goals.Goal`1
  commentId: T:TinyLife.Goals.Goal`1
  name: Goal<TInfo>
  nameWithType: Goal<TInfo>
  fullName: TinyLife.Goals.Goal<TInfo>
  nameWithType.vb: Goal(Of TInfo)
  fullName.vb: TinyLife.Goals.Goal(Of TInfo)
  name.vb: Goal(Of TInfo)
  spec.csharp:
  - uid: TinyLife.Goals.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: TinyLife.Goals.Goal
  - name: <
    nameWithType: <
    fullName: <
  - name: TInfo
    nameWithType: TInfo
    fullName: TInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TinyLife.Goals.Goal`1
    name: Goal
    nameWithType: Goal
    fullName: TinyLife.Goals.Goal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInfo
    nameWithType: TInfo
    fullName: TInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Goals.Goal`1.Info
  commentId: P:TinyLife.Goals.Goal`1.Info
  name: Info
  nameWithType: Goal<TInfo>.Info
  fullName: TinyLife.Goals.Goal<TInfo>.Info
  nameWithType.vb: Goal(Of TInfo).Info
  fullName.vb: TinyLife.Goals.Goal(Of TInfo).Info
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Goals.AutoTriggerGoal.#ctor*
  commentId: Overload:TinyLife.Goals.AutoTriggerGoal.#ctor
  name: AutoTriggerGoal
  nameWithType: AutoTriggerGoal.AutoTriggerGoal
  fullName: TinyLife.Goals.AutoTriggerGoal.AutoTriggerGoal
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  commentId: M:TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
  parent: TinyLife.Goals.AutoTriggerGoal
  isExternal: true
  name: CanTrigger(Object, GoalTrigger, Object)
  nameWithType: AutoTriggerGoal.CanTrigger(Object, GoalTrigger, Object)
  fullName: TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object, TinyLife.Goals.GoalTrigger, System.Object)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
    name: CanTrigger
    nameWithType: AutoTriggerGoal.CanTrigger
    fullName: TinyLife.Goals.AutoTriggerGoal.CanTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal.CanTrigger(System.Object,TinyLife.Goals.GoalTrigger,System.Object)
    name: CanTrigger
    nameWithType: AutoTriggerGoal.CanTrigger
    fullName: TinyLife.Goals.AutoTriggerGoal.CanTrigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal.Trigger*
  commentId: Overload:TinyLife.Goals.AutoTriggerGoal.Trigger
  name: Trigger
  nameWithType: AutoTriggerGoal.Trigger
  fullName: TinyLife.Goals.AutoTriggerGoal.Trigger
- uid: TinyLife.Goals.AutoTriggerGoal
  commentId: T:TinyLife.Goals.AutoTriggerGoal
  parent: TinyLife.Goals
  name: AutoTriggerGoal
  nameWithType: AutoTriggerGoal
  fullName: TinyLife.Goals.AutoTriggerGoal
- uid: TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  commentId: M:TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  parent: TinyLife.Goals.AutoTriggerGoal
  isExternal: true
  name: Trigger(Object)
  nameWithType: AutoTriggerGoal.Trigger(Object)
  fullName: TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
    name: Trigger
    nameWithType: AutoTriggerGoal.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal.Trigger(System.Object)
    name: Trigger
    nameWithType: AutoTriggerGoal.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal.CanTrigger*
  commentId: Overload:TinyLife.Goals.AutoTriggerGoal.CanTrigger
  name: CanTrigger
  nameWithType: AutoTriggerGoal.CanTrigger
  fullName: TinyLife.Goals.AutoTriggerGoal.CanTrigger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
