### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.AmountGoal
  commentId: T:TinyLife.Goals.AmountGoal
  id: AmountGoal
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.AmountGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)
  - TinyLife.Goals.AmountGoal.GetDisplayedProgress
  - TinyLife.Goals.AmountGoal.GetProgress
  - TinyLife.Goals.AmountGoal.Reset
  - TinyLife.Goals.AmountGoal.Trigger(System.Single)
  langs:
  - csharp
  - vb
  name: AmountGoal
  nameWithType: AmountGoal
  fullName: TinyLife.Goals.AmountGoal
  type: Class
  source:
    remote:
      path: TinyLife/Goals/AmountGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AmountGoal
    path: Goals/AmountGoal.cs
    startLine: 8
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nAn amount goal is an auto-triggered goal, intended to be used with <xref href=\"TinyLife.Goals.AutoGoalInfo\" data-throw-if-not-resolved=\"false\"></xref>, that keeps track of an amount of things that have been completed.\nTo trigger all amount goals in a goal set, use <xref href=\"TinyLife.Goals.AmountGoal.Trigger(System.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class AmountGoal : AutoTriggerGoal<float>, IGenericDataHolder'
    content.vb: >-
      Public Class AmountGoal
          Inherits AutoTriggerGoal(Of Single)
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Goals.Goal
  - TinyLife.Goals.AutoTriggerGoal{System.Single}
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Goals.AutoTriggerGoal{System.Single}.AutoInfo
  - TinyLife.Goals.AutoTriggerGoal{System.Single}.Validate(TinyLife.Goals.GoalSet)
  - TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,System.Single)
  - TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,System.Single)
  - TinyLife.Goals.Goal.Name
  - TinyLife.Goals.Goal.Set
  - TinyLife.Goals.Goal.Info
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.AmountGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Goals.AmountGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)
  commentId: M:TinyLife.Goals.AmountGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)
  id: '#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.AutoGoalInfo)'
  parent: TinyLife.Goals.AmountGoal
  langs:
  - csharp
  - vb
  name: AmountGoal(GoalSet, AutoGoalInfo)
  nameWithType: AmountGoal.AmountGoal(GoalSet, AutoGoalInfo)
  fullName: TinyLife.Goals.AmountGoal.AmountGoal(TinyLife.Goals.GoalSet, TinyLife.Goals.AutoGoalInfo)
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/AmountGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: Goals/AmountGoal.cs
    startLine: 14
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  example: []
  syntax:
    content: public AmountGoal(GoalSet set, AutoGoalInfo info)
    parameters:
    - id: set
      type: TinyLife.Goals.GoalSet
    - id: info
      type: TinyLife.Goals.AutoGoalInfo
    content.vb: Public Sub New(set As GoalSet, info As AutoGoalInfo)
  overload: TinyLife.Goals.AmountGoal.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Goals.AmountGoal.GetProgress
  commentId: M:TinyLife.Goals.AmountGoal.GetProgress
  id: GetProgress
  parent: TinyLife.Goals.AmountGoal
  langs:
  - csharp
  - vb
  name: GetProgress()
  nameWithType: AmountGoal.GetProgress()
  fullName: TinyLife.Goals.AmountGoal.GetProgress()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/AmountGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetProgress
    path: Goals/AmountGoal.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns the progress percentage (between 0 and 1) that this goal has\n"
  example: []
  syntax:
    content: public override float GetProgress()
    return:
      type: System.Single
      description: The progress percentage
    content.vb: Public Overrides Function GetProgress As Single
  overridden: TinyLife.Goals.Goal.GetProgress
  overload: TinyLife.Goals.AmountGoal.GetProgress*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Goals.AmountGoal.Reset
  commentId: M:TinyLife.Goals.AmountGoal.Reset
  id: Reset
  parent: TinyLife.Goals.AmountGoal
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: AmountGoal.Reset()
  fullName: TinyLife.Goals.AmountGoal.Reset()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/AmountGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Reset
    path: Goals/AmountGoal.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nResets this goal to the default values, which should cause 0 to be returned on <xref href=\"TinyLife.Goals.Goal.GetProgress\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: TinyLife.Goals.Goal.Reset
  overload: TinyLife.Goals.AmountGoal.Reset*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Goals.AmountGoal.GetDisplayedProgress
  commentId: M:TinyLife.Goals.AmountGoal.GetDisplayedProgress
  id: GetDisplayedProgress
  parent: TinyLife.Goals.AmountGoal
  langs:
  - csharp
  - vb
  name: GetDisplayedProgress()
  nameWithType: AmountGoal.GetDisplayedProgress()
  fullName: TinyLife.Goals.AmountGoal.GetDisplayedProgress()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/AmountGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetDisplayedProgress
    path: Goals/AmountGoal.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns a string that is used in a goal set&apos;s displayed ui information that determines the progress of this goal.\nBy default, the <xref href=\"TinyLife.Goals.Goal.GetProgress\" data-throw-if-not-resolved=\"false\"></xref> percentage is displayed as a percentage between 0 and 100.\n"
  example: []
  syntax:
    content: public override string GetDisplayedProgress()
    return:
      type: System.String
      description: The displayed goal progress
    content.vb: Public Overrides Function GetDisplayedProgress As String
  overridden: TinyLife.Goals.Goal.GetDisplayedProgress
  overload: TinyLife.Goals.AmountGoal.GetDisplayedProgress*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Goals.AmountGoal.Trigger(System.Single)
  commentId: M:TinyLife.Goals.AmountGoal.Trigger(System.Single)
  id: Trigger(System.Single)
  parent: TinyLife.Goals.AmountGoal
  langs:
  - csharp
  - vb
  name: Trigger(Single)
  nameWithType: AmountGoal.Trigger(Single)
  fullName: TinyLife.Goals.AmountGoal.Trigger(System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/AmountGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Trigger
    path: Goals/AmountGoal.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCauses this auto-triggered goal to be triggered.\nThis method is only called if the <xref href=\"TinyLife.Goals.AutoGoalInfo.Condition\" data-throw-if-not-resolved=\"false\"></xref> is met.\n"
  example: []
  syntax:
    content: protected override void Trigger(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Protected Overrides Sub Trigger(value As Single)
  overridden: TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(System.Single)
  overload: TinyLife.Goals.AmountGoal.Trigger*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: TinyLife.Goals.AutoGoalInfo
  commentId: T:TinyLife.Goals.AutoGoalInfo
  parent: TinyLife.Goals
  name: AutoGoalInfo
  nameWithType: AutoGoalInfo
  fullName: TinyLife.Goals.AutoGoalInfo
- uid: TinyLife.Goals.AmountGoal.Trigger(System.Single)
  commentId: M:TinyLife.Goals.AmountGoal.Trigger(System.Single)
  isExternal: true
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  parent: TinyLife.Goals
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
- uid: TinyLife.Goals.AutoTriggerGoal{System.Single}
  commentId: T:TinyLife.Goals.AutoTriggerGoal{System.Single}
  parent: TinyLife.Goals
  definition: TinyLife.Goals.AutoTriggerGoal`1
  name: AutoTriggerGoal<Single>
  nameWithType: AutoTriggerGoal<Single>
  fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>
  nameWithType.vb: AutoTriggerGoal(Of Single)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of System.Single)
  name.vb: AutoTriggerGoal(Of Single)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1
    name: AutoTriggerGoal
    nameWithType: AutoTriggerGoal
    fullName: TinyLife.Goals.AutoTriggerGoal
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1
    name: AutoTriggerGoal
    nameWithType: AutoTriggerGoal
    fullName: TinyLife.Goals.AutoTriggerGoal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Goals.AutoTriggerGoal{System.Single}.AutoInfo
  commentId: F:TinyLife.Goals.AutoTriggerGoal{System.Single}.AutoInfo
  parent: TinyLife.Goals.AutoTriggerGoal{System.Single}
  definition: TinyLife.Goals.AutoTriggerGoal`1.AutoInfo
  name: AutoInfo
  nameWithType: AutoTriggerGoal<Single>.AutoInfo
  fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.AutoInfo
  nameWithType.vb: AutoTriggerGoal(Of Single).AutoInfo
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of System.Single).AutoInfo
- uid: TinyLife.Goals.AutoTriggerGoal{System.Single}.Validate(TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.AutoTriggerGoal{System.Single}.Validate(TinyLife.Goals.GoalSet)
  parent: TinyLife.Goals.AutoTriggerGoal{System.Single}
  definition: TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
  name: Validate(GoalSet)
  nameWithType: AutoTriggerGoal<Single>.Validate(GoalSet)
  fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Validate(TinyLife.Goals.GoalSet)
  nameWithType.vb: AutoTriggerGoal(Of Single).Validate(GoalSet)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Validate(TinyLife.Goals.GoalSet)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: AutoTriggerGoal<Single>.Validate
    fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: AutoTriggerGoal(Of Single).Validate
    fullName: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,System.Single)
  commentId: M:TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,System.Single)
  parent: TinyLife.Goals.AutoTriggerGoal{System.Single}
  definition: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
  name: Trigger(GoalTrigger, GoalSet, Object, Single)
  nameWithType: AutoTriggerGoal<Single>.Trigger(GoalTrigger, GoalSet, Object, Single)
  fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Goals.GoalSet, System.Object, System.Single)
  nameWithType.vb: AutoTriggerGoal(Of Single).Trigger(GoalTrigger, GoalSet, Object, Single)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Goals.GoalSet, System.Object, System.Single)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal<Single>.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal(Of Single).Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,System.Single)
  commentId: M:TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,System.Single)
  parent: TinyLife.Goals.AutoTriggerGoal{System.Single}
  definition: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
  name: Trigger(GoalTrigger, Person, Object, Single)
  nameWithType: AutoTriggerGoal<Single>.Trigger(GoalTrigger, Person, Object, Single)
  fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Objects.Person, System.Object, System.Single)
  nameWithType.vb: AutoTriggerGoal(Of Single).Trigger(GoalTrigger, Person, Object, Single)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Objects.Person, System.Object, System.Single)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal<Single>.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal(Of Single).Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.Name
  commentId: F:TinyLife.Goals.Goal.Name
  parent: TinyLife.Goals.Goal
  name: Name
  nameWithType: Goal.Name
  fullName: TinyLife.Goals.Goal.Name
- uid: TinyLife.Goals.Goal.Set
  commentId: P:TinyLife.Goals.Goal.Set
  parent: TinyLife.Goals.Goal
  name: Set
  nameWithType: Goal.Set
  fullName: TinyLife.Goals.Goal.Set
- uid: TinyLife.Goals.Goal.Info
  commentId: P:TinyLife.Goals.Goal.Info
  parent: TinyLife.Goals.Goal
  name: Info
  nameWithType: Goal.Info
  fullName: TinyLife.Goals.Goal.Info
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AmountGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<AmountGoal>()
  nameWithType: Extensions.JsonCopy<AmountGoal>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.AmountGoal>()
  nameWithType.vb: Extensions.JsonCopy(Of AmountGoal)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.AmountGoal)()
  name.vb: JsonCopy(Of AmountGoal)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<AmountGoal>
    nameWithType: Extensions.JsonCopy<AmountGoal>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.AmountGoal>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of AmountGoal)
    nameWithType: Extensions.JsonCopy(Of AmountGoal)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.AmountGoal)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: TinyLife.Goals.AutoTriggerGoal`1
  commentId: T:TinyLife.Goals.AutoTriggerGoal`1
  name: AutoTriggerGoal<T>
  nameWithType: AutoTriggerGoal<T>
  fullName: TinyLife.Goals.AutoTriggerGoal<T>
  nameWithType.vb: AutoTriggerGoal(Of T)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T)
  name.vb: AutoTriggerGoal(Of T)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1
    name: AutoTriggerGoal
    nameWithType: AutoTriggerGoal
    fullName: TinyLife.Goals.AutoTriggerGoal
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1
    name: AutoTriggerGoal
    nameWithType: AutoTriggerGoal
    fullName: TinyLife.Goals.AutoTriggerGoal
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Goals.AutoTriggerGoal`1.AutoInfo
  commentId: F:TinyLife.Goals.AutoTriggerGoal`1.AutoInfo
  name: AutoInfo
  nameWithType: AutoTriggerGoal<T>.AutoInfo
  fullName: TinyLife.Goals.AutoTriggerGoal<T>.AutoInfo
  nameWithType.vb: AutoTriggerGoal(Of T).AutoInfo
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T).AutoInfo
- uid: TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
  name: Validate(GoalSet)
  nameWithType: AutoTriggerGoal<T>.Validate(GoalSet)
  fullName: TinyLife.Goals.AutoTriggerGoal<T>.Validate(TinyLife.Goals.GoalSet)
  nameWithType.vb: AutoTriggerGoal(Of T).Validate(GoalSet)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T).Validate(TinyLife.Goals.GoalSet)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: AutoTriggerGoal<T>.Validate
    fullName: TinyLife.Goals.AutoTriggerGoal<T>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: AutoTriggerGoal(Of T).Validate
    fullName: TinyLife.Goals.AutoTriggerGoal(Of T).Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
  commentId: M:TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
  isExternal: true
  name: Trigger(GoalTrigger, GoalSet, Object, T)
  nameWithType: AutoTriggerGoal<T>.Trigger(GoalTrigger, GoalSet, Object, T)
  fullName: TinyLife.Goals.AutoTriggerGoal<T>.Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Goals.GoalSet, System.Object, T)
  nameWithType.vb: AutoTriggerGoal(Of T).Trigger(GoalTrigger, GoalSet, Object, T)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T).Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Goals.GoalSet, System.Object, T)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal<T>.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal<T>.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Goals.GoalSet,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal(Of T).Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal(Of T).Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
  commentId: M:TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
  isExternal: true
  name: Trigger(GoalTrigger, Person, Object, T)
  nameWithType: AutoTriggerGoal<T>.Trigger(GoalTrigger, Person, Object, T)
  fullName: TinyLife.Goals.AutoTriggerGoal<T>.Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Objects.Person, System.Object, T)
  nameWithType.vb: AutoTriggerGoal(Of T).Trigger(GoalTrigger, Person, Object, T)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T).Trigger(TinyLife.Goals.GoalTrigger, TinyLife.Objects.Person, System.Object, T)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal<T>.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal<T>.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(TinyLife.Goals.GoalTrigger,TinyLife.Objects.Person,System.Object,`0)
    name: Trigger
    nameWithType: AutoTriggerGoal(Of T).Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal(Of T).Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalTrigger
    name: GoalTrigger
    nameWithType: GoalTrigger
    fullName: TinyLife.Goals.GoalTrigger
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Objects.Person
    name: Person
    nameWithType: Person
    fullName: TinyLife.Objects.Person
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Goals.AmountGoal.#ctor*
  commentId: Overload:TinyLife.Goals.AmountGoal.#ctor
  name: AmountGoal
  nameWithType: AmountGoal.AmountGoal
  fullName: TinyLife.Goals.AmountGoal.AmountGoal
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.Goal.GetProgress
  commentId: M:TinyLife.Goals.Goal.GetProgress
  parent: TinyLife.Goals.Goal
  name: GetProgress()
  nameWithType: Goal.GetProgress()
  fullName: TinyLife.Goals.Goal.GetProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AmountGoal.GetProgress*
  commentId: Overload:TinyLife.Goals.AmountGoal.GetProgress
  name: GetProgress
  nameWithType: AmountGoal.GetProgress
  fullName: TinyLife.Goals.AmountGoal.GetProgress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Goals.Goal.Reset
  commentId: M:TinyLife.Goals.Goal.Reset
  parent: TinyLife.Goals.Goal
  name: Reset()
  nameWithType: Goal.Reset()
  fullName: TinyLife.Goals.Goal.Reset()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    nameWithType: Goal.Reset
    fullName: TinyLife.Goals.Goal.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    nameWithType: Goal.Reset
    fullName: TinyLife.Goals.Goal.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AmountGoal.Reset*
  commentId: Overload:TinyLife.Goals.AmountGoal.Reset
  name: Reset
  nameWithType: AmountGoal.Reset
  fullName: TinyLife.Goals.AmountGoal.Reset
- uid: TinyLife.Goals.Goal.GetDisplayedProgress
  commentId: M:TinyLife.Goals.Goal.GetDisplayedProgress
  parent: TinyLife.Goals.Goal
  name: GetDisplayedProgress()
  nameWithType: Goal.GetDisplayedProgress()
  fullName: TinyLife.Goals.Goal.GetDisplayedProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetDisplayedProgress
    name: GetDisplayedProgress
    nameWithType: Goal.GetDisplayedProgress
    fullName: TinyLife.Goals.Goal.GetDisplayedProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetDisplayedProgress
    name: GetDisplayedProgress
    nameWithType: Goal.GetDisplayedProgress
    fullName: TinyLife.Goals.Goal.GetDisplayedProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AmountGoal.GetDisplayedProgress*
  commentId: Overload:TinyLife.Goals.AmountGoal.GetDisplayedProgress
  name: GetDisplayedProgress
  nameWithType: AmountGoal.GetDisplayedProgress
  fullName: TinyLife.Goals.AmountGoal.GetDisplayedProgress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(System.Single)
  commentId: M:TinyLife.Goals.AutoTriggerGoal{System.Single}.Trigger(System.Single)
  parent: TinyLife.Goals.AutoTriggerGoal{System.Single}
  definition: TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
  name: Trigger(Single)
  nameWithType: AutoTriggerGoal<Single>.Trigger(Single)
  fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Trigger(System.Single)
  nameWithType.vb: AutoTriggerGoal(Of Single).Trigger(Single)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Trigger(System.Single)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
    name: Trigger
    nameWithType: AutoTriggerGoal<Single>.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal<System.Single>.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
    name: Trigger
    nameWithType: AutoTriggerGoal(Of Single).Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal(Of System.Single).Trigger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.AmountGoal.Trigger*
  commentId: Overload:TinyLife.Goals.AmountGoal.Trigger
  name: Trigger
  nameWithType: AmountGoal.Trigger
  fullName: TinyLife.Goals.AmountGoal.Trigger
- uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
  commentId: M:TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
  name: Trigger(T)
  nameWithType: AutoTriggerGoal<T>.Trigger(T)
  fullName: TinyLife.Goals.AutoTriggerGoal<T>.Trigger(T)
  nameWithType.vb: AutoTriggerGoal(Of T).Trigger(T)
  fullName.vb: TinyLife.Goals.AutoTriggerGoal(Of T).Trigger(T)
  spec.csharp:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
    name: Trigger
    nameWithType: AutoTriggerGoal<T>.Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal<T>.Trigger
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.AutoTriggerGoal`1.Trigger(`0)
    name: Trigger
    nameWithType: AutoTriggerGoal(Of T).Trigger
    fullName: TinyLife.Goals.AutoTriggerGoal(Of T).Trigger
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
