### YamlMime:ManagedReference
items:
- uid: TinyLife.World.FurnitureMail
  commentId: T:TinyLife.World.FurnitureMail
  id: FurnitureMail
  parent: TinyLife.World
  children:
  - TinyLife.World.FurnitureMail.#ctor(System.Guid,TinyLife.Objects.Furniture)
  - TinyLife.World.FurnitureMail.Item
  - TinyLife.World.FurnitureMail.OnCollected(TinyLife.Actions.Action)
  - TinyLife.World.FurnitureMail.Validate(TinyLife.World.Map)
  langs:
  - csharp
  - vb
  name: FurnitureMail
  nameWithType: FurnitureMail
  fullName: TinyLife.World.FurnitureMail
  type: Class
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FurnitureMail
    path: ../TinyLife/World/Mail.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA <xref href=\"TinyLife.World.Mail\" data-throw-if-not-resolved=\"false\"></xref> that contains a furniture item, and that can be opened using <xref href=\"TinyLife.Actions.ActionType.GetFurnitureMail\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class FurnitureMail : Mail, IGenericDataHolder'
    content.vb: >-
      Public Class FurnitureMail
          Inherits Mail
          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.World.Mail
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.World.Mail.Id
  - TinyLife.World.Mail.SentTime
  - TinyLife.World.Mail.Map
  - TinyLife.World.Mail.GetReceivingLot
  - TinyLife.World.Mail.GetReceivingMailbox
  - TinyLife.World.Mail.OnReceived
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.FurnitureMail.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.World.FurnitureMail.Item
  commentId: F:TinyLife.World.FurnitureMail.Item
  id: Item
  parent: TinyLife.World.FurnitureMail
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: FurnitureMail.Item
  fullName: TinyLife.World.FurnitureMail.Item
  type: Field
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Item
    path: ../TinyLife/World/Mail.cs
    startLine: 97
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe furniture item to receive in the mail.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly Furniture Item
    return:
      type: TinyLife.Objects.Furniture
    content.vb: >-
      <DataMember>

      Public ReadOnly Item As Furniture
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.World.FurnitureMail.#ctor(System.Guid,TinyLife.Objects.Furniture)
  commentId: M:TinyLife.World.FurnitureMail.#ctor(System.Guid,TinyLife.Objects.Furniture)
  id: '#ctor(System.Guid,TinyLife.Objects.Furniture)'
  parent: TinyLife.World.FurnitureMail
  langs:
  - csharp
  - vb
  name: FurnitureMail(Guid, Furniture)
  nameWithType: FurnitureMail.FurnitureMail(Guid, Furniture)
  fullName: TinyLife.World.FurnitureMail.FurnitureMail(System.Guid, TinyLife.Objects.Furniture)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/Mail.cs
    startLine: 100
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  example: []
  syntax:
    content: public FurnitureMail(Guid receivingLot, Furniture item)
    parameters:
    - id: receivingLot
      type: System.Guid
    - id: item
      type: TinyLife.Objects.Furniture
    content.vb: Public Sub New(receivingLot As Guid, item As Furniture)
  overload: TinyLife.World.FurnitureMail.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.World.FurnitureMail.OnCollected(TinyLife.Actions.Action)
  commentId: M:TinyLife.World.FurnitureMail.OnCollected(TinyLife.Actions.Action)
  id: OnCollected(TinyLife.Actions.Action)
  parent: TinyLife.World.FurnitureMail
  langs:
  - csharp
  - vb
  name: OnCollected(Action)
  nameWithType: FurnitureMail.OnCollected(Action)
  fullName: TinyLife.World.FurnitureMail.OnCollected(TinyLife.Actions.Action)
  type: Method
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnCollected
    path: ../TinyLife/World/Mail.cs
    startLine: 109
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA method that is called when the <xref href=\"TinyLife.World.FurnitureMail.Item\" data-throw-if-not-resolved=\"false\"></xref> is collected as part of the given <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is called in <xref href=\"TinyLife.Actions.ActionType.GetFurnitureMail\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void OnCollected(Action action)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action.
    content.vb: Public Overridable Sub OnCollected(action As Action)
  overload: TinyLife.World.FurnitureMail.OnCollected*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: TinyLife.World.FurnitureMail.Validate(TinyLife.World.Map)
  commentId: M:TinyLife.World.FurnitureMail.Validate(TinyLife.World.Map)
  id: Validate(TinyLife.World.Map)
  parent: TinyLife.World.FurnitureMail
  langs:
  - csharp
  - vb
  name: Validate(Map)
  nameWithType: FurnitureMail.Validate(Map)
  fullName: TinyLife.World.FurnitureMail.Validate(TinyLife.World.Map)
  type: Method
  source:
    remote:
      path: TinyLife/World/Mail.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/World/Mail.cs
    startLine: 112
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nValidates this mail and returns false if it is somehow invalid. This method is called when a save is loaded.\n"
  example: []
  syntax:
    content: public override bool Validate(Map map)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that this mail is on.
    return:
      type: System.Boolean
      description: Whether this mail is valid.
    content.vb: Public Overrides Function Validate(map As Map) As Boolean
  overridden: TinyLife.World.Mail.Validate(TinyLife.World.Map)
  overload: TinyLife.World.FurnitureMail.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TinyLife.World.Mail
  commentId: T:TinyLife.World.Mail
  parent: TinyLife.World
  name: Mail
  nameWithType: Mail
  fullName: TinyLife.World.Mail
- uid: TinyLife.Actions.ActionType.GetFurnitureMail
  commentId: F:TinyLife.Actions.ActionType.GetFurnitureMail
  isExternal: true
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.World.Mail.Id
  commentId: F:TinyLife.World.Mail.Id
  parent: TinyLife.World.Mail
  name: Id
  nameWithType: Mail.Id
  fullName: TinyLife.World.Mail.Id
- uid: TinyLife.World.Mail.SentTime
  commentId: F:TinyLife.World.Mail.SentTime
  parent: TinyLife.World.Mail
  name: SentTime
  nameWithType: Mail.SentTime
  fullName: TinyLife.World.Mail.SentTime
- uid: TinyLife.World.Mail.Map
  commentId: P:TinyLife.World.Mail.Map
  parent: TinyLife.World.Mail
  name: Map
  nameWithType: Mail.Map
  fullName: TinyLife.World.Mail.Map
- uid: TinyLife.World.Mail.GetReceivingLot
  commentId: M:TinyLife.World.Mail.GetReceivingLot
  parent: TinyLife.World.Mail
  name: GetReceivingLot()
  nameWithType: Mail.GetReceivingLot()
  fullName: TinyLife.World.Mail.GetReceivingLot()
  spec.csharp:
  - uid: TinyLife.World.Mail.GetReceivingLot
    name: GetReceivingLot
    nameWithType: Mail.GetReceivingLot
    fullName: TinyLife.World.Mail.GetReceivingLot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.GetReceivingLot
    name: GetReceivingLot
    nameWithType: Mail.GetReceivingLot
    fullName: TinyLife.World.Mail.GetReceivingLot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Mail.GetReceivingMailbox
  commentId: M:TinyLife.World.Mail.GetReceivingMailbox
  parent: TinyLife.World.Mail
  name: GetReceivingMailbox()
  nameWithType: Mail.GetReceivingMailbox()
  fullName: TinyLife.World.Mail.GetReceivingMailbox()
  spec.csharp:
  - uid: TinyLife.World.Mail.GetReceivingMailbox
    name: GetReceivingMailbox
    nameWithType: Mail.GetReceivingMailbox
    fullName: TinyLife.World.Mail.GetReceivingMailbox
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.GetReceivingMailbox
    name: GetReceivingMailbox
    nameWithType: Mail.GetReceivingMailbox
    fullName: TinyLife.World.Mail.GetReceivingMailbox
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Mail.OnReceived
  commentId: M:TinyLife.World.Mail.OnReceived
  parent: TinyLife.World.Mail
  name: OnReceived()
  nameWithType: Mail.OnReceived()
  fullName: TinyLife.World.Mail.OnReceived()
  spec.csharp:
  - uid: TinyLife.World.Mail.OnReceived
    name: OnReceived
    nameWithType: Mail.OnReceived
    fullName: TinyLife.World.Mail.OnReceived
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.OnReceived
    name: OnReceived
    nameWithType: Mail.OnReceived
    fullName: TinyLife.World.Mail.OnReceived
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.FurnitureMail.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<FurnitureMail>()
  nameWithType: Extensions.JsonCopy<FurnitureMail>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.FurnitureMail>()
  nameWithType.vb: Extensions.JsonCopy(Of FurnitureMail)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.FurnitureMail)()
  name.vb: JsonCopy(Of FurnitureMail)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<FurnitureMail>
    nameWithType: Extensions.JsonCopy<FurnitureMail>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.FurnitureMail>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of FurnitureMail)
    nameWithType: Extensions.JsonCopy(Of FurnitureMail)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.FurnitureMail)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.World.FurnitureMail.#ctor*
  commentId: Overload:TinyLife.World.FurnitureMail.#ctor
  name: FurnitureMail
  nameWithType: FurnitureMail.FurnitureMail
  fullName: TinyLife.World.FurnitureMail.FurnitureMail
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: TinyLife.World.FurnitureMail.Item
  commentId: F:TinyLife.World.FurnitureMail.Item
  isExternal: true
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.World.FurnitureMail.OnCollected*
  commentId: Overload:TinyLife.World.FurnitureMail.OnCollected
  name: OnCollected
  nameWithType: FurnitureMail.OnCollected
  fullName: TinyLife.World.FurnitureMail.OnCollected
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.World.Mail.Validate(TinyLife.World.Map)
  commentId: M:TinyLife.World.Mail.Validate(TinyLife.World.Map)
  parent: TinyLife.World.Mail
  name: Validate(Map)
  nameWithType: Mail.Validate(Map)
  fullName: TinyLife.World.Mail.Validate(TinyLife.World.Map)
  spec.csharp:
  - uid: TinyLife.World.Mail.Validate(TinyLife.World.Map)
    name: Validate
    nameWithType: Mail.Validate
    fullName: TinyLife.World.Mail.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Mail.Validate(TinyLife.World.Map)
    name: Validate
    nameWithType: Mail.Validate
    fullName: TinyLife.World.Mail.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.FurnitureMail.Validate*
  commentId: Overload:TinyLife.World.FurnitureMail.Validate
  name: Validate
  nameWithType: FurnitureMail.Validate
  fullName: TinyLife.World.FurnitureMail.Validate
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
