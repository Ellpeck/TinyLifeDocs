### YamlMime:ManagedReference
items:
- uid: TinyLife.World.GrassyAutoTile
  commentId: T:TinyLife.World.GrassyAutoTile
  id: GrassyAutoTile
  parent: TinyLife.World
  children:
  - TinyLife.World.GrassyAutoTile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,System.Boolean,MLEM.Textures.TextureRegion,System.Int32[])
  - TinyLife.World.GrassyAutoTile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  - TinyLife.World.GrassyAutoTile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  langs:
  - csharp
  - vb
  name: GrassyAutoTile
  nameWithType: GrassyAutoTile
  fullName: TinyLife.World.GrassyAutoTile
  type: Class
  source:
    remote:
      path: TinyLife/World/GrassyAutoTile.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GrassyAutoTile
    path: ../TinyLife/World/GrassyAutoTile.cs
    startLine: 14
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA grassy auto-tile is a <xref href=\"TinyLife.World.Tile\" data-throw-if-not-resolved=\"false\"></xref> that automatically displays a transition from itself to neighboring grass tiles.\nThis class is used by dirt, paths and grass tiles to create a smooth transition between tiles.\n"
  example: []
  syntax:
    content: 'public class GrassyAutoTile : Tile, IPricedObject'
    content.vb: >-
      Public Class GrassyAutoTile
          Inherits Tile
          Implements IPricedObject
  inheritance:
  - System.Object
  - TinyLife.World.Tile
  implements:
  - TinyLife.World.IPricedObject
  inheritedMembers:
  - TinyLife.World.Tile.Tiles
  - TinyLife.World.Tile.Width
  - TinyLife.World.Tile.Height
  - TinyLife.World.Tile.ReferencePrice
  - TinyLife.World.Tile.BaseName
  - TinyLife.World.Tile.Name
  - TinyLife.World.Tile.Price
  - TinyLife.World.Tile.ColorSchemes
  - TinyLife.World.Tile.Colors
  - TinyLife.World.Tile.CanBuy
  - TinyLife.World.Tile.PathCostModifier
  - TinyLife.World.Tile.Natural
  - TinyLife.World.Tile.Icon
  - TinyLife.World.Tile.DefaultColors
  - TinyLife.World.Tile.TextureRegions
  - TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  - TinyLife.World.Tile.GetPrice
  - TinyLife.World.Tile.Register(System.String,System.Int32,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,System.Boolean,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},System.Int32[],System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.GrassyAutoTile.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.World.GrassyAutoTile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,System.Boolean,MLEM.Textures.TextureRegion,System.Int32[])
  commentId: M:TinyLife.World.GrassyAutoTile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,System.Boolean,MLEM.Textures.TextureRegion,System.Int32[])
  id: '#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,System.Boolean,MLEM.Textures.TextureRegion,System.Int32[])'
  parent: TinyLife.World.GrassyAutoTile
  langs:
  - csharp
  - vb
  name: GrassyAutoTile(String, String, Int32, Dictionary<Direction2, TextureRegion>, ColorScheme[], Int32[], Boolean, Single, Boolean, TextureRegion, Int32[])
  nameWithType: GrassyAutoTile.GrassyAutoTile(String, String, Int32, Dictionary<Direction2, TextureRegion>, ColorScheme[], Int32[], Boolean, Single, Boolean, TextureRegion, Int32[])
  fullName: TinyLife.World.GrassyAutoTile.GrassyAutoTile(System.String, System.String, System.Int32, System.Collections.Generic.Dictionary<MLEM.Misc.Direction2, MLEM.Textures.TextureRegion>, TinyLife.Utilities.ColorScheme[], System.Int32[], System.Boolean, System.Single, System.Boolean, MLEM.Textures.TextureRegion, System.Int32[])
  type: Constructor
  source:
    remote:
      path: TinyLife/World/GrassyAutoTile.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/GrassyAutoTile.cs
    startLine: 17
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new tile with the given settings.\nTo create an instance of a custom tile class, use <xref href=\"TinyLife.World.Tile.Register(System.String%2cSystem.Int32%2cMLEM.Textures.TextureRegion%2cTinyLife.Utilities.ColorScheme%5b%5d%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean%2cMLEM.Textures.TextureRegion%2cSystem.Func%7bMLEM.Misc.Direction2%2cMLEM.Textures.TextureRegion%7d%2cSystem.Int32%5b%5d%2cSystem.Type)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected GrassyAutoTile(string baseName, string name, int price, Dictionary<Direction2, TextureRegion> textureRegions, ColorScheme[] colorSchemes, int[] colors, bool canBuy, float pathCostModifier, bool natural, TextureRegion icon, int[] defaultColors)
    parameters:
    - id: baseName
      type: System.String
    - id: name
      type: System.String
    - id: price
      type: System.Int32
    - id: textureRegions
      type: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion}
    - id: colorSchemes
      type: TinyLife.Utilities.ColorScheme[]
    - id: colors
      type: System.Int32[]
    - id: canBuy
      type: System.Boolean
    - id: pathCostModifier
      type: System.Single
    - id: natural
      type: System.Boolean
    - id: icon
      type: MLEM.Textures.TextureRegion
    - id: defaultColors
      type: System.Int32[]
    content.vb: Protected Sub New(baseName As String, name As String, price As Integer, textureRegions As Dictionary(Of Direction2, TextureRegion), colorSchemes As ColorScheme(), colors As Integer(), canBuy As Boolean, pathCostModifier As Single, natural As Boolean, icon As TextureRegion, defaultColors As Integer())
  overload: TinyLife.World.GrassyAutoTile.#ctor*
  nameWithType.vb: GrassyAutoTile.GrassyAutoTile(String, String, Int32, Dictionary(Of Direction2, TextureRegion), ColorScheme(), Int32(), Boolean, Single, Boolean, TextureRegion, Int32())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TinyLife.World.GrassyAutoTile.GrassyAutoTile(System.String, System.String, System.Int32, System.Collections.Generic.Dictionary(Of MLEM.Misc.Direction2, MLEM.Textures.TextureRegion), TinyLife.Utilities.ColorScheme(), System.Int32(), System.Boolean, System.Single, System.Boolean, MLEM.Textures.TextureRegion, System.Int32())
  name.vb: GrassyAutoTile(String, String, Int32, Dictionary(Of Direction2, TextureRegion), ColorScheme(), Int32(), Boolean, Single, Boolean, TextureRegion, Int32())
- uid: TinyLife.World.GrassyAutoTile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.World.GrassyAutoTile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  id: Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.World.GrassyAutoTile
  langs:
  - csharp
  - vb
  name: Draw(Object, Map, Point, Vector2, Single, Single, ICollection<StaticSpriteBatch.Item>)
  nameWithType: GrassyAutoTile.Draw(Object, Map, Point, Vector2, Single, Single, ICollection<StaticSpriteBatch.Item>)
  fullName: TinyLife.World.GrassyAutoTile.Draw(System.Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, System.Single, System.Single, System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>)
  type: Method
  source:
    remote:
      path: TinyLife/World/GrassyAutoTile.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/World/GrassyAutoTile.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws this tile at the given position in the world using a <xref href=\"Microsoft.Xna.Framework.Graphics.SpriteBatch\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"MLEM.Graphics.StaticSpriteBatch\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public override void Draw(object batch, Map map, Point pos, Vector2 drawPos, float depth, float scale, ICollection<StaticSpriteBatch.Item> items = null)
    parameters:
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which can either be a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in screen space, to draw at.
    - id: depth
      type: System.Single
      description: The depth to use for drawing.
    - id: scale
      type: System.Single
      description: The scale to draw the tile with.
    - id: items
      type: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
      description: The <xref href="MLEM.Graphics.StaticSpriteBatch.Item" data-throw-if-not-resolved="false"></xref> collection that added items can optionally be added to.
    content.vb: Public Overrides Sub Draw(batch As Object, map As Map, pos As Point, drawPos As Vector2, depth As Single, scale As Single, items As ICollection(Of StaticSpriteBatch.Item) = Nothing)
  overridden: TinyLife.World.Tile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  overload: TinyLife.World.GrassyAutoTile.Draw*
  nameWithType.vb: GrassyAutoTile.Draw(Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: TinyLife.World.GrassyAutoTile.Draw(System.Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, System.Single, System.Single, System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item))
- uid: TinyLife.World.GrassyAutoTile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.GrassyAutoTile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  id: OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.GrassyAutoTile
  langs:
  - csharp
  - vb
  name: OnNeighborChanged(Map, Point, Point)
  nameWithType: GrassyAutoTile.OnNeighborChanged(Map, Point, Point)
  fullName: TinyLife.World.GrassyAutoTile.OnNeighborChanged(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: TinyLife/World/GrassyAutoTile.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnNeighborChanged
    path: ../TinyLife/World/GrassyAutoTile.cs
    startLine: 59
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA method that is called when a neighboring <xref href=\"TinyLife.World.Tile\" data-throw-if-not-resolved=\"false\"></xref> on the <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> changes.\nThis method does nothing by default, but is overriden by <xref href=\"TinyLife.World.GrassyAutoTile\" data-throw-if-not-resolved=\"false\"></xref> to notify neighboring tiles of changes.\n"
  example: []
  syntax:
    content: public override void OnNeighborChanged(Map map, Point pos, Point neighbor)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: neighbor
      type: Microsoft.Xna.Framework.Point
      description: The position of the tile that changed.
    content.vb: Public Overrides Sub OnNeighborChanged(map As Map, pos As Point, neighbor As Point)
  overridden: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  overload: TinyLife.World.GrassyAutoTile.OnNeighborChanged*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TinyLife.World.IPricedObject
  commentId: T:TinyLife.World.IPricedObject
  parent: TinyLife.World
  name: IPricedObject
  nameWithType: IPricedObject
  fullName: TinyLife.World.IPricedObject
- uid: TinyLife.World.Tile.Tiles
  commentId: F:TinyLife.World.Tile.Tiles
  parent: TinyLife.World.Tile
  name: Tiles
  nameWithType: Tile.Tiles
  fullName: TinyLife.World.Tile.Tiles
- uid: TinyLife.World.Tile.Width
  commentId: F:TinyLife.World.Tile.Width
  parent: TinyLife.World.Tile
  name: Width
  nameWithType: Tile.Width
  fullName: TinyLife.World.Tile.Width
- uid: TinyLife.World.Tile.Height
  commentId: F:TinyLife.World.Tile.Height
  parent: TinyLife.World.Tile
  name: Height
  nameWithType: Tile.Height
  fullName: TinyLife.World.Tile.Height
- uid: TinyLife.World.Tile.ReferencePrice
  commentId: F:TinyLife.World.Tile.ReferencePrice
  parent: TinyLife.World.Tile
  name: ReferencePrice
  nameWithType: Tile.ReferencePrice
  fullName: TinyLife.World.Tile.ReferencePrice
- uid: TinyLife.World.Tile.BaseName
  commentId: F:TinyLife.World.Tile.BaseName
  parent: TinyLife.World.Tile
  name: BaseName
  nameWithType: Tile.BaseName
  fullName: TinyLife.World.Tile.BaseName
- uid: TinyLife.World.Tile.Name
  commentId: F:TinyLife.World.Tile.Name
  parent: TinyLife.World.Tile
  name: Name
  nameWithType: Tile.Name
  fullName: TinyLife.World.Tile.Name
- uid: TinyLife.World.Tile.Price
  commentId: F:TinyLife.World.Tile.Price
  parent: TinyLife.World.Tile
  name: Price
  nameWithType: Tile.Price
  fullName: TinyLife.World.Tile.Price
- uid: TinyLife.World.Tile.ColorSchemes
  commentId: F:TinyLife.World.Tile.ColorSchemes
  parent: TinyLife.World.Tile
  name: ColorSchemes
  nameWithType: Tile.ColorSchemes
  fullName: TinyLife.World.Tile.ColorSchemes
- uid: TinyLife.World.Tile.Colors
  commentId: F:TinyLife.World.Tile.Colors
  parent: TinyLife.World.Tile
  name: Colors
  nameWithType: Tile.Colors
  fullName: TinyLife.World.Tile.Colors
- uid: TinyLife.World.Tile.CanBuy
  commentId: F:TinyLife.World.Tile.CanBuy
  parent: TinyLife.World.Tile
  name: CanBuy
  nameWithType: Tile.CanBuy
  fullName: TinyLife.World.Tile.CanBuy
- uid: TinyLife.World.Tile.PathCostModifier
  commentId: F:TinyLife.World.Tile.PathCostModifier
  parent: TinyLife.World.Tile
  name: PathCostModifier
  nameWithType: Tile.PathCostModifier
  fullName: TinyLife.World.Tile.PathCostModifier
- uid: TinyLife.World.Tile.Natural
  commentId: F:TinyLife.World.Tile.Natural
  parent: TinyLife.World.Tile
  name: Natural
  nameWithType: Tile.Natural
  fullName: TinyLife.World.Tile.Natural
- uid: TinyLife.World.Tile.Icon
  commentId: F:TinyLife.World.Tile.Icon
  parent: TinyLife.World.Tile
  name: Icon
  nameWithType: Tile.Icon
  fullName: TinyLife.World.Tile.Icon
- uid: TinyLife.World.Tile.DefaultColors
  commentId: F:TinyLife.World.Tile.DefaultColors
  parent: TinyLife.World.Tile
  name: DefaultColors
  nameWithType: Tile.DefaultColors
  fullName: TinyLife.World.Tile.DefaultColors
- uid: TinyLife.World.Tile.TextureRegions
  commentId: F:TinyLife.World.Tile.TextureRegions
  parent: TinyLife.World.Tile
  name: TextureRegions
  nameWithType: Tile.TextureRegions
  fullName: TinyLife.World.Tile.TextureRegions
- uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  commentId: M:TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  parent: TinyLife.World.Tile
  isExternal: true
  name: DrawUi(Element, SpriteBatch, Single)
  nameWithType: Tile.DrawUi(Element, SpriteBatch, Single)
  fullName: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Single)
  spec.csharp:
  - uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
    name: DrawUi
    nameWithType: Tile.DrawUi
    fullName: TinyLife.World.Tile.DrawUi
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
    name: DrawUi
    nameWithType: Tile.DrawUi
    fullName: TinyLife.World.Tile.DrawUi
  - name: (
    nameWithType: (
    fullName: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    nameWithType: Element
    fullName: MLEM.Ui.Elements.Element
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    nameWithType: SpriteBatch
    fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Tile.GetPrice
  commentId: M:TinyLife.World.Tile.GetPrice
  parent: TinyLife.World.Tile
  name: GetPrice()
  nameWithType: Tile.GetPrice()
  fullName: TinyLife.World.Tile.GetPrice()
  spec.csharp:
  - uid: TinyLife.World.Tile.GetPrice
    name: GetPrice
    nameWithType: Tile.GetPrice
    fullName: TinyLife.World.Tile.GetPrice
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Tile.GetPrice
    name: GetPrice
    nameWithType: Tile.GetPrice
    fullName: TinyLife.World.Tile.GetPrice
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,System.Boolean,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},System.Int32[],System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,System.Boolean,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},System.Int32[],System.Type)
  parent: TinyLife.World.Tile
  isExternal: true
  name: Register(String, Int32, TextureRegion, ColorScheme[], Single, Boolean, Boolean, TextureRegion, Func<Direction2, TextureRegion>, Int32[], Type)
  nameWithType: Tile.Register(String, Int32, TextureRegion, ColorScheme[], Single, Boolean, Boolean, TextureRegion, Func<Direction2, TextureRegion>, Int32[], Type)
  fullName: TinyLife.World.Tile.Register(System.String, System.Int32, MLEM.Textures.TextureRegion, TinyLife.Utilities.ColorScheme[], System.Single, System.Boolean, System.Boolean, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, MLEM.Textures.TextureRegion>, System.Int32[], System.Type)
  nameWithType.vb: Tile.Register(String, Int32, TextureRegion, ColorScheme(), Single, Boolean, Boolean, TextureRegion, Func(Of Direction2, TextureRegion), Int32(), Type)
  fullName.vb: TinyLife.World.Tile.Register(System.String, System.Int32, MLEM.Textures.TextureRegion, TinyLife.Utilities.ColorScheme(), System.Single, System.Boolean, System.Boolean, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, MLEM.Textures.TextureRegion), System.Int32(), System.Type)
  name.vb: Register(String, Int32, TextureRegion, ColorScheme(), Single, Boolean, Boolean, TextureRegion, Func(Of Direction2, TextureRegion), Int32(), Type)
  spec.csharp:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,System.Boolean,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},System.Int32[],System.Type)
    name: Register
    nameWithType: Tile.Register
    fullName: TinyLife.World.Tile.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: TinyLife.Utilities.ColorScheme
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,MLEM.Textures.TextureRegion,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,System.Boolean,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion},System.Int32[],System.Type)
    name: Register
    nameWithType: Tile.Register
    fullName: TinyLife.World.Tile.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: TinyLife.Utilities.ColorScheme
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.GrassyAutoTile.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<GrassyAutoTile>()
  nameWithType: Extensions.JsonCopy<GrassyAutoTile>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.GrassyAutoTile>()
  nameWithType.vb: Extensions.JsonCopy(Of GrassyAutoTile)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.GrassyAutoTile)()
  name.vb: JsonCopy(Of GrassyAutoTile)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<GrassyAutoTile>
    nameWithType: Extensions.JsonCopy<GrassyAutoTile>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.GrassyAutoTile>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of GrassyAutoTile)
    nameWithType: Extensions.JsonCopy(Of GrassyAutoTile)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.GrassyAutoTile)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.GrassyAutoTile.#ctor*
  commentId: Overload:TinyLife.World.GrassyAutoTile.#ctor
  name: GrassyAutoTile
  nameWithType: GrassyAutoTile.GrassyAutoTile
  fullName: TinyLife.World.GrassyAutoTile.GrassyAutoTile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Direction2, TextureRegion>
  nameWithType: Dictionary<Direction2, TextureRegion>
  fullName: System.Collections.Generic.Dictionary<MLEM.Misc.Direction2, MLEM.Textures.TextureRegion>
  nameWithType.vb: Dictionary(Of Direction2, TextureRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of MLEM.Misc.Direction2, MLEM.Textures.TextureRegion)
  name.vb: Dictionary(Of Direction2, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Misc.Direction2
    name: Direction2
    nameWithType: Direction2
    fullName: MLEM.Misc.Direction2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    nameWithType: TextureRegion
    fullName: MLEM.Textures.TextureRegion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: TinyLife.Utilities.ColorScheme
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: TinyLife.Utilities.ColorScheme
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: TinyLife.World.Tile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  commentId: M:TinyLife.World.Tile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
  parent: TinyLife.World.Tile
  isExternal: true
  name: Draw(Object, Map, Point, Vector2, Single, Single, ICollection<StaticSpriteBatch.Item>)
  nameWithType: Tile.Draw(Object, Map, Point, Vector2, Single, Single, ICollection<StaticSpriteBatch.Item>)
  fullName: TinyLife.World.Tile.Draw(System.Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, System.Single, System.Single, System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>)
  nameWithType.vb: Tile.Draw(Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item))
  fullName.vb: TinyLife.World.Tile.Draw(System.Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, System.Single, System.Single, System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item))
  name.vb: Draw(Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item))
  spec.csharp:
  - uid: TinyLife.World.Tile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    nameWithType: Tile.Draw
    fullName: TinyLife.World.Tile.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: StaticSpriteBatch.Item
    nameWithType: StaticSpriteBatch.Item
    fullName: MLEM.Graphics.StaticSpriteBatch.Item
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Tile.Draw(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item})
    name: Draw
    nameWithType: Tile.Draw
    fullName: TinyLife.World.Tile.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: StaticSpriteBatch.Item
    nameWithType: StaticSpriteBatch.Item
    fullName: MLEM.Graphics.StaticSpriteBatch.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.GrassyAutoTile.Draw*
  commentId: Overload:TinyLife.World.GrassyAutoTile.Draw
  name: Draw
  nameWithType: GrassyAutoTile.Draw
  fullName: TinyLife.World.GrassyAutoTile.Draw
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
  commentId: T:System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<StaticSpriteBatch.Item>
  nameWithType: ICollection<StaticSpriteBatch.Item>
  fullName: System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>
  nameWithType.vb: ICollection(Of StaticSpriteBatch.Item)
  fullName.vb: System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item)
  name.vb: ICollection(Of StaticSpriteBatch.Item)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: StaticSpriteBatch.Item
    nameWithType: StaticSpriteBatch.Item
    fullName: MLEM.Graphics.StaticSpriteBatch.Item
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: StaticSpriteBatch.Item
    nameWithType: StaticSpriteBatch.Item
    fullName: MLEM.Graphics.StaticSpriteBatch.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.Tile
  isExternal: true
  name: OnNeighborChanged(Map, Point, Point)
  nameWithType: Tile.OnNeighborChanged(Map, Point, Point)
  fullName: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
    name: OnNeighborChanged
    nameWithType: Tile.OnNeighborChanged
    fullName: TinyLife.World.Tile.OnNeighborChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
    name: OnNeighborChanged
    nameWithType: Tile.OnNeighborChanged
    fullName: TinyLife.World.Tile.OnNeighborChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.World.Map
    name: Map
    nameWithType: Map
    fullName: TinyLife.World.Map
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    nameWithType: Point
    fullName: Microsoft.Xna.Framework.Point
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.GrassyAutoTile.OnNeighborChanged*
  commentId: Overload:TinyLife.World.GrassyAutoTile.OnNeighborChanged
  name: OnNeighborChanged
  nameWithType: GrassyAutoTile.OnNeighborChanged
  fullName: TinyLife.World.GrassyAutoTile.OnNeighborChanged
