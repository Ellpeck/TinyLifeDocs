### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.SkillCategory
  commentId: T:TinyLife.Skills.SkillCategory
  id: SkillCategory
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.SkillCategory.Creative
  - TinyLife.Skills.SkillCategory.Logical
  - TinyLife.Skills.SkillCategory.Physical
  - TinyLife.Skills.SkillCategory.Social
  langs:
  - csharp
  - vb
  name: SkillCategory
  nameWithType: SkillCategory
  fullName: TinyLife.Skills.SkillCategory
  type: Enum
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SkillCategory
    path: ../TinyLife/Skills/Skill.cs
    startLine: 305
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA flag enumeration that determines the categories that a <xref href=\"TinyLife.Skills.SkillType\" data-throw-if-not-resolved=\"false\"></xref> has\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum SkillCategory
    content.vb: >-
      <Flags>

      Public Enum SkillCategory
  extensionMethods:
  - TinyLife.Skills.SkillCategory.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: TinyLife.Skills.SkillCategory.Creative
  commentId: F:TinyLife.Skills.SkillCategory.Creative
  id: Creative
  parent: TinyLife.Skills.SkillCategory
  langs:
  - csharp
  - vb
  name: Creative
  nameWithType: SkillCategory.Creative
  fullName: TinyLife.Skills.SkillCategory.Creative
  type: Field
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Creative
    path: ../TinyLife/Skills/Skill.cs
    startLine: 312
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA skill category for skills that require creativity.\nSkills in this category are boosted by the <xref href=\"TinyLife.PersonalityType.Creative\" data-throw-if-not-resolved=\"false\"></xref> personality type.\n"
  example: []
  syntax:
    content: Creative = 1
    return:
      type: TinyLife.Skills.SkillCategory
- uid: TinyLife.Skills.SkillCategory.Logical
  commentId: F:TinyLife.Skills.SkillCategory.Logical
  id: Logical
  parent: TinyLife.Skills.SkillCategory
  langs:
  - csharp
  - vb
  name: Logical
  nameWithType: SkillCategory.Logical
  fullName: TinyLife.Skills.SkillCategory.Logical
  type: Field
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Logical
    path: ../TinyLife/Skills/Skill.cs
    startLine: 316
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA skill category for skills that require logical thinking\n"
  example: []
  syntax:
    content: Logical = 2
    return:
      type: TinyLife.Skills.SkillCategory
- uid: TinyLife.Skills.SkillCategory.Social
  commentId: F:TinyLife.Skills.SkillCategory.Social
  id: Social
  parent: TinyLife.Skills.SkillCategory
  langs:
  - csharp
  - vb
  name: Social
  nameWithType: SkillCategory.Social
  fullName: TinyLife.Skills.SkillCategory.Social
  type: Field
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Social
    path: ../TinyLife/Skills/Skill.cs
    startLine: 321
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA skill category for skills that are related to social interaction.\nSkills in this category are boosted by the <xref href=\"TinyLife.PersonalityType.Likeable\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.PersonalityType.Mean\" data-throw-if-not-resolved=\"false\"></xref> personality types.\n"
  example: []
  syntax:
    content: Social = 4
    return:
      type: TinyLife.Skills.SkillCategory
- uid: TinyLife.Skills.SkillCategory.Physical
  commentId: F:TinyLife.Skills.SkillCategory.Physical
  id: Physical
  parent: TinyLife.Skills.SkillCategory
  langs:
  - csharp
  - vb
  name: Physical
  nameWithType: SkillCategory.Physical
  fullName: TinyLife.Skills.SkillCategory.Physical
  type: Field
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Physical
    path: ../TinyLife/Skills/Skill.cs
    startLine: 326
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: "\nA skill category for skills that are physical in nature.\nSkilled in this category are boosted by the <xref href=\"TinyLife.Skills.SkillType.Fitness\" data-throw-if-not-resolved=\"false\"></xref> skill and are affected negatively by the <xref href=\"TinyLife.Emotions.EmotionType.Stunned\" data-throw-if-not-resolved=\"false\"></xref> emotion.\n"
  example: []
  syntax:
    content: Physical = 8
    return:
      type: TinyLife.Skills.SkillCategory
references:
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
- uid: TinyLife.Skills.SkillCategory.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<SkillCategory>(SkillCategory)
  nameWithType: Extensions.JsonCopy<SkillCategory>(SkillCategory)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.SkillCategory>(TinyLife.Skills.SkillCategory)
  nameWithType.vb: Extensions.JsonCopy(Of SkillCategory)(SkillCategory)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.SkillCategory)(TinyLife.Skills.SkillCategory)
  name.vb: JsonCopy(Of SkillCategory)(SkillCategory)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.SkillCategory)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.SkillCategory)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
  - name: )
  - name: (
  - uid: TinyLife.Skills.SkillCategory
    name: SkillCategory
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.PersonalityType.Creative
  commentId: F:TinyLife.PersonalityType.Creative
  name: Creative
  nameWithType: PersonalityType.Creative
  fullName: TinyLife.PersonalityType.Creative
- uid: TinyLife.Skills.SkillCategory
  commentId: T:TinyLife.Skills.SkillCategory
  parent: TinyLife.Skills
  name: SkillCategory
  nameWithType: SkillCategory
  fullName: TinyLife.Skills.SkillCategory
- uid: TinyLife.PersonalityType.Likeable
  commentId: F:TinyLife.PersonalityType.Likeable
  name: Likeable
  nameWithType: PersonalityType.Likeable
  fullName: TinyLife.PersonalityType.Likeable
- uid: TinyLife.PersonalityType.Mean
  commentId: F:TinyLife.PersonalityType.Mean
  name: Mean
  nameWithType: PersonalityType.Mean
  fullName: TinyLife.PersonalityType.Mean
- uid: TinyLife.Skills.SkillType.Fitness
  commentId: F:TinyLife.Skills.SkillType.Fitness
  name: Fitness
  nameWithType: SkillType.Fitness
  fullName: TinyLife.Skills.SkillType.Fitness
- uid: TinyLife.Emotions.EmotionType.Stunned
  commentId: F:TinyLife.Emotions.EmotionType.Stunned
  name: Stunned
  nameWithType: EmotionType.Stunned
  fullName: TinyLife.Emotions.EmotionType.Stunned
