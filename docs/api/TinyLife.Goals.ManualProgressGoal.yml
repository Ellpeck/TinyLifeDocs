### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.ManualProgressGoal
  commentId: T:TinyLife.Goals.ManualProgressGoal
  id: ManualProgressGoal
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.ManualProgressGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)
  - TinyLife.Goals.ManualProgressGoal.GetProgress
  - TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  - TinyLife.Goals.ManualProgressGoal.Reset
  langs:
  - csharp
  - vb
  name: ManualProgressGoal
  nameWithType: ManualProgressGoal
  fullName: TinyLife.Goals.ManualProgressGoal
  type: Class
  source:
    remote:
      path: TinyLife/Goals/ManualProgressGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ManualProgressGoal
    path: Goals/ManualProgressGoal.cs
    startLine: 11
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA manual progress goal is a <xref href=\"TinyLife.Goals.Goal\" data-throw-if-not-resolved=\"false\"></xref> that is not automatically triggered.\nIts progress goes between 0 and 1, and can be advanced using <xref href=\"TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cTinyLife.Skills.SkillType%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ManualProgressGoal : Goal, IGenericDataHolder'
    content.vb: >-
      Public Class ManualProgressGoal

          Inherits Goal

          Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  - TinyLife.Goals.Goal
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - TinyLife.Goals.Goal.Name
  - TinyLife.Goals.Goal.Set
  - TinyLife.Goals.Goal.Info
  - TinyLife.Goals.Goal.GetDisplayedProgress
  - TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.ManualProgressGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Goals.ManualProgressGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)
  commentId: M:TinyLife.Goals.ManualProgressGoal.#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)
  id: '#ctor(TinyLife.Goals.GoalSet,TinyLife.Goals.GoalInfo)'
  parent: TinyLife.Goals.ManualProgressGoal
  langs:
  - csharp
  - vb
  name: ManualProgressGoal(GoalSet, GoalInfo)
  nameWithType: ManualProgressGoal.ManualProgressGoal(GoalSet, GoalInfo)
  fullName: TinyLife.Goals.ManualProgressGoal.ManualProgressGoal(TinyLife.Goals.GoalSet, TinyLife.Goals.GoalInfo)
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/ManualProgressGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: Goals/ManualProgressGoal.cs
    startLine: 17
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  example: []
  syntax:
    content: public ManualProgressGoal(GoalSet set, GoalInfo info)
    parameters:
    - id: set
      type: TinyLife.Goals.GoalSet
    - id: info
      type: TinyLife.Goals.GoalInfo
    content.vb: Public Sub New(set As GoalSet, info As GoalInfo)
  overload: TinyLife.Goals.ManualProgressGoal.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Goals.ManualProgressGoal.GetProgress
  commentId: M:TinyLife.Goals.ManualProgressGoal.GetProgress
  id: GetProgress
  parent: TinyLife.Goals.ManualProgressGoal
  langs:
  - csharp
  - vb
  name: GetProgress()
  nameWithType: ManualProgressGoal.GetProgress()
  fullName: TinyLife.Goals.ManualProgressGoal.GetProgress()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/ManualProgressGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetProgress
    path: Goals/ManualProgressGoal.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  example: []
  syntax:
    content: public override float GetProgress()
    return:
      type: System.Single
    content.vb: Public Overrides Function GetProgress As Single
  overridden: TinyLife.Goals.Goal.GetProgress
  overload: TinyLife.Goals.ManualProgressGoal.GetProgress*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Goals.ManualProgressGoal.Reset
  commentId: M:TinyLife.Goals.ManualProgressGoal.Reset
  id: Reset
  parent: TinyLife.Goals.ManualProgressGoal
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ManualProgressGoal.Reset()
  fullName: TinyLife.Goals.ManualProgressGoal.Reset()
  type: Method
  source:
    remote:
      path: TinyLife/Goals/ManualProgressGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Reset
    path: Goals/ManualProgressGoal.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  example: []
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset
  overridden: TinyLife.Goals.Goal.Reset
  overload: TinyLife.Goals.ManualProgressGoal.Reset*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  id: MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  parent: TinyLife.Goals.ManualProgressGoal
  langs:
  - csharp
  - vb
  name: MakeProgress(Single, Single, ActionInfo, SkillType, Single)
  nameWithType: ManualProgressGoal.MakeProgress(Single, Single, ActionInfo, SkillType, Single)
  fullName: TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single, System.Single, TinyLife.Actions.ActionInfo, TinyLife.Skills.SkillType, System.Single)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/ManualProgressGoal.cs
      branch: master
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeProgress
    path: Goals/ManualProgressGoal.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nMakes progress on this manual progress goal based on the underlying <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Objects.Person.GetEfficiencyModifier(System.Single%2cTinyLife.Actions.ActionInfo%2cTinyLife.Skills.SkillType%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void MakeProgress(float amount, float speedMultiplier, ActionInfo info = null, SkillType skill = null, float levelModifier = 0.1F)
    parameters:
    - id: amount
      type: System.Single
      description: The amount of progress to make
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action information that influences this goal&apos;s progress
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The skill that influences this goal&apos;s progress
    - id: levelModifier
      type: System.Single
      description: The amount by which each skill level influences this goal&apos;s progress
    content.vb: Public Sub MakeProgress(amount As Single, speedMultiplier As Single, info As ActionInfo = Nothing, skill As SkillType = Nothing, levelModifier As Single = 0.1F)
  overload: TinyLife.Goals.ManualProgressGoal.MakeProgress*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TinyLife.Goals.Goal
  commentId: T:TinyLife.Goals.Goal
  parent: TinyLife.Goals
  name: Goal
  nameWithType: Goal
  fullName: TinyLife.Goals.Goal
- uid: TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Goals.ManualProgressGoal.MakeProgress(System.Single,System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  isExternal: true
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: TinyLife.Goals.Goal.Name
  commentId: F:TinyLife.Goals.Goal.Name
  parent: TinyLife.Goals.Goal
  name: Name
  nameWithType: Goal.Name
  fullName: TinyLife.Goals.Goal.Name
- uid: TinyLife.Goals.Goal.Set
  commentId: P:TinyLife.Goals.Goal.Set
  parent: TinyLife.Goals.Goal
  name: Set
  nameWithType: Goal.Set
  fullName: TinyLife.Goals.Goal.Set
- uid: TinyLife.Goals.Goal.Info
  commentId: P:TinyLife.Goals.Goal.Info
  parent: TinyLife.Goals.Goal
  name: Info
  nameWithType: Goal.Info
  fullName: TinyLife.Goals.Goal.Info
- uid: TinyLife.Goals.Goal.GetDisplayedProgress
  commentId: M:TinyLife.Goals.Goal.GetDisplayedProgress
  parent: TinyLife.Goals.Goal
  name: GetDisplayedProgress()
  nameWithType: Goal.GetDisplayedProgress()
  fullName: TinyLife.Goals.Goal.GetDisplayedProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetDisplayedProgress
    name: GetDisplayedProgress
    nameWithType: Goal.GetDisplayedProgress
    fullName: TinyLife.Goals.Goal.GetDisplayedProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetDisplayedProgress
    name: GetDisplayedProgress
    nameWithType: Goal.GetDisplayedProgress
    fullName: TinyLife.Goals.Goal.GetDisplayedProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  commentId: M:TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  parent: TinyLife.Goals.Goal
  name: Validate(GoalSet)
  nameWithType: Goal.Validate(GoalSet)
  fullName: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
  spec.csharp:
  - uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: Goal.Validate
    fullName: TinyLife.Goals.Goal.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.Validate(TinyLife.Goals.GoalSet)
    name: Validate
    nameWithType: Goal.Validate
    fullName: TinyLife.Goals.Goal.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Goals.GoalSet
    name: GoalSet
    nameWithType: GoalSet
    fullName: TinyLife.Goals.GoalSet
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: SetData(String, Object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String, System.Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    nameWithType: JsonTypeSafeGenericDataHolder.SetData
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetData<T>(String)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(String)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(System.String)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(System.String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData<T>
    nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData(Of T)
    nameWithType: JsonTypeSafeGenericDataHolder.GetData(Of T)
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys
    fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.ManualProgressGoal.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ManualProgressGoal>()
  nameWithType: Extensions.JsonCopy<ManualProgressGoal>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.ManualProgressGoal>()
  nameWithType.vb: Extensions.JsonCopy(Of ManualProgressGoal)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.ManualProgressGoal)()
  name.vb: JsonCopy(Of ManualProgressGoal)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<ManualProgressGoal>
    nameWithType: Extensions.JsonCopy<ManualProgressGoal>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.ManualProgressGoal>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of ManualProgressGoal)
    nameWithType: Extensions.JsonCopy(Of ManualProgressGoal)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.ManualProgressGoal)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Goals.ManualProgressGoal.#ctor*
  commentId: Overload:TinyLife.Goals.ManualProgressGoal.#ctor
  name: ManualProgressGoal
  nameWithType: ManualProgressGoal.ManualProgressGoal
  fullName: TinyLife.Goals.ManualProgressGoal.ManualProgressGoal
- uid: TinyLife.Goals.GoalSet
  commentId: T:TinyLife.Goals.GoalSet
  parent: TinyLife.Goals
  name: GoalSet
  nameWithType: GoalSet
  fullName: TinyLife.Goals.GoalSet
- uid: TinyLife.Goals.GoalInfo
  commentId: T:TinyLife.Goals.GoalInfo
  parent: TinyLife.Goals
  name: GoalInfo
  nameWithType: GoalInfo
  fullName: TinyLife.Goals.GoalInfo
- uid: TinyLife.Goals.Goal.GetProgress
  commentId: M:TinyLife.Goals.Goal.GetProgress
  parent: TinyLife.Goals.Goal
  name: GetProgress()
  nameWithType: Goal.GetProgress()
  fullName: TinyLife.Goals.Goal.GetProgress()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.GetProgress
    name: GetProgress
    nameWithType: Goal.GetProgress
    fullName: TinyLife.Goals.Goal.GetProgress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.ManualProgressGoal.GetProgress*
  commentId: Overload:TinyLife.Goals.ManualProgressGoal.GetProgress
  name: GetProgress
  nameWithType: ManualProgressGoal.GetProgress
  fullName: TinyLife.Goals.ManualProgressGoal.GetProgress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TinyLife.Goals.Goal.Reset
  commentId: M:TinyLife.Goals.Goal.Reset
  parent: TinyLife.Goals.Goal
  name: Reset()
  nameWithType: Goal.Reset()
  fullName: TinyLife.Goals.Goal.Reset()
  spec.csharp:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    nameWithType: Goal.Reset
    fullName: TinyLife.Goals.Goal.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Goals.Goal.Reset
    name: Reset
    nameWithType: Goal.Reset
    fullName: TinyLife.Goals.Goal.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Goals.ManualProgressGoal.Reset*
  commentId: Overload:TinyLife.Goals.ManualProgressGoal.Reset
  name: Reset
  nameWithType: ManualProgressGoal.Reset
  fullName: TinyLife.Goals.ManualProgressGoal.Reset
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Objects.Person.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  commentId: M:TinyLife.Objects.Person.GetEfficiencyModifier(System.Single,TinyLife.Actions.ActionInfo,TinyLife.Skills.SkillType,System.Single)
  isExternal: true
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  isExternal: true
- uid: TinyLife.Goals.ManualProgressGoal.MakeProgress*
  commentId: Overload:TinyLife.Goals.ManualProgressGoal.MakeProgress
  name: MakeProgress
  nameWithType: ManualProgressGoal.MakeProgress
  fullName: TinyLife.Goals.ManualProgressGoal.MakeProgress
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
