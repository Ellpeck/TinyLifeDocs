### YamlMime:ManagedReference
items:
- uid: TinyLife.Tools.UndoableAction
  commentId: T:TinyLife.Tools.UndoableAction
  id: UndoableAction
  parent: TinyLife.Tools
  children:
  - TinyLife.Tools.UndoableAction.#ctor(System.Boolean)
  - TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
  - TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  - TinyLife.Tools.UndoableAction.ExecuteAction
  - TinyLife.Tools.UndoableAction.ExecuteUndo
  langs:
  - csharp
  - vb
  name: UndoableAction
  nameWithType: UndoableAction
  fullName: TinyLife.Tools.UndoableAction
  type: Class
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UndoableAction
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nAn undoable action is an action used by a <xref href=\"TinyLife.Tools.UndoRedoStack\" data-throw-if-not-resolved=\"false\"></xref>.\nOptionally, using the <xref href=\"TinyLife.Tools.UndoableAction.%23ctor(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor, an undoable action can be set to be executed immediately, rather than being able to be undone and redone.\n"
  example: []
  syntax:
    content: public class UndoableAction
    content.vb: Public Class UndoableAction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Tools.UndoableAction.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Tools.UndoableAction.#ctor(System.Boolean)
  commentId: M:TinyLife.Tools.UndoableAction.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: TinyLife.Tools.UndoableAction
  langs:
  - csharp
  - vb
  name: UndoableAction(bool)
  nameWithType: UndoableAction.UndoableAction(bool)
  fullName: TinyLife.Tools.UndoableAction.UndoableAction(bool)
  type: Constructor
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nCreates a new undoable action.\n"
  example: []
  syntax:
    content: public UndoableAction(bool immediate = false)
    parameters:
    - id: immediate
      type: System.Boolean
      description: Determines whether this undoable action should be executed immediately, or if the action added to it should be executed as part of an <xref href="TinyLife.Tools.UndoRedoStack" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(immediate As Boolean = False)
  overload: TinyLife.Tools.UndoableAction.#ctor*
  nameWithType.vb: UndoableAction.New(Boolean)
  fullName.vb: TinyLife.Tools.UndoableAction.New(Boolean)
  name.vb: New(Boolean)
- uid: TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
  commentId: M:TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
  id: Add(System.Action,System.Action)
  parent: TinyLife.Tools.UndoableAction
  langs:
  - csharp
  - vb
  name: Add(Action, Action)
  nameWithType: UndoableAction.Add(Action, Action)
  fullName: TinyLife.Tools.UndoableAction.Add(System.Action, System.Action)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Add
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 101
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nAdds the given sub-action and undo action to this undoable action.\nNote that undo actions are executed in reverse order that they are added to maintain proper ordering.\n"
  example: []
  syntax:
    content: public void Add(Action action, Action undo)
    parameters:
    - id: action
      type: System.Action
      description: The action to add.
    - id: undo
      type: System.Action
      description: The action that undoes the added <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Sub Add(action As Action, undo As Action)
  overload: TinyLife.Tools.UndoableAction.Add*
- uid: TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  commentId: M:TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  id: AddBothAfter(System.Action)
  parent: TinyLife.Tools.UndoableAction
  langs:
  - csharp
  - vb
  name: AddBothAfter(Action)
  nameWithType: UndoableAction.AddBothAfter(Action)
  fullName: TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AddBothAfter
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 116
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nAdds the given sub-action to this undoable action in a way that causes it to be executed after the action is done, undone, or redone.\nActions added this way are usually validation steps, like marking an object dirty.\n"
  example: []
  syntax:
    content: public void AddBothAfter(Action after)
    parameters:
    - id: after
      type: System.Action
      description: The action to add.
    content.vb: Public Sub AddBothAfter(after As Action)
  overload: TinyLife.Tools.UndoableAction.AddBothAfter*
- uid: TinyLife.Tools.UndoableAction.ExecuteAction
  commentId: M:TinyLife.Tools.UndoableAction.ExecuteAction
  id: ExecuteAction
  parent: TinyLife.Tools.UndoableAction
  langs:
  - csharp
  - vb
  name: ExecuteAction()
  nameWithType: UndoableAction.ExecuteAction()
  fullName: TinyLife.Tools.UndoableAction.ExecuteAction()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ExecuteAction
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 127
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nExecutes this undoable action, executing every action added using <xref href=\"TinyLife.Tools.UndoableAction.Add(System.Action%2cSystem.Action)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void ExecuteAction()
    content.vb: Public Sub ExecuteAction()
  overload: TinyLife.Tools.UndoableAction.ExecuteAction*
- uid: TinyLife.Tools.UndoableAction.ExecuteUndo
  commentId: M:TinyLife.Tools.UndoableAction.ExecuteUndo
  id: ExecuteUndo
  parent: TinyLife.Tools.UndoableAction
  langs:
  - csharp
  - vb
  name: ExecuteUndo()
  nameWithType: UndoableAction.ExecuteUndo()
  fullName: TinyLife.Tools.UndoableAction.ExecuteUndo()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/UndoRedoStack.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ExecuteUndo
    path: ../TinyLife/Tools/UndoRedoStack.cs
    startLine: 135
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nUndoes this undoable action, executing every undone action added using <xref href=\"TinyLife.Tools.UndoableAction.Add(System.Action%2cSystem.Action)\" data-throw-if-not-resolved=\"false\"></xref> and every action added using <xref href=\"TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void ExecuteUndo()
    content.vb: Public Sub ExecuteUndo()
  overload: TinyLife.Tools.UndoableAction.ExecuteUndo*
references:
- uid: TinyLife.Tools.UndoRedoStack
  commentId: T:TinyLife.Tools.UndoRedoStack
  name: UndoRedoStack
  nameWithType: UndoRedoStack
  fullName: TinyLife.Tools.UndoRedoStack
- uid: TinyLife.Tools.UndoableAction.#ctor(System.Boolean)
  commentId: M:TinyLife.Tools.UndoableAction.#ctor(System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: UndoableAction(bool)
  nameWithType: UndoableAction.UndoableAction(bool)
  fullName: TinyLife.Tools.UndoableAction.UndoableAction(bool)
  nameWithType.vb: UndoableAction.New(Boolean)
  fullName.vb: TinyLife.Tools.UndoableAction.New(Boolean)
  name.vb: New(Boolean)
  spec.csharp:
  - uid: TinyLife.Tools.UndoableAction.#ctor(System.Boolean)
    name: UndoableAction
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Tools.UndoableAction.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<UndoableAction>(UndoableAction)
  nameWithType: Extensions.JsonCopy<UndoableAction>(UndoableAction)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Tools.UndoableAction>(TinyLife.Tools.UndoableAction)
  nameWithType.vb: Extensions.JsonCopy(Of UndoableAction)(UndoableAction)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Tools.UndoableAction)(TinyLife.Tools.UndoableAction)
  name.vb: JsonCopy(Of UndoableAction)(UndoableAction)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Tools.UndoableAction)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Tools.UndoableAction
    name: UndoableAction
  - name: '>'
  - name: (
  - uid: TinyLife.Tools.UndoableAction
    name: UndoableAction
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Tools.UndoableAction)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.UndoableAction
    name: UndoableAction
  - name: )
  - name: (
  - uid: TinyLife.Tools.UndoableAction
    name: UndoableAction
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Tools.UndoableAction.#ctor*
  commentId: Overload:TinyLife.Tools.UndoableAction.#ctor
  name: UndoableAction
  nameWithType: UndoableAction.UndoableAction
  fullName: TinyLife.Tools.UndoableAction.UndoableAction
  nameWithType.vb: UndoableAction.New
  fullName.vb: TinyLife.Tools.UndoableAction.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Tools.UndoableAction.Add*
  commentId: Overload:TinyLife.Tools.UndoableAction.Add
  name: Add
  nameWithType: UndoableAction.Add
  fullName: TinyLife.Tools.UndoableAction.Add
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: TinyLife.Tools.UndoableAction.AddBothAfter*
  commentId: Overload:TinyLife.Tools.UndoableAction.AddBothAfter
  name: AddBothAfter
  nameWithType: UndoableAction.AddBothAfter
  fullName: TinyLife.Tools.UndoableAction.AddBothAfter
- uid: TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
  commentId: M:TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Add(Action, Action)
  nameWithType: UndoableAction.Add(Action, Action)
  fullName: TinyLife.Tools.UndoableAction.Add(System.Action, System.Action)
  spec.csharp:
  - uid: TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
    name: Add
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.UndoableAction.Add(System.Action,System.Action)
    name: Add
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  commentId: M:TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: AddBothAfter(Action)
  nameWithType: UndoableAction.AddBothAfter(Action)
  fullName: TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
  spec.csharp:
  - uid: TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
    name: AddBothAfter
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.UndoableAction.AddBothAfter(System.Action)
    name: AddBothAfter
  - name: (
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: TinyLife.Tools.UndoableAction.ExecuteAction*
  commentId: Overload:TinyLife.Tools.UndoableAction.ExecuteAction
  name: ExecuteAction
  nameWithType: UndoableAction.ExecuteAction
  fullName: TinyLife.Tools.UndoableAction.ExecuteAction
- uid: TinyLife.Tools.UndoableAction.ExecuteUndo*
  commentId: Overload:TinyLife.Tools.UndoableAction.ExecuteUndo
  name: ExecuteUndo
  nameWithType: UndoableAction.ExecuteUndo
  fullName: TinyLife.Tools.UndoableAction.ExecuteUndo
