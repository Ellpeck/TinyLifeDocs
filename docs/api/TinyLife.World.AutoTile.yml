### YamlMime:ManagedReference
items:
- uid: TinyLife.World.AutoTile
  commentId: T:TinyLife.World.AutoTile
  id: AutoTile
  parent: TinyLife.World
  children:
  - TinyLife.World.AutoTile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single})
  - TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
  - TinyLife.World.AutoTile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  - TinyLife.World.AutoTile.DrawBorder(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}})
  - TinyLife.World.AutoTile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  langs:
  - csharp
  - vb
  name: AutoTile
  nameWithType: AutoTile
  fullName: TinyLife.World.AutoTile
  type: Class
  source:
    remote:
      path: TinyLife/World/AutoTile.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AutoTile
    path: ../TinyLife/World/AutoTile.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nAn auto-tile is a <xref href=\"TinyLife.World.Tile\" data-throw-if-not-resolved=\"false\"></xref> that visually connects to other tiles around it, while leaving a border around tiles that it doesn&apos;t connect to.\nImplementors can override <xref href=\"TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map%2cMicrosoft.Xna.Framework.Point%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref> to edit this behavior.\n"
  example: []
  syntax:
    content: 'public class AutoTile : Tile'
    content.vb: Public Class AutoTile Inherits Tile
  inheritance:
  - System.Object
  - TinyLife.World.Tile
  derivedClasses:
  - TinyLife.World.WaterTile
  inheritedMembers:
  - TinyLife.World.Tile.Tiles
  - TinyLife.World.Tile.Width
  - TinyLife.World.Tile.Height
  - TinyLife.World.Tile.ReferencePrice
  - TinyLife.World.Tile.BaseName
  - TinyLife.World.Tile.Name
  - TinyLife.World.Tile.Price
  - TinyLife.World.Tile.ColorSchemes
  - TinyLife.World.Tile.Colors
  - TinyLife.World.Tile.CanBuy
  - TinyLife.World.Tile.PathCostModifier
  - TinyLife.World.Tile.Categories
  - TinyLife.World.Tile.Icon
  - TinyLife.World.Tile.DefaultColors
  - TinyLife.World.Tile.Textures
  - TinyLife.World.Tile.Regions
  - TinyLife.World.Tile.RegionWeights
  - TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  - TinyLife.World.Tile.GetPrice
  - TinyLife.World.Tile.GetAutoTileBorder(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,TinyLife.World.Tile)
  - TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  - TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  - TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  - TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  - TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.AutoTile.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.World.AutoTile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single})
  commentId: M:TinyLife.World.AutoTile.#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single})
  id: '#ctor(System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},TinyLife.Utilities.ColorScheme[],System.Int32[],System.Boolean,System.Single,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single})'
  parent: TinyLife.World.AutoTile
  langs:
  - csharp
  - vb
  name: AutoTile(string, string, int, Dictionary<Point, TextureRegion>, Dictionary<Direction2, Point[]>, ColorScheme[], int[], bool, float, Category, TextureRegion, int[], Func<Point, float>)
  nameWithType: AutoTile.AutoTile(string, string, int, Dictionary<Point, TextureRegion>, Dictionary<Direction2, Point[]>, ColorScheme[], int[], bool, float, Tile.Category, TextureRegion, int[], Func<Point, float>)
  fullName: TinyLife.World.AutoTile.AutoTile(string, string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, System.Collections.Generic.Dictionary<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>, TinyLife.Utilities.ColorScheme[], int[], bool, float, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, int[], System.Func<Microsoft.Xna.Framework.Point, float>)
  type: Constructor
  source:
    remote:
      path: TinyLife/World/AutoTile.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/AutoTile.cs
    startLine: 19
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new tile with the given settings.\nTo create an instance of a custom tile class, use <xref href=\"TinyLife.World.Tile.Register(System.String%2cSystem.Int32%2cSystem.Collections.Generic.Dictionary%7bMicrosoft.Xna.Framework.Point%2cMLEM.Textures.TextureRegion%7d%2cMicrosoft.Xna.Framework.Point%2cTinyLife.Utilities.ColorScheme%2cSystem.Single%2cSystem.Boolean%2cTinyLife.World.Tile.Category%2cMLEM.Textures.TextureRegion%2cSystem.Func%7bMLEM.Misc.Direction2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Point%7d%7d%2cSystem.Nullable%7bSystem.Int32%7d%2cSystem.Func%7bMicrosoft.Xna.Framework.Point%2cSystem.Single%7d%2cSystem.Type)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected AutoTile(string baseName, string name, int price, Dictionary<Point, TextureRegion> textures, Dictionary<Direction2, Point[]> regions, ColorScheme[] colorSchemes, int[] colors, bool canBuy, float pathCostModifier, Tile.Category categories, TextureRegion icon, int[] defaultColors, Func<Point, float> regionWeights)
    parameters:
    - id: baseName
      type: System.String
    - id: name
      type: System.String
    - id: price
      type: System.Int32
    - id: textures
      type: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
    - id: regions
      type: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
    - id: colorSchemes
      type: TinyLife.Utilities.ColorScheme[]
    - id: colors
      type: System.Int32[]
    - id: canBuy
      type: System.Boolean
    - id: pathCostModifier
      type: System.Single
    - id: categories
      type: TinyLife.World.Tile.Category
    - id: icon
      type: MLEM.Textures.TextureRegion
    - id: defaultColors
      type: System.Int32[]
    - id: regionWeights
      type: System.Func{Microsoft.Xna.Framework.Point,System.Single}
    content.vb: Protected Sub New(baseName As String, name As String, price As Integer, textures As Dictionary(Of Point, TextureRegion), regions As Dictionary(Of Direction2, Point()), colorSchemes As ColorScheme(), colors As Integer(), canBuy As Boolean, pathCostModifier As Single, categories As Tile.Category, icon As TextureRegion, defaultColors As Integer(), regionWeights As Func(Of Point, Single))
  overload: TinyLife.World.AutoTile.#ctor*
  nameWithType.vb: AutoTile.New(String, String, Integer, Dictionary(Of Point, TextureRegion), Dictionary(Of Direction2, Point()), ColorScheme(), Integer(), Boolean, Single, Tile.Category, TextureRegion, Integer(), Func(Of Point, Single))
  fullName.vb: TinyLife.World.AutoTile.New(String, String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), System.Collections.Generic.Dictionary(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point()), TinyLife.Utilities.ColorScheme(), Integer(), Boolean, Single, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, Integer(), System.Func(Of Microsoft.Xna.Framework.Point, Single))
  name.vb: New(String, String, Integer, Dictionary(Of Point, TextureRegion), Dictionary(Of Direction2, Point()), ColorScheme(), Integer(), Boolean, Single, Category, TextureRegion, Integer(), Func(Of Point, Single))
- uid: TinyLife.World.AutoTile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  commentId: M:TinyLife.World.AutoTile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  id: Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  parent: TinyLife.World.AutoTile
  langs:
  - csharp
  - vb
  name: Draw(GameTime, object, Map, Point, Vector2, float, float, ICollection<Item>, bool)
  nameWithType: AutoTile.Draw(GameTime, object, Map, Point, Vector2, float, float, ICollection<StaticSpriteBatch.Item>, bool)
  fullName: TinyLife.World.AutoTile.Draw(Microsoft.Xna.Framework.GameTime, object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, float, float, System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>, bool)
  type: Method
  source:
    remote:
      path: TinyLife/World/AutoTile.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/World/AutoTile.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws this tile at the given position in the world using a <xref href=\"Microsoft.Xna.Framework.Graphics.SpriteBatch\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"MLEM.Graphics.StaticSpriteBatch\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public override bool Draw(GameTime time, object batch, Map map, Point pos, Vector2 drawPos, float depth, float scale, ICollection<StaticSpriteBatch.Item> items, bool hasStaticContext)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s current time.
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which can either be a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in screen space, to draw at.
    - id: depth
      type: System.Single
      description: The depth to use for drawing.
    - id: scale
      type: System.Single
      description: The scale to draw the tile with.
    - id: items
      type: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
      description: The <xref href="MLEM.Graphics.StaticSpriteBatch.Item" data-throw-if-not-resolved="false"></xref> collection that added items can optionally be added to.
    - id: hasStaticContext
      type: System.Boolean
      description: Whether this tile also has a static context, that is, whether it will already be drawn using a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Whether this tile was fully drawn. If the <code data-dev-comment-type="paramref" class="paramref">batch</code> is a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref> and false is returned, this tile will be marked as an animated tile, causing it to draw every frame.
    content.vb: Public Overrides Function Draw(time As GameTime, batch As Object, map As Map, pos As Point, drawPos As Vector2, depth As Single, scale As Single, items As ICollection(Of StaticSpriteBatch.Item), hasStaticContext As Boolean) As Boolean
  overridden: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  overload: TinyLife.World.AutoTile.Draw*
  nameWithType.vb: AutoTile.Draw(GameTime, Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item), Boolean)
  fullName.vb: TinyLife.World.AutoTile.Draw(Microsoft.Xna.Framework.GameTime, Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, Single, Single, System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean)
  name.vb: Draw(GameTime, Object, Map, Point, Vector2, Single, Single, ICollection(Of Item), Boolean)
- uid: TinyLife.World.AutoTile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.AutoTile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  id: OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.AutoTile
  langs:
  - csharp
  - vb
  name: OnNeighborChanged(Map, Point, Point)
  nameWithType: AutoTile.OnNeighborChanged(Map, Point, Point)
  fullName: TinyLife.World.AutoTile.OnNeighborChanged(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: TinyLife/World/AutoTile.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnNeighborChanged
    path: ../TinyLife/World/AutoTile.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA method that is called when a neighboring <xref href=\"TinyLife.World.Tile\" data-throw-if-not-resolved=\"false\"></xref> on the <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> changes.\nThis method does nothing by default, but is overriden by <xref href=\"TinyLife.World.AutoTile\" data-throw-if-not-resolved=\"false\"></xref> to notify neighboring tiles of changes.\n"
  example: []
  syntax:
    content: public override void OnNeighborChanged(Map map, Point pos, Point neighbor)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: neighbor
      type: Microsoft.Xna.Framework.Point
      description: The position of the tile that changed.
    content.vb: Public Overrides Sub OnNeighborChanged(map As Map, pos As Point, neighbor As Point)
  overridden: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  overload: TinyLife.World.AutoTile.OnNeighborChanged*
- uid: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
  commentId: M:TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
  id: ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
  parent: TinyLife.World.AutoTile
  langs:
  - csharp
  - vb
  name: ConnectsToTile(Map, Point, int, int)
  nameWithType: AutoTile.ConnectsToTile(Map, Point, int, int)
  fullName: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map, Microsoft.Xna.Framework.Point, int, int)
  type: Method
  source:
    remote:
      path: TinyLife/World/AutoTile.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ConnectsToTile
    path: ../TinyLife/World/AutoTile.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nOverride this method to determine what other tiles this auto-tile should connect to.\nBy default, auto-tiles connect to other tiles of the same type.\n"
  example: []
  syntax:
    content: protected virtual bool ConnectsToTile(Map map, Point pos, int x, int y)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position of the tile.
    - id: x
      type: System.Int32
      description: The offset from <code data-dev-comment-type="paramref" class="paramref">pos</code> in the x axis.
    - id: y
      type: System.Int32
      description: The offset from <code data-dev-comment-type="paramref" class="paramref">pos</code> in the y axis.
    return:
      type: System.Boolean
      description: Whether this tile should connect to the tile at the offset position.
    content.vb: Protected Overridable Function ConnectsToTile(map As Map, pos As Point, x As Integer, y As Integer) As Boolean
  overload: TinyLife.World.AutoTile.ConnectsToTile*
  nameWithType.vb: AutoTile.ConnectsToTile(Map, Point, Integer, Integer)
  fullName.vb: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Integer, Integer)
  name.vb: ConnectsToTile(Map, Point, Integer, Integer)
- uid: TinyLife.World.AutoTile.DrawBorder(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}})
  commentId: M:TinyLife.World.AutoTile.DrawBorder(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}})
  id: DrawBorder(System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}})
  parent: TinyLife.World.AutoTile
  langs:
  - csharp
  - vb
  name: DrawBorder(object, Map, Point, Vector2, float, float, ICollection<Item>, (Func<int, TextureRegion> Texture, Color Color)?)
  nameWithType: AutoTile.DrawBorder(object, Map, Point, Vector2, float, float, ICollection<StaticSpriteBatch.Item>, (Func<int, TextureRegion> Texture, Color Color)?)
  fullName: TinyLife.World.AutoTile.DrawBorder(object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, float, float, System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>, (System.Func<int, MLEM.Textures.TextureRegion> Texture, Microsoft.Xna.Framework.Color Color)?)
  type: Method
  source:
    remote:
      path: TinyLife/World/AutoTile.cs
      branch: 0.36.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DrawBorder
    path: ../TinyLife/World/AutoTile.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nDraws the auto-tile border.\n"
  example: []
  syntax:
    content: protected void DrawBorder(object batch, Map map, Point pos, Vector2 drawPos, float depth, float scale, ICollection<StaticSpriteBatch.Item> items, (Func<int, TextureRegion> Texture, Color Color)? getBestBorderTile = null)
    parameters:
    - id: batch
      type: System.Object
      description: The sprite batch to use for drawing, which can either be a <xref href="Microsoft.Xna.Framework.Graphics.SpriteBatch" data-throw-if-not-resolved="false"></xref> or a <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.
    - id: map
      type: TinyLife.World.Map
      description: The map that the tile is on.
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position that the tile is on.
    - id: drawPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position, in screen space, to draw at.
    - id: depth
      type: System.Single
      description: The depth to use for drawing.
    - id: scale
      type: System.Single
      description: The scale to draw the tile with.
    - id: items
      type: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
      description: The <xref href="MLEM.Graphics.StaticSpriteBatch.Item" data-throw-if-not-resolved="false"></xref> collection that added items can optionally be added to.
    - id: getBestBorderTile
      type: System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}}
      description: A function to return the best tile to use as this tile&apos;s border tile when rendering.
    content.vb: Protected Sub DrawBorder(batch As Object, map As Map, pos As Point, drawPos As Vector2, depth As Single, scale As Single, items As ICollection(Of StaticSpriteBatch.Item), getBestBorderTile As (Texture As Func(Of Integer, TextureRegion), Color As Color)? = Nothing)
  overload: TinyLife.World.AutoTile.DrawBorder*
  nameWithType.vb: AutoTile.DrawBorder(Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item), (Texture As Func(Of Integer, TextureRegion), Color As Color)?)
  fullName.vb: TinyLife.World.AutoTile.DrawBorder(Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, Single, Single, System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item), (Texture As System.Func(Of Integer, MLEM.Textures.TextureRegion), Color As Microsoft.Xna.Framework.Color)?)
  name.vb: DrawBorder(Object, Map, Point, Vector2, Single, Single, ICollection(Of Item), (Texture As Func(Of Integer, TextureRegion), Color As Color)?)
references:
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
  commentId: M:TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
  parent: TinyLife.World.AutoTile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: ConnectsToTile(Map, Point, int, int)
  nameWithType: AutoTile.ConnectsToTile(Map, Point, int, int)
  fullName: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map, Microsoft.Xna.Framework.Point, int, int)
  nameWithType.vb: AutoTile.ConnectsToTile(Map, Point, Integer, Integer)
  fullName.vb: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Integer, Integer)
  name.vb: ConnectsToTile(Map, Point, Integer, Integer)
  spec.csharp:
  - uid: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
    name: ConnectsToTile
  - name: (
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.World.AutoTile.ConnectsToTile(TinyLife.World.Map,Microsoft.Xna.Framework.Point,System.Int32,System.Int32)
    name: ConnectsToTile
  - name: (
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.World.Tile.Tiles
  commentId: F:TinyLife.World.Tile.Tiles
  parent: TinyLife.World.Tile
  name: Tiles
  nameWithType: Tile.Tiles
  fullName: TinyLife.World.Tile.Tiles
- uid: TinyLife.World.Tile.Width
  commentId: P:TinyLife.World.Tile.Width
  parent: TinyLife.World.Tile
  name: Width
  nameWithType: Tile.Width
  fullName: TinyLife.World.Tile.Width
- uid: TinyLife.World.Tile.Height
  commentId: P:TinyLife.World.Tile.Height
  parent: TinyLife.World.Tile
  name: Height
  nameWithType: Tile.Height
  fullName: TinyLife.World.Tile.Height
- uid: TinyLife.World.Tile.ReferencePrice
  commentId: F:TinyLife.World.Tile.ReferencePrice
  parent: TinyLife.World.Tile
  name: ReferencePrice
  nameWithType: Tile.ReferencePrice
  fullName: TinyLife.World.Tile.ReferencePrice
- uid: TinyLife.World.Tile.BaseName
  commentId: F:TinyLife.World.Tile.BaseName
  parent: TinyLife.World.Tile
  name: BaseName
  nameWithType: Tile.BaseName
  fullName: TinyLife.World.Tile.BaseName
- uid: TinyLife.World.Tile.Name
  commentId: F:TinyLife.World.Tile.Name
  parent: TinyLife.World.Tile
  name: Name
  nameWithType: Tile.Name
  fullName: TinyLife.World.Tile.Name
- uid: TinyLife.World.Tile.Price
  commentId: F:TinyLife.World.Tile.Price
  parent: TinyLife.World.Tile
  name: Price
  nameWithType: Tile.Price
  fullName: TinyLife.World.Tile.Price
- uid: TinyLife.World.Tile.ColorSchemes
  commentId: F:TinyLife.World.Tile.ColorSchemes
  parent: TinyLife.World.Tile
  name: ColorSchemes
  nameWithType: Tile.ColorSchemes
  fullName: TinyLife.World.Tile.ColorSchemes
- uid: TinyLife.World.Tile.Colors
  commentId: F:TinyLife.World.Tile.Colors
  parent: TinyLife.World.Tile
  name: Colors
  nameWithType: Tile.Colors
  fullName: TinyLife.World.Tile.Colors
- uid: TinyLife.World.Tile.CanBuy
  commentId: F:TinyLife.World.Tile.CanBuy
  parent: TinyLife.World.Tile
  name: CanBuy
  nameWithType: Tile.CanBuy
  fullName: TinyLife.World.Tile.CanBuy
- uid: TinyLife.World.Tile.PathCostModifier
  commentId: F:TinyLife.World.Tile.PathCostModifier
  parent: TinyLife.World.Tile
  name: PathCostModifier
  nameWithType: Tile.PathCostModifier
  fullName: TinyLife.World.Tile.PathCostModifier
- uid: TinyLife.World.Tile.Categories
  commentId: F:TinyLife.World.Tile.Categories
  parent: TinyLife.World.Tile
  name: Categories
  nameWithType: Tile.Categories
  fullName: TinyLife.World.Tile.Categories
- uid: TinyLife.World.Tile.Icon
  commentId: F:TinyLife.World.Tile.Icon
  parent: TinyLife.World.Tile
  name: Icon
  nameWithType: Tile.Icon
  fullName: TinyLife.World.Tile.Icon
- uid: TinyLife.World.Tile.DefaultColors
  commentId: F:TinyLife.World.Tile.DefaultColors
  parent: TinyLife.World.Tile
  name: DefaultColors
  nameWithType: Tile.DefaultColors
  fullName: TinyLife.World.Tile.DefaultColors
- uid: TinyLife.World.Tile.Textures
  commentId: F:TinyLife.World.Tile.Textures
  parent: TinyLife.World.Tile
  name: Textures
  nameWithType: Tile.Textures
  fullName: TinyLife.World.Tile.Textures
- uid: TinyLife.World.Tile.Regions
  commentId: F:TinyLife.World.Tile.Regions
  parent: TinyLife.World.Tile
  name: Regions
  nameWithType: Tile.Regions
  fullName: TinyLife.World.Tile.Regions
- uid: TinyLife.World.Tile.RegionWeights
  commentId: F:TinyLife.World.Tile.RegionWeights
  parent: TinyLife.World.Tile
  name: RegionWeights
  nameWithType: Tile.RegionWeights
  fullName: TinyLife.World.Tile.RegionWeights
- uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  commentId: M:TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: DrawUi(Element, GameTime, SpriteBatch, float)
  nameWithType: Tile.DrawUi(Element, GameTime, SpriteBatch, float)
  fullName: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, float)
  nameWithType.vb: Tile.DrawUi(Element, GameTime, SpriteBatch, Single)
  fullName.vb: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Single)
  name.vb: DrawUi(Element, GameTime, SpriteBatch, Single)
  spec.csharp:
  - uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
    name: DrawUi
  - name: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.DrawUi(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single)
    name: DrawUi
  - name: (
  - uid: MLEM.Ui.Elements.Element
    name: Element
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.World.Tile.GetPrice
  commentId: M:TinyLife.World.Tile.GetPrice
  parent: TinyLife.World.Tile
  name: GetPrice()
  nameWithType: Tile.GetPrice()
  fullName: TinyLife.World.Tile.GetPrice()
  spec.csharp:
  - uid: TinyLife.World.Tile.GetPrice
    name: GetPrice
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.GetPrice
    name: GetPrice
  - name: (
  - name: )
- uid: TinyLife.World.Tile.GetAutoTileBorder(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,TinyLife.World.Tile)
  commentId: M:TinyLife.World.Tile.GetAutoTileBorder(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,TinyLife.World.Tile)
  parent: TinyLife.World.Tile
  isExternal: true
  name: GetAutoTileBorder(Map, Point, Point, Tile)
  nameWithType: Tile.GetAutoTileBorder(Map, Point, Point, Tile)
  fullName: TinyLife.World.Tile.GetAutoTileBorder(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, TinyLife.World.Tile)
  spec.csharp:
  - uid: TinyLife.World.Tile.GetAutoTileBorder(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,TinyLife.World.Tile)
    name: GetAutoTileBorder
  - name: (
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile
    name: Tile
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.GetAutoTileBorder(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,TinyLife.World.Tile)
    name: GetAutoTileBorder
  - name: (
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile
    name: Tile
  - name: )
- uid: TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.Tile
  isExternal: true
  name: GetVariationTexture(Direction2, Point)
  nameWithType: Tile.GetVariationTexture(Direction2, Point)
  fullName: TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
    name: GetVariationTexture
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.GetVariationTexture(MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point)
    name: GetVariationTexture
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  commentId: M:TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetVisualOffset(Direction2, int, int)
  nameWithType: Tile.GetVisualOffset(Direction2, int, int)
  fullName: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2, int, int)
  nameWithType.vb: Tile.GetVisualOffset(Direction2, Integer, Integer)
  fullName.vb: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2, Integer, Integer)
  name.vb: GetVisualOffset(Direction2, Integer, Integer)
  spec.csharp:
  - uid: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
    name: GetVisualOffset
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.GetVisualOffset(MLEM.Misc.Direction2,System.Int32,System.Int32)
    name: GetVisualOffset
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, float, bool, Category, TextureRegion, Func<Direction2, Point?>, int?, Func<Point, float>, Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme, float, bool, Tile.Category, TextureRegion, Func<Direction2, Point?>, int?, Func<Point, float>, Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?>, int?, System.Func<Microsoft.Xna.Framework.Point, float>, System.Type)
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point?), Integer?, Func(Of Point, Single), Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme, Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?), Integer?, System.Func(Of Microsoft.Xna.Framework.Point, Single), System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme, Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point?), Integer?, Func(Of Point, Single), Type)
  spec.csharp:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme,System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Nullable{System.Int32},System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme[], float, bool, Category, TextureRegion, Func<Direction2, Point?>, int[], Func<Point, float>, Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point, ColorScheme[], float, bool, Tile.Category, TextureRegion, Func<Direction2, Point?>, int[], Func<Point, float>, Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme[], float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?>, int[], System.Func<Microsoft.Xna.Framework.Point, float>, System.Type)
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme(), Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point?), Integer(), Func(Of Point, Single), Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point, TinyLife.Utilities.ColorScheme(), Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point?), Integer(), System.Func(Of Microsoft.Xna.Framework.Point, Single), System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point, ColorScheme(), Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point?), Integer(), Func(Of Point, Single), Type)
  spec.csharp:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point,TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,System.Nullable{Microsoft.Xna.Framework.Point}},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  commentId: M:TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Register(string, int, Dictionary<Point, TextureRegion>, Point[], ColorScheme[], float, bool, Category, TextureRegion, Func<Direction2, Point[]>, int[], Func<Point, float>, Type)
  nameWithType: Tile.Register(string, int, Dictionary<Point, TextureRegion>, Point[], ColorScheme[], float, bool, Tile.Category, TextureRegion, Func<Direction2, Point[]>, int[], Func<Point, float>, Type)
  fullName: TinyLife.World.Tile.Register(string, int, System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>, Microsoft.Xna.Framework.Point[], TinyLife.Utilities.ColorScheme[], float, bool, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>, int[], System.Func<Microsoft.Xna.Framework.Point, float>, System.Type)
  nameWithType.vb: Tile.Register(String, Integer, Dictionary(Of Point, TextureRegion), Point(), ColorScheme(), Single, Boolean, Tile.Category, TextureRegion, Func(Of Direction2, Point()), Integer(), Func(Of Point, Single), Type)
  fullName.vb: TinyLife.World.Tile.Register(String, Integer, System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion), Microsoft.Xna.Framework.Point(), TinyLife.Utilities.ColorScheme(), Single, Boolean, TinyLife.World.Tile.Category, MLEM.Textures.TextureRegion, System.Func(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point()), Integer(), System.Func(Of Microsoft.Xna.Framework.Point, Single), System.Type)
  name.vb: Register(String, Integer, Dictionary(Of Point, TextureRegion), Point(), ColorScheme(), Single, Boolean, Category, TextureRegion, Func(Of Direction2, Point()), Integer(), Func(Of Point, Single), Type)
  spec.csharp:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.Register(System.String,System.Int32,System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Point[],TinyLife.Utilities.ColorScheme[],System.Single,System.Boolean,TinyLife.World.Tile.Category,MLEM.Textures.TextureRegion,System.Func{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]},System.Int32[],System.Func{Microsoft.Xna.Framework.Point,System.Single},System.Type)
    name: Register
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: (
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.World.AutoTile.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<AutoTile>(AutoTile)
  nameWithType: Extensions.JsonCopy<AutoTile>(AutoTile)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.AutoTile>(TinyLife.World.AutoTile)
  nameWithType.vb: Extensions.JsonCopy(Of AutoTile)(AutoTile)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.AutoTile)(TinyLife.World.AutoTile)
  name.vb: JsonCopy(Of AutoTile)(AutoTile)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.AutoTile)
    name: JsonCopy
  - name: <
  - uid: TinyLife.World.AutoTile
    name: AutoTile
  - name: '>'
  - name: (
  - uid: TinyLife.World.AutoTile
    name: AutoTile
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.AutoTile)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.AutoTile
    name: AutoTile
  - name: )
  - name: (
  - uid: TinyLife.World.AutoTile
    name: AutoTile
  - name: )
- uid: TinyLife.World.AutoTile
  commentId: T:TinyLife.World.AutoTile
  parent: TinyLife.World
  name: AutoTile
  nameWithType: AutoTile
  fullName: TinyLife.World.AutoTile
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.World.AutoTile.#ctor*
  commentId: Overload:TinyLife.World.AutoTile.#ctor
  name: AutoTile
  nameWithType: AutoTile.AutoTile
  fullName: TinyLife.World.AutoTile.AutoTile
  nameWithType.vb: AutoTile.New
  fullName.vb: TinyLife.World.AutoTile.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  commentId: T:System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Point, TextureRegion>
  nameWithType: Dictionary<Point, TextureRegion>
  fullName: System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>
  nameWithType.vb: Dictionary(Of Point, TextureRegion)
  fullName.vb: System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)
  name.vb: Dictionary(Of Point, TextureRegion)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
  commentId: T:System.Collections.Generic.Dictionary{MLEM.Misc.Direction2,Microsoft.Xna.Framework.Point[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Direction2, Point[]>
  nameWithType: Dictionary<Direction2, Point[]>
  fullName: System.Collections.Generic.Dictionary<MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point[]>
  nameWithType.vb: Dictionary(Of Direction2, Point())
  fullName.vb: System.Collections.Generic.Dictionary(Of MLEM.Misc.Direction2, Microsoft.Xna.Framework.Point())
  name.vb: Dictionary(Of Direction2, Point())
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: TinyLife.Utilities.ColorScheme[]
  isExternal: true
  name: ColorScheme[]
  nameWithType: ColorScheme[]
  fullName: TinyLife.Utilities.ColorScheme[]
  nameWithType.vb: ColorScheme()
  fullName.vb: TinyLife.Utilities.ColorScheme()
  name.vb: ColorScheme()
  spec.csharp:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.World.Tile.Category
  commentId: T:TinyLife.World.Tile.Category
  parent: TinyLife.World
  name: Tile.Category
  nameWithType: Tile.Category
  fullName: TinyLife.World.Tile.Category
  spec.csharp:
  - uid: TinyLife.World.Tile
    name: Tile
  - name: .
  - uid: TinyLife.World.Tile.Category
    name: Category
  spec.vb:
  - uid: TinyLife.World.Tile
    name: Tile
  - name: .
  - uid: TinyLife.World.Tile.Category
    name: Category
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: System.Func{Microsoft.Xna.Framework.Point,System.Single}
  commentId: T:System.Func{Microsoft.Xna.Framework.Point,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Point, float>
  nameWithType: Func<Point, float>
  fullName: System.Func<Microsoft.Xna.Framework.Point, float>
  nameWithType.vb: Func(Of Point, Single)
  fullName.vb: System.Func(Of Microsoft.Xna.Framework.Point, Single)
  name.vb: Func(Of Point, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  commentId: M:TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
  parent: TinyLife.World.Tile
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: Draw(GameTime, object, Map, Point, Vector2, float, float, ICollection<Item>, bool)
  nameWithType: Tile.Draw(GameTime, object, Map, Point, Vector2, float, float, ICollection<StaticSpriteBatch.Item>, bool)
  fullName: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime, object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, float, float, System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>, bool)
  nameWithType.vb: Tile.Draw(GameTime, Object, Map, Point, Vector2, Single, Single, ICollection(Of StaticSpriteBatch.Item), Boolean)
  fullName.vb: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime, Object, TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Vector2, Single, Single, System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item), Boolean)
  name.vb: Draw(GameTime, Object, Map, Point, Vector2, Single, Single, ICollection(Of Item), Boolean)
  spec.csharp:
  - uid: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.Draw(Microsoft.Xna.Framework.GameTime,System.Object,TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item},System.Boolean)
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.World.AutoTile.Draw*
  commentId: Overload:TinyLife.World.AutoTile.Draw
  name: Draw
  nameWithType: AutoTile.Draw
  fullName: TinyLife.World.AutoTile.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
  commentId: T:System.Collections.Generic.ICollection{MLEM.Graphics.StaticSpriteBatch.Item}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<StaticSpriteBatch.Item>
  nameWithType: ICollection<StaticSpriteBatch.Item>
  fullName: System.Collections.Generic.ICollection<MLEM.Graphics.StaticSpriteBatch.Item>
  nameWithType.vb: ICollection(Of StaticSpriteBatch.Item)
  fullName.vb: System.Collections.Generic.ICollection(Of MLEM.Graphics.StaticSpriteBatch.Item)
  name.vb: ICollection(Of StaticSpriteBatch.Item)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: TinyLife.World.Tile
  isExternal: true
  name: OnNeighborChanged(Map, Point, Point)
  nameWithType: Tile.OnNeighborChanged(Map, Point, Point)
  fullName: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
    name: OnNeighborChanged
  - name: (
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Tile.OnNeighborChanged(TinyLife.World.Map,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
    name: OnNeighborChanged
  - name: (
  - uid: TinyLife.World.Map
    name: Map
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.World.AutoTile.OnNeighborChanged*
  commentId: Overload:TinyLife.World.AutoTile.OnNeighborChanged
  name: OnNeighborChanged
  nameWithType: AutoTile.OnNeighborChanged
  fullName: TinyLife.World.AutoTile.OnNeighborChanged
- uid: TinyLife.World.AutoTile.ConnectsToTile*
  commentId: Overload:TinyLife.World.AutoTile.ConnectsToTile
  name: ConnectsToTile
  nameWithType: AutoTile.ConnectsToTile
  fullName: TinyLife.World.AutoTile.ConnectsToTile
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: MLEM.Graphics.StaticSpriteBatch
  commentId: T:MLEM.Graphics.StaticSpriteBatch
  isExternal: true
  name: StaticSpriteBatch
  nameWithType: StaticSpriteBatch
  fullName: MLEM.Graphics.StaticSpriteBatch
- uid: MLEM.Graphics.StaticSpriteBatch.Item
  commentId: T:MLEM.Graphics.StaticSpriteBatch.Item
  isExternal: true
  name: StaticSpriteBatch.Item
  nameWithType: StaticSpriteBatch.Item
  fullName: MLEM.Graphics.StaticSpriteBatch.Item
  spec.csharp:
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
  spec.vb:
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
    isExternal: true
  - name: .
  - uid: MLEM.Graphics.StaticSpriteBatch.Item
    name: Item
    isExternal: true
- uid: TinyLife.World.AutoTile.DrawBorder*
  commentId: Overload:TinyLife.World.AutoTile.DrawBorder
  name: DrawBorder
  nameWithType: AutoTile.DrawBorder
  fullName: TinyLife.World.AutoTile.DrawBorder
- uid: System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}}
  commentId: T:System.Nullable{System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: (Func<int, TextureRegion> Texture, Color Color)?
  nameWithType: (Func<int, TextureRegion> Texture, Color Color)?
  fullName: (System.Func<int, MLEM.Textures.TextureRegion> Texture, Microsoft.Xna.Framework.Color Color)?
  nameWithType.vb: (Texture As Func(Of Integer, TextureRegion), Color As Color)?
  fullName.vb: (Texture As System.Func(Of Integer, MLEM.Textures.TextureRegion), Color As Microsoft.Xna.Framework.Color)?
  name.vb: (Texture As Func(Of Integer, TextureRegion), Color As Color)?
  spec.csharp:
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}.Texture
    name: Texture
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-system.int32,mlem.textures.textureregion-,microsoft.xna.framework.color-.texture
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}.Color
    name: Color
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-system.int32,mlem.textures.textureregion-,microsoft.xna.framework.color-.color
  - name: )
  - name: '?'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}.Texture
    name: Texture
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-system.int32,mlem.textures.textureregion-,microsoft.xna.framework.color-.texture
  - name: " "
  - name: As
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Func{System.Int32,MLEM.Textures.TextureRegion},Microsoft.Xna.Framework.Color}.Color
    name: Color
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.func-system.int32,mlem.textures.textureregion-,microsoft.xna.framework.color-.color
  - name: " "
  - name: As
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
  - name: '?'
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
