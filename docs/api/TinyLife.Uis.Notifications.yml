### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  id: Notifications
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion,System.String,TinyLife.Uis.NotifType)
  - TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType)
  - TinyLife.Uis.Notifications.MaxHistoryLength
  langs:
  - csharp
  - vb
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
  type: Class
  source:
    remote:
      path: TinyLife/Uis/Notifications.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Notifications
    path: ../TinyLife/Uis/Notifications.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nThis class holds information about the current and past notifications that are displayed in the top center of the screen.\nTo create custom notifications, use <xref href=\"TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject%2cSystem.String%2cTinyLife.Uis.NotifType)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion%2cSystem.String%2cTinyLife.Uis.NotifType)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class Notifications
    content.vb: Public Module Notifications
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TinyLife.Uis.Notifications.MaxHistoryLength
  commentId: F:TinyLife.Uis.Notifications.MaxHistoryLength
  id: MaxHistoryLength
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: MaxHistoryLength
  nameWithType: Notifications.MaxHistoryLength
  fullName: TinyLife.Uis.Notifications.MaxHistoryLength
  type: Field
  source:
    remote:
      path: TinyLife/Uis/Notifications.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MaxHistoryLength
    path: ../TinyLife/Uis/Notifications.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nThe maximum amount of entries that can be in the notification history before the oldest entries start being deleted.\n"
  example: []
  syntax:
    content: public const int MaxHistoryLength = 1024
    return:
      type: System.Int32
    content.vb: Public Const MaxHistoryLength As Integer = 1024
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType)
  id: Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Add(MapObject, String, NotifType)
  nameWithType: Notifications.Add(MapObject, String, NotifType)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, System.String, TinyLife.Uis.NotifType)
  type: Method
  source:
    remote:
      path: TinyLife/Uis/Notifications.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Add
    path: ../TinyLife/Uis/Notifications.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nAdds a new notification related to the given map object.\nThe passed object is also the one that will be displayed in the notification.\n"
  example: []
  syntax:
    content: public static void Add(MapObject obj, string content, NotifType type = NotifType.Info)
    parameters:
    - id: obj
      type: TinyLife.Objects.MapObject
      description: The map object that this notification relates to
    - id: content
      type: System.String
      description: The content of the notification. Should be localized using <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>
    - id: type
      type: TinyLife.Uis.NotifType
      description: The type that this notification should have, which determines the color of its background
    content.vb: Public Shared Sub Add(obj As MapObject, content As String, type As NotifType = NotifType.Info)
  overload: TinyLife.Uis.Notifications.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion,System.String,TinyLife.Uis.NotifType)
  commentId: M:TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion,System.String,TinyLife.Uis.NotifType)
  id: Add(MLEM.Textures.TextureRegion,System.String,TinyLife.Uis.NotifType)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Add(TextureRegion, String, NotifType)
  nameWithType: Notifications.Add(TextureRegion, String, NotifType)
  fullName: TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion, System.String, TinyLife.Uis.NotifType)
  type: Method
  source:
    remote:
      path: TinyLife/Uis/Notifications.cs
      branch: 0.20.4-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Add
    path: ../TinyLife/Uis/Notifications.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: "\nAdds a new notification related to nothing.\nThe passed icon is displayed instead of an object.\n"
  example: []
  syntax:
    content: public static void Add(TextureRegion icon, string content, NotifType type = NotifType.Info)
    parameters:
    - id: icon
      type: MLEM.Textures.TextureRegion
      description: The icon that should be displayed in the notification
    - id: content
      type: System.String
      description: The content of the notification. Should be localized using <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>
    - id: type
      type: TinyLife.Uis.NotifType
      description: The type that this notification should have, which determines the color of its background
    content.vb: Public Shared Sub Add(icon As TextureRegion, content As String, type As NotifType = NotifType.Info)
  overload: TinyLife.Uis.Notifications.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType)
  isExternal: true
- uid: TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion,System.String,TinyLife.Uis.NotifType)
  commentId: M:TinyLife.Uis.Notifications.Add(MLEM.Textures.TextureRegion,System.String,TinyLife.Uis.NotifType)
  isExternal: true
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: TinyLife.Uis.Notifications.Add*
  commentId: Overload:TinyLife.Uis.Notifications.Add
  name: Add
  nameWithType: Notifications.Add
  fullName: TinyLife.Uis.Notifications.Add
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.Uis.NotifType
  commentId: T:TinyLife.Uis.NotifType
  parent: TinyLife.Uis
  name: NotifType
  nameWithType: NotifType
  fullName: TinyLife.Uis.NotifType
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
