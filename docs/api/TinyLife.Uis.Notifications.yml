### YamlMime:ManagedReference
items:
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  id: Notifications
  parent: TinyLife.Uis
  children:
  - TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
  - TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  - TinyLife.Uis.Notifications.MaxHistoryLength
  - TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  langs:
  - csharp
  - vb
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
  type: Class
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: >-
    This class holds information about the current and past notifications that are displayed in the top center of the screen.

    To create custom notifications, use <xref href="TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Uis.Notifications.Add(System.String%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class Notifications
    content.vb: Public Module Notifications
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.Uis.Notifications.MaxHistoryLength
  commentId: F:TinyLife.Uis.Notifications.MaxHistoryLength
  id: MaxHistoryLength
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: MaxHistoryLength
  nameWithType: Notifications.MaxHistoryLength
  fullName: TinyLife.Uis.Notifications.MaxHistoryLength
  type: Field
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: The maximum amount of entries that can be in the notification history before the oldest entries start being deleted.
  example: []
  syntax:
    content: public const int MaxHistoryLength = 512
    return:
      type: System.Int32
    content.vb: Public Const MaxHistoryLength As Integer = 512
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  id: Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Add(MapObject, string, NotifType, bool)
  nameWithType: Notifications.Add(MapObject, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, string, TinyLife.Uis.NotifType, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: >-
    Adds a new notification related to the given map object.

    The passed object is also the one that will be displayed in the notification.
  example: []
  syntax:
    content: public static void Add(MapObject obj, string content, NotifType type = NotifType.Info, bool center = false)
    parameters:
    - id: obj
      type: TinyLife.Objects.MapObject
      description: The map object that this notification relates to
    - id: content
      type: System.String
      description: The content of the notification. Should be localized using <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>
    - id: type
      type: TinyLife.Uis.NotifType
      description: The type that this notification should have, which determines the color of its background
    - id: center
      type: System.Boolean
      description: Whether the notification should be displayed as a splash notification in the center of the screen, rather than in the notification area on the side.
    content.vb: Public Shared Sub Add(obj As MapObject, content As String, type As NotifType = NotifType.Info, center As Boolean = False)
  overload: TinyLife.Uis.Notifications.Add*
  nameWithType.vb: Notifications.Add(MapObject, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(MapObject, String, NotifType, Boolean)
- uid: TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
  id: Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: Add(string, string, NotifType, bool)
  nameWithType: Notifications.Add(string, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(string, string, TinyLife.Uis.NotifType, bool)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: >-
    Adds a new notification related to nothing.

    The passed icon is displayed instead of an object.
  example: []
  syntax:
    content: public static void Add(string icon, string content, NotifType type = NotifType.Info, bool center = false)
    parameters:
    - id: icon
      type: System.String
      description: The icon that should be displayed in the notification
    - id: content
      type: System.String
      description: The content of the notification. Should be localized using <xref href="TinyLife.Localization" data-throw-if-not-resolved="false"></xref>
    - id: type
      type: TinyLife.Uis.NotifType
      description: The type that this notification should have, which determines the color of its background
    - id: center
      type: System.Boolean
      description: Whether the notification should be displayed as a splash notification in the center of the screen, rather than in the notification area on the side.
    content.vb: Public Shared Sub Add(icon As String, content As String, type As NotifType = NotifType.Info, center As Boolean = False)
  overload: TinyLife.Uis.Notifications.Add*
  nameWithType.vb: Notifications.Add(String, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(String, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(String, String, NotifType, Boolean)
- uid: TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Uis.Notifications.RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  id: RegisterIcon(System.String,MLEM.Textures.TextureRegion)
  parent: TinyLife.Uis.Notifications
  langs:
  - csharp
  - vb
  name: RegisterIcon(string, TextureRegion)
  nameWithType: Notifications.RegisterIcon(string, TextureRegion)
  fullName: TinyLife.Uis.Notifications.RegisterIcon(string, MLEM.Textures.TextureRegion)
  type: Method
  assemblies:
  - Tiny Life
  namespace: TinyLife.Uis
  summary: >-
    Registers an icon that can be used as a notification icon in <xref href="TinyLife.Uis.Notifications.Add(System.String%2cSystem.String%2cTinyLife.Uis.NotifType%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    Icons are registered so that notification instances remember them when the game is closed and loaded again.
  example: []
  syntax:
    content: public static void RegisterIcon(string name, TextureRegion texture)
    parameters:
    - id: name
      type: System.String
      description: The name of the icon to register.
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture that the icon should display.
    content.vb: Public Shared Sub RegisterIcon(name As String, texture As TextureRegion)
  overload: TinyLife.Uis.Notifications.RegisterIcon*
  nameWithType.vb: Notifications.RegisterIcon(String, TextureRegion)
  fullName.vb: TinyLife.Uis.Notifications.RegisterIcon(String, MLEM.Textures.TextureRegion)
  name.vb: RegisterIcon(String, TextureRegion)
references:
- uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
  isExternal: true
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  name: Add(MapObject, string, NotifType, bool)
  nameWithType: Notifications.Add(MapObject, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, string, TinyLife.Uis.NotifType, bool)
  nameWithType.vb: Notifications.Add(MapObject, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(MapObject, String, NotifType, Boolean)
  spec.csharp:
  - uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Notifications.Add(TinyLife.Objects.MapObject,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: TinyLife.Objects.MapObject
    name: MapObject
    href: TinyLife.Objects.MapObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
  commentId: M:TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
  isExternal: true
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_System_String_System_String_TinyLife_Uis_NotifType_System_Boolean_
  name: Add(string, string, NotifType, bool)
  nameWithType: Notifications.Add(string, string, NotifType, bool)
  fullName: TinyLife.Uis.Notifications.Add(string, string, TinyLife.Uis.NotifType, bool)
  nameWithType.vb: Notifications.Add(String, String, NotifType, Boolean)
  fullName.vb: TinyLife.Uis.Notifications.Add(String, String, TinyLife.Uis.NotifType, Boolean)
  name.vb: Add(String, String, NotifType, Boolean)
  spec.csharp:
  - uid: TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_System_String_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Notifications.Add(System.String,System.String,TinyLife.Uis.NotifType,System.Boolean)
    name: Add
    href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_System_String_System_String_TinyLife_Uis_NotifType_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.NotifType
    name: NotifType
    href: TinyLife.Uis.NotifType.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  href: TinyLife.html
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Uis
    name: Uis
    href: TinyLife.Uis.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  href: TinyLife.Localization.html
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: TinyLife.Uis.Notifications.Add*
  commentId: Overload:TinyLife.Uis.Notifications.Add
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_Add_TinyLife_Objects_MapObject_System_String_TinyLife_Uis_NotifType_System_Boolean_
  name: Add
  nameWithType: Notifications.Add
  fullName: TinyLife.Uis.Notifications.Add
- uid: TinyLife.Objects.MapObject
  commentId: T:TinyLife.Objects.MapObject
  parent: TinyLife.Objects
  href: TinyLife.Objects.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: TinyLife.Objects.MapObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Uis.NotifType
  commentId: T:TinyLife.Uis.NotifType
  parent: TinyLife.Uis
  href: TinyLife.Uis.NotifType.html
  name: NotifType
  nameWithType: NotifType
  fullName: TinyLife.Uis.NotifType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: TinyLife.Uis.Notifications.RegisterIcon*
  commentId: Overload:TinyLife.Uis.Notifications.RegisterIcon
  href: TinyLife.Uis.Notifications.html#TinyLife_Uis_Notifications_RegisterIcon_System_String_MLEM_Textures_TextureRegion_
  name: RegisterIcon
  nameWithType: Notifications.RegisterIcon
  fullName: TinyLife.Uis.Notifications.RegisterIcon
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
