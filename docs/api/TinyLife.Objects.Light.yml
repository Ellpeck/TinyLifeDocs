### YamlMime:ManagedReference
items:
- uid: TinyLife.Objects.Light
  commentId: T:TinyLife.Objects.Light
  id: Light
  parent: TinyLife.Objects
  children:
  - TinyLife.Objects.Light.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  - TinyLife.Objects.Light.CameraOffset
  - TinyLife.Objects.Light.CircleTexture
  - TinyLife.Objects.Light.Color
  - TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Objects.Light.DrawPosOffset
  - TinyLife.Objects.Light.IsDisabled
  - TinyLife.Objects.Light.Map
  - TinyLife.Objects.Light.Position
  - TinyLife.Objects.Light.Rotation
  - TinyLife.Objects.Light.Size
  - TinyLife.Objects.Light.Texture
  langs:
  - csharp
  - vb
  name: Light
  nameWithType: Light
  fullName: TinyLife.Objects.Light
  type: Class
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Light
    path: ../TinyLife/Objects/Light.cs
    startLine: 13
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA light is a semi-object that can be added to a <xref href=\"TinyLife.World.Map\" data-throw-if-not-resolved=\"false\"></xref> using <xref href=\"TinyLife.World.Map.AddLight(TinyLife.Objects.Light)\" data-throw-if-not-resolved=\"false\"></xref>.\nA light draws a light texture onto a lightmap and, as such, adds lighting to the rendered world.\n"
  example: []
  syntax:
    content: public class Light
    content.vb: Public Class Light
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Objects.Light.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Objects.Light.CircleTexture
  commentId: F:TinyLife.Objects.Light.CircleTexture
  id: CircleTexture
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: CircleTexture
  nameWithType: Light.CircleTexture
  fullName: TinyLife.Objects.Light.CircleTexture
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CircleTexture
    path: ../TinyLife/Objects/Light.cs
    startLine: 18
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nA texture that can be used as the <xref href=\"TinyLife.Objects.Light.Texture\" data-throw-if-not-resolved=\"false\"></xref> of a light that is circular\n"
  example: []
  syntax:
    content: public static readonly TextureRegion CircleTexture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public Shared ReadOnly CircleTexture As TextureRegion
- uid: TinyLife.Objects.Light.Map
  commentId: F:TinyLife.Objects.Light.Map
  id: Map
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Light.Map
  fullName: TinyLife.Objects.Light.Map
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Map
    path: ../TinyLife/Objects/Light.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe map that this light is on\n"
  example: []
  syntax:
    content: public readonly Map Map
    return:
      type: TinyLife.World.Map
    content.vb: Public ReadOnly Map As Map
- uid: TinyLife.Objects.Light.Texture
  commentId: F:TinyLife.Objects.Light.Texture
  id: Texture
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Texture
  nameWithType: Light.Texture
  fullName: TinyLife.Objects.Light.Texture
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Texture
    path: ../TinyLife/Objects/Light.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe texture that this light currently has.\nA custom texture can be used, or any of the static texture regions in this class, including <xref href=\"TinyLife.Objects.Light.CircleTexture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly TextureRegion Texture
    return:
      type: MLEM.Textures.TextureRegion
    content.vb: Public ReadOnly Texture As TextureRegion
- uid: TinyLife.Objects.Light.CameraOffset
  commentId: F:TinyLife.Objects.Light.CameraOffset
  id: CameraOffset
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: CameraOffset
  nameWithType: Light.CameraOffset
  fullName: TinyLife.Objects.Light.CameraOffset
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraOffset
    path: ../TinyLife/Objects/Light.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe offset from this light&apos;s <xref href=\"TinyLife.Objects.Light.Position\" data-throw-if-not-resolved=\"false\"></xref> that is added in visual space only, using <xref href=\"TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Vector2 CameraOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public CameraOffset As Vector2
- uid: TinyLife.Objects.Light.Position
  commentId: P:TinyLife.Objects.Light.Position
  id: Position
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
  type: Property
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Position
    path: ../TinyLife/Objects/Light.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe position of this light, in world space.\nNote that, if this position is changed, this light&apos;s current <xref href=\"TinyLife.World.MapSection\" data-throw-if-not-resolved=\"false\"></xref> is changed automatically if needed.\n"
  example: []
  syntax:
    content: public Vector2 Position { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property Position As Vector2
  overload: TinyLife.Objects.Light.Position*
- uid: TinyLife.Objects.Light.DrawPosOffset
  commentId: F:TinyLife.Objects.Light.DrawPosOffset
  id: DrawPosOffset
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: DrawPosOffset
  nameWithType: Light.DrawPosOffset
  fullName: TinyLife.Objects.Light.DrawPosOffset
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DrawPosOffset
    path: ../TinyLife/Objects/Light.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nAn offset from this light&apos;s <xref href=\"TinyLife.Objects.Light.Position\" data-throw-if-not-resolved=\"false\"></xref>, in world space, that is applied before the <xref href=\"TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> call.\nThis can be used if the light should be drawn in a different location than its <xref href=\"TinyLife.Objects.Light.Position\" data-throw-if-not-resolved=\"false\"></xref>, which also determines the room and section that it is in.\n"
  example: []
  syntax:
    content: public Vector2 DrawPosOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public DrawPosOffset As Vector2
- uid: TinyLife.Objects.Light.Size
  commentId: F:TinyLife.Objects.Light.Size
  id: Size
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Light.Size
  fullName: TinyLife.Objects.Light.Size
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Size
    path: ../TinyLife/Objects/Light.cs
    startLine: 58
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe size, in world space, of this light, centered on its <xref href=\"TinyLife.Objects.Light.Position\" data-throw-if-not-resolved=\"false\"></xref>.\nThis value is multiplied with <xref href=\"TinyLife.World.Tile.Width\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.World.Tile.Height\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Vector2 Size
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Size As Vector2
- uid: TinyLife.Objects.Light.Rotation
  commentId: F:TinyLife.Objects.Light.Rotation
  id: Rotation
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: Light.Rotation
  fullName: TinyLife.Objects.Light.Rotation
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Rotation
    path: ../TinyLife/Objects/Light.cs
    startLine: 63
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe rotation that this light displays with, in radians.\nRotation is applied around the center of the light&apos;s <xref href=\"TinyLife.Objects.Light.Texture\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public float Rotation
    return:
      type: System.Single
    content.vb: Public Rotation As Single
- uid: TinyLife.Objects.Light.Color
  commentId: F:TinyLife.Objects.Light.Color
  id: Color
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Light.Color
  fullName: TinyLife.Objects.Light.Color
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Color
    path: ../TinyLife/Objects/Light.cs
    startLine: 68
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nThe color that this light renders with.\nNote that, when drawing, this color is passed through <xref href=\"MLEM.Extensions.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)\" data-throw-if-not-resolved=\"false\"></xref> due to the way the lightmap is drawn.\n"
  example: []
  syntax:
    content: public Color Color
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Color As Color
- uid: TinyLife.Objects.Light.IsDisabled
  commentId: F:TinyLife.Objects.Light.IsDisabled
  id: IsDisabled
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: IsDisabled
  nameWithType: Light.IsDisabled
  fullName: TinyLife.Objects.Light.IsDisabled
  type: Field
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsDisabled
    path: ../TinyLife/Objects/Light.cs
    startLine: 73
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nWhether this light is currently disabled.\nIf a light is disabled, it will not be rendered.\n"
  example: []
  syntax:
    content: public bool IsDisabled
    return:
      type: System.Boolean
    content.vb: Public IsDisabled As Boolean
- uid: TinyLife.Objects.Light.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  commentId: M:TinyLife.Objects.Light.#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  id: '#ctor(TinyLife.World.Map,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)'
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Light(Map, Vector2, TextureRegion, Vector2, Color)
  nameWithType: Light.Light(Map, Vector2, TextureRegion, Vector2, Color)
  fullName: TinyLife.Objects.Light.Light(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  type: Constructor
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Objects/Light.cs
    startLine: 85
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nCreates a new light with the given settings\n"
  example: []
  syntax:
    content: public Light(Map map, Vector2 position, TextureRegion texture, Vector2 size, Color color)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map to add the light to
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The light&apos;s position, in world space
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The light&apos;s texture
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the light, centered on its <code data-dev-comment-type="paramref" class="paramref">position</code>
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to render the light with
    content.vb: Public Sub New(map As Map, position As Vector2, texture As TextureRegion, size As Vector2, color As Color)
  overload: TinyLife.Objects.Light.#ctor*
  nameWithType.vb: Light.New(Map, Vector2, TextureRegion, Vector2, Color)
  fullName.vb: TinyLife.Objects.Light.New(TinyLife.World.Map, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  name.vb: New(Map, Vector2, TextureRegion, Vector2, Color)
- uid: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Objects.Light
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Light.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Objects.Light.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  source:
    remote:
      path: TinyLife/Objects/Light.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/Objects/Light.cs
    startLine: 98
  assemblies:
  - Tiny Life
  namespace: TinyLife.Objects
  summary: "\nDraws the light in the world with the given sprite batch, at its current <xref href=\"TinyLife.Objects.Light.Position\" data-throw-if-not-resolved=\"false\"></xref> and with its current <xref href=\"TinyLife.Objects.Light.Color\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual void Draw(GameTime time, SpriteBatch batch)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s current time, which can be used for animations
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to draw the light with
    content.vb: Public Overridable Sub Draw(time As GameTime, batch As SpriteBatch)
  overload: TinyLife.Objects.Light.Draw*
references:
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
  commentId: M:TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
  name: AddLight(Light)
  nameWithType: Map.AddLight(Light)
  fullName: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
  spec.csharp:
  - uid: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
    name: AddLight
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.AddLight(TinyLife.Objects.Light)
    name: AddLight
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Objects.Light.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Light>(Light)
  nameWithType: Extensions.JsonCopy<Light>(Light)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Objects.Light>(TinyLife.Objects.Light)
  nameWithType.vb: Extensions.JsonCopy(Of Light)(Light)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Objects.Light)(TinyLife.Objects.Light)
  name.vb: JsonCopy(Of Light)(Light)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Light)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Objects.Light
    name: Light
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Objects.Light)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Light
    name: Light
  - name: )
  - name: (
  - uid: TinyLife.Objects.Light
    name: Light
  - name: )
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Objects.Light.Texture
  commentId: F:TinyLife.Objects.Light.Texture
  name: Texture
  nameWithType: Light.Texture
  fullName: TinyLife.Objects.Light.Texture
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Textures
    name: Textures
    isExternal: true
- uid: TinyLife.Objects.Light.CircleTexture
  commentId: F:TinyLife.Objects.Light.CircleTexture
  name: CircleTexture
  nameWithType: Light.CircleTexture
  fullName: TinyLife.Objects.Light.CircleTexture
- uid: TinyLife.Objects.Light.Position
  commentId: P:TinyLife.Objects.Light.Position
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
- uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  isExternal: true
  name: ToVisualY(Vector2)
  nameWithType: Extensions.ToVisualY(Vector2)
  fullName: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
    name: ToVisualY
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
    name: ToVisualY
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.World.MapSection
  commentId: T:TinyLife.World.MapSection
  parent: TinyLife.World
  name: MapSection
  nameWithType: MapSection
  fullName: TinyLife.World.MapSection
- uid: TinyLife.Objects.Light.Position*
  commentId: Overload:TinyLife.Objects.Light.Position
  name: Position
  nameWithType: Light.Position
  fullName: TinyLife.Objects.Light.Position
- uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ToScreenPos(Vector2, bool, bool, bool)
  nameWithType: Extensions.ToScreenPos(Vector2, bool, bool, bool)
  fullName: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2, bool, bool, bool)
  nameWithType.vb: Extensions.ToScreenPos(Vector2, Boolean, Boolean, Boolean)
  fullName.vb: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2, Boolean, Boolean, Boolean)
  name.vb: ToScreenPos(Vector2, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Boolean)
    name: ToScreenPos
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.ToScreenPos(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean,System.Boolean)
    name: ToScreenPos
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.World.Tile.Width
  commentId: P:TinyLife.World.Tile.Width
  parent: TinyLife.World.Tile
  name: Width
  nameWithType: Tile.Width
  fullName: TinyLife.World.Tile.Width
- uid: TinyLife.World.Tile.Height
  commentId: P:TinyLife.World.Tile.Height
  parent: TinyLife.World.Tile
  name: Height
  nameWithType: Tile.Height
  fullName: TinyLife.World.Tile.Height
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Extensions.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Extensions.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  isExternal: true
  name: Invert(Color)
  nameWithType: ColorExtensions.Invert(Color)
  fullName: MLEM.Extensions.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  spec.csharp:
  - uid: MLEM.Extensions.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
    name: Invert
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Extensions.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
    name: Invert
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.Light.#ctor*
  commentId: Overload:TinyLife.Objects.Light.#ctor
  name: Light
  nameWithType: Light.Light
  fullName: TinyLife.Objects.Light.Light
  nameWithType.vb: Light.New
  fullName.vb: TinyLife.Objects.Light.New
  name.vb: New
- uid: TinyLife.Objects.Light.Color
  commentId: F:TinyLife.Objects.Light.Color
  name: Color
  nameWithType: Light.Color
  fullName: TinyLife.Objects.Light.Color
- uid: TinyLife.Objects.Light.Draw*
  commentId: Overload:TinyLife.Objects.Light.Draw
  name: Draw
  nameWithType: Light.Draw
  fullName: TinyLife.Objects.Light.Draw
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
