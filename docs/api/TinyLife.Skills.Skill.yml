### YamlMime:ManagedReference
items:
- uid: TinyLife.Skills.Skill
  commentId: T:TinyLife.Skills.Skill
  id: Skill
  parent: TinyLife.Skills
  children:
  - TinyLife.Skills.Skill.#ctor(TinyLife.Skills.SkillType)
  - TinyLife.Skills.Skill.Level
  - TinyLife.Skills.Skill.OnAdditionalEarnedActions
  - TinyLife.Skills.Skill.PointPercentage
  - TinyLife.Skills.Skill.PointsToNextLevel
  - TinyLife.Skills.Skill.RequiredPointsToNextLevel
  - TinyLife.Skills.Skill.TotalPercentage
  - TinyLife.Skills.Skill.Type
  langs:
  - csharp
  - vb
  name: Skill
  nameWithType: Skill
  fullName: TinyLife.Skills.Skill
  type: Class
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Skill
    path: ../TinyLife/Skills/Skill.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: >-
    A skill is an ability that a <xref href="TinyLife.Objects.Person" data-throw-if-not-resolved="false"></xref> can have which influences their behavior in some way.

    Skill instances are created from their corresponding <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Skill
    content.vb: >-
      <DataContract>

      Public Class Skill
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Skills.Skill.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Skills.Skill.OnAdditionalEarnedActions
  commentId: E:TinyLife.Skills.Skill.OnAdditionalEarnedActions
  id: OnAdditionalEarnedActions
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: OnAdditionalEarnedActions
  nameWithType: Skill.OnAdditionalEarnedActions
  fullName: TinyLife.Skills.Skill.OnAdditionalEarnedActions
  type: Event
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnAdditionalEarnedActions
    path: ../TinyLife/Skills/Skill.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: An event that is invoked when a notification for a skill level up is displayed for the given <xref href="TinyLife.Skills.Skill" data-throw-if-not-resolved="false"></xref>. The list can have additional display strings added to based on a reached level to display additional actions or abilities that a person gains when reaching that level. This is an event version of <xref href="TinyLife.Skills.SkillType.AdditionalEarnedActions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static event Action<Person, Skill, List<(int Level, string DisplayName)>> OnAdditionalEarnedActions
    return:
      type: System.Action{TinyLife.Objects.Person,TinyLife.Skills.Skill,System.Collections.Generic.List{System.ValueTuple{System.Int32,System.String}}}
    content.vb: Public Shared Event OnAdditionalEarnedActions As Action(Of Person, Skill, List(Of (Level As Integer, DisplayName As String)))
- uid: TinyLife.Skills.Skill.Type
  commentId: F:TinyLife.Skills.Skill.Type
  id: Type
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Skill.Type
  fullName: TinyLife.Skills.Skill.Type
  type: Field
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Type
    path: ../TinyLife/Skills/Skill.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: The underlying <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref> that this skill instance originates from
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly SkillType Type
    return:
      type: TinyLife.Skills.SkillType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As SkillType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Skills.Skill.PointsToNextLevel
  commentId: P:TinyLife.Skills.Skill.PointsToNextLevel
  id: PointsToNextLevel
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: PointsToNextLevel
  nameWithType: Skill.PointsToNextLevel
  fullName: TinyLife.Skills.Skill.PointsToNextLevel
  type: Property
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PointsToNextLevel
    path: ../TinyLife/Skills/Skill.cs
    startLine: 43
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: >-
    The amount of skill points that are required until the next <xref href="TinyLife.Skills.Skill.Level" data-throw-if-not-resolved="false"></xref> is reached.

    To modify this value, use <xref href="TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float PointsToNextLevel { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Property PointsToNextLevel As Single
  overload: TinyLife.Skills.Skill.PointsToNextLevel*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Skills.Skill.Level
  commentId: P:TinyLife.Skills.Skill.Level
  id: Level
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: Skill.Level
  fullName: TinyLife.Skills.Skill.Level
  type: Property
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Level
    path: ../TinyLife/Skills/Skill.cs
    startLine: 49
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: >-
    The current level of this skill. Note that this value never goes beyond <xref href="TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)" data-throw-if-not-resolved="false"></xref>.

    To modify this value efficiently, use <xref href="TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> or <xref href="TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType%2cSystem.Single%2cTinyLife.Actions.ActionInfo%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [DataMember]

      public int Level { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property Level As Integer
  overload: TinyLife.Skills.Skill.Level*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Skills.Skill.RequiredPointsToNextLevel
  commentId: P:TinyLife.Skills.Skill.RequiredPointsToNextLevel
  id: RequiredPointsToNextLevel
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: RequiredPointsToNextLevel
  nameWithType: Skill.RequiredPointsToNextLevel
  fullName: TinyLife.Skills.Skill.RequiredPointsToNextLevel
  type: Property
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredPointsToNextLevel
    path: ../TinyLife/Skills/Skill.cs
    startLine: 56
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: >-
    Returns the amount of skill points that is required to reach the next level.

    This value is depenedent on the current <xref href="TinyLife.Skills.Skill.Level" data-throw-if-not-resolved="false"></xref>, meaning higher skill levels are harder to reach.
  example: []
  syntax:
    content: public int RequiredPointsToNextLevel { get; }
    parameters: []
    return:
      type: System.Int32
      description: The points required for the next level
    content.vb: Public ReadOnly Property RequiredPointsToNextLevel As Integer
  overload: TinyLife.Skills.Skill.RequiredPointsToNextLevel*
- uid: TinyLife.Skills.Skill.PointPercentage
  commentId: P:TinyLife.Skills.Skill.PointPercentage
  id: PointPercentage
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: PointPercentage
  nameWithType: Skill.PointPercentage
  fullName: TinyLife.Skills.Skill.PointPercentage
  type: Property
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PointPercentage
    path: ../TinyLife/Skills/Skill.cs
    startLine: 61
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: >-
    The percentage of <xref href="TinyLife.Skills.Skill.PointsToNextLevel" data-throw-if-not-resolved="false"></xref> out of the <xref href="TinyLife.Skills.Skill.RequiredPointsToNextLevel" data-throw-if-not-resolved="false"></xref>.

    This value is always between 0 and 1.
  example: []
  syntax:
    content: public float PointPercentage { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property PointPercentage As Single
  overload: TinyLife.Skills.Skill.PointPercentage*
- uid: TinyLife.Skills.Skill.TotalPercentage
  commentId: P:TinyLife.Skills.Skill.TotalPercentage
  id: TotalPercentage
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: TotalPercentage
  nameWithType: Skill.TotalPercentage
  fullName: TinyLife.Skills.Skill.TotalPercentage
  type: Property
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TotalPercentage
    path: ../TinyLife/Skills/Skill.cs
    startLine: 66
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: >-
    The percentage of the <xref href="TinyLife.Skills.Skill.Level" data-throw-if-not-resolved="false"></xref>, plus the <xref href="TinyLife.Skills.Skill.PointPercentage" data-throw-if-not-resolved="false"></xref>, out of the total <xref href="TinyLife.Skills.SkillType.MaxLevel" data-throw-if-not-resolved="false"></xref>.

    Essentially, this value represents the total progress that this skill has, between 0 and 1.
  example: []
  syntax:
    content: public float TotalPercentage { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property TotalPercentage As Single
  overload: TinyLife.Skills.Skill.TotalPercentage*
- uid: TinyLife.Skills.Skill.#ctor(TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Skills.Skill.#ctor(TinyLife.Skills.SkillType)
  id: '#ctor(TinyLife.Skills.SkillType)'
  parent: TinyLife.Skills.Skill
  langs:
  - csharp
  - vb
  name: Skill(SkillType)
  nameWithType: Skill.Skill(SkillType)
  fullName: TinyLife.Skills.Skill.Skill(TinyLife.Skills.SkillType)
  type: Constructor
  source:
    remote:
      path: TinyLife/Skills/Skill.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Skills/Skill.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.Skills
  summary: Creates a new skill instance from the given <xref href="TinyLife.Skills.SkillType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Skill(SkillType type)
    parameters:
    - id: type
      type: TinyLife.Skills.SkillType
      description: The type of skill to construct
    content.vb: Public Sub New(type As SkillType)
  overload: TinyLife.Skills.Skill.#ctor*
  nameWithType.vb: Skill.New(SkillType)
  fullName.vb: TinyLife.Skills.Skill.New(TinyLife.Skills.SkillType)
  name.vb: New(SkillType)
references:
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  href: TinyLife.Objects.Person.html
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  href: TinyLife.Skills.SkillType.html
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  href: TinyLife.html
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Skills
    name: Skills
    href: TinyLife.Skills.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Skills.Skill.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Skill>(Skill)
  nameWithType: Extensions.JsonCopy<Skill>(Skill)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Skills.Skill>(TinyLife.Skills.Skill)
  nameWithType.vb: Extensions.JsonCopy(Of Skill)(Skill)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Skills.Skill)(TinyLife.Skills.Skill)
  name.vb: JsonCopy(Of Skill)(Skill)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.Skill)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: '>'
  - name: (
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Skills.Skill)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: )
  - name: (
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  href: TinyLife.html
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Objects
    name: Objects
    href: TinyLife.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.Skills.Skill
  commentId: T:TinyLife.Skills.Skill
  parent: TinyLife.Skills
  href: TinyLife.Skills.Skill.html
  name: Skill
  nameWithType: Skill
  fullName: TinyLife.Skills.Skill
- uid: TinyLife.Skills.SkillType.AdditionalEarnedActions
  commentId: P:TinyLife.Skills.SkillType.AdditionalEarnedActions
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_AdditionalEarnedActions
  name: AdditionalEarnedActions
  nameWithType: SkillType.AdditionalEarnedActions
  fullName: TinyLife.Skills.SkillType.AdditionalEarnedActions
- uid: System.Action{TinyLife.Objects.Person,TinyLife.Skills.Skill,System.Collections.Generic.List{System.ValueTuple{System.Int32,System.String}}}
  commentId: T:System.Action{TinyLife.Objects.Person,TinyLife.Skills.Skill,System.Collections.Generic.List{System.ValueTuple{System.Int32,System.String}}}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<Person, Skill, List<(int Level, string DisplayName)>>
  nameWithType: Action<Person, Skill, List<(int Level, string DisplayName)>>
  fullName: System.Action<TinyLife.Objects.Person, TinyLife.Skills.Skill, System.Collections.Generic.List<(int Level, string DisplayName)>>
  nameWithType.vb: Action(Of Person, Skill, List(Of (Level As Integer, DisplayName As String)))
  fullName.vb: System.Action(Of TinyLife.Objects.Person, TinyLife.Skills.Skill, System.Collections.Generic.List(Of (Level As Integer, DisplayName As String)))
  name.vb: Action(Of Person, Skill, List(Of (Level As Integer, DisplayName As String)))
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.String}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.level
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.String}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.displayname
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: TinyLife.Skills.Skill
    name: Skill
    href: TinyLife.Skills.Skill.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.String}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.level
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.String}.DisplayName
    name: DisplayName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.string-.displayname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: TinyLife.Skills.Skill.Level
  commentId: P:TinyLife.Skills.Skill.Level
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Level
  name: Level
  nameWithType: Skill.Level
  fullName: TinyLife.Skills.Skill.Level
- uid: TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person,System.Single)
  commentId: M:TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person,System.Single)
  isExternal: true
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Gain_TinyLife_Objects_Person_System_Single_
  name: Gain(Person, float)
  nameWithType: Skill.Gain(Person, float)
  fullName: TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person, float)
  nameWithType.vb: Skill.Gain(Person, Single)
  fullName.vb: TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person, Single)
  name.vb: Gain(Person, Single)
  spec.csharp:
  - uid: TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person,System.Single)
    name: Gain
    href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Gain_TinyLife_Objects_Person_System_Single_
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.Skill.Gain(TinyLife.Objects.Person,System.Single)
    name: Gain
    href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Gain_TinyLife_Objects_Person_System_Single_
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
    href: TinyLife.Objects.Person.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  commentId: M:TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
  isExternal: true
  href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_GainSkill_TinyLife_Skills_SkillType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  name: GainSkill(SkillType, float, ActionInfo, float)
  nameWithType: Person.GainSkill(SkillType, float, ActionInfo, float)
  fullName: TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType, float, TinyLife.Actions.ActionInfo, float)
  nameWithType.vb: Person.GainSkill(SkillType, Single, ActionInfo, Single)
  fullName.vb: TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType, Single, TinyLife.Actions.ActionInfo, Single)
  name.vb: GainSkill(SkillType, Single, ActionInfo, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: GainSkill
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_GainSkill_TinyLife_Skills_SkillType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.GainSkill(TinyLife.Skills.SkillType,System.Single,TinyLife.Actions.ActionInfo,System.Single)
    name: GainSkill
    href: TinyLife.Objects.Person.html#TinyLife_Objects_Person_GainSkill_TinyLife_Skills_SkillType_System_Single_TinyLife_Actions_ActionInfo_System_Single_
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
    href: TinyLife.Skills.SkillType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
    href: TinyLife.Actions.ActionInfo.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Skills.Skill.PointsToNextLevel*
  commentId: Overload:TinyLife.Skills.Skill.PointsToNextLevel
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_PointsToNextLevel
  name: PointsToNextLevel
  nameWithType: Skill.PointsToNextLevel
  fullName: TinyLife.Skills.Skill.PointsToNextLevel
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  commentId: M:TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetMaxLevel_TinyLife_Objects_AgeGroup_
  name: GetMaxLevel(AgeGroup)
  nameWithType: SkillType.GetMaxLevel(AgeGroup)
  fullName: TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
  spec.csharp:
  - uid: TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
    name: GetMaxLevel
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetMaxLevel_TinyLife_Objects_AgeGroup_
  - name: (
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: )
  spec.vb:
  - uid: TinyLife.Skills.SkillType.GetMaxLevel(TinyLife.Objects.AgeGroup)
    name: GetMaxLevel
    href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_GetMaxLevel_TinyLife_Objects_AgeGroup_
  - name: (
  - uid: TinyLife.Objects.AgeGroup
    name: AgeGroup
    href: TinyLife.Objects.AgeGroup.html
  - name: )
- uid: TinyLife.Skills.Skill.Level*
  commentId: Overload:TinyLife.Skills.Skill.Level
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_Level
  name: Level
  nameWithType: Skill.Level
  fullName: TinyLife.Skills.Skill.Level
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Skills.Skill.RequiredPointsToNextLevel*
  commentId: Overload:TinyLife.Skills.Skill.RequiredPointsToNextLevel
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_RequiredPointsToNextLevel
  name: RequiredPointsToNextLevel
  nameWithType: Skill.RequiredPointsToNextLevel
  fullName: TinyLife.Skills.Skill.RequiredPointsToNextLevel
- uid: TinyLife.Skills.Skill.PointsToNextLevel
  commentId: P:TinyLife.Skills.Skill.PointsToNextLevel
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_PointsToNextLevel
  name: PointsToNextLevel
  nameWithType: Skill.PointsToNextLevel
  fullName: TinyLife.Skills.Skill.PointsToNextLevel
- uid: TinyLife.Skills.Skill.RequiredPointsToNextLevel
  commentId: P:TinyLife.Skills.Skill.RequiredPointsToNextLevel
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_RequiredPointsToNextLevel
  name: RequiredPointsToNextLevel
  nameWithType: Skill.RequiredPointsToNextLevel
  fullName: TinyLife.Skills.Skill.RequiredPointsToNextLevel
- uid: TinyLife.Skills.Skill.PointPercentage*
  commentId: Overload:TinyLife.Skills.Skill.PointPercentage
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_PointPercentage
  name: PointPercentage
  nameWithType: Skill.PointPercentage
  fullName: TinyLife.Skills.Skill.PointPercentage
- uid: TinyLife.Skills.Skill.PointPercentage
  commentId: P:TinyLife.Skills.Skill.PointPercentage
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_PointPercentage
  name: PointPercentage
  nameWithType: Skill.PointPercentage
  fullName: TinyLife.Skills.Skill.PointPercentage
- uid: TinyLife.Skills.SkillType.MaxLevel
  commentId: F:TinyLife.Skills.SkillType.MaxLevel
  href: TinyLife.Skills.SkillType.html#TinyLife_Skills_SkillType_MaxLevel
  name: MaxLevel
  nameWithType: SkillType.MaxLevel
  fullName: TinyLife.Skills.SkillType.MaxLevel
- uid: TinyLife.Skills.Skill.TotalPercentage*
  commentId: Overload:TinyLife.Skills.Skill.TotalPercentage
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill_TotalPercentage
  name: TotalPercentage
  nameWithType: Skill.TotalPercentage
  fullName: TinyLife.Skills.Skill.TotalPercentage
- uid: TinyLife.Skills.Skill.#ctor*
  commentId: Overload:TinyLife.Skills.Skill.#ctor
  href: TinyLife.Skills.Skill.html#TinyLife_Skills_Skill__ctor_TinyLife_Skills_SkillType_
  name: Skill
  nameWithType: Skill.Skill
  fullName: TinyLife.Skills.Skill.Skill
  nameWithType.vb: Skill.New
  fullName.vb: TinyLife.Skills.Skill.New
  name.vb: New
