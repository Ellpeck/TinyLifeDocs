### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Soundscape
  commentId: T:TinyLife.World.Soundscape
  id: Soundscape
  parent: TinyLife.World
  children:
  - TinyLife.World.Soundscape.#ctor(TinyLife.World.Soundscape.IntensityDelegate,Microsoft.Xna.Framework.Audio.SoundEffect[])
  - TinyLife.World.Soundscape.Soundscapes
  - TinyLife.World.Soundscape.Update(TinyLife.World.Map,MLEM.Cameras.Camera)
  langs:
  - csharp
  - vb
  name: Soundscape
  nameWithType: Soundscape
  fullName: TinyLife.World.Soundscape
  type: Class
  source:
    remote:
      path: TinyLife/World/Soundscape.cs
      branch: 0.20.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Soundscape
    path: ../TinyLife/World/Soundscape.cs
    startLine: 18
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA soundscape is a set of background/ambient sounds that play to enhance the atmosphere of the game.\nTo create a new soundscape, it can be added to <xref href=\"TinyLife.World.Soundscape.Soundscapes\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class Soundscape
    content.vb: Public Class Soundscape
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.World.Soundscape.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.World.Soundscape.Soundscapes
  commentId: F:TinyLife.World.Soundscape.Soundscapes
  id: Soundscapes
  parent: TinyLife.World.Soundscape
  langs:
  - csharp
  - vb
  name: Soundscapes
  nameWithType: Soundscape.Soundscapes
  fullName: TinyLife.World.Soundscape.Soundscapes
  type: Field
  source:
    remote:
      path: TinyLife/World/Soundscape.cs
      branch: 0.20.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Soundscapes
    path: ../TinyLife/World/Soundscape.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThe set of soundscapes that are active in the game.\nTo create a new soundscape and to have its <xref href=\"TinyLife.World.Soundscape.Update(TinyLife.World.Map%2cMLEM.Cameras.Camera)\" data-throw-if-not-resolved=\"false\"></xref> method called while in-game, it can be added to this collection.\n"
  example: []
  syntax:
    content: public static readonly List<Soundscape> Soundscapes
    return:
      type: System.Collections.Generic.List{TinyLife.World.Soundscape}
    content.vb: Public Shared ReadOnly Soundscapes As List(Of Soundscape)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.World.Soundscape.#ctor(TinyLife.World.Soundscape.IntensityDelegate,Microsoft.Xna.Framework.Audio.SoundEffect[])
  commentId: M:TinyLife.World.Soundscape.#ctor(TinyLife.World.Soundscape.IntensityDelegate,Microsoft.Xna.Framework.Audio.SoundEffect[])
  id: '#ctor(TinyLife.World.Soundscape.IntensityDelegate,Microsoft.Xna.Framework.Audio.SoundEffect[])'
  parent: TinyLife.World.Soundscape
  langs:
  - csharp
  - vb
  name: Soundscape(Soundscape.IntensityDelegate, SoundEffect[])
  nameWithType: Soundscape.Soundscape(Soundscape.IntensityDelegate, SoundEffect[])
  fullName: TinyLife.World.Soundscape.Soundscape(TinyLife.World.Soundscape.IntensityDelegate, Microsoft.Xna.Framework.Audio.SoundEffect[])
  type: Constructor
  source:
    remote:
      path: TinyLife/World/Soundscape.cs
      branch: 0.20.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/World/Soundscape.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nCreates a new soundscape with the given settings.\n"
  example: []
  syntax:
    content: public Soundscape(Soundscape.IntensityDelegate intensityFunction, params SoundEffect[] sounds)
    parameters:
    - id: intensityFunction
      type: TinyLife.World.Soundscape.IntensityDelegate
      description: The intensity function that determines the intensity of this soundscape at any given position.
    - id: sounds
      type: Microsoft.Xna.Framework.Audio.SoundEffect[]
      description: The set of sound effects that this soundscape should contain, which will be randomly chosen from.
    content.vb: Public Sub New(intensityFunction As Soundscape.IntensityDelegate, ParamArray sounds As SoundEffect())
  overload: TinyLife.World.Soundscape.#ctor*
  nameWithType.vb: Soundscape.Soundscape(Soundscape.IntensityDelegate, SoundEffect())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.World.Soundscape.Soundscape(TinyLife.World.Soundscape.IntensityDelegate, Microsoft.Xna.Framework.Audio.SoundEffect())
  name.vb: Soundscape(Soundscape.IntensityDelegate, SoundEffect())
- uid: TinyLife.World.Soundscape.Update(TinyLife.World.Map,MLEM.Cameras.Camera)
  commentId: M:TinyLife.World.Soundscape.Update(TinyLife.World.Map,MLEM.Cameras.Camera)
  id: Update(TinyLife.World.Map,MLEM.Cameras.Camera)
  parent: TinyLife.World.Soundscape
  langs:
  - csharp
  - vb
  name: Update(Map, Camera)
  nameWithType: Soundscape.Update(Map, Camera)
  fullName: TinyLife.World.Soundscape.Update(TinyLife.World.Map, MLEM.Cameras.Camera)
  type: Method
  source:
    remote:
      path: TinyLife/World/Soundscape.cs
      branch: 0.20.2-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/World/Soundscape.cs
    startLine: 57
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nUpdates this soundscape, querying its intensity function and playing its sound effects.\n"
  example: []
  syntax:
    content: public virtual void Update(Map map, Camera camera)
    parameters:
    - id: map
      type: TinyLife.World.Map
      description: The map that the soundscape should play on.
    - id: camera
      type: MLEM.Cameras.Camera
      description: The game&apos;s camera.
    content.vb: Public Overridable Sub Update(map As Map, camera As Camera)
  overload: TinyLife.World.Soundscape.Update*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: TinyLife.World.Soundscape.Soundscapes
  commentId: F:TinyLife.World.Soundscape.Soundscapes
  isExternal: true
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.World.Soundscape.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Soundscape>()
  nameWithType: Extensions.JsonCopy<Soundscape>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Soundscape>()
  nameWithType.vb: Extensions.JsonCopy(Of Soundscape)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Soundscape)()
  name.vb: JsonCopy(Of Soundscape)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<Soundscape>
    nameWithType: Extensions.JsonCopy<Soundscape>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Soundscape>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of Soundscape)
    nameWithType: Extensions.JsonCopy(Of Soundscape)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Soundscape)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.Soundscape.Update(TinyLife.World.Map,MLEM.Cameras.Camera)
  commentId: M:TinyLife.World.Soundscape.Update(TinyLife.World.Map,MLEM.Cameras.Camera)
  isExternal: true
- uid: System.Collections.Generic.List{TinyLife.World.Soundscape}
  commentId: T:System.Collections.Generic.List{TinyLife.World.Soundscape}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Soundscape>
  nameWithType: List<Soundscape>
  fullName: System.Collections.Generic.List<TinyLife.World.Soundscape>
  nameWithType.vb: List(Of Soundscape)
  fullName.vb: System.Collections.Generic.List(Of TinyLife.World.Soundscape)
  name.vb: List(Of Soundscape)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.World.Soundscape
    name: Soundscape
    nameWithType: Soundscape
    fullName: TinyLife.World.Soundscape
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.World.Soundscape
    name: Soundscape
    nameWithType: Soundscape
    fullName: TinyLife.World.Soundscape
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.World.Soundscape.#ctor*
  commentId: Overload:TinyLife.World.Soundscape.#ctor
  name: Soundscape
  nameWithType: Soundscape.Soundscape
  fullName: TinyLife.World.Soundscape.Soundscape
- uid: TinyLife.World.Soundscape.IntensityDelegate
  commentId: T:TinyLife.World.Soundscape.IntensityDelegate
  parent: TinyLife.World
  name: Soundscape.IntensityDelegate
  nameWithType: Soundscape.IntensityDelegate
  fullName: TinyLife.World.Soundscape.IntensityDelegate
- uid: Microsoft.Xna.Framework.Audio.SoundEffect[]
  isExternal: true
  name: SoundEffect[]
  nameWithType: SoundEffect[]
  fullName: Microsoft.Xna.Framework.Audio.SoundEffect[]
  nameWithType.vb: SoundEffect()
  fullName.vb: Microsoft.Xna.Framework.Audio.SoundEffect()
  name.vb: SoundEffect()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Audio.SoundEffect
    name: SoundEffect
    nameWithType: SoundEffect
    fullName: Microsoft.Xna.Framework.Audio.SoundEffect
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Audio.SoundEffect
    name: SoundEffect
    nameWithType: SoundEffect
    fullName: Microsoft.Xna.Framework.Audio.SoundEffect
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TinyLife.World.Soundscape.Update*
  commentId: Overload:TinyLife.World.Soundscape.Update
  name: Update
  nameWithType: Soundscape.Update
  fullName: TinyLife.World.Soundscape.Update
- uid: TinyLife.World.Map
  commentId: T:TinyLife.World.Map
  parent: TinyLife.World
  name: Map
  nameWithType: Map
  fullName: TinyLife.World.Map
- uid: MLEM.Cameras.Camera
  commentId: T:MLEM.Cameras.Camera
  parent: MLEM.Cameras
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: MLEM.Cameras.Camera
- uid: MLEM.Cameras
  commentId: N:MLEM.Cameras
  isExternal: true
  name: MLEM.Cameras
  nameWithType: MLEM.Cameras
  fullName: MLEM.Cameras
