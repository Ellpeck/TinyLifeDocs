### YamlMime:ManagedReference
items:
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  id: Options
  parent: TinyLife
  children:
  - TinyLife.Options.AButton
  - TinyLife.Options.AllowMods
  - TinyLife.Options.Apply(System.Boolean)
  - TinyLife.Options.AutoSaveIntervalSeconds
  - TinyLife.Options.BButton
  - TinyLife.Options.BlurZoomedOut
  - TinyLife.Options.BrightnessIncrease
  - TinyLife.Options.CameraDownKeybind
  - TinyLife.Options.CameraLeftKeybind
  - TinyLife.Options.CameraRightKeybind
  - TinyLife.Options.CameraRotation
  - TinyLife.Options.CameraUpKeybind
  - TinyLife.Options.CopyFurnitureKeybind
  - TinyLife.Options.CursorScale
  - TinyLife.Options.DecreaseSpeedKeybind
  - TinyLife.Options.GamepadCursorSpeed
  - TinyLife.Options.GamepadScreenBorder
  - TinyLife.Options.GamepadSwapAForB
  - TinyLife.Options.GamepadSwapTriggers
  - TinyLife.Options.GamepadSwapXForY
  - TinyLife.Options.GameSpeeds
  - TinyLife.Options.GridKeybind
  - TinyLife.Options.HideControlsHints
  - TinyLife.Options.HideDemoHints
  - TinyLife.Options.HideEarlyAccessHints
  - TinyLife.Options.HideGamepadControlsHints
  - TinyLife.Options.HideHangingObjects
  - TinyLife.Options.IncreaseSpeedKeybind
  - TinyLife.Options.InGameMusic
  - TinyLife.Options.Instance
  - TinyLife.Options.InstantTooltips
  - TinyLife.Options.Keybinds
  - TinyLife.Options.Language
  - TinyLife.Options.LeftTrigger
  - TinyLife.Options.LongerNotifications
  - TinyLife.Options.MusicVolume
  - TinyLife.Options.PauseGameKeybind
  - TinyLife.Options.RightTrigger
  - TinyLife.Options.RotateCameraKeybind
  - TinyLife.Options.RotateKeybind
  - TinyLife.Options.RoundCameraPosition
  - TinyLife.Options.Save
  - TinyLife.Options.ScreenshotKeybind
  - TinyLife.Options.SellHeldObjectKeybind
  - TinyLife.Options.ShowBuildModeGrid
  - TinyLife.Options.SoundscapeVolume
  - TinyLife.Options.SoundVolume
  - TinyLife.Options.SpeechVolume
  - TinyLife.Options.StingVolume
  - TinyLife.Options.StoreInHouseholdKeybind
  - TinyLife.Options.SwitchPersonKeybind
  - TinyLife.Options.TabBackKeybind
  - TinyLife.Options.TabForwardKeybind
  - TinyLife.Options.TransparentTooltips
  - TinyLife.Options.UiAnimations
  - TinyLife.Options.UiScale
  - TinyLife.Options.UnbindKeybind
  - TinyLife.Options.WallDisplays
  - TinyLife.Options.WallMode
  - TinyLife.Options.WallsDownKeybind
  - TinyLife.Options.WallsUpKeybind
  - TinyLife.Options.WorldSoundVolume
  - TinyLife.Options.XButton
  - TinyLife.Options.YButton
  - TinyLife.Options.ZoomInKeybind
  - TinyLife.Options.ZoomOutKeybind
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
  type: Class
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Options
    path: ../TinyLife/Options.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s options, which are displayed in the <xref href=\"TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem%2cSystem.Boolean%2cTinyLife.Uis.OptionsMenu.Tab)\" data-throw-if-not-resolved=\"false\"></xref> menu and saved to disk\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Options : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Options Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Options.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.WallDisplays
  commentId: F:TinyLife.Options.WallDisplays
  id: WallDisplays
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WallDisplays
  nameWithType: Options.WallDisplays
  fullName: TinyLife.Options.WallDisplays
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallDisplays
    path: ../TinyLife/Options.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn array of all defined <xref href=\"TinyLife.WallDisplay\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: public static readonly WallDisplay[] WallDisplays
    return:
      type: TinyLife.WallDisplay[]
    content.vb: Public Shared ReadOnly WallDisplays As WallDisplay()
- uid: TinyLife.Options.GameSpeeds
  commentId: F:TinyLife.Options.GameSpeeds
  id: GameSpeeds
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GameSpeeds
  nameWithType: Options.GameSpeeds
  fullName: TinyLife.Options.GameSpeeds
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GameSpeeds
    path: ../TinyLife/Options.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn array of all defined <xref href=\"TinyLife.GameSpeed\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: public static readonly GameSpeed[] GameSpeeds
    return:
      type: TinyLife.GameSpeed[]
    content.vb: Public Shared ReadOnly GameSpeeds As GameSpeed()
- uid: TinyLife.Options.Keybinds
  commentId: F:TinyLife.Options.Keybinds
  id: Keybinds
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Keybinds
  nameWithType: Options.Keybinds
  fullName: TinyLife.Options.Keybinds
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Keybinds
    path: ../TinyLife/Options.cs
    startLine: 49
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nAn array that contains all of the fields of type <xref href=\"MLEM.Input.Keybind\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"TinyLife.Options\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public static readonly FieldInfo[] Keybinds
    return:
      type: System.Reflection.FieldInfo[]
    content.vb: Public Shared ReadOnly Keybinds As FieldInfo()
- uid: TinyLife.Options.UnbindKeybind
  commentId: F:TinyLife.Options.UnbindKeybind
  id: UnbindKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: UnbindKeybind
  nameWithType: Options.UnbindKeybind
  fullName: TinyLife.Options.UnbindKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UnbindKeybind
    path: ../TinyLife/Options.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe keybind used to unbind other keybinds in the options menu, which is set to <xref href=\"Microsoft.Xna.Framework.Input.Keys.Escape\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static readonly Keybind UnbindKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: Public Shared ReadOnly UnbindKeybind As Keybind
- uid: TinyLife.Options.Instance
  commentId: P:TinyLife.Options.Instance
  id: Instance
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Options.Instance
  fullName: TinyLife.Options.Instance
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Instance
    path: ../TinyLife/Options.cs
    startLine: 61
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe static singleton instance of <xref href=\"TinyLife.Options\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static Options Instance { get; }
    parameters: []
    return:
      type: TinyLife.Options
    content.vb: Public Shared Property Instance As Options
  overload: TinyLife.Options.Instance*
- uid: TinyLife.Options.CopyFurnitureKeybind
  commentId: F:TinyLife.Options.CopyFurnitureKeybind
  id: CopyFurnitureKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CopyFurnitureKeybind
  nameWithType: Options.CopyFurnitureKeybind
  fullName: TinyLife.Options.CopyFurnitureKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CopyFurnitureKeybind
    path: ../TinyLife/Options.cs
    startLine: 65
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind CopyFurnitureKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly CopyFurnitureKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.StoreInHouseholdKeybind
  commentId: F:TinyLife.Options.StoreInHouseholdKeybind
  id: StoreInHouseholdKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: StoreInHouseholdKeybind
  nameWithType: Options.StoreInHouseholdKeybind
  fullName: TinyLife.Options.StoreInHouseholdKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StoreInHouseholdKeybind
    path: ../TinyLife/Options.cs
    startLine: 67
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind StoreInHouseholdKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly StoreInHouseholdKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.RotateKeybind
  commentId: F:TinyLife.Options.RotateKeybind
  id: RotateKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: RotateKeybind
  nameWithType: Options.RotateKeybind
  fullName: TinyLife.Options.RotateKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RotateKeybind
    path: ../TinyLife/Options.cs
    startLine: 69
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind RotateKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly RotateKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.SwitchPersonKeybind
  commentId: F:TinyLife.Options.SwitchPersonKeybind
  id: SwitchPersonKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SwitchPersonKeybind
  nameWithType: Options.SwitchPersonKeybind
  fullName: TinyLife.Options.SwitchPersonKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SwitchPersonKeybind
    path: ../TinyLife/Options.cs
    startLine: 71
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind SwitchPersonKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly SwitchPersonKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.PauseGameKeybind
  commentId: F:TinyLife.Options.PauseGameKeybind
  id: PauseGameKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: PauseGameKeybind
  nameWithType: Options.PauseGameKeybind
  fullName: TinyLife.Options.PauseGameKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PauseGameKeybind
    path: ../TinyLife/Options.cs
    startLine: 73
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind PauseGameKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly PauseGameKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.IncreaseSpeedKeybind
  commentId: F:TinyLife.Options.IncreaseSpeedKeybind
  id: IncreaseSpeedKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: IncreaseSpeedKeybind
  nameWithType: Options.IncreaseSpeedKeybind
  fullName: TinyLife.Options.IncreaseSpeedKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IncreaseSpeedKeybind
    path: ../TinyLife/Options.cs
    startLine: 75
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind IncreaseSpeedKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly IncreaseSpeedKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.DecreaseSpeedKeybind
  commentId: F:TinyLife.Options.DecreaseSpeedKeybind
  id: DecreaseSpeedKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: DecreaseSpeedKeybind
  nameWithType: Options.DecreaseSpeedKeybind
  fullName: TinyLife.Options.DecreaseSpeedKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DecreaseSpeedKeybind
    path: ../TinyLife/Options.cs
    startLine: 77
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind DecreaseSpeedKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly DecreaseSpeedKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.ScreenshotKeybind
  commentId: F:TinyLife.Options.ScreenshotKeybind
  id: ScreenshotKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: ScreenshotKeybind
  nameWithType: Options.ScreenshotKeybind
  fullName: TinyLife.Options.ScreenshotKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ScreenshotKeybind
    path: ../TinyLife/Options.cs
    startLine: 79
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind ScreenshotKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly ScreenshotKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.SellHeldObjectKeybind
  commentId: F:TinyLife.Options.SellHeldObjectKeybind
  id: SellHeldObjectKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SellHeldObjectKeybind
  nameWithType: Options.SellHeldObjectKeybind
  fullName: TinyLife.Options.SellHeldObjectKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SellHeldObjectKeybind
    path: ../TinyLife/Options.cs
    startLine: 81
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind SellHeldObjectKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly SellHeldObjectKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.GridKeybind
  commentId: F:TinyLife.Options.GridKeybind
  id: GridKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GridKeybind
  nameWithType: Options.GridKeybind
  fullName: TinyLife.Options.GridKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GridKeybind
    path: ../TinyLife/Options.cs
    startLine: 83
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind GridKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly GridKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.ZoomInKeybind
  commentId: F:TinyLife.Options.ZoomInKeybind
  id: ZoomInKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: ZoomInKeybind
  nameWithType: Options.ZoomInKeybind
  fullName: TinyLife.Options.ZoomInKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ZoomInKeybind
    path: ../TinyLife/Options.cs
    startLine: 85
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind ZoomInKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly ZoomInKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.ZoomOutKeybind
  commentId: F:TinyLife.Options.ZoomOutKeybind
  id: ZoomOutKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: ZoomOutKeybind
  nameWithType: Options.ZoomOutKeybind
  fullName: TinyLife.Options.ZoomOutKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ZoomOutKeybind
    path: ../TinyLife/Options.cs
    startLine: 87
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind ZoomOutKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly ZoomOutKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.RotateCameraKeybind
  commentId: F:TinyLife.Options.RotateCameraKeybind
  id: RotateCameraKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: RotateCameraKeybind
  nameWithType: Options.RotateCameraKeybind
  fullName: TinyLife.Options.RotateCameraKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RotateCameraKeybind
    path: ../TinyLife/Options.cs
    startLine: 89
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind RotateCameraKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly RotateCameraKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.CameraUpKeybind
  commentId: F:TinyLife.Options.CameraUpKeybind
  id: CameraUpKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CameraUpKeybind
  nameWithType: Options.CameraUpKeybind
  fullName: TinyLife.Options.CameraUpKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraUpKeybind
    path: ../TinyLife/Options.cs
    startLine: 91
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind CameraUpKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly CameraUpKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.CameraDownKeybind
  commentId: F:TinyLife.Options.CameraDownKeybind
  id: CameraDownKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CameraDownKeybind
  nameWithType: Options.CameraDownKeybind
  fullName: TinyLife.Options.CameraDownKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraDownKeybind
    path: ../TinyLife/Options.cs
    startLine: 93
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind CameraDownKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly CameraDownKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.CameraLeftKeybind
  commentId: F:TinyLife.Options.CameraLeftKeybind
  id: CameraLeftKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CameraLeftKeybind
  nameWithType: Options.CameraLeftKeybind
  fullName: TinyLife.Options.CameraLeftKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraLeftKeybind
    path: ../TinyLife/Options.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind CameraLeftKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly CameraLeftKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.CameraRightKeybind
  commentId: F:TinyLife.Options.CameraRightKeybind
  id: CameraRightKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CameraRightKeybind
  nameWithType: Options.CameraRightKeybind
  fullName: TinyLife.Options.CameraRightKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraRightKeybind
    path: ../TinyLife/Options.cs
    startLine: 97
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind CameraRightKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly CameraRightKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.WallsUpKeybind
  commentId: F:TinyLife.Options.WallsUpKeybind
  id: WallsUpKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WallsUpKeybind
  nameWithType: Options.WallsUpKeybind
  fullName: TinyLife.Options.WallsUpKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallsUpKeybind
    path: ../TinyLife/Options.cs
    startLine: 99
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind WallsUpKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly WallsUpKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.WallsDownKeybind
  commentId: F:TinyLife.Options.WallsDownKeybind
  id: WallsDownKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WallsDownKeybind
  nameWithType: Options.WallsDownKeybind
  fullName: TinyLife.Options.WallsDownKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallsDownKeybind
    path: ../TinyLife/Options.cs
    startLine: 101
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind WallsDownKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly WallsDownKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.TabForwardKeybind
  commentId: F:TinyLife.Options.TabForwardKeybind
  id: TabForwardKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: TabForwardKeybind
  nameWithType: Options.TabForwardKeybind
  fullName: TinyLife.Options.TabForwardKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TabForwardKeybind
    path: ../TinyLife/Options.cs
    startLine: 103
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind TabForwardKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly TabForwardKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.TabBackKeybind
  commentId: F:TinyLife.Options.TabBackKeybind
  id: TabBackKeybind
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: TabBackKeybind
  nameWithType: Options.TabBackKeybind
  fullName: TinyLife.Options.TabBackKeybind
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TabBackKeybind
    path: ../TinyLife/Options.cs
    startLine: 105
  assemblies:
  - Tiny Life
  namespace: TinyLife
  syntax:
    content: >-
      [DataMember]

      public readonly Keybind TabBackKeybind
    return:
      type: MLEM.Input.Keybind
    content.vb: >-
      <DataMember>

      Public ReadOnly TabBackKeybind As Keybind
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.AButton
  commentId: P:TinyLife.Options.AButton
  id: AButton
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: AButton
  nameWithType: Options.AButton
  fullName: TinyLife.Options.AButton
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AButton
    path: ../TinyLife/Options.cs
    startLine: 111
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.Buttons\" data-throw-if-not-resolved=\"false\"></xref> value that is currently considered to be the A (or accept) button. This value is based on <xref href=\"TinyLife.Options.GamepadSwapAForB\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Buttons AButton { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Buttons
    content.vb: Public ReadOnly Property AButton As Buttons
  overload: TinyLife.Options.AButton*
- uid: TinyLife.Options.BButton
  commentId: P:TinyLife.Options.BButton
  id: BButton
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: BButton
  nameWithType: Options.BButton
  fullName: TinyLife.Options.BButton
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BButton
    path: ../TinyLife/Options.cs
    startLine: 115
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.Buttons\" data-throw-if-not-resolved=\"false\"></xref> value that is currently considered to be the B (or deny) button. This value is based on <xref href=\"TinyLife.Options.GamepadSwapAForB\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Buttons BButton { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Buttons
    content.vb: Public ReadOnly Property BButton As Buttons
  overload: TinyLife.Options.BButton*
- uid: TinyLife.Options.XButton
  commentId: P:TinyLife.Options.XButton
  id: XButton
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: XButton
  nameWithType: Options.XButton
  fullName: TinyLife.Options.XButton
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: XButton
    path: ../TinyLife/Options.cs
    startLine: 119
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.Buttons\" data-throw-if-not-resolved=\"false\"></xref> value that is currently considered to be the X button. This value is based on <xref href=\"TinyLife.Options.GamepadSwapXForY\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Buttons XButton { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Buttons
    content.vb: Public ReadOnly Property XButton As Buttons
  overload: TinyLife.Options.XButton*
- uid: TinyLife.Options.YButton
  commentId: P:TinyLife.Options.YButton
  id: YButton
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: YButton
  nameWithType: Options.YButton
  fullName: TinyLife.Options.YButton
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: YButton
    path: ../TinyLife/Options.cs
    startLine: 123
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.Buttons\" data-throw-if-not-resolved=\"false\"></xref> value that is currently considered to be the Y button. This value is based on <xref href=\"TinyLife.Options.GamepadSwapXForY\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Buttons YButton { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Buttons
    content.vb: Public ReadOnly Property YButton As Buttons
  overload: TinyLife.Options.YButton*
- uid: TinyLife.Options.LeftTrigger
  commentId: P:TinyLife.Options.LeftTrigger
  id: LeftTrigger
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: LeftTrigger
  nameWithType: Options.LeftTrigger
  fullName: TinyLife.Options.LeftTrigger
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LeftTrigger
    path: ../TinyLife/Options.cs
    startLine: 127
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.Buttons\" data-throw-if-not-resolved=\"false\"></xref> value that is currently considered to be the left trigger. This value is based on <xref href=\"TinyLife.Options.GamepadSwapTriggers\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Buttons LeftTrigger { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Buttons
    content.vb: Public ReadOnly Property LeftTrigger As Buttons
  overload: TinyLife.Options.LeftTrigger*
- uid: TinyLife.Options.RightTrigger
  commentId: P:TinyLife.Options.RightTrigger
  id: RightTrigger
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: RightTrigger
  nameWithType: Options.RightTrigger
  fullName: TinyLife.Options.RightTrigger
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RightTrigger
    path: ../TinyLife/Options.cs
    startLine: 131
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Input.Buttons\" data-throw-if-not-resolved=\"false\"></xref> value that is currently considered to be the right trigger. This value is based on <xref href=\"TinyLife.Options.GamepadSwapTriggers\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Buttons RightTrigger { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Input.Buttons
    content.vb: Public ReadOnly Property RightTrigger As Buttons
  overload: TinyLife.Options.RightTrigger*
- uid: TinyLife.Options.WallMode
  commentId: P:TinyLife.Options.WallMode
  id: WallMode
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WallMode
  nameWithType: Options.WallMode
  fullName: TinyLife.Options.WallMode
  type: Property
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallMode
    path: ../TinyLife/Options.cs
    startLine: 139
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe currently selected <xref href=\"TinyLife.Options.WallMode\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that this value does not always return the wall mode that has been selected by the user:\nIf <xref href=\"TinyLife.GameImpl.Mode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"TinyLife.GameImpl.GameMode.SelectHousehold\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.WallDisplay.Roofs\" data-throw-if-not-resolved=\"false\"></xref> is returned.\nIf the <xref href=\"TinyLife.GameImpl.CurrentTool\" data-throw-if-not-resolved=\"false\"></xref> overrides <xref href=\"TinyLife.Tools.Tool.ForceWallsUp\" data-throw-if-not-resolved=\"false\"></xref>, that value is returned.\n"
  example: []
  syntax:
    content: public WallDisplay WallMode { get; set; }
    parameters: []
    return:
      type: TinyLife.WallDisplay
    content.vb: Public Property WallMode As WallDisplay
  overload: TinyLife.Options.WallMode*
- uid: TinyLife.Options.Language
  commentId: F:TinyLife.Options.Language
  id: Language
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: Options.Language
  fullName: TinyLife.Options.Language
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Language
    path: ../TinyLife/Options.cs
    startLine: 155
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe currently selected language&apos;s language code.\nDetermines the language used by <xref href=\"TinyLife.Localization\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Language
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Language As String
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.UiScale
  commentId: F:TinyLife.Options.UiScale
  id: UiScale
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: UiScale
  nameWithType: Options.UiScale
  fullName: TinyLife.Options.UiScale
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UiScale
    path: ../TinyLife/Options.cs
    startLine: 160
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA modifier that is applied to the game&apos;s <xref href=\"MLEM.Ui.UiSystem\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"MLEM.Ui.UiSystem.GlobalScale\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float UiScale
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public UiScale As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.SoundVolume
  commentId: F:TinyLife.Options.SoundVolume
  id: SoundVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SoundVolume
  nameWithType: Options.SoundVolume
  fullName: TinyLife.Options.SoundVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SoundVolume
    path: ../TinyLife/Options.cs
    startLine: 165
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe current sound volume as a percentage, ranging from 0 to 1\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float SoundVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public SoundVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.MusicVolume
  commentId: F:TinyLife.Options.MusicVolume
  id: MusicVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: MusicVolume
  nameWithType: Options.MusicVolume
  fullName: TinyLife.Options.MusicVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MusicVolume
    path: ../TinyLife/Options.cs
    startLine: 170
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe current music volume as a percentage, ranging from 0 to 1\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float MusicVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public MusicVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.WorldSoundVolume
  commentId: F:TinyLife.Options.WorldSoundVolume
  id: WorldSoundVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: WorldSoundVolume
  nameWithType: Options.WorldSoundVolume
  fullName: TinyLife.Options.WorldSoundVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WorldSoundVolume
    path: ../TinyLife/Options.cs
    startLine: 176
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe volume of in-world sounds, used by <xref href=\"TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cSystem.Single%2cSystem.Boolean%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and its overloads.\nNote that the world sound volume is still multiplied with the sound master volume <xref href=\"TinyLife.Options.SoundVolume\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float WorldSoundVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public WorldSoundVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.SpeechVolume
  commentId: F:TinyLife.Options.SpeechVolume
  id: SpeechVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SpeechVolume
  nameWithType: Options.SpeechVolume
  fullName: TinyLife.Options.SpeechVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpeechVolume
    path: ../TinyLife/Options.cs
    startLine: 182
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe volume of speech sounds, used by <xref href=\"TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that the speech sound volume is still multiplied with the sound master volume <xref href=\"TinyLife.Options.SoundVolume\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float SpeechVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public SpeechVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.StingVolume
  commentId: F:TinyLife.Options.StingVolume
  id: StingVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: StingVolume
  nameWithType: Options.StingVolume
  fullName: TinyLife.Options.StingVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StingVolume
    path: ../TinyLife/Options.cs
    startLine: 188
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe volume of sting sound effects.\nNote that the sting volume is still multiplied with the sound master volume <xref href=\"TinyLife.Options.SoundVolume\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float StingVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public StingVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.SoundscapeVolume
  commentId: F:TinyLife.Options.SoundscapeVolume
  id: SoundscapeVolume
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: SoundscapeVolume
  nameWithType: Options.SoundscapeVolume
  fullName: TinyLife.Options.SoundscapeVolume
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SoundscapeVolume
    path: ../TinyLife/Options.cs
    startLine: 194
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe volume of ambiant sounds created by <xref href=\"TinyLife.World.Soundscape\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that the soundscape volume is still multiplied with the master sound volume <xref href=\"TinyLife.Options.SoundVolume\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float SoundscapeVolume
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public SoundscapeVolume As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.AutoSaveIntervalSeconds
  commentId: F:TinyLife.Options.AutoSaveIntervalSeconds
  id: AutoSaveIntervalSeconds
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: AutoSaveIntervalSeconds
  nameWithType: Options.AutoSaveIntervalSeconds
  fullName: TinyLife.Options.AutoSaveIntervalSeconds
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AutoSaveIntervalSeconds
    path: ../TinyLife/Options.cs
    startLine: 200
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe auto-save interval in seconds.\nNote that this value should be set to 30, 60, 180, 300 or 600, as otherwise, the options menu will display it incorrectly.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public int AutoSaveIntervalSeconds
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public AutoSaveIntervalSeconds As Integer
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.CameraRotation
  commentId: F:TinyLife.Options.CameraRotation
  id: CameraRotation
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CameraRotation
  nameWithType: Options.CameraRotation
  fullName: TinyLife.Options.CameraRotation
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CameraRotation
    path: ../TinyLife/Options.cs
    startLine: 207
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s camera rotation.\nTo use this value effectively, you can use <xref href=\"TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2%2cSystem.Boolean%2cSystem.Nullable%7bMLEM.Misc.Direction2%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2%2cSystem.Nullable%7bMLEM.Misc.Direction2%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen changing this value, <xref href=\"TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2%2cMLEM.Misc.Direction2)\" data-throw-if-not-resolved=\"false\"></xref> should be called for the game&apos;s <xref href=\"TinyLife.GameImpl.Map\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Direction2 CameraRotation
    return:
      type: MLEM.Misc.Direction2
    content.vb: >-
      <DataMember>

      Public CameraRotation As Direction2
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.BrightnessIncrease
  commentId: F:TinyLife.Options.BrightnessIncrease
  id: BrightnessIncrease
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: BrightnessIncrease
  nameWithType: Options.BrightnessIncrease
  fullName: TinyLife.Options.BrightnessIncrease
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BrightnessIncrease
    path: ../TinyLife/Options.cs
    startLine: 212
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA percentage that the game&apos;s world&apos;s brightness is increased by, mainly intended for users with darker screens\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float BrightnessIncrease
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public BrightnessIncrease As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.HideHangingObjects
  commentId: F:TinyLife.Options.HideHangingObjects
  id: HideHangingObjects
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: HideHangingObjects
  nameWithType: Options.HideHangingObjects
  fullName: TinyLife.Options.HideHangingObjects
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HideHangingObjects
    path: ../TinyLife/Options.cs
    startLine: 218
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether hanging objects should be hidden in the world if walls are down.\nThis property is automatically evaluated when a <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> object is drawn.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HideHangingObjects
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HideHangingObjects As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.RoundCameraPosition
  commentId: F:TinyLife.Options.RoundCameraPosition
  id: RoundCameraPosition
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: RoundCameraPosition
  nameWithType: Options.RoundCameraPosition
  fullName: TinyLife.Options.RoundCameraPosition
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoundCameraPosition
    path: ../TinyLife/Options.cs
    startLine: 224
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the <xref href=\"TinyLife.GameImpl.Camera\" data-throw-if-not-resolved=\"false\"></xref>&apos;s position should be rounded.\nIn <xref href=\"TinyLife.Options.Apply(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>, this value is passed to <xref href=\"MLEM.Cameras.Camera.RoundPosition\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool RoundCameraPosition
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public RoundCameraPosition As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.BlurZoomedOut
  commentId: F:TinyLife.Options.BlurZoomedOut
  id: BlurZoomedOut
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: BlurZoomedOut
  nameWithType: Options.BlurZoomedOut
  fullName: TinyLife.Options.BlurZoomedOut
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BlurZoomedOut
    path: ../TinyLife/Options.cs
    startLine: 230
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the camera should be blurred when zoomed out.\nThis value is automatically used by <xref href=\"TinyLife.World.Map.GetMapSampler\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool BlurZoomedOut
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public BlurZoomedOut As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.UiAnimations
  commentId: F:TinyLife.Options.UiAnimations
  id: UiAnimations
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: UiAnimations
  nameWithType: Options.UiAnimations
  fullName: TinyLife.Options.UiAnimations
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UiAnimations
    path: ../TinyLife/Options.cs
    startLine: 236
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether ui animations should be enabled.\nThis value is automatically used by <xref href=\"TinyLife.Uis.CoveringGroup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool UiAnimations
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public UiAnimations As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.ShowBuildModeGrid
  commentId: F:TinyLife.Options.ShowBuildModeGrid
  id: ShowBuildModeGrid
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: ShowBuildModeGrid
  nameWithType: Options.ShowBuildModeGrid
  fullName: TinyLife.Options.ShowBuildModeGrid
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShowBuildModeGrid
    path: ../TinyLife/Options.cs
    startLine: 241
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether a grid should be displayed in build mode.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool ShowBuildModeGrid
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public ShowBuildModeGrid As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.GamepadScreenBorder
  commentId: F:TinyLife.Options.GamepadScreenBorder
  id: GamepadScreenBorder
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GamepadScreenBorder
  nameWithType: Options.GamepadScreenBorder
  fullName: TinyLife.Options.GamepadScreenBorder
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GamepadScreenBorder
    path: ../TinyLife/Options.cs
    startLine: 246
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nA percentual border around the screen&apos;s border at which the camera will start scrolling when gamepad controls are used.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float GamepadScreenBorder
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public GamepadScreenBorder As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.GamepadCursorSpeed
  commentId: F:TinyLife.Options.GamepadCursorSpeed
  id: GamepadCursorSpeed
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GamepadCursorSpeed
  nameWithType: Options.GamepadCursorSpeed
  fullName: TinyLife.Options.GamepadCursorSpeed
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GamepadCursorSpeed
    path: ../TinyLife/Options.cs
    startLine: 251
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe speed of the gamepad&apos;s cursor.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float GamepadCursorSpeed
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public GamepadCursorSpeed As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.GamepadSwapTriggers
  commentId: F:TinyLife.Options.GamepadSwapTriggers
  id: GamepadSwapTriggers
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GamepadSwapTriggers
  nameWithType: Options.GamepadSwapTriggers
  fullName: TinyLife.Options.GamepadSwapTriggers
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GamepadSwapTriggers
    path: ../TinyLife/Options.cs
    startLine: 256
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the left and right trigger&apos;s behavior should be swapped when using a gamepad. This value is used in <xref href=\"TinyLife.Options.LeftTrigger\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Options.RightTrigger\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool GamepadSwapTriggers
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public GamepadSwapTriggers As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.GamepadSwapAForB
  commentId: F:TinyLife.Options.GamepadSwapAForB
  id: GamepadSwapAForB
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GamepadSwapAForB
  nameWithType: Options.GamepadSwapAForB
  fullName: TinyLife.Options.GamepadSwapAForB
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GamepadSwapAForB
    path: ../TinyLife/Options.cs
    startLine: 261
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the A and B buttons&apos; behaviors should be swapped when using a gamepad. This value is used in <xref href=\"TinyLife.Options.AButton\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Options.BButton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool GamepadSwapAForB
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public GamepadSwapAForB As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.GamepadSwapXForY
  commentId: F:TinyLife.Options.GamepadSwapXForY
  id: GamepadSwapXForY
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: GamepadSwapXForY
  nameWithType: Options.GamepadSwapXForY
  fullName: TinyLife.Options.GamepadSwapXForY
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GamepadSwapXForY
    path: ../TinyLife/Options.cs
    startLine: 266
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the X and Y buttons&apos; behaviors should be swapped when using a gamepad. This value is used in <xref href=\"TinyLife.Options.XButton\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Options.YButton\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool GamepadSwapXForY
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public GamepadSwapXForY As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.HideControlsHints
  commentId: F:TinyLife.Options.HideControlsHints
  id: HideControlsHints
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: HideControlsHints
  nameWithType: Options.HideControlsHints
  fullName: TinyLife.Options.HideControlsHints
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HideControlsHints
    path: ../TinyLife/Options.cs
    startLine: 271
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the <xref href=\"TinyLife.Uis.ControlsHint\" data-throw-if-not-resolved=\"false\"></xref> in the bottom-right corner of the screen should be hidden.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HideControlsHints
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HideControlsHints As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.HideGamepadControlsHints
  commentId: F:TinyLife.Options.HideGamepadControlsHints
  id: HideGamepadControlsHints
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: HideGamepadControlsHints
  nameWithType: Options.HideGamepadControlsHints
  fullName: TinyLife.Options.HideGamepadControlsHints
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HideGamepadControlsHints
    path: ../TinyLife/Options.cs
    startLine: 277
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether the gamepad controls hints should be hidden, even when using a gamepad.\nThis value is used by <xref href=\"TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor%2cSystem.Func%7bTinyLife.Options%2cMicrosoft.Xna.Framework.Input.Buttons%7d%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Nullable%7bMicrosoft.Xna.Framework.Vector2%7d%2cSystem.Func%7bSystem.Boolean%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HideGamepadControlsHints
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HideGamepadControlsHints As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.HideDemoHints
  commentId: F:TinyLife.Options.HideDemoHints
  id: HideDemoHints
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: HideDemoHints
  nameWithType: Options.HideDemoHints
  fullName: TinyLife.Options.HideDemoHints
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HideDemoHints
    path: ../TinyLife/Options.cs
    startLine: 282
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether &quot;unavailable in demo&quot; hints should be hidden.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HideDemoHints
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HideDemoHints As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.HideEarlyAccessHints
  commentId: F:TinyLife.Options.HideEarlyAccessHints
  id: HideEarlyAccessHints
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: HideEarlyAccessHints
  nameWithType: Options.HideEarlyAccessHints
  fullName: TinyLife.Options.HideEarlyAccessHints
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HideEarlyAccessHints
    path: ../TinyLife/Options.cs
    startLine: 287
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether &quot;on the roadmap&quot; hints should be hidden.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool HideEarlyAccessHints
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public HideEarlyAccessHints As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.AllowMods
  commentId: F:TinyLife.Options.AllowMods
  id: AllowMods
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: AllowMods
  nameWithType: Options.AllowMods
  fullName: TinyLife.Options.AllowMods
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AllowMods
    path: ../TinyLife/Options.cs
    startLine: 292
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether loading mods is allowed.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool AllowMods
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public AllowMods As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.InGameMusic
  commentId: F:TinyLife.Options.InGameMusic
  id: InGameMusic
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: InGameMusic
  nameWithType: Options.InGameMusic
  fullName: TinyLife.Options.InGameMusic
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InGameMusic
    path: ../TinyLife/Options.cs
    startLine: 297
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether music should be played in Play Mode. This is used by the <xref href=\"TinyLife.Music\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"TinyLife.Music.Occasion.InGame\" data-throw-if-not-resolved=\"false\"></xref> occasion.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool InGameMusic
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public InGameMusic As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.TransparentTooltips
  commentId: F:TinyLife.Options.TransparentTooltips
  id: TransparentTooltips
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: TransparentTooltips
  nameWithType: Options.TransparentTooltips
  fullName: TinyLife.Options.TransparentTooltips
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TransparentTooltips
    path: ../TinyLife/Options.cs
    startLine: 302
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether a <xref href=\"MLEM.Ui.Elements.Tooltip\" data-throw-if-not-resolved=\"false\"></xref> should be displayed with transparency.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool TransparentTooltips
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public TransparentTooltips As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.InstantTooltips
  commentId: F:TinyLife.Options.InstantTooltips
  id: InstantTooltips
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: InstantTooltips
  nameWithType: Options.InstantTooltips
  fullName: TinyLife.Options.InstantTooltips
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InstantTooltips
    path: ../TinyLife/Options.cs
    startLine: 307
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether a <xref href=\"MLEM.Ui.Elements.Tooltip\" data-throw-if-not-resolved=\"false\"></xref> should display instantly, rather than with a short delay.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool InstantTooltips
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public InstantTooltips As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.LongerNotifications
  commentId: F:TinyLife.Options.LongerNotifications
  id: LongerNotifications
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: LongerNotifications
  nameWithType: Options.LongerNotifications
  fullName: TinyLife.Options.LongerNotifications
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LongerNotifications
    path: ../TinyLife/Options.cs
    startLine: 312
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nWhether <xref href=\"TinyLife.Uis.Notifications\" data-throw-if-not-resolved=\"false\"></xref> should display with twice the amount of time before they disappear.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool LongerNotifications
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public LongerNotifications As Boolean
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.CursorScale
  commentId: F:TinyLife.Options.CursorScale
  id: CursorScale
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: CursorScale
  nameWithType: Options.CursorScale
  fullName: TinyLife.Options.CursorScale
  type: Field
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CursorScale
    path: ../TinyLife/Options.cs
    startLine: 317
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nThe game&apos;s <xref href=\"TinyLife.Uis.Cursor\" data-throw-if-not-resolved=\"false\"></xref> scale.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public float CursorScale
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public CursorScale As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Options.Apply(System.Boolean)
  commentId: M:TinyLife.Options.Apply(System.Boolean)
  id: Apply(System.Boolean)
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Apply(bool)
  nameWithType: Options.Apply(bool)
  fullName: TinyLife.Options.Apply(bool)
  type: Method
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Apply
    path: ../TinyLife/Options.cs
    startLine: 348
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nApplies the currently selected options of this instance to the game\n"
  example: []
  syntax:
    content: public void Apply(bool fullyLoaded = true)
    parameters:
    - id: fullyLoaded
      type: System.Boolean
    content.vb: Public Sub Apply(fullyLoaded As Boolean = True)
  overload: TinyLife.Options.Apply*
  nameWithType.vb: Options.Apply(Boolean)
  fullName.vb: TinyLife.Options.Apply(Boolean)
  name.vb: Apply(Boolean)
- uid: TinyLife.Options.Save
  commentId: M:TinyLife.Options.Save
  id: Save
  parent: TinyLife.Options
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: Options.Save()
  fullName: TinyLife.Options.Save()
  type: Method
  source:
    remote:
      path: TinyLife/Options.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Save
    path: ../TinyLife/Options.cs
    startLine: 387
  assemblies:
  - Tiny Life
  namespace: TinyLife
  summary: "\nSaves the options to the default options file path\n"
  example: []
  syntax:
    content: public void Save()
    content.vb: Public Sub Save()
  overload: TinyLife.Options.Save*
references:
- uid: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean,TinyLife.Uis.OptionsMenu.Tab)
  commentId: M:TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean,TinyLife.Uis.OptionsMenu.Tab)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Initialize(UiSystem, bool, Tab)
  nameWithType: OptionsMenu.Initialize(UiSystem, bool, OptionsMenu.Tab)
  fullName: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem, bool, TinyLife.Uis.OptionsMenu.Tab)
  nameWithType.vb: OptionsMenu.Initialize(UiSystem, Boolean, OptionsMenu.Tab)
  fullName.vb: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem, Boolean, TinyLife.Uis.OptionsMenu.Tab)
  name.vb: Initialize(UiSystem, Boolean, Tab)
  spec.csharp:
  - uid: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean,TinyLife.Uis.OptionsMenu.Tab)
    name: Initialize
  - name: (
  - uid: MLEM.Ui.UiSystem
    name: UiSystem
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.OptionsMenu.Tab
    name: Tab
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.OptionsMenu.Initialize(MLEM.Ui.UiSystem,System.Boolean,TinyLife.Uis.OptionsMenu.Tab)
    name: Initialize
  - name: (
  - uid: MLEM.Ui.UiSystem
    name: UiSystem
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: TinyLife.Uis.OptionsMenu.Tab
    name: Tab
  - name: )
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(string, object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(string, object)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Options.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Options>(Options)
  nameWithType: Extensions.JsonCopy<Options>(Options)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Options>(TinyLife.Options)
  nameWithType.vb: Extensions.JsonCopy(Of Options)(Options)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Options)(TinyLife.Options)
  name.vb: JsonCopy(Of Options)(Options)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Options)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Options
    name: Options
  - name: '>'
  - name: (
  - uid: TinyLife.Options
    name: Options
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Options)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Options
    name: Options
  - name: )
  - name: (
  - uid: TinyLife.Options
    name: Options
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.WallDisplay
  commentId: T:TinyLife.WallDisplay
  parent: TinyLife
  name: WallDisplay
  nameWithType: WallDisplay
  fullName: TinyLife.WallDisplay
- uid: TinyLife.WallDisplay[]
  isExternal: true
  name: WallDisplay[]
  nameWithType: WallDisplay[]
  fullName: TinyLife.WallDisplay[]
  nameWithType.vb: WallDisplay()
  fullName.vb: TinyLife.WallDisplay()
  name.vb: WallDisplay()
  spec.csharp:
  - uid: TinyLife.WallDisplay
    name: WallDisplay
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.WallDisplay
    name: WallDisplay
  - name: (
  - name: )
- uid: TinyLife.GameSpeed
  commentId: T:TinyLife.GameSpeed
  parent: TinyLife
  name: GameSpeed
  nameWithType: GameSpeed
  fullName: TinyLife.GameSpeed
- uid: TinyLife.GameSpeed[]
  isExternal: true
  name: GameSpeed[]
  nameWithType: GameSpeed[]
  fullName: TinyLife.GameSpeed[]
  nameWithType.vb: GameSpeed()
  fullName.vb: TinyLife.GameSpeed()
  name.vb: GameSpeed()
  spec.csharp:
  - uid: TinyLife.GameSpeed
    name: GameSpeed
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.GameSpeed
    name: GameSpeed
  - name: (
  - name: )
- uid: MLEM.Input.Keybind
  commentId: T:MLEM.Input.Keybind
  parent: MLEM.Input
  isExternal: true
  name: Keybind
  nameWithType: Keybind
  fullName: MLEM.Input.Keybind
- uid: TinyLife.Options
  commentId: T:TinyLife.Options
  parent: TinyLife
  name: Options
  nameWithType: Options
  fullName: TinyLife.Options
- uid: System.Reflection.FieldInfo[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: System.Reflection.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: (
  - name: )
- uid: MLEM.Input
  commentId: N:MLEM.Input
  isExternal: true
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Input
    name: Input
    isExternal: true
- uid: Microsoft.Xna.Framework.Input.Keys.Escape
  commentId: F:Microsoft.Xna.Framework.Input.Keys.Escape
  isExternal: true
  name: Escape
  nameWithType: Keys.Escape
  fullName: Microsoft.Xna.Framework.Input.Keys.Escape
- uid: TinyLife.Options.Instance*
  commentId: Overload:TinyLife.Options.Instance
  name: Instance
  nameWithType: Options.Instance
  fullName: TinyLife.Options.Instance
- uid: Microsoft.Xna.Framework.Input.Buttons
  commentId: T:Microsoft.Xna.Framework.Input.Buttons
  parent: Microsoft.Xna.Framework.Input
  isExternal: true
  name: Buttons
  nameWithType: Buttons
  fullName: Microsoft.Xna.Framework.Input.Buttons
- uid: TinyLife.Options.GamepadSwapAForB
  commentId: F:TinyLife.Options.GamepadSwapAForB
  name: GamepadSwapAForB
  nameWithType: Options.GamepadSwapAForB
  fullName: TinyLife.Options.GamepadSwapAForB
- uid: TinyLife.Options.AButton*
  commentId: Overload:TinyLife.Options.AButton
  name: AButton
  nameWithType: Options.AButton
  fullName: TinyLife.Options.AButton
- uid: Microsoft.Xna.Framework.Input
  commentId: N:Microsoft.Xna.Framework.Input
  isExternal: true
  name: Microsoft.Xna.Framework.Input
  nameWithType: Microsoft.Xna.Framework.Input
  fullName: Microsoft.Xna.Framework.Input
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Input
    name: Input
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Input
    name: Input
    isExternal: true
- uid: TinyLife.Options.BButton*
  commentId: Overload:TinyLife.Options.BButton
  name: BButton
  nameWithType: Options.BButton
  fullName: TinyLife.Options.BButton
- uid: TinyLife.Options.GamepadSwapXForY
  commentId: F:TinyLife.Options.GamepadSwapXForY
  name: GamepadSwapXForY
  nameWithType: Options.GamepadSwapXForY
  fullName: TinyLife.Options.GamepadSwapXForY
- uid: TinyLife.Options.XButton*
  commentId: Overload:TinyLife.Options.XButton
  name: XButton
  nameWithType: Options.XButton
  fullName: TinyLife.Options.XButton
- uid: TinyLife.Options.YButton*
  commentId: Overload:TinyLife.Options.YButton
  name: YButton
  nameWithType: Options.YButton
  fullName: TinyLife.Options.YButton
- uid: TinyLife.Options.GamepadSwapTriggers
  commentId: F:TinyLife.Options.GamepadSwapTriggers
  name: GamepadSwapTriggers
  nameWithType: Options.GamepadSwapTriggers
  fullName: TinyLife.Options.GamepadSwapTriggers
- uid: TinyLife.Options.LeftTrigger*
  commentId: Overload:TinyLife.Options.LeftTrigger
  name: LeftTrigger
  nameWithType: Options.LeftTrigger
  fullName: TinyLife.Options.LeftTrigger
- uid: TinyLife.Options.RightTrigger*
  commentId: Overload:TinyLife.Options.RightTrigger
  name: RightTrigger
  nameWithType: Options.RightTrigger
  fullName: TinyLife.Options.RightTrigger
- uid: TinyLife.Options.WallMode
  commentId: P:TinyLife.Options.WallMode
  name: WallMode
  nameWithType: Options.WallMode
  fullName: TinyLife.Options.WallMode
- uid: TinyLife.GameImpl.Mode
  commentId: P:TinyLife.GameImpl.Mode
  name: Mode
  nameWithType: GameImpl.Mode
  fullName: TinyLife.GameImpl.Mode
- uid: TinyLife.GameImpl.GameMode.SelectHousehold
  commentId: F:TinyLife.GameImpl.GameMode.SelectHousehold
  name: SelectHousehold
  nameWithType: GameImpl.GameMode.SelectHousehold
  fullName: TinyLife.GameImpl.GameMode.SelectHousehold
- uid: TinyLife.WallDisplay.Roofs
  commentId: F:TinyLife.WallDisplay.Roofs
  name: Roofs
  nameWithType: WallDisplay.Roofs
  fullName: TinyLife.WallDisplay.Roofs
- uid: TinyLife.GameImpl.CurrentTool
  commentId: P:TinyLife.GameImpl.CurrentTool
  name: CurrentTool
  nameWithType: GameImpl.CurrentTool
  fullName: TinyLife.GameImpl.CurrentTool
- uid: TinyLife.Tools.Tool.ForceWallsUp
  commentId: M:TinyLife.Tools.Tool.ForceWallsUp
  parent: TinyLife.Tools.Tool
  name: ForceWallsUp()
  nameWithType: Tool.ForceWallsUp()
  fullName: TinyLife.Tools.Tool.ForceWallsUp()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.ForceWallsUp
    name: ForceWallsUp
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.ForceWallsUp
    name: ForceWallsUp
  - name: (
  - name: )
- uid: TinyLife.Options.WallMode*
  commentId: Overload:TinyLife.Options.WallMode
  name: WallMode
  nameWithType: Options.WallMode
  fullName: TinyLife.Options.WallMode
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
- uid: TinyLife.Localization
  commentId: T:TinyLife.Localization
  name: Localization
  nameWithType: Localization
  fullName: TinyLife.Localization
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  isExternal: true
  name: UiSystem
  nameWithType: UiSystem
  fullName: MLEM.Ui.UiSystem
- uid: MLEM.Ui.UiSystem.GlobalScale
  commentId: P:MLEM.Ui.UiSystem.GlobalScale
  isExternal: true
  name: GlobalScale
  nameWithType: UiSystem.GlobalScale
  fullName: MLEM.Ui.UiSystem.GlobalScale
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean)
  commentId: M:TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: PlaySound(SoundEffect, Vector2, float, float, bool, bool)
  nameWithType: Map.PlaySound(SoundEffect, Vector2, float, float, bool, bool)
  fullName: TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect, Microsoft.Xna.Framework.Vector2, float, float, bool, bool)
  nameWithType.vb: Map.PlaySound(SoundEffect, Vector2, Single, Single, Boolean, Boolean)
  fullName.vb: TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect, Microsoft.Xna.Framework.Vector2, Single, Single, Boolean, Boolean)
  name.vb: PlaySound(SoundEffect, Vector2, Single, Single, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean)
    name: PlaySound
  - name: (
  - uid: Microsoft.Xna.Framework.Audio.SoundEffect
    name: SoundEffect
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.PlaySound(Microsoft.Xna.Framework.Audio.SoundEffect,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,System.Boolean,System.Boolean)
    name: PlaySound
  - name: (
  - uid: Microsoft.Xna.Framework.Audio.SoundEffect
    name: SoundEffect
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Options.SoundVolume
  commentId: F:TinyLife.Options.SoundVolume
  name: SoundVolume
  nameWithType: Options.SoundVolume
  fullName: TinyLife.Options.SoundVolume
- uid: TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle,System.Single,System.Single)
  commentId: M:TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle,System.Single,System.Single)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Speak(SpeakStyle, float, float)
  nameWithType: Person.Speak(SpeakStyle, float, float)
  fullName: TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle, float, float)
  nameWithType.vb: Person.Speak(SpeakStyle, Single, Single)
  fullName.vb: TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle, Single, Single)
  name.vb: Speak(SpeakStyle, Single, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle,System.Single,System.Single)
    name: Speak
  - name: (
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.Speak(TinyLife.Objects.SpeakStyle,System.Single,System.Single)
    name: Speak
  - name: (
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.World.Soundscape
  commentId: T:TinyLife.World.Soundscape
  name: Soundscape
  nameWithType: Soundscape
  fullName: TinyLife.World.Soundscape
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  commentId: M:TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  isExternal: true
  name: ToVisualY(Vector2)
  nameWithType: Extensions.ToVisualY(Vector2)
  fullName: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
    name: ToVisualY
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.ToVisualY(Microsoft.Xna.Framework.Vector2)
    name: ToVisualY
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Nullable{MLEM.Misc.Direction2})
  commentId: M:TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Nullable{MLEM.Misc.Direction2})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ApplyCameraRotation(Vector2, bool, Direction2?)
  nameWithType: Map.ApplyCameraRotation(Vector2, bool, Direction2?)
  fullName: TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2, bool, MLEM.Misc.Direction2?)
  nameWithType.vb: Map.ApplyCameraRotation(Vector2, Boolean, Direction2?)
  fullName.vb: TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2, Boolean, MLEM.Misc.Direction2?)
  name.vb: ApplyCameraRotation(Vector2, Boolean, Direction2?)
  spec.csharp:
  - uid: TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Nullable{MLEM.Misc.Direction2})
    name: ApplyCameraRotation
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.ApplyCameraRotation(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Nullable{MLEM.Misc.Direction2})
    name: ApplyCameraRotation
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2,System.Nullable{MLEM.Misc.Direction2})
  commentId: M:TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2,System.Nullable{MLEM.Misc.Direction2})
  isExternal: true
  name: ApplyInverseCameraRotation(Vector2, Direction2?)
  nameWithType: Map.ApplyInverseCameraRotation(Vector2, Direction2?)
  fullName: TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2, MLEM.Misc.Direction2?)
  spec.csharp:
  - uid: TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2,System.Nullable{MLEM.Misc.Direction2})
    name: ApplyInverseCameraRotation
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.ApplyInverseCameraRotation(Microsoft.Xna.Framework.Vector2,System.Nullable{MLEM.Misc.Direction2})
    name: ApplyInverseCameraRotation
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: '?'
  - name: )
- uid: TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  commentId: M:TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  isExternal: true
  name: OnCameraRotationChanged(Direction2, Direction2)
  nameWithType: Map.OnCameraRotationChanged(Direction2, Direction2)
  fullName: TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2, MLEM.Misc.Direction2)
  spec.csharp:
  - uid: TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
    name: OnCameraRotationChanged
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.OnCameraRotationChanged(MLEM.Misc.Direction2,MLEM.Misc.Direction2)
    name: OnCameraRotationChanged
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    isExternal: true
  - name: )
- uid: TinyLife.GameImpl.Map
  commentId: P:TinyLife.GameImpl.Map
  name: Map
  nameWithType: GameImpl.Map
  fullName: TinyLife.GameImpl.Map
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  isExternal: true
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.GameImpl.Camera
  commentId: P:TinyLife.GameImpl.Camera
  name: Camera
  nameWithType: GameImpl.Camera
  fullName: TinyLife.GameImpl.Camera
- uid: TinyLife.Options.Apply(System.Boolean)
  commentId: M:TinyLife.Options.Apply(System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Apply(bool)
  nameWithType: Options.Apply(bool)
  fullName: TinyLife.Options.Apply(bool)
  nameWithType.vb: Options.Apply(Boolean)
  fullName.vb: TinyLife.Options.Apply(Boolean)
  name.vb: Apply(Boolean)
  spec.csharp:
  - uid: TinyLife.Options.Apply(System.Boolean)
    name: Apply
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Options.Apply(System.Boolean)
    name: Apply
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Cameras.Camera.RoundPosition
  commentId: F:MLEM.Cameras.Camera.RoundPosition
  isExternal: true
  name: RoundPosition
  nameWithType: Camera.RoundPosition
  fullName: MLEM.Cameras.Camera.RoundPosition
- uid: TinyLife.World.Map.GetMapSampler
  commentId: M:TinyLife.World.Map.GetMapSampler
  name: GetMapSampler()
  nameWithType: Map.GetMapSampler()
  fullName: TinyLife.World.Map.GetMapSampler()
  spec.csharp:
  - uid: TinyLife.World.Map.GetMapSampler
    name: GetMapSampler
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetMapSampler
    name: GetMapSampler
  - name: (
  - name: )
- uid: TinyLife.Uis.CoveringGroup
  commentId: T:TinyLife.Uis.CoveringGroup
  parent: TinyLife.Uis
  name: CoveringGroup
  nameWithType: CoveringGroup
  fullName: TinyLife.Uis.CoveringGroup
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
- uid: TinyLife.Options.LeftTrigger
  commentId: P:TinyLife.Options.LeftTrigger
  name: LeftTrigger
  nameWithType: Options.LeftTrigger
  fullName: TinyLife.Options.LeftTrigger
- uid: TinyLife.Options.RightTrigger
  commentId: P:TinyLife.Options.RightTrigger
  name: RightTrigger
  nameWithType: Options.RightTrigger
  fullName: TinyLife.Options.RightTrigger
- uid: TinyLife.Options.AButton
  commentId: P:TinyLife.Options.AButton
  name: AButton
  nameWithType: Options.AButton
  fullName: TinyLife.Options.AButton
- uid: TinyLife.Options.BButton
  commentId: P:TinyLife.Options.BButton
  name: BButton
  nameWithType: Options.BButton
  fullName: TinyLife.Options.BButton
- uid: TinyLife.Options.XButton
  commentId: P:TinyLife.Options.XButton
  name: XButton
  nameWithType: Options.XButton
  fullName: TinyLife.Options.XButton
- uid: TinyLife.Options.YButton
  commentId: P:TinyLife.Options.YButton
  name: YButton
  nameWithType: Options.YButton
  fullName: TinyLife.Options.YButton
- uid: TinyLife.Uis.ControlsHint
  commentId: T:TinyLife.Uis.ControlsHint
  parent: TinyLife.Uis
  name: ControlsHint
  nameWithType: ControlsHint
  fullName: TinyLife.Uis.ControlsHint
- uid: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
  commentId: M:TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: GamepadHint(Anchor, Func<Options, Buttons>, Vector2, Vector2?, Func<bool>)
  nameWithType: Menus.GamepadHint(Anchor, Func<Options, Buttons>, Vector2, Vector2?, Func<bool>)
  fullName: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor, System.Func<TinyLife.Options, Microsoft.Xna.Framework.Input.Buttons>, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2?, System.Func<bool>)
  nameWithType.vb: Menus.GamepadHint(Anchor, Func(Of Options, Buttons), Vector2, Vector2?, Func(Of Boolean))
  fullName.vb: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor, System.Func(Of TinyLife.Options, Microsoft.Xna.Framework.Input.Buttons), Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2?, System.Func(Of Boolean))
  name.vb: GamepadHint(Anchor, Func(Of Options, Buttons), Vector2, Vector2?, Func(Of Boolean))
  spec.csharp:
  - uid: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
    name: GamepadHint
  - name: (
  - uid: MLEM.Ui.Anchor
    name: Anchor
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Options
    name: Options
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Buttons
    name: Buttons
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Uis.Menus.GamepadHint(MLEM.Ui.Anchor,System.Func{TinyLife.Options,Microsoft.Xna.Framework.Input.Buttons},Microsoft.Xna.Framework.Vector2,System.Nullable{Microsoft.Xna.Framework.Vector2},System.Func{System.Boolean})
    name: GamepadHint
  - name: (
  - uid: MLEM.Ui.Anchor
    name: Anchor
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Options
    name: Options
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Input.Buttons
    name: Buttons
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Music
  commentId: T:TinyLife.Music
  name: Music
  nameWithType: Music
  fullName: TinyLife.Music
- uid: TinyLife.Music.Occasion.InGame
  commentId: F:TinyLife.Music.Occasion.InGame
  name: InGame
  nameWithType: Music.Occasion.InGame
  fullName: TinyLife.Music.Occasion.InGame
- uid: MLEM.Ui.Elements.Tooltip
  commentId: T:MLEM.Ui.Elements.Tooltip
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Tooltip
  nameWithType: Tooltip
  fullName: MLEM.Ui.Elements.Tooltip
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.Uis.Notifications
  commentId: T:TinyLife.Uis.Notifications
  name: Notifications
  nameWithType: Notifications
  fullName: TinyLife.Uis.Notifications
- uid: TinyLife.Uis.Cursor
  commentId: T:TinyLife.Uis.Cursor
  name: Cursor
  nameWithType: Cursor
  fullName: TinyLife.Uis.Cursor
- uid: TinyLife.Options.Apply*
  commentId: Overload:TinyLife.Options.Apply
  name: Apply
  nameWithType: Options.Apply
  fullName: TinyLife.Options.Apply
- uid: TinyLife.Options.Save*
  commentId: Overload:TinyLife.Options.Save
  name: Save
  nameWithType: Options.Save
  fullName: TinyLife.Options.Save
