### YamlMime:ManagedReference
items:
- uid: TinyLife.Mods.ModLoader
  commentId: T:TinyLife.Mods.ModLoader
  id: ModLoader
  parent: TinyLife.Mods
  children:
  - TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  - TinyLife.Mods.ModLoader.GetModsFolder
  - TinyLife.Mods.ModLoader.LoadedMods
  langs:
  - csharp
  - vb
  name: ModLoader
  nameWithType: ModLoader
  fullName: TinyLife.Mods.ModLoader
  type: Class
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.43.8-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ModLoader
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: The mod loader loads <xref href="TinyLife.Mods.Mod" data-throw-if-not-resolved="false"></xref> instances from the <xref href="TinyLife.Mods.ModLoader.GetModsFolder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class ModLoader
    content.vb: Public Module ModLoader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.Mods.ModLoader.LoadedMods
  commentId: F:TinyLife.Mods.ModLoader.LoadedMods
  id: LoadedMods
  parent: TinyLife.Mods.ModLoader
  langs:
  - csharp
  - vb
  name: LoadedMods
  nameWithType: ModLoader.LoadedMods
  fullName: TinyLife.Mods.ModLoader.LoadedMods
  type: Field
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.43.8-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LoadedMods
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: A collection of all of the <xref href="TinyLife.Mods.ModInfo" data-throw-if-not-resolved="false"></xref> instances of the mods that are currently loaded. The string key is the mod's ID, which is also stored in <xref href="TinyLife.Mods.ModInfo.Id" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly IReadOnlyDictionary<string, ModInfo> LoadedMods
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,TinyLife.Mods.ModInfo}
    content.vb: Public Shared ReadOnly LoadedMods As IReadOnlyDictionary(Of String, ModInfo)
- uid: TinyLife.Mods.ModLoader.GetModsFolder
  commentId: M:TinyLife.Mods.ModLoader.GetModsFolder
  id: GetModsFolder
  parent: TinyLife.Mods.ModLoader
  langs:
  - csharp
  - vb
  name: GetModsFolder()
  nameWithType: ModLoader.GetModsFolder()
  fullName: TinyLife.Mods.ModLoader.GetModsFolder()
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.43.8-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetModsFolder
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: Returns a <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> pointing to the directory that mods should be put into and loaded from
  example: []
  syntax:
    content: public static DirectoryInfo GetModsFolder()
    return:
      type: System.IO.DirectoryInfo
      description: The mod directory
    content.vb: Public Shared Function GetModsFolder() As DirectoryInfo
  overload: TinyLife.Mods.ModLoader.GetModsFolder*
- uid: TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  commentId: M:TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  id: GetExecutingMod(System.Diagnostics.StackFrame[])
  parent: TinyLife.Mods.ModLoader
  langs:
  - csharp
  - vb
  name: GetExecutingMod(StackFrame[])
  nameWithType: ModLoader.GetExecutingMod(StackFrame[])
  fullName: TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.43.8-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetExecutingMod
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 50
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: >-
    Returns the mod that is currently executing code.

    Note that this method works by traversing the current <xref href="System.Diagnostics.StackTrace" data-throw-if-not-resolved="false"></xref>, or a passed <xref href="System.Diagnostics.StackFrame" data-throw-if-not-resolved="false"></xref> array, for an assembly that matches a mod assembly. This means that this method is somewhat of a heuristic, and may not work correctly in all cases.
  example: []
  syntax:
    content: public static ModInfo GetExecutingMod(StackFrame[] frames = null)
    parameters:
    - id: frames
      type: System.Diagnostics.StackFrame[]
      description: The stack frames to use, if using the current <xref href="System.Diagnostics.StackTrace" data-throw-if-not-resolved="false"></xref> is not desired.
    return:
      type: TinyLife.Mods.ModInfo
      description: The <xref href="TinyLife.Mods.ModInfo" data-throw-if-not-resolved="false"></xref> of the currently executing mod, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the base game is currently executing.
    content.vb: Public Shared Function GetExecutingMod(frames As StackFrame() = Nothing) As ModInfo
  overload: TinyLife.Mods.ModLoader.GetExecutingMod*
  nameWithType.vb: ModLoader.GetExecutingMod(StackFrame())
  fullName.vb: TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame())
  name.vb: GetExecutingMod(StackFrame())
references:
- uid: TinyLife.Mods.Mod
  commentId: T:TinyLife.Mods.Mod
  parent: TinyLife.Mods
  href: TinyLife.Mods.Mod.html
  name: Mod
  nameWithType: Mod
  fullName: TinyLife.Mods.Mod
- uid: TinyLife.Mods.ModLoader.GetModsFolder
  commentId: M:TinyLife.Mods.ModLoader.GetModsFolder
  href: TinyLife.Mods.ModLoader.html#TinyLife_Mods_ModLoader_GetModsFolder
  name: GetModsFolder()
  nameWithType: ModLoader.GetModsFolder()
  fullName: TinyLife.Mods.ModLoader.GetModsFolder()
  spec.csharp:
  - uid: TinyLife.Mods.ModLoader.GetModsFolder
    name: GetModsFolder
    href: TinyLife.Mods.ModLoader.html#TinyLife_Mods_ModLoader_GetModsFolder
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.ModLoader.GetModsFolder
    name: GetModsFolder
    href: TinyLife.Mods.ModLoader.html#TinyLife_Mods_ModLoader_GetModsFolder
  - name: (
  - name: )
- uid: TinyLife.Mods
  commentId: N:TinyLife.Mods
  href: TinyLife.html
  name: TinyLife.Mods
  nameWithType: TinyLife.Mods
  fullName: TinyLife.Mods
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Mods
    name: Mods
    href: TinyLife.Mods.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Mods
    name: Mods
    href: TinyLife.Mods.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Mods.ModInfo
  commentId: T:TinyLife.Mods.ModInfo
  parent: TinyLife.Mods
  href: TinyLife.Mods.ModInfo.html
  name: ModInfo
  nameWithType: ModInfo
  fullName: TinyLife.Mods.ModInfo
- uid: TinyLife.Mods.ModInfo.Id
  commentId: F:TinyLife.Mods.ModInfo.Id
  href: TinyLife.Mods.ModInfo.html#TinyLife_Mods_ModInfo_Id
  name: Id
  nameWithType: ModInfo.Id
  fullName: TinyLife.Mods.ModInfo.Id
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,TinyLife.Mods.ModInfo}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,TinyLife.Mods.ModInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, ModInfo>
  nameWithType: IReadOnlyDictionary<string, ModInfo>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, TinyLife.Mods.ModInfo>
  nameWithType.vb: IReadOnlyDictionary(Of String, ModInfo)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, TinyLife.Mods.ModInfo)
  name.vb: IReadOnlyDictionary(Of String, ModInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Mods.ModInfo
    name: ModInfo
    href: TinyLife.Mods.ModInfo.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: TinyLife.Mods.ModLoader.GetModsFolder*
  commentId: Overload:TinyLife.Mods.ModLoader.GetModsFolder
  href: TinyLife.Mods.ModLoader.html#TinyLife_Mods_ModLoader_GetModsFolder
  name: GetModsFolder
  nameWithType: ModLoader.GetModsFolder
  fullName: TinyLife.Mods.ModLoader.GetModsFolder
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Diagnostics.StackTrace
  commentId: T:System.Diagnostics.StackTrace
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stacktrace
  name: StackTrace
  nameWithType: StackTrace
  fullName: System.Diagnostics.StackTrace
- uid: System.Diagnostics.StackFrame
  commentId: T:System.Diagnostics.StackFrame
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame
- uid: TinyLife.Mods.ModLoader.GetExecutingMod*
  commentId: Overload:TinyLife.Mods.ModLoader.GetExecutingMod
  href: TinyLife.Mods.ModLoader.html#TinyLife_Mods_ModLoader_GetExecutingMod_System_Diagnostics_StackFrame___
  name: GetExecutingMod
  nameWithType: ModLoader.GetExecutingMod
  fullName: TinyLife.Mods.ModLoader.GetExecutingMod
- uid: System.Diagnostics.StackFrame[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  name: StackFrame[]
  nameWithType: StackFrame[]
  fullName: System.Diagnostics.StackFrame[]
  nameWithType.vb: StackFrame()
  fullName.vb: System.Diagnostics.StackFrame()
  name.vb: StackFrame()
  spec.csharp:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  - name: (
  - name: )
