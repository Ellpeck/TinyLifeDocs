### YamlMime:ManagedReference
items:
- uid: TinyLife.Mods.ModLoader
  commentId: T:TinyLife.Mods.ModLoader
  id: ModLoader
  parent: TinyLife.Mods
  children:
  - TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  - TinyLife.Mods.ModLoader.GetModsFolder
  - TinyLife.Mods.ModLoader.TryGetModInfo(System.String,TinyLife.Mods.ModInfo@)
  langs:
  - csharp
  - vb
  name: ModLoader
  nameWithType: ModLoader
  fullName: TinyLife.Mods.ModLoader
  type: Class
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ModLoader
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThe mod loader loads <xref href=\"TinyLife.Mods.Mod\" data-throw-if-not-resolved=\"false\"></xref> instances from the <xref href=\"TinyLife.Mods.ModLoader.GetModsFolder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class ModLoader
    content.vb: Public Module ModLoader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TinyLife.Mods.ModLoader.TryGetModInfo(System.String,TinyLife.Mods.ModInfo@)
  commentId: M:TinyLife.Mods.ModLoader.TryGetModInfo(System.String,TinyLife.Mods.ModInfo@)
  id: TryGetModInfo(System.String,TinyLife.Mods.ModInfo@)
  parent: TinyLife.Mods.ModLoader
  langs:
  - csharp
  - vb
  name: TryGetModInfo(string, out ModInfo)
  nameWithType: ModLoader.TryGetModInfo(string, out ModInfo)
  fullName: TinyLife.Mods.ModLoader.TryGetModInfo(string, out TinyLife.Mods.ModInfo)
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TryGetModInfo
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nThis method can be used to gather a <xref href=\"TinyLife.Mods.ModInfo\" data-throw-if-not-resolved=\"false\"></xref> for a mod that is currently loaded with the given id.\nIf no mod with that id is currently loaded, this method returns false and assigns null to <xref href=\"TinyLife.Mods.ModInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static bool TryGetModInfo(string id, out ModInfo info)
    parameters:
    - id: id
      type: System.String
      description: The id of the mod to get
    - id: info
      type: TinyLife.Mods.ModInfo
      description: The info that will be returned about the mod
    return:
      type: System.Boolean
      description: Whether or not the mod was found to be loaded
    content.vb: Public Shared Function TryGetModInfo(id As String, info As ModInfo) As Boolean
  overload: TinyLife.Mods.ModLoader.TryGetModInfo*
  nameWithType.vb: ModLoader.TryGetModInfo(String, ModInfo)
  fullName.vb: TinyLife.Mods.ModLoader.TryGetModInfo(String, TinyLife.Mods.ModInfo)
  name.vb: TryGetModInfo(String, ModInfo)
- uid: TinyLife.Mods.ModLoader.GetModsFolder
  commentId: M:TinyLife.Mods.ModLoader.GetModsFolder
  id: GetModsFolder
  parent: TinyLife.Mods.ModLoader
  langs:
  - csharp
  - vb
  name: GetModsFolder()
  nameWithType: ModLoader.GetModsFolder()
  fullName: TinyLife.Mods.ModLoader.GetModsFolder()
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetModsFolder
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nReturns a <xref href=\"System.IO.DirectoryInfo\" data-throw-if-not-resolved=\"false\"></xref> pointing to the directory that mods should be put into and loaded from\n"
  example: []
  syntax:
    content: public static DirectoryInfo GetModsFolder()
    return:
      type: System.IO.DirectoryInfo
      description: The mod directory
    content.vb: Public Shared Function GetModsFolder() As DirectoryInfo
  overload: TinyLife.Mods.ModLoader.GetModsFolder*
- uid: TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  commentId: M:TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  id: GetExecutingMod(System.Diagnostics.StackFrame[])
  parent: TinyLife.Mods.ModLoader
  langs:
  - csharp
  - vb
  name: GetExecutingMod(StackFrame[])
  nameWithType: ModLoader.GetExecutingMod(StackFrame[])
  fullName: TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame[])
  type: Method
  source:
    remote:
      path: TinyLife/Mods/ModLoader.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetExecutingMod
    path: ../TinyLife/Mods/ModLoader.cs
    startLine: 55
  assemblies:
  - Tiny Life
  namespace: TinyLife.Mods
  summary: "\nReturns the mod that is currently executing code.\nNote that this method works by traversing the current <xref href=\"System.Diagnostics.StackTrace\" data-throw-if-not-resolved=\"false\"></xref>, or a passed <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> array, for an assembly that matches a mod assembly. This means that this method is somewhat of a heuristic, and may not work correctly in all cases.\n"
  example: []
  syntax:
    content: public static ModInfo GetExecutingMod(StackFrame[] frames = null)
    parameters:
    - id: frames
      type: System.Diagnostics.StackFrame[]
      description: The stack frames to use, if using the current <xref href="System.Diagnostics.StackTrace" data-throw-if-not-resolved="false"></xref> is not desired.
    return:
      type: TinyLife.Mods.ModInfo
      description: The <xref href="TinyLife.Mods.ModInfo" data-throw-if-not-resolved="false"></xref> of the currently executing mod, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the base game is currently executing.
    content.vb: Public Shared Function GetExecutingMod(frames As StackFrame() = Nothing) As ModInfo
  overload: TinyLife.Mods.ModLoader.GetExecutingMod*
  nameWithType.vb: ModLoader.GetExecutingMod(StackFrame())
  fullName.vb: TinyLife.Mods.ModLoader.GetExecutingMod(System.Diagnostics.StackFrame())
  name.vb: GetExecutingMod(StackFrame())
references:
- uid: TinyLife.Mods.Mod
  commentId: T:TinyLife.Mods.Mod
  parent: TinyLife.Mods
  name: Mod
  nameWithType: Mod
  fullName: TinyLife.Mods.Mod
- uid: TinyLife.Mods.ModLoader.GetModsFolder
  commentId: M:TinyLife.Mods.ModLoader.GetModsFolder
  name: GetModsFolder()
  nameWithType: ModLoader.GetModsFolder()
  fullName: TinyLife.Mods.ModLoader.GetModsFolder()
  spec.csharp:
  - uid: TinyLife.Mods.ModLoader.GetModsFolder
    name: GetModsFolder
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Mods.ModLoader.GetModsFolder
    name: GetModsFolder
  - name: (
  - name: )
- uid: TinyLife.Mods
  commentId: N:TinyLife.Mods
  name: TinyLife.Mods
  nameWithType: TinyLife.Mods
  fullName: TinyLife.Mods
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Mods
    name: Mods
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Mods
    name: Mods
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Mods.ModInfo
  commentId: T:TinyLife.Mods.ModInfo
  parent: TinyLife.Mods
  name: ModInfo
  nameWithType: ModInfo
  fullName: TinyLife.Mods.ModInfo
- uid: TinyLife.Mods.ModLoader.TryGetModInfo*
  commentId: Overload:TinyLife.Mods.ModLoader.TryGetModInfo
  name: TryGetModInfo
  nameWithType: ModLoader.TryGetModInfo
  fullName: TinyLife.Mods.ModLoader.TryGetModInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: TinyLife.Mods.ModLoader.GetModsFolder*
  commentId: Overload:TinyLife.Mods.ModLoader.GetModsFolder
  name: GetModsFolder
  nameWithType: ModLoader.GetModsFolder
  fullName: TinyLife.Mods.ModLoader.GetModsFolder
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Diagnostics.StackTrace
  commentId: T:System.Diagnostics.StackTrace
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stacktrace
  name: StackTrace
  nameWithType: StackTrace
  fullName: System.Diagnostics.StackTrace
- uid: System.Diagnostics.StackFrame
  commentId: T:System.Diagnostics.StackFrame
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame
- uid: TinyLife.Mods.ModLoader.GetExecutingMod*
  commentId: Overload:TinyLife.Mods.ModLoader.GetExecutingMod
  name: GetExecutingMod
  nameWithType: ModLoader.GetExecutingMod
  fullName: TinyLife.Mods.ModLoader.GetExecutingMod
- uid: System.Diagnostics.StackFrame[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  name: StackFrame[]
  nameWithType: StackFrame[]
  fullName: System.Diagnostics.StackFrame[]
  nameWithType.vb: StackFrame()
  fullName.vb: System.Diagnostics.StackFrame()
  name.vb: StackFrame()
  spec.csharp:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics.stackframe
  - name: (
  - name: )
