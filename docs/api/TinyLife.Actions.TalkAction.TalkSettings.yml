### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.TalkAction.TalkSettings
  commentId: T:TinyLife.Actions.TalkAction.TalkSettings
  id: TalkAction.TalkSettings
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.TalkAction.TalkSettings.#ctor
  - TinyLife.Actions.TalkAction.TalkSettings.CanDoRandomly
  - TinyLife.Actions.TalkAction.TalkSettings.CanExecute
  - TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
  - TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  - TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
  - TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues(TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Single,System.Single)
  - TinyLife.Actions.TalkAction.TalkSettings.FailEmotion
  - TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
  - TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
  - TinyLife.Actions.TalkAction.TalkSettings.GainRomancePercentage
  - TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
  - TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
  - TinyLife.Actions.TalkAction.TalkSettings.LoweredEmotion
  - TinyLife.Actions.TalkAction.TalkSettings.OnFailure
  - TinyLife.Actions.TalkAction.TalkSettings.OnSuccess
  - TinyLife.Actions.TalkAction.TalkSettings.PartnerEmoteCategory
  - TinyLife.Actions.TalkAction.TalkSettings.PartnerSpeakStyle
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredAges
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredJob
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerAges
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerEmployment
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredPersonality
  - TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
  - TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
  - TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
  - TinyLife.Actions.TalkAction.TalkSettings.SuccessEmotion
  - TinyLife.Actions.TalkAction.TalkSettings.TalkMinutes
  - TinyLife.Actions.TalkAction.TalkSettings.Update(TinyLife.Actions.SocialAction,Microsoft.Xna.Framework.GameTime,System.Single)
  langs:
  - csharp
  - vb
  name: TalkAction.TalkSettings
  nameWithType: TalkAction.TalkSettings
  fullName: TinyLife.Actions.TalkAction.TalkSettings
  type: Class
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkSettings
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 173
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAdditional settings for <xref href=\"TinyLife.Actions.TalkAction\" data-throw-if-not-resolved=\"false\"></xref>, used by <xref href=\"TinyLife.Actions.TalkAction.Create(System.String%2cSystem.Func%7bTinyLife.Objects.Person%2cSystem.Single%7d%2cTinyLife.Actions.TalkAction.TalkSettings)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class TalkAction.TalkSettings : GenericDataHolder, IGenericDataHolder'
    content.vb: Public Class TalkAction.TalkSettings Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.TalkAction.TalkSettings.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
  id: FriendshipGain
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: FriendshipGain
  nameWithType: TalkAction.TalkSettings.FriendshipGain
  fullName: TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FriendshipGain
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 179
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe amount of friendship that can be gained at max.\nIf friendship should primiarily be lost through this action (because it is a mean action, for example), set <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance\" data-throw-if-not-resolved=\"false\"></xref> to greater than or equal to 1.\n"
  example: []
  syntax:
    content: public Func<ActionInfo, uint> FriendshipGain
    return:
      type: System.Func{TinyLife.Actions.ActionInfo,System.UInt32}
    content.vb: Public FriendshipGain As Func(Of ActionInfo, UInteger)
- uid: TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
  id: GoBadlyChance
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: GoBadlyChance
  nameWithType: TalkAction.TalkSettings.GoBadlyChance
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoBadlyChance
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 184
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe chance (should be 0 or greater) that this action goes badly and friendship is reduced instead.\nNote that, for very good relationships, this value is multiplied with a value greater than or equal to 0.25. This means that, if an action should go badly with a very high chance, a value greater than 1 should be returned here.\n"
  example: []
  syntax:
    content: public Func<ActionInfo, float> GoBadlyChance
    return:
      type: System.Func{TinyLife.Actions.ActionInfo,System.Single}
    content.vb: Public GoBadlyChance As Func(Of ActionInfo, Single)
- uid: TinyLife.Actions.TalkAction.TalkSettings.TalkMinutes
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.TalkMinutes
  id: TalkMinutes
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: TalkMinutes
  nameWithType: TalkAction.TalkSettings.TalkMinutes
  fullName: TinyLife.Actions.TalkAction.TalkSettings.TalkMinutes
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkMinutes
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 188
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe amount of in-game minutes that this action should last\n"
  example: []
  syntax:
    content: public float TalkMinutes
    return:
      type: System.Single
    content.vb: Public TalkMinutes As Single
- uid: TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
  id: EmoteCategory
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: EmoteCategory
  nameWithType: TalkAction.TalkSettings.EmoteCategory
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EmoteCategory
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 192
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe category of emotes that should be displayed as part of this conversation\n"
  example: []
  syntax:
    content: public EmoteCategory EmoteCategory
    return:
      type: TinyLife.Actions.EmoteCategory
    content.vb: Public EmoteCategory As EmoteCategory
- uid: TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
  id: SpeakStyle
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: SpeakStyle
  nameWithType: TalkAction.TalkSettings.SpeakStyle
  fullName: TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpeakStyle
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 196
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe speak styles to use when talking, can be a combined flag\n"
  example: []
  syntax:
    content: public SpeakStyle SpeakStyle
    return:
      type: TinyLife.Objects.SpeakStyle
    content.vb: Public SpeakStyle As SpeakStyle
- uid: TinyLife.Actions.TalkAction.TalkSettings.PartnerEmoteCategory
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.PartnerEmoteCategory
  id: PartnerEmoteCategory
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: PartnerEmoteCategory
  nameWithType: TalkAction.TalkSettings.PartnerEmoteCategory
  fullName: TinyLife.Actions.TalkAction.TalkSettings.PartnerEmoteCategory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PartnerEmoteCategory
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 201
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe emote categories for the interaction partner to use.\nIf this is not set, <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory\" data-throw-if-not-resolved=\"false\"></xref> is used for the partner as well.\n"
  example: []
  syntax:
    content: public EmoteCategory? PartnerEmoteCategory
    return:
      type: System.Nullable{TinyLife.Actions.EmoteCategory}
    content.vb: Public PartnerEmoteCategory As EmoteCategory?
- uid: TinyLife.Actions.TalkAction.TalkSettings.PartnerSpeakStyle
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.PartnerSpeakStyle
  id: PartnerSpeakStyle
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: PartnerSpeakStyle
  nameWithType: TalkAction.TalkSettings.PartnerSpeakStyle
  fullName: TinyLife.Actions.TalkAction.TalkSettings.PartnerSpeakStyle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PartnerSpeakStyle
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 206
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe speak styles for the interaction partner to use.\nIf this is not set, <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle\" data-throw-if-not-resolved=\"false\"></xref> is used for the partner as well.\n"
  example: []
  syntax:
    content: public SpeakStyle? PartnerSpeakStyle
    return:
      type: System.Nullable{TinyLife.Objects.SpeakStyle}
    content.vb: Public PartnerSpeakStyle As SpeakStyle?
- uid: TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
  id: GainedSkill
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: GainedSkill
  nameWithType: TalkAction.TalkSettings.GainedSkill
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GainedSkill
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 210
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe skill that is gained if this conversation goes well. Higher levels in this skill also reduce the chance of the conversation going badly.\n"
  example: []
  syntax:
    content: public (SkillType Type, int Amount) GainedSkill
    return:
      type: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}
    content.vb: Public GainedSkill As (Type As SkillType, Amount As Integer)
- uid: TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
  id: GainSkillOnFailure
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: GainSkillOnFailure
  nameWithType: TalkAction.TalkSettings.GainSkillOnFailure
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GainSkillOnFailure
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 215
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nWhether the <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure\" data-throw-if-not-resolved=\"false\"></xref> should be gained on failure rather than success.\nThis is useful for skills that are considered &quot;mean&quot;, where the gained skill is mischievious etc.\n"
  example: []
  syntax:
    content: public bool GainSkillOnFailure
    return:
      type: System.Boolean
    content.vb: Public GainSkillOnFailure As Boolean
- uid: TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
  id: RestoredNeed
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RestoredNeed
  nameWithType: TalkAction.TalkSettings.RestoredNeed
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RestoredNeed
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 220
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe need (alongside <xref href=\"TinyLife.NeedType.Social\" data-throw-if-not-resolved=\"false\"></xref>) that is restored during the conversation.\nNote that, if the amount is set to 0, the action&apos;s <xref href=\"TinyLife.Actions.ActionType.AiSettings.SolvedNeeds\" data-throw-if-not-resolved=\"false\"></xref> will still be set.\n"
  example: []
  syntax:
    content: public (NeedType Type, int Amount) RestoredNeed
    return:
      type: System.ValueTuple{TinyLife.NeedType,System.Int32}
    content.vb: Public RestoredNeed As (Type As NeedType, Amount As Integer)
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
  id: RequiredEmotion
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredEmotion
  nameWithType: TalkAction.TalkSettings.RequiredEmotion
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredEmotion
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 225
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.Emotions.EmotionType\" data-throw-if-not-resolved=\"false\"></xref> that is required for this action to be available.\nInternally, this is passed into <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmotionType RequiredEmotion
    return:
      type: TinyLife.Emotions.EmotionType
    content.vb: Public RequiredEmotion As EmotionType
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredPersonality
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredPersonality
  id: RequiredPersonality
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredPersonality
  nameWithType: TalkAction.TalkSettings.RequiredPersonality
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredPersonality
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredPersonality
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 230
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.PersonalityType\" data-throw-if-not-resolved=\"false\"></xref> that is required for this action to be available.\nInternally, this is passed into <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public PersonalityType RequiredPersonality
    return:
      type: TinyLife.PersonalityType
    content.vb: Public RequiredPersonality As PersonalityType
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
  id: RequiredSkill
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredSkill
  nameWithType: TalkAction.TalkSettings.RequiredSkill
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredSkill
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 236
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.Skills.SkillType\" data-throw-if-not-resolved=\"false\"></xref> and level of the skill that is required for this action to become available.\nWhen the required skill is leveled up, this action will also be displayed in the list of now-available actions.\nInternally, this is passed into <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredSkill\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public (SkillType Type, int Level) RequiredSkill
    return:
      type: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}
    content.vb: Public RequiredSkill As (Type As SkillType, Level As Integer)
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredAges
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredAges
  id: RequiredAges
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredAges
  nameWithType: TalkAction.TalkSettings.RequiredAges
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredAges
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredAges
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 241
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.Objects.AgeGroup\" data-throw-if-not-resolved=\"false\"></xref> values that a person can have for this action to become available to them.\nBy default, this value is 0, meaning all ages are allowed.\n"
  example: []
  syntax:
    content: public AgeGroup RequiredAges
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public RequiredAges As AgeGroup
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerAges
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerAges
  id: RequiredPartnerAges
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredPartnerAges
  nameWithType: TalkAction.TalkSettings.RequiredPartnerAges
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerAges
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredPartnerAges
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 247
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.Objects.AgeGroup\" data-throw-if-not-resolved=\"false\"></xref> values that an action partner can have for this action to become available to a person.\nBy default, this value is 0, meaning all ages are allowed.\nInternally, this is passed into <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerAges\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AgeGroup RequiredPartnerAges
    return:
      type: TinyLife.Objects.AgeGroup
    content.vb: Public RequiredPartnerAges As AgeGroup
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredJob
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredJob
  id: RequiredJob
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredJob
  nameWithType: TalkAction.TalkSettings.RequiredJob
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredJob
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredJob
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 252
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.Goals.JobType\" data-throw-if-not-resolved=\"false\"></xref> that is required for this action to be available.\nInternally, this is passed into <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredJob\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public JobType RequiredJob
    return:
      type: TinyLife.Goals.JobType
    content.vb: Public RequiredJob As JobType
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerEmployment
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerEmployment
  id: RequiredPartnerEmployment
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: RequiredPartnerEmployment
  nameWithType: TalkAction.TalkSettings.RequiredPartnerEmployment
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredPartnerEmployment
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RequiredPartnerEmployment
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 258
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.World.LotType\" data-throw-if-not-resolved=\"false\"></xref> that this action&apos;s partner should be employed on (using <xref href=\"TinyLife.World.LotType.Employments\" data-throw-if-not-resolved=\"false\"></xref>) for this action to be available.\nThis is useful for actions like <xref href=\"TinyLife.Actions.ActionType.OrderCoffee\" data-throw-if-not-resolved=\"false\"></xref> which require talking to a <xref href=\"TinyLife.World.LotType.Cafe\" data-throw-if-not-resolved=\"false\"></xref> employee.\nInternally, this is passed into <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerEmployment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public LotType RequiredPartnerEmployment
    return:
      type: TinyLife.World.LotType
    content.vb: Public RequiredPartnerEmployment As LotType
- uid: TinyLife.Actions.TalkAction.TalkSettings.CanExecute
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.CanExecute
  id: CanExecute
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: CanExecute
  nameWithType: TalkAction.TalkSettings.CanExecute
  fullName: TinyLife.Actions.TalkAction.TalkSettings.CanExecute
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanExecute
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 263
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that returns whether this action can currently be executed.\nSee <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> for more information on execution requirements.\n"
  example: []
  syntax:
    content: public ActionType.CanExecuteDelegate CanExecute
    return:
      type: TinyLife.Actions.ActionType.CanExecuteDelegate
    content.vb: Public CanExecute As ActionType.CanExecuteDelegate
- uid: TinyLife.Actions.TalkAction.TalkSettings.FailEmotion
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.FailEmotion
  id: FailEmotion
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: FailEmotion
  nameWithType: TalkAction.TalkSettings.FailEmotion
  fullName: TinyLife.Actions.TalkAction.TalkSettings.FailEmotion
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FailEmotion
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 268
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that is added to the <xref href=\"TinyLife.Actions.SocialAction.IsMain\" data-throw-if-not-resolved=\"false\"></xref> person if this talk action fails.\nThe talk actions fails if the <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance\" data-throw-if-not-resolved=\"false\"></xref> has been randomly reached.\n"
  example: []
  syntax:
    content: public (EmotionModifier Modifier, int Amount, TimeSpan Time) FailEmotion
    return:
      type: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}
    content.vb: Public FailEmotion As (Modifier As EmotionModifier, Amount As Integer, Time As TimeSpan)
- uid: TinyLife.Actions.TalkAction.TalkSettings.SuccessEmotion
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.SuccessEmotion
  id: SuccessEmotion
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: SuccessEmotion
  nameWithType: TalkAction.TalkSettings.SuccessEmotion
  fullName: TinyLife.Actions.TalkAction.TalkSettings.SuccessEmotion
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SuccessEmotion
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 272
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that is added to the <xref href=\"TinyLife.Actions.SocialAction.IsMain\" data-throw-if-not-resolved=\"false\"></xref> person if this talk action succeeds\n"
  example: []
  syntax:
    content: public (EmotionModifier Modifier, int Amount, TimeSpan Time) SuccessEmotion
    return:
      type: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}
    content.vb: Public SuccessEmotion As (Modifier As EmotionModifier, Amount As Integer, Time As TimeSpan)
- uid: TinyLife.Actions.TalkAction.TalkSettings.GainRomancePercentage
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GainRomancePercentage
  id: GainRomancePercentage
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: GainRomancePercentage
  nameWithType: TalkAction.TalkSettings.GainRomancePercentage
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GainRomancePercentage
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GainRomancePercentage
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 278
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA function that returns what percentage (between 0 and 1) of <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain\" data-throw-if-not-resolved=\"false\"></xref> is added to the relationship as <xref href=\"TinyLife.Relationship.RomanceLevel\" data-throw-if-not-resolved=\"false\"></xref> rather than <xref href=\"TinyLife.Relationship.FriendLevel\" data-throw-if-not-resolved=\"false\"></xref>.\nIf an interaction is romantic in nature, this function should return a value greater than 0.\nIf this function is null, 0% of the friendship gain will be romantic.\n"
  example: []
  syntax:
    content: public Func<ActionInfo, float> GainRomancePercentage
    return:
      type: System.Func{TinyLife.Actions.ActionInfo,System.Single}
    content.vb: Public GainRomancePercentage As Func(Of ActionInfo, Single)
- uid: TinyLife.Actions.TalkAction.TalkSettings.LoweredEmotion
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.LoweredEmotion
  id: LoweredEmotion
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: LoweredEmotion
  nameWithType: TalkAction.TalkSettings.LoweredEmotion
  fullName: TinyLife.Actions.TalkAction.TalkSettings.LoweredEmotion
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LoweredEmotion
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 283
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn <xref href=\"TinyLife.Emotions.EmotionType\" data-throw-if-not-resolved=\"false\"></xref> that is lowered when this action is successful for both conversation partners.\nThis uses <xref href=\"TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> internally.\n"
  example: []
  syntax:
    content: public (EmotionType Type, float Amount) LoweredEmotion
    return:
      type: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}
    content.vb: Public LoweredEmotion As (Type As EmotionType, Amount As Single)
- uid: TinyLife.Actions.TalkAction.TalkSettings.OnSuccess
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.OnSuccess
  id: OnSuccess
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: OnSuccess
  nameWithType: TalkAction.TalkSettings.OnSuccess
  fullName: TinyLife.Actions.TalkAction.TalkSettings.OnSuccess
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnSuccess
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 287
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action that is invoked when this talk action succeeds. Note that this is only invoked for the main partner (<xref href=\"TinyLife.Actions.SocialAction.IsMain\" data-throw-if-not-resolved=\"false\"></xref>), and it receives the <xref href=\"TinyLife.Actions.SocialAction.Partner\" data-throw-if-not-resolved=\"false\"></xref> as an additional parameter.\n"
  example: []
  syntax:
    content: public Action<Action, Person> OnSuccess
    return:
      type: System.Action{TinyLife.Actions.Action,TinyLife.Objects.Person}
    content.vb: Public OnSuccess As Action(Of Action, Person)
- uid: TinyLife.Actions.TalkAction.TalkSettings.OnFailure
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.OnFailure
  id: OnFailure
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: OnFailure
  nameWithType: TalkAction.TalkSettings.OnFailure
  fullName: TinyLife.Actions.TalkAction.TalkSettings.OnFailure
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OnFailure
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 291
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAn action that is invoked when this talk action fails. Note that this is only invoked for the main partner (<xref href=\"TinyLife.Actions.SocialAction.IsMain\" data-throw-if-not-resolved=\"false\"></xref>), and it receives the <xref href=\"TinyLife.Actions.SocialAction.Partner\" data-throw-if-not-resolved=\"false\"></xref> as an additional parameter.\n"
  example: []
  syntax:
    content: public Action<Action, Person> OnFailure
    return:
      type: System.Action{TinyLife.Actions.Action,TinyLife.Objects.Person}
    content.vb: Public OnFailure As Action(Of Action, Person)
- uid: TinyLife.Actions.TalkAction.TalkSettings.CanDoRandomly
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.CanDoRandomly
  id: CanDoRandomly
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: CanDoRandomly
  nameWithType: TalkAction.TalkSettings.CanDoRandomly
  fullName: TinyLife.Actions.TalkAction.TalkSettings.CanDoRandomly
  type: Field
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanDoRandomly
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 296
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nWhether this action can be done randomly or not.\nThis value is passed to <xref href=\"TinyLife.Actions.ActionType.AiSettings.CanDoRandomly\" data-throw-if-not-resolved=\"false\"></xref>, and it defaults to true.\n"
  example: []
  syntax:
    content: public bool CanDoRandomly
    return:
      type: System.Boolean
    content.vb: Public CanDoRandomly As Boolean
- uid: TinyLife.Actions.TalkAction.TalkSettings.#ctor
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.#ctor
  id: '#ctor'
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: TalkSettings()
  nameWithType: TalkAction.TalkSettings.TalkSettings()
  fullName: TinyLife.Actions.TalkAction.TalkSettings.TalkSettings()
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 301
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new talk settings instance with the default values.\n"
  example: []
  syntax:
    content: public TalkSettings()
    content.vb: Public Sub New()
  overload: TinyLife.Actions.TalkAction.TalkSettings.#ctor*
  nameWithType.vb: TalkAction.TalkSettings.New()
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.New()
  name.vb: New()
- uid: TinyLife.Actions.TalkAction.TalkSettings.Update(TinyLife.Actions.SocialAction,Microsoft.Xna.Framework.GameTime,System.Single)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.Update(TinyLife.Actions.SocialAction,Microsoft.Xna.Framework.GameTime,System.Single)
  id: Update(TinyLife.Actions.SocialAction,Microsoft.Xna.Framework.GameTime,System.Single)
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: Update(SocialAction, GameTime, float)
  nameWithType: TalkAction.TalkSettings.Update(SocialAction, GameTime, float)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.Update(TinyLife.Actions.SocialAction, Microsoft.Xna.Framework.GameTime, float)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 315
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nUpdates these <xref href=\"TinyLife.Actions.TalkAction.TalkSettings\" data-throw-if-not-resolved=\"false\"></xref> for an action by displaying the relevant emotes and speak sounds using <xref href=\"TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person%2cMicrosoft.Xna.Framework.GameTime%2cSystem.Single%2cTinyLife.Actions.EmoteCategory%2cTinyLife.Objects.SpeakStyle%2cSystem.Nullable%7bTinyLife.Actions.EmoteCategory%7d%2cSystem.Nullable%7bTinyLife.Objects.SpeakStyle%7d%2cSystem.Int32%2cSystem.Single%2cSystem.Single%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> and restoring the <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void Update(SocialAction action, GameTime time, float speedMultiplier)
    parameters:
    - id: action
      type: TinyLife.Actions.SocialAction
      description: The action to update.
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s current time.
    - id: speedMultiplier
      type: System.Single
      description: The current speed multiplier.
    content.vb: Public Overridable Sub Update(action As SocialAction, time As GameTime, speedMultiplier As Single)
  overload: TinyLife.Actions.TalkAction.TalkSettings.Update*
  nameWithType.vb: TalkAction.TalkSettings.Update(SocialAction, GameTime, Single)
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.Update(TinyLife.Actions.SocialAction, Microsoft.Xna.Framework.GameTime, Single)
  name.vb: Update(SocialAction, GameTime, Single)
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  id: EvaluateFully(TinyLife.Actions.SocialAction)
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: EvaluateFully(SocialAction)
  nameWithType: TalkAction.TalkSettings.EvaluateFully(SocialAction)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EvaluateFully
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 327
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nEvaluates these <xref href=\"TinyLife.Actions.TalkAction.TalkSettings\" data-throw-if-not-resolved=\"false\"></xref> fully after a <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref> is completed.\nThis method internally calls <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action%2cTinyLife.Objects.Person%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> using the passed parameters, but additionally evaluates information that can only be evaluated using <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref>, like the <xref href=\"TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)\" data-throw-if-not-resolved=\"false\"></xref> of a relationship.\n"
  example: []
  syntax:
    content: public virtual void EvaluateFully(SocialAction action)
    parameters:
    - id: action
      type: TinyLife.Actions.SocialAction
      description: The action.
    content.vb: Public Overridable Sub EvaluateFully(action As SocialAction)
  overload: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully*
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
  id: EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: EvaluateSimple(Action, Person, float, float)
  nameWithType: TalkAction.TalkSettings.EvaluateSimple(Action, Person, float, float)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action, TinyLife.Objects.Person, float, float)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EvaluateSimple
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 349
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nEvaluates these <xref href=\"TinyLife.Actions.TalkAction.TalkSettings\" data-throw-if-not-resolved=\"false\"></xref> after an <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> has completed.\nThis method causes friendship and romance to be added to the involved people&apos;s <xref href=\"TinyLife.Relationship\" data-throw-if-not-resolved=\"false\"></xref>, adds the <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.GainedSkill\" data-throw-if-not-resolved=\"false\"></xref> etc.\nThis method is automatically called by the main conversation partner (<xref href=\"TinyLife.Actions.SocialAction.IsMain\" data-throw-if-not-resolved=\"false\"></xref>) in <xref href=\"TinyLife.Actions.TalkAction\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual void EvaluateSimple(Action action, Person partner, float completion = 1, float effectiveness = 1)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action.
    - id: partner
      type: TinyLife.Objects.Person
      description: The action partner.
    - id: completion
      type: System.Single
      description: The completion percentage of the action, where 0 is an action that has not been started yet, and 1 is full completion. Defaults to 1.
    - id: effectiveness
      type: System.Single
      description: The effectiveness of the action, where 0 represents a boring, overused action, and 1 represents a unique action. Defaults to 1.
    content.vb: Public Overridable Sub EvaluateSimple(action As Action, partner As Person, completion As Single = 1, effectiveness As Single = 1)
  overload: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple*
  nameWithType.vb: TalkAction.TalkSettings.EvaluateSimple(Action, Person, Single, Single)
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action, TinyLife.Objects.Person, Single, Single)
  name.vb: EvaluateSimple(Action, Person, Single, Single)
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues(TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Single,System.Single)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues(TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Single,System.Single)
  id: EvaluateValues(TinyLife.Actions.ActionInfo,TinyLife.Objects.Person,System.Single,System.Single)
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: EvaluateValues(ActionInfo, Person, float, float)
  nameWithType: TalkAction.TalkSettings.EvaluateValues(ActionInfo, Person, float, float)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues(TinyLife.Actions.ActionInfo, TinyLife.Objects.Person, float, float)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EvaluateValues
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 428
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nEvaluates these <xref href=\"TinyLife.Actions.TalkAction.TalkSettings\" data-throw-if-not-resolved=\"false\"></xref> after an <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> has completed.\nThis method just returns the values that are calculated based on these <xref href=\"TinyLife.Actions.TalkAction.TalkSettings\" data-throw-if-not-resolved=\"false\"></xref>, but does not actually apply them.\nThis method is used by <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action%2cTinyLife.Objects.Person%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual (float RomanceGain, float FriendshipGain, float RomanceLoss, float FriendshipLoss, float GoBadlyChance) EvaluateValues(ActionInfo info, Person partner, float completion = 1, float effectiveness = 1)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: partner
      type: TinyLife.Objects.Person
      description: The action partner.
    - id: completion
      type: System.Single
      description: The completion percentage of the action, where 0 is an action that has not been started yet, and 1 is full completion. Defaults to 1.
    - id: effectiveness
      type: System.Single
      description: The effectiveness of the action, where 0 represents a boring, overused action, and 1 represents a unique action. Defaults to 1.
    return:
      type: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}
      description: The romance gain if the action succeeds, the friendship gain if the action succeeds, the romance loss if the action fails, the friendship loss if the action fails, and the chance that the action will succeed.
    content.vb: Public Overridable Function EvaluateValues(info As ActionInfo, partner As Person, completion As Single = 1, effectiveness As Single = 1) As (RomanceGain As Single, FriendshipGain As Single, RomanceLoss As Single, FriendshipLoss As Single, GoBadlyChance As Single)
  overload: TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues*
  nameWithType.vb: TalkAction.TalkSettings.EvaluateValues(ActionInfo, Person, Single, Single)
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues(TinyLife.Actions.ActionInfo, TinyLife.Objects.Person, Single, Single)
  name.vb: EvaluateValues(ActionInfo, Person, Single, Single)
- uid: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.TalkAction.TalkSettings
  langs:
  - csharp
  - vb
  name: CheckCanExecute(ActionInfo, bool)
  nameWithType: TalkAction.TalkSettings.CheckCanExecute(ActionInfo, bool)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/TalkAction.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CheckCanExecute
    path: ../TinyLife/Actions/TalkAction.cs
    startLine: 512
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nChecks whether this <xref href=\"TinyLife.Actions.TalkAction.TalkSettings\" data-throw-if-not-resolved=\"false\"></xref> instance is currently able to be executed. This method takes <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.CanExecute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> into account.\nNote that this does not take into account the <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion\" data-throw-if-not-resolved=\"false\"></xref>, or any other requirements which are passed to <xref href=\"TinyLife.Actions.ActionType.TypeSettings\" data-throw-if-not-resolved=\"false\"></xref>, which can be validated using <xref href=\"TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType%2cTinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public CanExecuteResult CheckCanExecute(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: The execution validity result
    content.vb: Public Function CheckCanExecute(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute*
  nameWithType.vb: TalkAction.TalkSettings.CheckCanExecute(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CheckCanExecute(ActionInfo, Boolean)
references:
- uid: TinyLife.Actions.TalkAction
  commentId: T:TinyLife.Actions.TalkAction
  name: TalkAction
  nameWithType: TalkAction
  fullName: TinyLife.Actions.TalkAction
- uid: TinyLife.Actions.TalkAction.Create(System.String,System.Func{TinyLife.Objects.Person,System.Single},TinyLife.Actions.TalkAction.TalkSettings)
  commentId: M:TinyLife.Actions.TalkAction.Create(System.String,System.Func{TinyLife.Objects.Person,System.Single},TinyLife.Actions.TalkAction.TalkSettings)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Create(string, Func<Person, float>, TalkSettings)
  nameWithType: TalkAction.Create(string, Func<Person, float>, TalkAction.TalkSettings)
  fullName: TinyLife.Actions.TalkAction.Create(string, System.Func<TinyLife.Objects.Person, float>, TinyLife.Actions.TalkAction.TalkSettings)
  nameWithType.vb: TalkAction.Create(String, Func(Of Person, Single), TalkAction.TalkSettings)
  fullName.vb: TinyLife.Actions.TalkAction.Create(String, System.Func(Of TinyLife.Objects.Person, Single), TinyLife.Actions.TalkAction.TalkSettings)
  name.vb: Create(String, Func(Of Person, Single), TalkSettings)
  spec.csharp:
  - uid: TinyLife.Actions.TalkAction.Create(System.String,System.Func{TinyLife.Objects.Person,System.Single},TinyLife.Actions.TalkAction.TalkSettings)
    name: Create
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.TalkAction.Create(System.String,System.Func{TinyLife.Objects.Person,System.Single},TinyLife.Actions.TalkAction.TalkSettings)
    name: Create
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  - name: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: GenericDataHolder.SetData(string, object)
  fullName: MLEM.Misc.GenericDataHolder.SetData(string, object)
  nameWithType.vb: GenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<TalkSettings>(TalkSettings)
  nameWithType: Extensions.JsonCopy<TalkAction.TalkSettings>(TalkAction.TalkSettings)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.TalkAction.TalkSettings>(TinyLife.Actions.TalkAction.TalkSettings)
  nameWithType.vb: Extensions.JsonCopy(Of TalkAction.TalkSettings)(TalkAction.TalkSettings)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.TalkAction.TalkSettings)(TinyLife.Actions.TalkAction.TalkSettings)
  name.vb: JsonCopy(Of TalkSettings)(TalkSettings)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.TalkAction.TalkSettings)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.TalkAction.TalkSettings)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  - name: )
  - name: (
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
  name: GoBadlyChance
  nameWithType: TalkAction.TalkSettings.GoBadlyChance
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GoBadlyChance
- uid: System.Func{TinyLife.Actions.ActionInfo,System.UInt32}
  commentId: T:System.Func{TinyLife.Actions.ActionInfo,System.UInt32}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ActionInfo, uint>
  nameWithType: Func<ActionInfo, uint>
  fullName: System.Func<TinyLife.Actions.ActionInfo, uint>
  nameWithType.vb: Func(Of ActionInfo, UInteger)
  fullName.vb: System.Func(Of TinyLife.Actions.ActionInfo, UInteger)
  name.vb: Func(Of ActionInfo, UInteger)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{TinyLife.Actions.ActionInfo,System.Single}
  commentId: T:System.Func{TinyLife.Actions.ActionInfo,System.Single}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ActionInfo, float>
  nameWithType: Func<ActionInfo, float>
  fullName: System.Func<TinyLife.Actions.ActionInfo, float>
  nameWithType.vb: Func(Of ActionInfo, Single)
  fullName.vb: System.Func(Of TinyLife.Actions.ActionInfo, Single)
  name.vb: Func(Of ActionInfo, Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife.Actions.EmoteCategory
  commentId: T:TinyLife.Actions.EmoteCategory
  parent: TinyLife.Actions
  name: EmoteCategory
  nameWithType: EmoteCategory
  fullName: TinyLife.Actions.EmoteCategory
- uid: TinyLife.Objects.SpeakStyle
  commentId: T:TinyLife.Objects.SpeakStyle
  parent: TinyLife.Objects
  name: SpeakStyle
  nameWithType: SpeakStyle
  fullName: TinyLife.Objects.SpeakStyle
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
  name: EmoteCategory
  nameWithType: TalkAction.TalkSettings.EmoteCategory
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EmoteCategory
- uid: System.Nullable{TinyLife.Actions.EmoteCategory}
  commentId: T:System.Nullable{TinyLife.Actions.EmoteCategory}
  parent: System
  definition: System.Nullable`1
  name: EmoteCategory?
  nameWithType: EmoteCategory?
  fullName: TinyLife.Actions.EmoteCategory?
  spec.csharp:
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  spec.vb:
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
  name: SpeakStyle
  nameWithType: TalkAction.TalkSettings.SpeakStyle
  fullName: TinyLife.Actions.TalkAction.TalkSettings.SpeakStyle
- uid: System.Nullable{TinyLife.Objects.SpeakStyle}
  commentId: T:System.Nullable{TinyLife.Objects.SpeakStyle}
  parent: System
  definition: System.Nullable`1
  name: SpeakStyle?
  nameWithType: SpeakStyle?
  fullName: TinyLife.Objects.SpeakStyle?
  spec.csharp:
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  spec.vb:
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
- uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}
  commentId: T:System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  name: (SkillType Type, int Level)
  nameWithType: (SkillType Type, int Level)
  fullName: (TinyLife.Skills.SkillType Type, int Level)
  nameWithType.vb: (Type As SkillType, Level As Integer)
  fullName.vb: (Type As TinyLife.Skills.SkillType, Level As Integer)
  name.vb: (Type As SkillType, Level As Integer)
  spec.csharp:
  - name: (
  - uid: TinyLife.Skills.SkillType
    name: SkillType
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.level
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Skills.SkillType
    name: SkillType
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Skills.SkillType,System.Int32}.Level
    name: Level
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.skills.skilltype,system.int32-.level
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
  name: GainSkillOnFailure
  nameWithType: TalkAction.TalkSettings.GainSkillOnFailure
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GainSkillOnFailure
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.NeedType.Social
  commentId: F:TinyLife.NeedType.Social
  name: Social
  nameWithType: NeedType.Social
  fullName: TinyLife.NeedType.Social
- uid: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  commentId: F:TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
  name: SolvedNeeds
  nameWithType: ActionType.AiSettings.SolvedNeeds
  fullName: TinyLife.Actions.ActionType.AiSettings.SolvedNeeds
- uid: System.ValueTuple{TinyLife.NeedType,System.Int32}
  commentId: T:System.ValueTuple{TinyLife.NeedType,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.int32-.type
  name: (NeedType Type, int Amount)
  nameWithType: (NeedType Type, int Amount)
  fullName: (TinyLife.NeedType Type, int Amount)
  nameWithType.vb: (Type As NeedType, Amount As Integer)
  fullName.vb: (Type As TinyLife.NeedType, Amount As Integer)
  name.vb: (Type As NeedType, Amount As Integer)
  spec.csharp:
  - name: (
  - uid: TinyLife.NeedType
    name: NeedType
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.int32-.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Int32}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.int32-.amount
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.NeedType,System.Int32}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.int32-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.NeedType
    name: NeedType
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.NeedType,System.Int32}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.needtype,system.int32-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TinyLife.Emotions.EmotionType
  commentId: T:TinyLife.Emotions.EmotionType
  parent: TinyLife.Emotions
  name: EmotionType
  nameWithType: EmotionType
  fullName: TinyLife.Emotions.EmotionType
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion
  name: RequiredEmotion
  nameWithType: ActionType.TypeSettings.RequiredEmotion
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality
  name: RequiredPersonality
  nameWithType: ActionType.TypeSettings.RequiredPersonality
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredSkill
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredSkill
  name: RequiredSkill
  nameWithType: ActionType.TypeSettings.RequiredSkill
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredSkill
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
- uid: TinyLife.Objects.AgeGroup
  commentId: T:TinyLife.Objects.AgeGroup
  parent: TinyLife.Objects
  name: AgeGroup
  nameWithType: AgeGroup
  fullName: TinyLife.Objects.AgeGroup
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerAges
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerAges
  name: RequiredPartnerAges
  nameWithType: ActionType.TypeSettings.RequiredPartnerAges
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerAges
- uid: TinyLife.Goals.JobType
  commentId: T:TinyLife.Goals.JobType
  parent: TinyLife.Goals
  name: JobType
  nameWithType: JobType
  fullName: TinyLife.Goals.JobType
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredJob
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredJob
  name: RequiredJob
  nameWithType: ActionType.TypeSettings.RequiredJob
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredJob
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
- uid: TinyLife.World.LotType
  commentId: T:TinyLife.World.LotType
  parent: TinyLife.World
  name: LotType
  nameWithType: LotType
  fullName: TinyLife.World.LotType
- uid: TinyLife.World.LotType.Employments
  commentId: P:TinyLife.World.LotType.Employments
  name: Employments
  nameWithType: LotType.Employments
  fullName: TinyLife.World.LotType.Employments
- uid: TinyLife.Actions.ActionType.OrderCoffee
  commentId: F:TinyLife.Actions.ActionType.OrderCoffee
  name: OrderCoffee
  nameWithType: ActionType.OrderCoffee
  fullName: TinyLife.Actions.ActionType.OrderCoffee
- uid: TinyLife.World.LotType.Cafe
  commentId: F:TinyLife.World.LotType.Cafe
  name: Cafe
  nameWithType: LotType.Cafe
  fullName: TinyLife.World.LotType.Cafe
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerEmployment
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerEmployment
  name: RequiredPartnerEmployment
  nameWithType: ActionType.TypeSettings.RequiredPartnerEmployment
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredPartnerEmployment
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: CheckCanExecute(ActionInfo, bool)
  nameWithType: TalkAction.TalkSettings.CheckCanExecute(ActionInfo, bool)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: TalkAction.TalkSettings.CheckCanExecute(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CheckCanExecute(ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CheckCanExecute
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CheckCanExecute
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
- uid: TinyLife.Emotions.EmotionModifier
  commentId: T:TinyLife.Emotions.EmotionModifier
  parent: TinyLife.Emotions
  name: EmotionModifier
  nameWithType: EmotionModifier
  fullName: TinyLife.Emotions.EmotionModifier
- uid: TinyLife.Actions.SocialAction.IsMain
  commentId: P:TinyLife.Actions.SocialAction.IsMain
  parent: TinyLife.Actions.SocialAction
  name: IsMain
  nameWithType: SocialAction.IsMain
  fullName: TinyLife.Actions.SocialAction.IsMain
- uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}
  commentId: T:System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.modifier
  name: (EmotionModifier Modifier, int Amount, TimeSpan Time)
  nameWithType: (EmotionModifier Modifier, int Amount, TimeSpan Time)
  fullName: (TinyLife.Emotions.EmotionModifier Modifier, int Amount, System.TimeSpan Time)
  nameWithType.vb: (Modifier As EmotionModifier, Amount As Integer, Time As TimeSpan)
  fullName.vb: (Modifier As TinyLife.Emotions.EmotionModifier, Amount As Integer, Time As System.TimeSpan)
  name.vb: (Modifier As EmotionModifier, Amount As Integer, Time As TimeSpan)
  spec.csharp:
  - name: (
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}.Modifier
    name: Modifier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.modifier
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.amount
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}.Time
    name: Time
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.time
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}.Modifier
    name: Modifier
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.modifier
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Emotions.EmotionModifier
    name: EmotionModifier
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionModifier,System.Int32,System.TimeSpan}.Time
    name: Time
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotionmodifier,system.int32,system.timespan-.time
  - name: " "
  - name: As
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Actions.SocialAction
  commentId: T:TinyLife.Actions.SocialAction
  parent: TinyLife.Actions
  name: SocialAction
  nameWithType: SocialAction
  fullName: TinyLife.Actions.SocialAction
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
  name: FriendshipGain
  nameWithType: TalkAction.TalkSettings.FriendshipGain
  fullName: TinyLife.Actions.TalkAction.TalkSettings.FriendshipGain
- uid: TinyLife.Relationship.RomanceLevel
  commentId: P:TinyLife.Relationship.RomanceLevel
  name: RomanceLevel
  nameWithType: Relationship.RomanceLevel
  fullName: TinyLife.Relationship.RomanceLevel
- uid: TinyLife.Relationship.FriendLevel
  commentId: P:TinyLife.Relationship.FriendLevel
  name: FriendLevel
  nameWithType: Relationship.FriendLevel
  fullName: TinyLife.Relationship.FriendLevel
- uid: TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType,System.Single,System.Single)
  commentId: M:TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType,System.Single,System.Single)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: LowerEmotion(EmotionType, float, float)
  nameWithType: Person.LowerEmotion(EmotionType, float, float)
  fullName: TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType, float, float)
  nameWithType.vb: Person.LowerEmotion(EmotionType, Single, Single)
  fullName.vb: TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType, Single, Single)
  name.vb: LowerEmotion(EmotionType, Single, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType,System.Single,System.Single)
    name: LowerEmotion
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.LowerEmotion(TinyLife.Emotions.EmotionType,System.Single,System.Single)
    name: LowerEmotion
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}
  commentId: T:System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.single-.type
  name: (EmotionType Type, float Amount)
  nameWithType: (EmotionType Type, float Amount)
  fullName: (TinyLife.Emotions.EmotionType Type, float Amount)
  nameWithType.vb: (Type As EmotionType, Amount As Single)
  fullName.vb: (Type As TinyLife.Emotions.EmotionType, Amount As Single)
  name.vb: (Type As EmotionType, Amount As Single)
  spec.csharp:
  - name: (
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.single-.type
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.single-.amount
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}.Type
    name: Type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.single-.type
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Emotions.EmotionType,System.Single}.Amount
    name: Amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.emotions.emotiontype,system.single-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.SocialAction.Partner
  commentId: P:TinyLife.Actions.SocialAction.Partner
  parent: TinyLife.Actions.SocialAction
  name: Partner
  nameWithType: SocialAction.Partner
  fullName: TinyLife.Actions.SocialAction.Partner
- uid: System.Action{TinyLife.Actions.Action,TinyLife.Objects.Person}
  commentId: T:System.Action{TinyLife.Actions.Action,TinyLife.Objects.Person}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<Action, Person>
  nameWithType: Action<Action, Person>
  fullName: System.Action<TinyLife.Actions.Action, TinyLife.Objects.Person>
  nameWithType.vb: Action(Of Action, Person)
  fullName.vb: System.Action(Of TinyLife.Actions.Action, TinyLife.Objects.Person)
  name.vb: Action(Of Action, Person)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  commentId: F:TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
  name: CanDoRandomly
  nameWithType: ActionType.AiSettings.CanDoRandomly
  fullName: TinyLife.Actions.ActionType.AiSettings.CanDoRandomly
- uid: TinyLife.Actions.TalkAction.TalkSettings.#ctor*
  commentId: Overload:TinyLife.Actions.TalkAction.TalkSettings.#ctor
  name: TalkSettings
  nameWithType: TalkAction.TalkSettings.TalkSettings
  fullName: TinyLife.Actions.TalkAction.TalkSettings.TalkSettings
  nameWithType.vb: TalkAction.TalkSettings.New
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.New
  name.vb: New
- uid: TinyLife.Actions.TalkAction.TalkSettings
  commentId: T:TinyLife.Actions.TalkAction.TalkSettings
  parent: TinyLife.Actions
  name: TalkAction.TalkSettings
  nameWithType: TalkAction.TalkSettings
  fullName: TinyLife.Actions.TalkAction.TalkSettings
  spec.csharp:
  - uid: TinyLife.Actions.TalkAction
    name: TalkAction
  - name: .
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
  spec.vb:
  - uid: TinyLife.Actions.TalkAction
    name: TalkAction
  - name: .
  - uid: TinyLife.Actions.TalkAction.TalkSettings
    name: TalkSettings
- uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
  commentId: M:TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: SpeakInConversation(Person, GameTime, float, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, int, float, float, float, float)
  nameWithType: Action.SpeakInConversation(Person, GameTime, float, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, int, float, float, float, float)
  fullName: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, float, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, TinyLife.Actions.EmoteCategory?, TinyLife.Objects.SpeakStyle?, int, float, float, float, float)
  nameWithType.vb: Action.SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, Integer, Single, Single, Single, Single)
  fullName.vb: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person, Microsoft.Xna.Framework.GameTime, Single, TinyLife.Actions.EmoteCategory, TinyLife.Objects.SpeakStyle, TinyLife.Actions.EmoteCategory?, TinyLife.Objects.SpeakStyle?, Integer, Single, Single, Single, Single)
  name.vb: SpeakInConversation(Person, GameTime, Single, EmoteCategory, SpeakStyle, EmoteCategory?, SpeakStyle?, Integer, Single, Single, Single, Single)
  spec.csharp:
  - uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
    name: SpeakInConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.SpeakInConversation(TinyLife.Objects.Person,Microsoft.Xna.Framework.GameTime,System.Single,TinyLife.Actions.EmoteCategory,TinyLife.Objects.SpeakStyle,System.Nullable{TinyLife.Actions.EmoteCategory},System.Nullable{TinyLife.Objects.SpeakStyle},System.Int32,System.Single,System.Single,System.Single,System.Single)
    name: SpeakInConversation
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.EmoteCategory
    name: EmoteCategory
  - name: '?'
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.SpeakStyle
    name: SpeakStyle
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
  name: RestoredNeed
  nameWithType: TalkAction.TalkSettings.RestoredNeed
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RestoredNeed
- uid: TinyLife.Actions.TalkAction.TalkSettings.Update*
  commentId: Overload:TinyLife.Actions.TalkAction.TalkSettings.Update
  name: Update
  nameWithType: TalkAction.TalkSettings.Update
  fullName: TinyLife.Actions.TalkAction.TalkSettings.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: EvaluateSimple(Action, Person, float, float)
  nameWithType: TalkAction.TalkSettings.EvaluateSimple(Action, Person, float, float)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action, TinyLife.Objects.Person, float, float)
  nameWithType.vb: TalkAction.TalkSettings.EvaluateSimple(Action, Person, Single, Single)
  fullName.vb: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action, TinyLife.Objects.Person, Single, Single)
  name.vb: EvaluateSimple(Action, Person, Single, Single)
  spec.csharp:
  - uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
    name: EvaluateSimple
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple(TinyLife.Actions.Action,TinyLife.Objects.Person,System.Single,System.Single)
    name: EvaluateSimple
  - name: (
  - uid: TinyLife.Actions.Action
    name: Action
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  commentId: M:TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  name: GetSocialEffectiveness(ActionType)
  nameWithType: Relationship.GetSocialEffectiveness(ActionType)
  fullName: TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
  spec.csharp:
  - uid: TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
    name: GetSocialEffectiveness
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
  spec.vb:
  - uid: TinyLife.Relationship.GetSocialEffectiveness(TinyLife.Actions.ActionType)
    name: GetSocialEffectiveness
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully*
  commentId: Overload:TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully
  name: EvaluateFully
  nameWithType: TalkAction.TalkSettings.EvaluateFully
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully
- uid: TinyLife.Relationship
  commentId: T:TinyLife.Relationship
  parent: TinyLife
  name: Relationship
  nameWithType: Relationship
  fullName: TinyLife.Relationship
- uid: TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
  name: GainedSkill
  nameWithType: TalkAction.TalkSettings.GainedSkill
  fullName: TinyLife.Actions.TalkAction.TalkSettings.GainedSkill
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple*
  commentId: Overload:TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple
  name: EvaluateSimple
  nameWithType: TalkAction.TalkSettings.EvaluateSimple
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateSimple
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  commentId: M:TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  name: EvaluateFully(SocialAction)
  nameWithType: TalkAction.TalkSettings.EvaluateFully(SocialAction)
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
  spec.csharp:
  - uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
    name: EvaluateFully
  - name: (
  - uid: TinyLife.Actions.SocialAction
    name: SocialAction
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateFully(TinyLife.Actions.SocialAction)
    name: EvaluateFully
  - name: (
  - uid: TinyLife.Actions.SocialAction
    name: SocialAction
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues*
  commentId: Overload:TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues
  name: EvaluateValues
  nameWithType: TalkAction.TalkSettings.EvaluateValues
  fullName: TinyLife.Actions.TalkAction.TalkSettings.EvaluateValues
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`5
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float RomanceGain, float FriendshipGain, float RomanceLoss, float FriendshipLoss, float GoBadlyChance)
  nameWithType: (float RomanceGain, float FriendshipGain, float RomanceLoss, float FriendshipLoss, float GoBadlyChance)
  fullName: (float RomanceGain, float FriendshipGain, float RomanceLoss, float FriendshipLoss, float GoBadlyChance)
  nameWithType.vb: (RomanceGain As Single, FriendshipGain As Single, RomanceLoss As Single, FriendshipLoss As Single, GoBadlyChance As Single)
  fullName.vb: (RomanceGain As Single, FriendshipGain As Single, RomanceLoss As Single, FriendshipLoss As Single, GoBadlyChance As Single)
  name.vb: (RomanceGain As Single, FriendshipGain As Single, RomanceLoss As Single, FriendshipLoss As Single, GoBadlyChance As Single)
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.RomanceGain
    name: RomanceGain
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.romancegain
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.FriendshipGain
    name: FriendshipGain
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.friendshipgain
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.RomanceLoss
    name: RomanceLoss
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.romanceloss
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.FriendshipLoss
    name: FriendshipLoss
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.friendshiploss
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.GoBadlyChance
    name: GoBadlyChance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.gobadlychance
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.RomanceGain
    name: RomanceGain
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.romancegain
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.FriendshipGain
    name: FriendshipGain
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.friendshipgain
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.RomanceLoss
    name: RomanceLoss
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.romanceloss
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.FriendshipLoss
    name: FriendshipLoss
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.friendshiploss
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single,System.Single}.GoBadlyChance
    name: GoBadlyChance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single,system.single,system.single-.gobadlychance
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`5
  commentId: T:System.ValueTuple`5
  name: (T1, T2, T3, T4, T5)
  nameWithType: (T1, T2, T3, T4, T5)
  fullName: (T1, T2, T3, T4, T5)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: ','
  - name: " "
  - name: T5
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.CanExecute
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.CanExecute
  name: CanExecute
  nameWithType: TalkAction.TalkSettings.CanExecute
  fullName: TinyLife.Actions.TalkAction.TalkSettings.CanExecute
- uid: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: CanDoSocialAction(ActionInfo, bool)
  nameWithType: ActionType.CanDoSocialAction(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: ActionType.CanDoSocialAction(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanDoSocialAction(ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanDoSocialAction
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanDoSocialAction
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
  name: RequiredSkill
  nameWithType: TalkAction.TalkSettings.RequiredSkill
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredSkill
- uid: TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
  commentId: F:TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
  name: RequiredEmotion
  nameWithType: TalkAction.TalkSettings.RequiredEmotion
  fullName: TinyLife.Actions.TalkAction.TalkSettings.RequiredEmotion
- uid: TinyLife.Actions.ActionType.TypeSettings
  commentId: T:TinyLife.Actions.ActionType.TypeSettings
  parent: TinyLife.Actions
  name: ActionType.TypeSettings
  nameWithType: ActionType.TypeSettings
  fullName: TinyLife.Actions.ActionType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
- uid: TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: CanExecuteAction(ActionType, ActionInfo, bool)
  nameWithType: Person.CanExecuteAction(ActionType, ActionInfo, bool)
  fullName: TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: Person.CanExecuteAction(ActionType, ActionInfo, Boolean)
  fullName.vb: TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType, TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanExecuteAction(ActionType, ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanExecuteAction
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.CanExecuteAction(TinyLife.Actions.ActionType,TinyLife.Actions.ActionInfo,System.Boolean)
    name: CanExecuteAction
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute*
  commentId: Overload:TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute
  name: CheckCanExecute
  nameWithType: TalkAction.TalkSettings.CheckCanExecute
  fullName: TinyLife.Actions.TalkAction.TalkSettings.CheckCanExecute
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
