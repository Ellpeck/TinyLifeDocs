### YamlMime:ManagedReference
items:
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  id: ColorScheme
  parent: TinyLife.Utilities
  children:
  - TinyLife.Utilities.ColorScheme.Bricks
  - TinyLife.Utilities.ColorScheme.CardboardBoxes
  - TinyLife.Utilities.ColorScheme.Ceramics
  - TinyLife.Utilities.ColorScheme.Combine(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  - TinyLife.Utilities.ColorScheme.Count
  - TinyLife.Utilities.ColorScheme.Create(System.Object[])
  - TinyLife.Utilities.ColorScheme.Dirt
  - TinyLife.Utilities.ColorScheme.DirtPaths
  - TinyLife.Utilities.ColorScheme.DyedWood
  - TinyLife.Utilities.ColorScheme.Eyes
  - TinyLife.Utilities.ColorScheme.Flannel
  - TinyLife.Utilities.ColorScheme.GetEnumerator
  - TinyLife.Utilities.ColorScheme.Grays
  - TinyLife.Utilities.ColorScheme.Hair
  - TinyLife.Utilities.ColorScheme.Item(System.Int32)
  - TinyLife.Utilities.ColorScheme.Jewelery
  - TinyLife.Utilities.ColorScheme.Khakis
  - TinyLife.Utilities.ColorScheme.Load(MLEM.Textures.TextureRegion)
  - TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)
  - TinyLife.Utilities.ColorScheme.Modern
  - TinyLife.Utilities.ColorScheme.ModernShort
  - TinyLife.Utilities.ColorScheme.MutedPastels
  - TinyLife.Utilities.ColorScheme.op_Addition(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  - TinyLife.Utilities.ColorScheme.Pastel
  - TinyLife.Utilities.ColorScheme.Plants
  - TinyLife.Utilities.ColorScheme.RetroAppliances
  - TinyLife.Utilities.ColorScheme.RetroTv
  - TinyLife.Utilities.ColorScheme.Rugs
  - TinyLife.Utilities.ColorScheme.SimpleWood
  - TinyLife.Utilities.ColorScheme.Skin
  - TinyLife.Utilities.ColorScheme.System#Collections#IEnumerable#GetEnumerator
  - TinyLife.Utilities.ColorScheme.Thatch
  - TinyLife.Utilities.ColorScheme.Transparent
  - TinyLife.Utilities.ColorScheme.TrashCanTypes
  - TinyLife.Utilities.ColorScheme.WarmDark
  - TinyLife.Utilities.ColorScheme.Water
  - TinyLife.Utilities.ColorScheme.White
  langs:
  - csharp
  - vb
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
  type: Class
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ColorScheme
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nA color scheme is a list of <xref href=\"Microsoft.Xna.Framework.Color\" data-throw-if-not-resolved=\"false\"></xref> instances with which an object can be colored.\nBy default, a set of color schemes exist (defined in this class), but new ones can be created easily using <xref href=\"TinyLife.Utilities.ColorScheme.Create(System.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ColorScheme : IReadOnlyCollection<Color>, IEnumerable<Color>, IEnumerable'
    content.vb: >-
      Public Class ColorScheme
          Implements IReadOnlyCollection(Of Color), IEnumerable(Of Color), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}
  - System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Utilities.ColorScheme.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Utilities.ColorScheme.Transparent
  commentId: F:TinyLife.Utilities.ColorScheme.Transparent
  id: Transparent
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Transparent
  nameWithType: ColorScheme.Transparent
  fullName: TinyLife.Utilities.ColorScheme.Transparent
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Transparent
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Transparent
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Transparent As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.White
  commentId: F:TinyLife.Utilities.ColorScheme.White
  id: White
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: White
  nameWithType: ColorScheme.White
  fullName: TinyLife.Utilities.ColorScheme.White
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: White
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme White
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly White As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.SimpleWood
  commentId: F:TinyLife.Utilities.ColorScheme.SimpleWood
  id: SimpleWood
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: SimpleWood
  nameWithType: ColorScheme.SimpleWood
  fullName: TinyLife.Utilities.ColorScheme.SimpleWood
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SimpleWood
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme SimpleWood
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly SimpleWood As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Ceramics
  commentId: F:TinyLife.Utilities.ColorScheme.Ceramics
  id: Ceramics
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Ceramics
  nameWithType: ColorScheme.Ceramics
  fullName: TinyLife.Utilities.ColorScheme.Ceramics
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Ceramics
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Ceramics
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Ceramics As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Pastel
  commentId: F:TinyLife.Utilities.ColorScheme.Pastel
  id: Pastel
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Pastel
  nameWithType: ColorScheme.Pastel
  fullName: TinyLife.Utilities.ColorScheme.Pastel
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Pastel
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Pastel
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Pastel As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Plants
  commentId: F:TinyLife.Utilities.ColorScheme.Plants
  id: Plants
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Plants
  nameWithType: ColorScheme.Plants
  fullName: TinyLife.Utilities.ColorScheme.Plants
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Plants
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Plants
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Plants As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Modern
  commentId: F:TinyLife.Utilities.ColorScheme.Modern
  id: Modern
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Modern
  nameWithType: ColorScheme.Modern
  fullName: TinyLife.Utilities.ColorScheme.Modern
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Modern
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Modern
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Modern As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Grays
  commentId: F:TinyLife.Utilities.ColorScheme.Grays
  id: Grays
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Grays
  nameWithType: ColorScheme.Grays
  fullName: TinyLife.Utilities.ColorScheme.Grays
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Grays
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 29
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Grays
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Grays As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Bricks
  commentId: F:TinyLife.Utilities.ColorScheme.Bricks
  id: Bricks
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Bricks
  nameWithType: ColorScheme.Bricks
  fullName: TinyLife.Utilities.ColorScheme.Bricks
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Bricks
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Bricks
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Bricks As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.WarmDark
  commentId: F:TinyLife.Utilities.ColorScheme.WarmDark
  id: WarmDark
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: WarmDark
  nameWithType: ColorScheme.WarmDark
  fullName: TinyLife.Utilities.ColorScheme.WarmDark
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WarmDark
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme WarmDark
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly WarmDark As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Skin
  commentId: F:TinyLife.Utilities.ColorScheme.Skin
  id: Skin
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Skin
  nameWithType: ColorScheme.Skin
  fullName: TinyLife.Utilities.ColorScheme.Skin
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Skin
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Skin
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Skin As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Hair
  commentId: F:TinyLife.Utilities.ColorScheme.Hair
  id: Hair
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Hair
  nameWithType: ColorScheme.Hair
  fullName: TinyLife.Utilities.ColorScheme.Hair
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Hair
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Hair
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Hair As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Eyes
  commentId: F:TinyLife.Utilities.ColorScheme.Eyes
  id: Eyes
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Eyes
  nameWithType: ColorScheme.Eyes
  fullName: TinyLife.Utilities.ColorScheme.Eyes
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Eyes
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Eyes
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Eyes As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Flannel
  commentId: F:TinyLife.Utilities.ColorScheme.Flannel
  id: Flannel
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Flannel
  nameWithType: ColorScheme.Flannel
  fullName: TinyLife.Utilities.ColorScheme.Flannel
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Flannel
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Flannel
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Flannel As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.RetroAppliances
  commentId: F:TinyLife.Utilities.ColorScheme.RetroAppliances
  id: RetroAppliances
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: RetroAppliances
  nameWithType: ColorScheme.RetroAppliances
  fullName: TinyLife.Utilities.ColorScheme.RetroAppliances
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RetroAppliances
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme RetroAppliances
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly RetroAppliances As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.RetroTv
  commentId: F:TinyLife.Utilities.ColorScheme.RetroTv
  id: RetroTv
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: RetroTv
  nameWithType: ColorScheme.RetroTv
  fullName: TinyLife.Utilities.ColorScheme.RetroTv
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RetroTv
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 37
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme RetroTv
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly RetroTv As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Dirt
  commentId: F:TinyLife.Utilities.ColorScheme.Dirt
  id: Dirt
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Dirt
  nameWithType: ColorScheme.Dirt
  fullName: TinyLife.Utilities.ColorScheme.Dirt
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Dirt
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Dirt
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Dirt As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Khakis
  commentId: F:TinyLife.Utilities.ColorScheme.Khakis
  id: Khakis
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Khakis
  nameWithType: ColorScheme.Khakis
  fullName: TinyLife.Utilities.ColorScheme.Khakis
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Khakis
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Khakis
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Khakis As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Rugs
  commentId: F:TinyLife.Utilities.ColorScheme.Rugs
  id: Rugs
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Rugs
  nameWithType: ColorScheme.Rugs
  fullName: TinyLife.Utilities.ColorScheme.Rugs
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Rugs
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Rugs
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Rugs As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Thatch
  commentId: F:TinyLife.Utilities.ColorScheme.Thatch
  id: Thatch
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Thatch
  nameWithType: ColorScheme.Thatch
  fullName: TinyLife.Utilities.ColorScheme.Thatch
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Thatch
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Thatch
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Thatch As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.MutedPastels
  commentId: F:TinyLife.Utilities.ColorScheme.MutedPastels
  id: MutedPastels
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: MutedPastels
  nameWithType: ColorScheme.MutedPastels
  fullName: TinyLife.Utilities.ColorScheme.MutedPastels
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MutedPastels
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 42
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme MutedPastels
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly MutedPastels As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.DirtPaths
  commentId: F:TinyLife.Utilities.ColorScheme.DirtPaths
  id: DirtPaths
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: DirtPaths
  nameWithType: ColorScheme.DirtPaths
  fullName: TinyLife.Utilities.ColorScheme.DirtPaths
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DirtPaths
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 43
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme DirtPaths
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly DirtPaths As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.ModernShort
  commentId: F:TinyLife.Utilities.ColorScheme.ModernShort
  id: ModernShort
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: ModernShort
  nameWithType: ColorScheme.ModernShort
  fullName: TinyLife.Utilities.ColorScheme.ModernShort
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ModernShort
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 44
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme ModernShort
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly ModernShort As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.CardboardBoxes
  commentId: F:TinyLife.Utilities.ColorScheme.CardboardBoxes
  id: CardboardBoxes
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: CardboardBoxes
  nameWithType: ColorScheme.CardboardBoxes
  fullName: TinyLife.Utilities.ColorScheme.CardboardBoxes
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CardboardBoxes
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme CardboardBoxes
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly CardboardBoxes As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Jewelery
  commentId: F:TinyLife.Utilities.ColorScheme.Jewelery
  id: Jewelery
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Jewelery
  nameWithType: ColorScheme.Jewelery
  fullName: TinyLife.Utilities.ColorScheme.Jewelery
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Jewelery
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 46
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Jewelery
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Jewelery As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Water
  commentId: F:TinyLife.Utilities.ColorScheme.Water
  id: Water
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Water
  nameWithType: ColorScheme.Water
  fullName: TinyLife.Utilities.ColorScheme.Water
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Water
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme Water
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly Water As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.DyedWood
  commentId: F:TinyLife.Utilities.ColorScheme.DyedWood
  id: DyedWood
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: DyedWood
  nameWithType: ColorScheme.DyedWood
  fullName: TinyLife.Utilities.ColorScheme.DyedWood
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DyedWood
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme DyedWood
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly DyedWood As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.TrashCanTypes
  commentId: F:TinyLife.Utilities.ColorScheme.TrashCanTypes
  id: TrashCanTypes
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: TrashCanTypes
  nameWithType: ColorScheme.TrashCanTypes
  fullName: TinyLife.Utilities.ColorScheme.TrashCanTypes
  type: Field
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TrashCanTypes
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 49
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: public static readonly ColorScheme TrashCanTypes
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared ReadOnly TrashCanTypes As ColorScheme
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.Item(System.Int32)
  commentId: P:TinyLife.Utilities.ColorScheme.Item(System.Int32)
  id: Item(System.Int32)
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ColorScheme.Item[Int32]
  fullName: TinyLife.Utilities.ColorScheme.Item[System.Int32]
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: this[]
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 56
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nReturns the <xref href=\"Microsoft.Xna.Framework.Color\" data-throw-if-not-resolved=\"false\"></xref> at the given index in this color scheme\n"
  example: []
  syntax:
    content: public Color this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The index to return the color for
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public ReadOnly Property Item(index As Integer) As Color
  overload: TinyLife.Utilities.ColorScheme.Item*
  nameWithType.vb: ColorScheme.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TinyLife.Utilities.ColorScheme.Item(System.Int32)
  name.vb: Item(Int32)
- uid: TinyLife.Utilities.ColorScheme.Count
  commentId: P:TinyLife.Utilities.ColorScheme.Count
  id: Count
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ColorScheme.Count
  fullName: TinyLife.Utilities.ColorScheme.Count
  type: Property
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Count
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 60
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nStores the amount of <xref href=\"Microsoft.Xna.Framework.Color\" data-throw-if-not-resolved=\"false\"></xref> instances that are part of this color scheme\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: TinyLife.Utilities.ColorScheme.Count*
  implements:
  - System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)
  commentId: M:TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)
  id: MergeWith(TinyLife.Utilities.ColorScheme)
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: MergeWith(ColorScheme)
  nameWithType: ColorScheme.MergeWith(ColorScheme)
  fullName: TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MergeWith
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 76
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nMerges this color scheme with the colors of the given <xref href=\"TinyLife.Utilities.ColorScheme\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method essentially adds the colors from <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> to this color scheme&apos;s colors.\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> color scheme is not affected by this action.\n"
  example: []
  syntax:
    content: public void MergeWith(ColorScheme other)
    parameters:
    - id: other
      type: TinyLife.Utilities.ColorScheme
      description: The color scheme to merge this color scheme with.
    content.vb: Public Sub MergeWith(other As ColorScheme)
  overload: TinyLife.Utilities.ColorScheme.MergeWith*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Utilities.ColorScheme.GetEnumerator
  commentId: M:TinyLife.Utilities.ColorScheme.GetEnumerator
  id: GetEnumerator
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ColorScheme.GetEnumerator()
  fullName: TinyLife.Utilities.ColorScheme.GetEnumerator()
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetEnumerator
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 81
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  example: []
  syntax:
    content: public IEnumerator<Color> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Color}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Color)
  overload: TinyLife.Utilities.ColorScheme.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TinyLife.Utilities.ColorScheme.System#Collections#IEnumerable#GetEnumerator
  commentId: M:TinyLife.Utilities.ColorScheme.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ColorScheme.IEnumerable.GetEnumerator()
  fullName: TinyLife.Utilities.ColorScheme.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 85
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: TinyLife.Utilities.ColorScheme.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ColorScheme.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: TinyLife.Utilities.ColorScheme.Create(System.Object[])
  commentId: M:TinyLife.Utilities.ColorScheme.Create(System.Object[])
  id: Create(System.Object[])
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Create(Object[])
  nameWithType: ColorScheme.Create(Object[])
  fullName: TinyLife.Utilities.ColorScheme.Create(System.Object[])
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Create
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nCreate a new color scheme from the given colors.\nThe colors passed can be of type <xref href=\"Microsoft.Xna.Framework.Color\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static ColorScheme Create(params object[] objs)
    parameters:
    - id: objs
      type: System.Object[]
      description: The colors that this color scheme should contain
    return:
      type: TinyLife.Utilities.ColorScheme
      description: A new color scheme with the given colors
    content.vb: Public Shared Function Create(ParamArray objs As Object()) As ColorScheme
  overload: TinyLife.Utilities.ColorScheme.Create*
  nameWithType.vb: ColorScheme.Create(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TinyLife.Utilities.ColorScheme.Create(System.Object())
  name.vb: Create(Object())
- uid: TinyLife.Utilities.ColorScheme.Load(MLEM.Textures.TextureRegion)
  commentId: M:TinyLife.Utilities.ColorScheme.Load(MLEM.Textures.TextureRegion)
  id: Load(MLEM.Textures.TextureRegion)
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Load(TextureRegion)
  nameWithType: ColorScheme.Load(TextureRegion)
  fullName: TinyLife.Utilities.ColorScheme.Load(MLEM.Textures.TextureRegion)
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Load
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 112
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nLoads a color scheme from the given texture region.\nEach pixel on the texture region is evaluated and any pixels with an alpha value greater than zero are added to the color scheme.\n"
  example: []
  syntax:
    content: public static ColorScheme Load(TextureRegion region)
    parameters:
    - id: region
      type: MLEM.Textures.TextureRegion
      description: The texture region to turn into a color scheme
    return:
      type: TinyLife.Utilities.ColorScheme
      description: A color scheme with the colors from the texture region
    content.vb: Public Shared Function Load(region As TextureRegion) As ColorScheme
  overload: TinyLife.Utilities.ColorScheme.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Utilities.ColorScheme.Combine(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  commentId: M:TinyLife.Utilities.ColorScheme.Combine(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  id: Combine(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Combine(ColorScheme, ColorScheme)
  nameWithType: ColorScheme.Combine(ColorScheme, ColorScheme)
  fullName: TinyLife.Utilities.ColorScheme.Combine(TinyLife.Utilities.ColorScheme, TinyLife.Utilities.ColorScheme)
  type: Method
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Combine
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 134
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  summary: "\nCombines two color schemes into a new color scheme that contains all of the colors from both schemes.\nIf both color scheme contain any of the same colors, only one of them will be added to the new color scheme.\nNote that the <xref href=\"TinyLife.Utilities.ColorScheme.op_Addition(TinyLife.Utilities.ColorScheme%2cTinyLife.Utilities.ColorScheme)\" data-throw-if-not-resolved=\"false\"></xref> operator can also be used for this purpose.\nAlso note that a given color scheme can be modified permanently using <xref href=\"TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static ColorScheme Combine(ColorScheme left, ColorScheme right)
    parameters:
    - id: left
      type: TinyLife.Utilities.ColorScheme
      description: The left color scheme
    - id: right
      type: TinyLife.Utilities.ColorScheme
      description: The right color scheme
    return:
      type: TinyLife.Utilities.ColorScheme
      description: A new, combined color scheme
    content.vb: Public Shared Function Combine(left As ColorScheme, right As ColorScheme) As ColorScheme
  overload: TinyLife.Utilities.ColorScheme.Combine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TinyLife.Utilities.ColorScheme.op_Addition(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  commentId: M:TinyLife.Utilities.ColorScheme.op_Addition(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  id: op_Addition(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  parent: TinyLife.Utilities.ColorScheme
  langs:
  - csharp
  - vb
  name: Addition(ColorScheme, ColorScheme)
  nameWithType: ColorScheme.Addition(ColorScheme, ColorScheme)
  fullName: TinyLife.Utilities.ColorScheme.Addition(TinyLife.Utilities.ColorScheme, TinyLife.Utilities.ColorScheme)
  type: Operator
  source:
    remote:
      path: TinyLife/Utilities/ColorScheme.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: op_Addition
    path: ../TinyLife/Utilities/ColorScheme.cs
    startLine: 143
  assemblies:
  - Tiny Life
  namespace: TinyLife.Utilities
  example: []
  syntax:
    content: public static ColorScheme operator +(ColorScheme left, ColorScheme right)
    parameters:
    - id: left
      type: TinyLife.Utilities.ColorScheme
    - id: right
      type: TinyLife.Utilities.ColorScheme
    return:
      type: TinyLife.Utilities.ColorScheme
    content.vb: Public Shared Operator +(left As ColorScheme, right As ColorScheme) As ColorScheme
  overload: TinyLife.Utilities.ColorScheme.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: TinyLife.Utilities.ColorScheme.Create(System.Object[])
  commentId: M:TinyLife.Utilities.ColorScheme.Create(System.Object[])
  isExternal: true
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Color>
  nameWithType: IReadOnlyCollection<Color>
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.Xna.Framework.Color>
  nameWithType.vb: IReadOnlyCollection(Of Color)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.Xna.Framework.Color)
  name.vb: IReadOnlyCollection(Of Color)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Color>
  nameWithType: IEnumerable<Color>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Color>
  nameWithType.vb: IEnumerable(Of Color)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Color)
  name.vb: IEnumerable(Of Color)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.ColorScheme.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ColorScheme>()
  nameWithType: Extensions.JsonCopy<ColorScheme>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Utilities.ColorScheme>()
  nameWithType.vb: Extensions.JsonCopy(Of ColorScheme)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Utilities.ColorScheme)()
  name.vb: JsonCopy(Of ColorScheme)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<ColorScheme>
    nameWithType: Extensions.JsonCopy<ColorScheme>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Utilities.ColorScheme>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of ColorScheme)
    nameWithType: Extensions.JsonCopy(Of ColorScheme)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Utilities.ColorScheme)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities.ColorScheme
  commentId: T:TinyLife.Utilities.ColorScheme
  parent: TinyLife.Utilities
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: TinyLife.Utilities.ColorScheme
- uid: TinyLife.Utilities.ColorScheme.Item*
  commentId: Overload:TinyLife.Utilities.ColorScheme.Item
  name: Item
  nameWithType: ColorScheme.Item
  fullName: TinyLife.Utilities.ColorScheme.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TinyLife.Utilities.ColorScheme.Count*
  commentId: Overload:TinyLife.Utilities.ColorScheme.Count
  name: Count
  nameWithType: ColorScheme.Count
  fullName: TinyLife.Utilities.ColorScheme.Count
- uid: System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{Microsoft.Xna.Framework.Color}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  nameWithType: IReadOnlyCollection<Color>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<Microsoft.Xna.Framework.Color>.Count
  nameWithType.vb: IReadOnlyCollection(Of Color).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Microsoft.Xna.Framework.Color).Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: true
  name: Count
  nameWithType: IReadOnlyCollection<T>.Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
- uid: TinyLife.Utilities.ColorScheme.MergeWith*
  commentId: Overload:TinyLife.Utilities.ColorScheme.MergeWith
  name: MergeWith
  nameWithType: ColorScheme.MergeWith
  fullName: TinyLife.Utilities.ColorScheme.MergeWith
- uid: TinyLife.Utilities.ColorScheme.GetEnumerator*
  commentId: Overload:TinyLife.Utilities.ColorScheme.GetEnumerator
  name: GetEnumerator
  nameWithType: ColorScheme.GetEnumerator
  fullName: TinyLife.Utilities.ColorScheme.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Color}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Color>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Color>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Color).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Color).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<Color>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Color>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of Color).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Color).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Color}
  commentId: T:System.Collections.Generic.IEnumerator{Microsoft.Xna.Framework.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Color>
  nameWithType: IEnumerator<Color>
  fullName: System.Collections.Generic.IEnumerator<Microsoft.Xna.Framework.Color>
  nameWithType.vb: IEnumerator(Of Color)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Microsoft.Xna.Framework.Color)
  name.vb: IEnumerator(Of Color)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    nameWithType: Color
    fullName: Microsoft.Xna.Framework.Color
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.ColorScheme.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:TinyLife.Utilities.ColorScheme.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ColorScheme.IEnumerable.GetEnumerator
  fullName: TinyLife.Utilities.ColorScheme.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ColorScheme.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.UInt32
  commentId: T:System.UInt32
  isExternal: true
- uid: TinyLife.Utilities.ColorScheme.Create*
  commentId: Overload:TinyLife.Utilities.ColorScheme.Create
  name: Create
  nameWithType: ColorScheme.Create
  fullName: TinyLife.Utilities.ColorScheme.Create
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TinyLife.Utilities.ColorScheme.Load*
  commentId: Overload:TinyLife.Utilities.ColorScheme.Load
  name: Load
  nameWithType: ColorScheme.Load
  fullName: TinyLife.Utilities.ColorScheme.Load
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  isExternal: true
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  isExternal: true
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
- uid: TinyLife.Utilities.ColorScheme.op_Addition(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  commentId: M:TinyLife.Utilities.ColorScheme.op_Addition(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  isExternal: true
- uid: TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)
  commentId: M:TinyLife.Utilities.ColorScheme.MergeWith(TinyLife.Utilities.ColorScheme)
  isExternal: true
- uid: TinyLife.Utilities.ColorScheme.Combine*
  commentId: Overload:TinyLife.Utilities.ColorScheme.Combine
  name: Combine
  nameWithType: ColorScheme.Combine
  fullName: TinyLife.Utilities.ColorScheme.Combine
- uid: TinyLife.Utilities.ColorScheme.Combine(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  commentId: M:TinyLife.Utilities.ColorScheme.Combine(TinyLife.Utilities.ColorScheme,TinyLife.Utilities.ColorScheme)
  isExternal: true
- uid: TinyLife.Utilities.ColorScheme.op_Addition*
  commentId: Overload:TinyLife.Utilities.ColorScheme.op_Addition
  name: Addition
  nameWithType: ColorScheme.Addition
  fullName: TinyLife.Utilities.ColorScheme.Addition
