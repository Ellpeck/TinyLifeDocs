### YamlMime:ManagedReference
items:
- uid: TinyLife.Tools.RemoveTool
  commentId: T:TinyLife.Tools.RemoveTool
  id: RemoveTool
  parent: TinyLife.Tools
  children:
  - TinyLife.Tools.RemoveTool.#ctor
  - TinyLife.Tools.RemoveTool.CanUndoRedo
  - TinyLife.Tools.RemoveTool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - TinyLife.Tools.RemoveTool.GetMouseCursor
  - TinyLife.Tools.RemoveTool.PlayDestroySound
  - TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.RemoveTool.RemoveNonGroundTile(Microsoft.Xna.Framework.Point,System.Int32,TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.RemoveTool.RemoveRoof(TinyLife.World.Roof,TinyLife.Tools.UndoableAction,System.Nullable{Microsoft.Xna.Framework.Rectangle})
  - TinyLife.Tools.RemoveTool.RemoveStairs(TinyLife.World.Stairs,TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.RemoveTool.RemoveWall(TinyLife.Objects.WallLike,TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject(System.Object)
  - TinyLife.Tools.RemoveTool.SpawnDestroyParticles(MLEM.Misc.RectangleF,System.Single,System.Single,System.ValueTuple{MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color}[])
  - TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  - TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.WallLike)
  - TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  - TinyLife.Tools.RemoveTool.Update(Microsoft.Xna.Framework.GameTime)
  langs:
  - csharp
  - vb
  name: RemoveTool
  nameWithType: RemoveTool
  fullName: TinyLife.Tools.RemoveTool
  type: Class
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RemoveTool
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nA tool is a type of game mode that is currently active.\nTools are split up into the <xref href=\"TinyLife.Tools.Tool.PlayModeTool\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Tools.Tool.BuildTools\" data-throw-if-not-resolved=\"false\"></xref>, the latter of which holds all tools that can be found in the build menu.\n"
  example: []
  syntax:
    content: 'public class RemoveTool : Tool'
    content.vb: Public Class RemoveTool Inherits Tool
  inheritance:
  - System.Object
  - TinyLife.Tools.Tool
  inheritedMembers:
  - TinyLife.Tools.Tool.RemoveTool
  - TinyLife.Tools.Tool.MoveTool
  - TinyLife.Tools.Tool.PlayModeTool
  - TinyLife.Tools.Tool.BuildTools
  - TinyLife.Tools.Tool.SelectedObject
  - TinyLife.Tools.Tool.SelectedWall
  - TinyLife.Tools.Tool.SelectedRoof
  - TinyLife.Tools.Tool.SelectedStairs
  - TinyLife.Tools.Tool.IsRotateCwPressed
  - TinyLife.Tools.Tool.IsRotateCcwPressed
  - TinyLife.Tools.Tool.IsCopyPressed
  - TinyLife.Tools.Tool.OnOpened
  - TinyLife.Tools.Tool.OnClosed
  - TinyLife.Tools.Tool.OnUpdate
  - TinyLife.Tools.Tool.OnDraw
  - TinyLife.Tools.Tool.OnInitBuildModeUi
  - TinyLife.Tools.Tool.Input
  - TinyLife.Tools.Tool.Map
  - TinyLife.Tools.Tool.Money
  - TinyLife.Tools.Tool.CurrentFloor
  - TinyLife.Tools.Tool.Texture
  - TinyLife.Tools.Tool.DisplayAsTab
  - TinyLife.Tools.Tool.MousePos
  - TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  - TinyLife.Tools.Tool.Opened
  - TinyLife.Tools.Tool.Closed
  - TinyLife.Tools.Tool.CanSwitchGameModes
  - TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  - TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  - TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme[],System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean})
  - TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,System.Action{System.Int32},System.Func{System.Int32,System.Boolean})
  - TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Tools.RemoveTool.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Tools.RemoveTool.#ctor
  commentId: M:TinyLife.Tools.RemoveTool.#ctor
  id: '#ctor'
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: RemoveTool()
  nameWithType: RemoveTool.RemoveTool()
  fullName: TinyLife.Tools.RemoveTool.RemoveTool()
  type: Constructor
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 28
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  example: []
  syntax:
    content: public RemoveTool()
    content.vb: Public Sub New()
  overload: TinyLife.Tools.RemoveTool.#ctor*
  nameWithType.vb: RemoveTool.New()
  fullName.vb: TinyLife.Tools.RemoveTool.New()
  name.vb: New()
- uid: TinyLife.Tools.RemoveTool.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.Tools.RemoveTool.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: RemoveTool.Update(GameTime)
  fullName: TinyLife.Tools.RemoveTool.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nThis method is called every update frame for the <xref href=\"TinyLife.GameImpl.CurrentTool\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, this method updates the <xref href=\"TinyLife.Tools.Tool.MousePos\" data-throw-if-not-resolved=\"false\"></xref> and invokes <xref href=\"TinyLife.Tools.Tool.OnUpdate\" data-throw-if-not-resolved=\"false\"></xref>, and also manages the <xref href=\"TinyLife.Tools.UndoRedoStack\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override void Update(GameTime time)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    content.vb: Public Overrides Sub Update(time As GameTime)
  overridden: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime)
  overload: TinyLife.Tools.RemoveTool.Update*
- uid: TinyLife.Tools.RemoveTool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Tools.RemoveTool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch)
  nameWithType: RemoveTool.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Tools.RemoveTool.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Draw
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nThis method is called every draw frame for the <xref href=\"TinyLife.GameImpl.CurrentTool\" data-throw-if-not-resolved=\"false\"></xref>.\nNote that this method is only called if the mouse is not hovering over any ui elements.\nBy default, this method invokes <xref href=\"TinyLife.Tools.Tool.OnDraw\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override void Draw(GameTime time, SpriteBatch batch)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch used for drawing
    content.vb: Public Overrides Sub Draw(time As GameTime, batch As SpriteBatch)
  overridden: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  overload: TinyLife.Tools.RemoveTool.Draw*
- uid: TinyLife.Tools.RemoveTool.GetMouseCursor
  commentId: M:TinyLife.Tools.RemoveTool.GetMouseCursor
  id: GetMouseCursor
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: GetMouseCursor()
  nameWithType: RemoveTool.GetMouseCursor()
  fullName: TinyLife.Tools.RemoveTool.GetMouseCursor()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetMouseCursor
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 62
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nReturns the <xref href=\"TinyLife.Uis.CursorType\" data-throw-if-not-resolved=\"false\"></xref> that this tool should currently display.\nBy default, <xref href=\"TinyLife.Uis.CursorType.Default\" data-throw-if-not-resolved=\"false\"></xref> is returned.\n"
  example: []
  syntax:
    content: public override CursorType GetMouseCursor()
    return:
      type: TinyLife.Uis.CursorType
      description: The cursor type
    content.vb: Public Overrides Function GetMouseCursor() As CursorType
  overridden: TinyLife.Tools.Tool.GetMouseCursor
  overload: TinyLife.Tools.RemoveTool.GetMouseCursor*
- uid: TinyLife.Tools.RemoveTool.CanUndoRedo
  commentId: M:TinyLife.Tools.RemoveTool.CanUndoRedo
  id: CanUndoRedo
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: CanUndoRedo()
  nameWithType: RemoveTool.CanUndoRedo()
  fullName: TinyLife.Tools.RemoveTool.CanUndoRedo()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanUndoRedo
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 67
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nReturns whether or not the <xref href=\"TinyLife.Tools.UndoRedoStack\" data-throw-if-not-resolved=\"false\"></xref> can currently operate and thus, whether the <xref href=\"TinyLife.Tools.UndoRedoStack.Undo\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"TinyLife.Tools.UndoRedoStack.Redo\" data-throw-if-not-resolved=\"false\"></xref> actions can be called.\n"
  example: []
  syntax:
    content: public override bool CanUndoRedo()
    return:
      type: System.Boolean
      description: Whether the undo or redo commands can be used right now.
    content.vb: Public Overrides Function CanUndoRedo() As Boolean
  overridden: TinyLife.Tools.Tool.CanUndoRedo
  overload: TinyLife.Tools.RemoveTool.CanUndoRedo*
- uid: TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject(System.Object)
  commentId: M:TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject(System.Object)
  id: ShouldHighlightSelectedObject(System.Object)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: ShouldHighlightSelectedObject(object)
  nameWithType: RemoveTool.ShouldHighlightSelectedObject(object)
  fullName: TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject(object)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShouldHighlightSelectedObject
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 72
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nWhether or not the <xref href=\"TinyLife.Tools.Tool.SelectedObject\" data-throw-if-not-resolved=\"false\"></xref> should currently have a white highlight around it.\nThis method defaults to return true if <xref href=\"TinyLife.GameImpl.IsCursorOnUi\" data-throw-if-not-resolved=\"false\"></xref> is false.\n"
  example: []
  syntax:
    content: public override bool ShouldHighlightSelectedObject(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The selected object, which can be a <xref href="TinyLife.Objects.MapObject" data-throw-if-not-resolved="false"></xref> or a <xref href="TinyLife.Objects.WallLike" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: Whether or not the selected object should be highlighted
    content.vb: Public Overrides Function ShouldHighlightSelectedObject(obj As Object) As Boolean
  overridden: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
  overload: TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject*
  nameWithType.vb: RemoveTool.ShouldHighlightSelectedObject(Object)
  fullName.vb: TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject(Object)
  name.vb: ShouldHighlightSelectedObject(Object)
- uid: TinyLife.Tools.RemoveTool.RemoveRoof(TinyLife.World.Roof,TinyLife.Tools.UndoableAction,System.Nullable{Microsoft.Xna.Framework.Rectangle})
  commentId: M:TinyLife.Tools.RemoveTool.RemoveRoof(TinyLife.World.Roof,TinyLife.Tools.UndoableAction,System.Nullable{Microsoft.Xna.Framework.Rectangle})
  id: RemoveRoof(TinyLife.World.Roof,TinyLife.Tools.UndoableAction,System.Nullable{Microsoft.Xna.Framework.Rectangle})
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: RemoveRoof(Roof, UndoableAction, Rectangle?)
  nameWithType: RemoveTool.RemoveRoof(Roof, UndoableAction, Rectangle?)
  fullName: TinyLife.Tools.RemoveTool.RemoveRoof(TinyLife.World.Roof, TinyLife.Tools.UndoableAction, Microsoft.Xna.Framework.Rectangle?)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RemoveRoof
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 149
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nRemoves the given roof from the world, additionally removing any <xref href=\"TinyLife.Objects.ObjectCategory.CeilingHanging\" data-throw-if-not-resolved=\"false\"></xref> furniture below it and returning the money for the objects\n"
  example: []
  syntax:
    content: public static void RemoveRoof(Roof roof, UndoableAction action, Rectangle? newRoof = null)
    parameters:
    - id: roof
      type: TinyLife.World.Roof
      description: The roof to remove
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    - id: newRoof
      type: System.Nullable{Microsoft.Xna.Framework.Rectangle}
      description: The area of a roof that replaces this one, or null if this roof is just being removed without a replacement.
    content.vb: Public Shared Sub RemoveRoof(roof As Roof, action As UndoableAction, newRoof As Rectangle? = Nothing)
  overload: TinyLife.Tools.RemoveTool.RemoveRoof*
- uid: TinyLife.Tools.RemoveTool.RemoveStairs(TinyLife.World.Stairs,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.RemoveTool.RemoveStairs(TinyLife.World.Stairs,TinyLife.Tools.UndoableAction)
  id: RemoveStairs(TinyLife.World.Stairs,TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: RemoveStairs(Stairs, UndoableAction)
  nameWithType: RemoveTool.RemoveStairs(Stairs, UndoableAction)
  fullName: TinyLife.Tools.RemoveTool.RemoveStairs(TinyLife.World.Stairs, TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RemoveStairs
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 172
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nRemoves the given stairs from the world and refunds the appropriate amount of money.\n"
  example: []
  syntax:
    content: public static void RemoveStairs(Stairs stairs, UndoableAction action)
    parameters:
    - id: stairs
      type: TinyLife.World.Stairs
      description: The stairs to remove.
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    content.vb: Public Shared Sub RemoveStairs(stairs As Stairs, action As UndoableAction)
  overload: TinyLife.Tools.RemoveTool.RemoveStairs*
- uid: TinyLife.Tools.RemoveTool.RemoveWall(TinyLife.Objects.WallLike,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.RemoveTool.RemoveWall(TinyLife.Objects.WallLike,TinyLife.Tools.UndoableAction)
  id: RemoveWall(TinyLife.Objects.WallLike,TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: RemoveWall(WallLike, UndoableAction)
  nameWithType: RemoveTool.RemoveWall(WallLike, UndoableAction)
  fullName: TinyLife.Tools.RemoveTool.RemoveWall(TinyLife.Objects.WallLike, TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RemoveWall
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 187
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nRemoves the given wall from the world, additionally removing any hanging <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> and adding the required amount of <xref href=\"TinyLife.Tools.Tool.Money\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static void RemoveWall(WallLike wall, UndoableAction action)
    parameters:
    - id: wall
      type: TinyLife.Objects.WallLike
      description: The wall to remove
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    content.vb: Public Shared Sub RemoveWall(wall As WallLike, action As UndoableAction)
  overload: TinyLife.Tools.RemoveTool.RemoveWall*
- uid: TinyLife.Tools.RemoveTool.RemoveNonGroundTile(Microsoft.Xna.Framework.Point,System.Int32,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.RemoveTool.RemoveNonGroundTile(Microsoft.Xna.Framework.Point,System.Int32,TinyLife.Tools.UndoableAction)
  id: RemoveNonGroundTile(Microsoft.Xna.Framework.Point,System.Int32,TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: RemoveNonGroundTile(Point, int, UndoableAction)
  nameWithType: RemoveTool.RemoveNonGroundTile(Point, int, UndoableAction)
  fullName: TinyLife.Tools.RemoveTool.RemoveNonGroundTile(Microsoft.Xna.Framework.Point, int, TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RemoveNonGroundTile
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 217
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nRemoves the given non-ground tile from the map, restores the appropriate amount of money, remoevs any furniture that was on the ground, and spawns the appropriate particles.\n"
  example: []
  syntax:
    content: public static bool RemoveNonGroundTile(Point pos, int floor, UndoableAction action)
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Point
      description: The position of the tile to remove.
    - id: floor
      type: System.Int32
      description: The floor of the tile to remove.
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    return:
      type: System.Boolean
      description: Whether the tile will be successfully removed as part of the <code data-dev-comment-type="paramref" class="paramref">action</code>.
    content.vb: Public Shared Function RemoveNonGroundTile(pos As Point, floor As Integer, action As UndoableAction) As Boolean
  overload: TinyLife.Tools.RemoveTool.RemoveNonGroundTile*
  nameWithType.vb: RemoveTool.RemoveNonGroundTile(Point, Integer, UndoableAction)
  fullName.vb: TinyLife.Tools.RemoveTool.RemoveNonGroundTile(Microsoft.Xna.Framework.Point, Integer, TinyLife.Tools.UndoableAction)
  name.vb: RemoveNonGroundTile(Point, Integer, UndoableAction)
- uid: TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  id: RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: RemoveFurniture(Furniture, UndoableAction)
  nameWithType: RemoveTool.RemoveFurniture(Furniture, UndoableAction)
  fullName: TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture, TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RemoveFurniture
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 250
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nRemoves the given furniture from the world, additionally removing all of its <xref href=\"TinyLife.Objects.Furniture.GetChildren%60%601\" data-throw-if-not-resolved=\"false\"></xref> and adding the required amount of <xref href=\"TinyLife.Tools.Tool.Money\" data-throw-if-not-resolved=\"false\"></xref>\nNote that the furniture&apos;s parent-child relationships are not edited or removed, so <xref href=\"TinyLife.Objects.Furniture.UnlinkParentsAndChildren\" data-throw-if-not-resolved=\"false\"></xref> should be called if the furniture is added into a household storage or similar.\n"
  example: []
  syntax:
    content: public static bool RemoveFurniture(Furniture furniture, UndoableAction action)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture item to remove
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    return:
      type: System.Boolean
      description: Whether the removal was a success, which is only false if the passed <code data-dev-comment-type="paramref" class="paramref">furniture</code> has the <xref href="TinyLife.Objects.ObjectCategory.NonSellable" data-throw-if-not-resolved="false"></xref> category
    content.vb: Public Shared Function RemoveFurniture(furniture As Furniture, action As UndoableAction) As Boolean
  overload: TinyLife.Tools.RemoveTool.RemoveFurniture*
- uid: TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  id: StoreOrRemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: StoreOrRemoveFurniture(Furniture, UndoableAction)
  nameWithType: RemoveTool.StoreOrRemoveFurniture(Furniture, UndoableAction)
  fullName: TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture(TinyLife.Objects.Furniture, TinyLife.Tools.UndoableAction)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StoreOrRemoveFurniture
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 279
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nStores the passed <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> into the current household&apos;s <xref href=\"TinyLife.World.Household.FurnitureStorage\" data-throw-if-not-resolved=\"false\"></xref>, or, if there is no current household, removes the object using <xref href=\"TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture%2cTinyLife.Tools.UndoableAction)\" data-throw-if-not-resolved=\"false\"></xref> instead.\nIf the passed furniture is in the world and has children, the children are also stored (or removed) recursively.\n"
  example: []
  syntax:
    content: public static bool StoreOrRemoveFurniture(Furniture furniture, UndoableAction action)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture to store (or remove)
    - id: action
      type: TinyLife.Tools.UndoableAction
      description: The undoable action that this method should add its actions to. If this method should be executed immediately, use the <xref href="TinyLife.Tools.UndoableAction" data-throw-if-not-resolved="false"></xref> immediate constructor.
    return:
      type: System.Boolean
      description: Whether the storage or removal was a success, which is only false if there is no current household and the passed <code data-dev-comment-type="paramref" class="paramref">furniture</code> has the <xref href="TinyLife.Objects.ObjectCategory.NonSellable" data-throw-if-not-resolved="false"></xref> category
    content.vb: Public Shared Function StoreOrRemoveFurniture(furniture As Furniture, action As UndoableAction) As Boolean
  overload: TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture*
- uid: TinyLife.Tools.RemoveTool.PlayDestroySound
  commentId: M:TinyLife.Tools.RemoveTool.PlayDestroySound
  id: PlayDestroySound
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: PlayDestroySound()
  nameWithType: RemoveTool.PlayDestroySound()
  fullName: TinyLife.Tools.RemoveTool.PlayDestroySound()
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlayDestroySound
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 308
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nPlays the destroy sound\n"
  example: []
  syntax:
    content: public static void PlayDestroySound()
    content.vb: Public Shared Sub PlayDestroySound()
  overload: TinyLife.Tools.RemoveTool.PlayDestroySound*
- uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  id: SpawnDestroyParticles(TinyLife.Objects.Furniture)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: SpawnDestroyParticles(Furniture)
  nameWithType: RemoveTool.SpawnDestroyParticles(Furniture)
  fullName: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpawnDestroyParticles
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 317
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nSpawns a set of particles for the given <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> being destroyed.\nThe particles are based on the furniture&apos;s textures and colors.\n"
  example: []
  syntax:
    content: public static void SpawnDestroyParticles(Furniture furniture)
    parameters:
    - id: furniture
      type: TinyLife.Objects.Furniture
      description: The furniture whose particles to spawn.
    content.vb: Public Shared Sub SpawnDestroyParticles(furniture As Furniture)
  overload: TinyLife.Tools.RemoveTool.SpawnDestroyParticles*
- uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.WallLike)
  commentId: M:TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.WallLike)
  id: SpawnDestroyParticles(TinyLife.Objects.WallLike)
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: SpawnDestroyParticles(WallLike)
  nameWithType: RemoveTool.SpawnDestroyParticles(WallLike)
  fullName: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.WallLike)
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpawnDestroyParticles
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 327
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nSpawns a set of particles for the given <xref href=\"TinyLife.Objects.WallLike\" data-throw-if-not-resolved=\"false\"></xref> object being destroyed.\nThe particles are based on the item&apos;s textures and colors.\n"
  example: []
  syntax:
    content: public static void SpawnDestroyParticles(WallLike wall)
    parameters:
    - id: wall
      type: TinyLife.Objects.WallLike
      description: The wall whose particles to spawn.
    content.vb: Public Shared Sub SpawnDestroyParticles(wall As WallLike)
  overload: TinyLife.Tools.RemoveTool.SpawnDestroyParticles*
- uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(MLEM.Misc.RectangleF,System.Single,System.Single,System.ValueTuple{MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color}[])
  commentId: M:TinyLife.Tools.RemoveTool.SpawnDestroyParticles(MLEM.Misc.RectangleF,System.Single,System.Single,System.ValueTuple{MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color}[])
  id: SpawnDestroyParticles(MLEM.Misc.RectangleF,System.Single,System.Single,System.ValueTuple{MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color}[])
  parent: TinyLife.Tools.RemoveTool
  langs:
  - csharp
  - vb
  name: SpawnDestroyParticles(RectangleF, float, float, params (TextureRegion, Color)[])
  nameWithType: RemoveTool.SpawnDestroyParticles(RectangleF, float, float, params (TextureRegion, Color)[])
  fullName: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(MLEM.Misc.RectangleF, float, float, params (MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color)[])
  type: Method
  source:
    remote:
      path: TinyLife/Tools/RemoveTool.cs
      branch: 0.37.5-dev
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SpawnDestroyParticles
    path: ../TinyLife/Tools/RemoveTool.cs
    startLine: 347
  assemblies:
  - Tiny Life
  namespace: TinyLife.Tools
  summary: "\nSpawns a set of particles for an arbitrary object being destroyed.\nIf a <xref href=\"TinyLife.Objects.Furniture\" data-throw-if-not-resolved=\"false\"></xref> is destroyed, <xref href=\"TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)\" data-throw-if-not-resolved=\"false\"></xref> should be used instead.\n"
  example: []
  syntax:
    content: public static void SpawnDestroyParticles(RectangleF area, float floor, float amountMultiplier, params (TextureRegion, Color)[] textures)
    parameters:
    - id: area
      type: MLEM.Misc.RectangleF
      description: The area to spawn particles in.
    - id: floor
      type: System.Single
      description: The floor to spawn particles on.
    - id: amountMultiplier
      type: System.Single
      description: The amount of particles that should be spawned, which will be multiplied with the size of the <code data-dev-comment-type="paramref" class="paramref">area</code>
    - id: textures
      type: System.ValueTuple{MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color}[]
      description: The textures and their colors to choose from when spawning the particles.
    content.vb: Public Shared Sub SpawnDestroyParticles(area As RectangleF, floor As Single, amountMultiplier As Single, ParamArray textures As (TextureRegion, Color)())
  overload: TinyLife.Tools.RemoveTool.SpawnDestroyParticles*
  nameWithType.vb: RemoveTool.SpawnDestroyParticles(RectangleF, Single, Single, ParamArray (TextureRegion, Color)())
  fullName.vb: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(MLEM.Misc.RectangleF, Single, Single, ParamArray (MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color)())
  name.vb: SpawnDestroyParticles(RectangleF, Single, Single, ParamArray (TextureRegion, Color)())
references:
- uid: TinyLife.Tools
  commentId: N:TinyLife.Tools
  name: TinyLife.Tools
  nameWithType: TinyLife.Tools
  fullName: TinyLife.Tools
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Tools
    name: Tools
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Tools.Tool
  commentId: T:TinyLife.Tools.Tool
  parent: TinyLife.Tools
  name: Tool
  nameWithType: Tool
  fullName: TinyLife.Tools.Tool
- uid: TinyLife.Tools.Tool.RemoveTool
  commentId: F:TinyLife.Tools.Tool.RemoveTool
  parent: TinyLife.Tools.Tool
  name: RemoveTool
  nameWithType: Tool.RemoveTool
  fullName: TinyLife.Tools.Tool.RemoveTool
- uid: TinyLife.Tools.Tool.MoveTool
  commentId: F:TinyLife.Tools.Tool.MoveTool
  parent: TinyLife.Tools.Tool
  name: MoveTool
  nameWithType: Tool.MoveTool
  fullName: TinyLife.Tools.Tool.MoveTool
- uid: TinyLife.Tools.Tool.PlayModeTool
  commentId: F:TinyLife.Tools.Tool.PlayModeTool
  parent: TinyLife.Tools.Tool
  name: PlayModeTool
  nameWithType: Tool.PlayModeTool
  fullName: TinyLife.Tools.Tool.PlayModeTool
- uid: TinyLife.Tools.Tool.BuildTools
  commentId: F:TinyLife.Tools.Tool.BuildTools
  parent: TinyLife.Tools.Tool
  name: BuildTools
  nameWithType: Tool.BuildTools
  fullName: TinyLife.Tools.Tool.BuildTools
- uid: TinyLife.Tools.Tool.SelectedObject
  commentId: P:TinyLife.Tools.Tool.SelectedObject
  parent: TinyLife.Tools.Tool
  name: SelectedObject
  nameWithType: Tool.SelectedObject
  fullName: TinyLife.Tools.Tool.SelectedObject
- uid: TinyLife.Tools.Tool.SelectedWall
  commentId: P:TinyLife.Tools.Tool.SelectedWall
  parent: TinyLife.Tools.Tool
  name: SelectedWall
  nameWithType: Tool.SelectedWall
  fullName: TinyLife.Tools.Tool.SelectedWall
- uid: TinyLife.Tools.Tool.SelectedRoof
  commentId: P:TinyLife.Tools.Tool.SelectedRoof
  parent: TinyLife.Tools.Tool
  name: SelectedRoof
  nameWithType: Tool.SelectedRoof
  fullName: TinyLife.Tools.Tool.SelectedRoof
- uid: TinyLife.Tools.Tool.SelectedStairs
  commentId: P:TinyLife.Tools.Tool.SelectedStairs
  parent: TinyLife.Tools.Tool
  name: SelectedStairs
  nameWithType: Tool.SelectedStairs
  fullName: TinyLife.Tools.Tool.SelectedStairs
- uid: TinyLife.Tools.Tool.IsRotateCwPressed
  commentId: P:TinyLife.Tools.Tool.IsRotateCwPressed
  parent: TinyLife.Tools.Tool
  name: IsRotateCwPressed
  nameWithType: Tool.IsRotateCwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCwPressed
- uid: TinyLife.Tools.Tool.IsRotateCcwPressed
  commentId: P:TinyLife.Tools.Tool.IsRotateCcwPressed
  parent: TinyLife.Tools.Tool
  name: IsRotateCcwPressed
  nameWithType: Tool.IsRotateCcwPressed
  fullName: TinyLife.Tools.Tool.IsRotateCcwPressed
- uid: TinyLife.Tools.Tool.IsCopyPressed
  commentId: P:TinyLife.Tools.Tool.IsCopyPressed
  parent: TinyLife.Tools.Tool
  name: IsCopyPressed
  nameWithType: Tool.IsCopyPressed
  fullName: TinyLife.Tools.Tool.IsCopyPressed
- uid: TinyLife.Tools.Tool.OnOpened
  commentId: E:TinyLife.Tools.Tool.OnOpened
  parent: TinyLife.Tools.Tool
  name: OnOpened
  nameWithType: Tool.OnOpened
  fullName: TinyLife.Tools.Tool.OnOpened
- uid: TinyLife.Tools.Tool.OnClosed
  commentId: E:TinyLife.Tools.Tool.OnClosed
  parent: TinyLife.Tools.Tool
  name: OnClosed
  nameWithType: Tool.OnClosed
  fullName: TinyLife.Tools.Tool.OnClosed
- uid: TinyLife.Tools.Tool.OnUpdate
  commentId: E:TinyLife.Tools.Tool.OnUpdate
  parent: TinyLife.Tools.Tool
  name: OnUpdate
  nameWithType: Tool.OnUpdate
  fullName: TinyLife.Tools.Tool.OnUpdate
- uid: TinyLife.Tools.Tool.OnDraw
  commentId: E:TinyLife.Tools.Tool.OnDraw
  parent: TinyLife.Tools.Tool
  name: OnDraw
  nameWithType: Tool.OnDraw
  fullName: TinyLife.Tools.Tool.OnDraw
- uid: TinyLife.Tools.Tool.OnInitBuildModeUi
  commentId: E:TinyLife.Tools.Tool.OnInitBuildModeUi
  parent: TinyLife.Tools.Tool
  name: OnInitBuildModeUi
  nameWithType: Tool.OnInitBuildModeUi
  fullName: TinyLife.Tools.Tool.OnInitBuildModeUi
- uid: TinyLife.Tools.Tool.Input
  commentId: P:TinyLife.Tools.Tool.Input
  parent: TinyLife.Tools.Tool
  name: Input
  nameWithType: Tool.Input
  fullName: TinyLife.Tools.Tool.Input
- uid: TinyLife.Tools.Tool.Map
  commentId: P:TinyLife.Tools.Tool.Map
  parent: TinyLife.Tools.Tool
  name: Map
  nameWithType: Tool.Map
  fullName: TinyLife.Tools.Tool.Map
- uid: TinyLife.Tools.Tool.Money
  commentId: P:TinyLife.Tools.Tool.Money
  parent: TinyLife.Tools.Tool
  name: Money
  nameWithType: Tool.Money
  fullName: TinyLife.Tools.Tool.Money
- uid: TinyLife.Tools.Tool.CurrentFloor
  commentId: P:TinyLife.Tools.Tool.CurrentFloor
  parent: TinyLife.Tools.Tool
  name: CurrentFloor
  nameWithType: Tool.CurrentFloor
  fullName: TinyLife.Tools.Tool.CurrentFloor
- uid: TinyLife.Tools.Tool.Texture
  commentId: F:TinyLife.Tools.Tool.Texture
  parent: TinyLife.Tools.Tool
  name: Texture
  nameWithType: Tool.Texture
  fullName: TinyLife.Tools.Tool.Texture
- uid: TinyLife.Tools.Tool.DisplayAsTab
  commentId: F:TinyLife.Tools.Tool.DisplayAsTab
  parent: TinyLife.Tools.Tool
  name: DisplayAsTab
  nameWithType: Tool.DisplayAsTab
  fullName: TinyLife.Tools.Tool.DisplayAsTab
- uid: TinyLife.Tools.Tool.MousePos
  commentId: F:TinyLife.Tools.Tool.MousePos
  parent: TinyLife.Tools.Tool
  name: MousePos
  nameWithType: Tool.MousePos
  fullName: TinyLife.Tools.Tool.MousePos
- uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  commentId: M:TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
  parent: TinyLife.Tools.Tool
  isExternal: true
  name: InitBuildModeUi(Panel, Panel)
  nameWithType: Tool.InitBuildModeUi(Panel, Panel)
  fullName: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel, MLEM.Ui.Elements.Panel)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
    name: InitBuildModeUi
  - name: (
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.InitBuildModeUi(MLEM.Ui.Elements.Panel,MLEM.Ui.Elements.Panel)
    name: InitBuildModeUi
  - name: (
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Panel
    name: Panel
    isExternal: true
  - name: )
- uid: TinyLife.Tools.Tool.Opened
  commentId: M:TinyLife.Tools.Tool.Opened
  parent: TinyLife.Tools.Tool
  name: Opened()
  nameWithType: Tool.Opened()
  fullName: TinyLife.Tools.Tool.Opened()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Opened
    name: Opened
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Opened
    name: Opened
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.Closed
  commentId: M:TinyLife.Tools.Tool.Closed
  parent: TinyLife.Tools.Tool
  name: Closed()
  nameWithType: Tool.Closed()
  fullName: TinyLife.Tools.Tool.Closed()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Closed
    name: Closed
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Closed
    name: Closed
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.CanSwitchGameModes
  commentId: M:TinyLife.Tools.Tool.CanSwitchGameModes
  parent: TinyLife.Tools.Tool
  name: CanSwitchGameModes()
  nameWithType: Tool.CanSwitchGameModes()
  fullName: TinyLife.Tools.Tool.CanSwitchGameModes()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.CanSwitchGameModes
    name: CanSwitchGameModes
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.CanSwitchGameModes
    name: CanSwitchGameModes
  - name: (
  - name: )
- uid: TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  commentId: M:TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  parent: TinyLife.Tools.Tool
  isExternal: true
  name: OnButtonCreated(Button)
  nameWithType: Tool.OnButtonCreated(Button)
  fullName: TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
    name: OnButtonCreated
  - name: (
  - uid: MLEM.Ui.Elements.Button
    name: Button
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.OnButtonCreated(MLEM.Ui.Elements.Button)
    name: OnButtonCreated
  - name: (
  - uid: MLEM.Ui.Elements.Button
    name: Button
    isExternal: true
  - name: )
- uid: TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  commentId: M:TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  parent: TinyLife.Tools.Tool
  isExternal: true
  name: IsOnLot(Point)
  nameWithType: Tool.IsOnLot(Point)
  fullName: TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
    name: IsOnLot
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.IsOnLot(Microsoft.Xna.Framework.Point)
    name: IsOnLot
  - name: (
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme[],System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean})
  commentId: M:TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme[],System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean})
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: ColorSelection(ColorScheme[], Action<int, int>, Func<int, int, bool>)
  nameWithType: Tool.ColorSelection(ColorScheme[], Action<int, int>, Func<int, int, bool>)
  fullName: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme[], System.Action<int, int>, System.Func<int, int, bool>)
  nameWithType.vb: Tool.ColorSelection(ColorScheme(), Action(Of Integer, Integer), Func(Of Integer, Integer, Boolean))
  fullName.vb: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme(), System.Action(Of Integer, Integer), System.Func(Of Integer, Integer, Boolean))
  name.vb: ColorSelection(ColorScheme(), Action(Of Integer, Integer), Func(Of Integer, Integer, Boolean))
  spec.csharp:
  - uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme[],System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean})
    name: ColorSelection
  - name: (
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme[],System.Action{System.Int32,System.Int32},System.Func{System.Int32,System.Int32,System.Boolean})
    name: ColorSelection
  - name: (
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,System.Action{System.Int32},System.Func{System.Int32,System.Boolean})
  commentId: M:TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,System.Action{System.Int32},System.Func{System.Int32,System.Boolean})
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ColorSelection(ColorScheme, Action<int>, Func<int, bool>)
  nameWithType: Tool.ColorSelection(ColorScheme, Action<int>, Func<int, bool>)
  fullName: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme, System.Action<int>, System.Func<int, bool>)
  nameWithType.vb: Tool.ColorSelection(ColorScheme, Action(Of Integer), Func(Of Integer, Boolean))
  fullName.vb: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme, System.Action(Of Integer), System.Func(Of Integer, Boolean))
  name.vb: ColorSelection(ColorScheme, Action(Of Integer), Func(Of Integer, Boolean))
  spec.csharp:
  - uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,System.Action{System.Int32},System.Func{System.Int32,System.Boolean})
    name: ColorSelection
  - name: (
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.ColorSelection(TinyLife.Utilities.ColorScheme,System.Action{System.Int32},System.Func{System.Int32,System.Boolean})
    name: ColorSelection
  - name: (
  - uid: TinyLife.Utilities.ColorScheme
    name: ColorScheme
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  commentId: M:TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: BuildModeButton(string, GenericCallback, DrawCallback, float, TextureRegion, IEnumerable<string>, float?)
  nameWithType: Tool.BuildModeButton(string, Element.GenericCallback, Element.DrawCallback, float, TextureRegion, IEnumerable<string>, float?)
  fullName: TinyLife.Tools.Tool.BuildModeButton(string, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, float, MLEM.Textures.TextureRegion, System.Collections.Generic.IEnumerable<string>, float?)
  nameWithType.vb: Tool.BuildModeButton(String, Element.GenericCallback, Element.DrawCallback, Single, TextureRegion, IEnumerable(Of String), Single?)
  fullName.vb: TinyLife.Tools.Tool.BuildModeButton(String, MLEM.Ui.Elements.Element.GenericCallback, MLEM.Ui.Elements.Element.DrawCallback, Single, MLEM.Textures.TextureRegion, System.Collections.Generic.IEnumerable(Of String), Single?)
  name.vb: BuildModeButton(String, GenericCallback, DrawCallback, Single, TextureRegion, IEnumerable(Of String), Single?)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
    name: BuildModeButton
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.GenericCallback
    name: GenericCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.BuildModeButton(System.String,MLEM.Ui.Elements.Element.GenericCallback,MLEM.Ui.Elements.Element.DrawCallback,System.Single,MLEM.Textures.TextureRegion,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Single})
    name: BuildModeButton
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.GenericCallback
    name: GenericCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element.DrawCallback
    name: DrawCallback
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Tools.RemoveTool.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<RemoveTool>(RemoveTool)
  nameWithType: Extensions.JsonCopy<RemoveTool>(RemoveTool)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Tools.RemoveTool>(TinyLife.Tools.RemoveTool)
  nameWithType.vb: Extensions.JsonCopy(Of RemoveTool)(RemoveTool)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Tools.RemoveTool)(TinyLife.Tools.RemoveTool)
  name.vb: JsonCopy(Of RemoveTool)(RemoveTool)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Tools.RemoveTool)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Tools.RemoveTool
    name: RemoveTool
  - name: '>'
  - name: (
  - uid: TinyLife.Tools.RemoveTool
    name: RemoveTool
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Tools.RemoveTool)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Tools.RemoveTool
    name: RemoveTool
  - name: )
  - name: (
  - uid: TinyLife.Tools.RemoveTool
    name: RemoveTool
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Tools.RemoveTool.#ctor*
  commentId: Overload:TinyLife.Tools.RemoveTool.#ctor
  name: RemoveTool
  nameWithType: RemoveTool.RemoveTool
  fullName: TinyLife.Tools.RemoveTool.RemoveTool
  nameWithType.vb: RemoveTool.New
  fullName.vb: TinyLife.Tools.RemoveTool.New
  name.vb: New
- uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime)
  parent: TinyLife.Tools.Tool
  isExternal: true
  name: Update(GameTime)
  nameWithType: Tool.Update(GameTime)
  fullName: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: TinyLife.Tools.RemoveTool.Update*
  commentId: Overload:TinyLife.Tools.RemoveTool.Update
  name: Update
  nameWithType: RemoveTool.Update
  fullName: TinyLife.Tools.RemoveTool.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: TinyLife.Tools.Tool
  isExternal: true
  name: Draw(GameTime, SpriteBatch)
  nameWithType: Tool.Draw(GameTime, SpriteBatch)
  fullName: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch)
    name: Draw
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: )
- uid: TinyLife.Tools.RemoveTool.Draw*
  commentId: Overload:TinyLife.Tools.RemoveTool.Draw
  name: Draw
  nameWithType: RemoveTool.Draw
  fullName: TinyLife.Tools.RemoveTool.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: TinyLife.Tools.Tool.GetMouseCursor
  commentId: M:TinyLife.Tools.Tool.GetMouseCursor
  parent: TinyLife.Tools.Tool
  name: GetMouseCursor()
  nameWithType: Tool.GetMouseCursor()
  fullName: TinyLife.Tools.Tool.GetMouseCursor()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.GetMouseCursor
    name: GetMouseCursor
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.GetMouseCursor
    name: GetMouseCursor
  - name: (
  - name: )
- uid: TinyLife.Tools.RemoveTool.GetMouseCursor*
  commentId: Overload:TinyLife.Tools.RemoveTool.GetMouseCursor
  name: GetMouseCursor
  nameWithType: RemoveTool.GetMouseCursor
  fullName: TinyLife.Tools.RemoveTool.GetMouseCursor
- uid: TinyLife.Uis.CursorType
  commentId: T:TinyLife.Uis.CursorType
  parent: TinyLife.Uis
  name: CursorType
  nameWithType: CursorType
  fullName: TinyLife.Uis.CursorType
- uid: TinyLife.Uis
  commentId: N:TinyLife.Uis
  name: TinyLife.Uis
  nameWithType: TinyLife.Uis
  fullName: TinyLife.Uis
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Uis
    name: Uis
- uid: TinyLife.Tools.Tool.CanUndoRedo
  commentId: M:TinyLife.Tools.Tool.CanUndoRedo
  parent: TinyLife.Tools.Tool
  name: CanUndoRedo()
  nameWithType: Tool.CanUndoRedo()
  fullName: TinyLife.Tools.Tool.CanUndoRedo()
  spec.csharp:
  - uid: TinyLife.Tools.Tool.CanUndoRedo
    name: CanUndoRedo
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.CanUndoRedo
    name: CanUndoRedo
  - name: (
  - name: )
- uid: TinyLife.Tools.RemoveTool.CanUndoRedo*
  commentId: Overload:TinyLife.Tools.RemoveTool.CanUndoRedo
  name: CanUndoRedo
  nameWithType: RemoveTool.CanUndoRedo
  fullName: TinyLife.Tools.RemoveTool.CanUndoRedo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
  commentId: M:TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
  parent: TinyLife.Tools.Tool
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: ShouldHighlightSelectedObject(object)
  nameWithType: Tool.ShouldHighlightSelectedObject(object)
  fullName: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(object)
  nameWithType.vb: Tool.ShouldHighlightSelectedObject(Object)
  fullName.vb: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(Object)
  name.vb: ShouldHighlightSelectedObject(Object)
  spec.csharp:
  - uid: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
    name: ShouldHighlightSelectedObject
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.Tool.ShouldHighlightSelectedObject(System.Object)
    name: ShouldHighlightSelectedObject
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject*
  commentId: Overload:TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject
  name: ShouldHighlightSelectedObject
  nameWithType: RemoveTool.ShouldHighlightSelectedObject
  fullName: TinyLife.Tools.RemoveTool.ShouldHighlightSelectedObject
- uid: TinyLife.Objects.ObjectCategory.CeilingHanging
  commentId: F:TinyLife.Objects.ObjectCategory.CeilingHanging
  name: CeilingHanging
  nameWithType: ObjectCategory.CeilingHanging
  fullName: TinyLife.Objects.ObjectCategory.CeilingHanging
- uid: TinyLife.Tools.UndoableAction
  commentId: T:TinyLife.Tools.UndoableAction
  parent: TinyLife.Tools
  name: UndoableAction
  nameWithType: UndoableAction
  fullName: TinyLife.Tools.UndoableAction
- uid: TinyLife.Tools.RemoveTool.RemoveRoof*
  commentId: Overload:TinyLife.Tools.RemoveTool.RemoveRoof
  name: RemoveRoof
  nameWithType: RemoveTool.RemoveRoof
  fullName: TinyLife.Tools.RemoveTool.RemoveRoof
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: System.Nullable{Microsoft.Xna.Framework.Rectangle}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Rectangle}
  parent: System
  definition: System.Nullable`1
  name: Rectangle?
  nameWithType: Rectangle?
  fullName: Microsoft.Xna.Framework.Rectangle?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Rectangle
    name: Rectangle
    isExternal: true
  - name: '?'
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Tools.RemoveTool.RemoveStairs*
  commentId: Overload:TinyLife.Tools.RemoveTool.RemoveStairs
  name: RemoveStairs
  nameWithType: RemoveTool.RemoveStairs
  fullName: TinyLife.Tools.RemoveTool.RemoveStairs
- uid: TinyLife.World.Stairs
  commentId: T:TinyLife.World.Stairs
  parent: TinyLife.World
  name: Stairs
  nameWithType: Stairs
  fullName: TinyLife.World.Stairs
- uid: TinyLife.Objects.Furniture
  commentId: T:TinyLife.Objects.Furniture
  parent: TinyLife.Objects
  name: Furniture
  nameWithType: Furniture
  fullName: TinyLife.Objects.Furniture
- uid: TinyLife.Tools.RemoveTool.RemoveWall*
  commentId: Overload:TinyLife.Tools.RemoveTool.RemoveWall
  name: RemoveWall
  nameWithType: RemoveTool.RemoveWall
  fullName: TinyLife.Tools.RemoveTool.RemoveWall
- uid: TinyLife.Objects.WallLike
  commentId: T:TinyLife.Objects.WallLike
  parent: TinyLife.Objects
  name: WallLike
  nameWithType: WallLike
  fullName: TinyLife.Objects.WallLike
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: TinyLife.Tools.RemoveTool.RemoveNonGroundTile*
  commentId: Overload:TinyLife.Tools.RemoveTool.RemoveNonGroundTile
  name: RemoveNonGroundTile
  nameWithType: RemoveTool.RemoveNonGroundTile
  fullName: TinyLife.Tools.RemoveTool.RemoveNonGroundTile
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TinyLife.Objects.Furniture.GetChildren``1
  commentId: M:TinyLife.Objects.Furniture.GetChildren``1
  parent: TinyLife.Objects.Furniture
  name: GetChildren<T>()
  nameWithType: Furniture.GetChildren<T>()
  fullName: TinyLife.Objects.Furniture.GetChildren<T>()
  nameWithType.vb: Furniture.GetChildren(Of T)()
  fullName.vb: TinyLife.Objects.Furniture.GetChildren(Of T)()
  name.vb: GetChildren(Of T)()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.GetChildren``1
    name: GetChildren
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.GetChildren``1
    name: GetChildren
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  commentId: M:TinyLife.Objects.Furniture.UnlinkParentsAndChildren
  parent: TinyLife.Objects.Furniture
  name: UnlinkParentsAndChildren()
  nameWithType: Furniture.UnlinkParentsAndChildren()
  fullName: TinyLife.Objects.Furniture.UnlinkParentsAndChildren()
  spec.csharp:
  - uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
    name: UnlinkParentsAndChildren
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Furniture.UnlinkParentsAndChildren
    name: UnlinkParentsAndChildren
  - name: (
  - name: )
- uid: TinyLife.Objects.ObjectCategory.NonSellable
  commentId: F:TinyLife.Objects.ObjectCategory.NonSellable
  name: NonSellable
  nameWithType: ObjectCategory.NonSellable
  fullName: TinyLife.Objects.ObjectCategory.NonSellable
- uid: TinyLife.Tools.RemoveTool.RemoveFurniture*
  commentId: Overload:TinyLife.Tools.RemoveTool.RemoveFurniture
  name: RemoveFurniture
  nameWithType: RemoveTool.RemoveFurniture
  fullName: TinyLife.Tools.RemoveTool.RemoveFurniture
- uid: TinyLife.World.Household.FurnitureStorage
  commentId: F:TinyLife.World.Household.FurnitureStorage
  name: FurnitureStorage
  nameWithType: Household.FurnitureStorage
  fullName: TinyLife.World.Household.FurnitureStorage
- uid: TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  commentId: M:TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
  name: RemoveFurniture(Furniture, UndoableAction)
  nameWithType: RemoveTool.RemoveFurniture(Furniture, UndoableAction)
  fullName: TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture, TinyLife.Tools.UndoableAction)
  spec.csharp:
  - uid: TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
    name: RemoveFurniture
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: TinyLife.Tools.UndoableAction
    name: UndoableAction
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.RemoveTool.RemoveFurniture(TinyLife.Objects.Furniture,TinyLife.Tools.UndoableAction)
    name: RemoveFurniture
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: TinyLife.Tools.UndoableAction
    name: UndoableAction
  - name: )
- uid: TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture*
  commentId: Overload:TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture
  name: StoreOrRemoveFurniture
  nameWithType: RemoveTool.StoreOrRemoveFurniture
  fullName: TinyLife.Tools.RemoveTool.StoreOrRemoveFurniture
- uid: TinyLife.Tools.RemoveTool.PlayDestroySound*
  commentId: Overload:TinyLife.Tools.RemoveTool.PlayDestroySound
  name: PlayDestroySound
  nameWithType: RemoveTool.PlayDestroySound
  fullName: TinyLife.Tools.RemoveTool.PlayDestroySound
- uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles*
  commentId: Overload:TinyLife.Tools.RemoveTool.SpawnDestroyParticles
  name: SpawnDestroyParticles
  nameWithType: RemoveTool.SpawnDestroyParticles
  fullName: TinyLife.Tools.RemoveTool.SpawnDestroyParticles
- uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  commentId: M:TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  name: SpawnDestroyParticles(Furniture)
  nameWithType: RemoveTool.SpawnDestroyParticles(Furniture)
  fullName: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
  spec.csharp:
  - uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
    name: SpawnDestroyParticles
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
  spec.vb:
  - uid: TinyLife.Tools.RemoveTool.SpawnDestroyParticles(TinyLife.Objects.Furniture)
    name: SpawnDestroyParticles
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
- uid: MLEM.Misc.RectangleF
  commentId: T:MLEM.Misc.RectangleF
  parent: MLEM.Misc
  isExternal: true
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Misc.RectangleF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.ValueTuple{MLEM.Textures.TextureRegion,Microsoft.Xna.Framework.Color}[]
  isExternal: true
  name: (TextureRegion, Color)[]
  nameWithType: (TextureRegion, Color)[]
  fullName: (MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color)[]
  nameWithType.vb: (TextureRegion, Color)()
  fullName.vb: (MLEM.Textures.TextureRegion, Microsoft.Xna.Framework.Color)()
  name.vb: (TextureRegion, Color)()
  spec.csharp:
  - name: (
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: )
  - name: (
  - name: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
