### YamlMime:ManagedReference
items:
- uid: TinyLife.World.WallMode
  commentId: T:TinyLife.World.WallMode
  id: WallMode
  parent: TinyLife.World
  children:
  - TinyLife.World.WallMode.Door
  - TinyLife.World.WallMode.Full
  - TinyLife.World.WallMode.LongWindow
  - TinyLife.World.WallMode.Roof
  - TinyLife.World.WallMode.RoofGable
  - TinyLife.World.WallMode.RoofGableInverse
  - TinyLife.World.WallMode.SmallWindow
  langs:
  - csharp
  - vb
  name: WallMode
  nameWithType: WallMode
  fullName: TinyLife.World.WallMode
  type: Enum
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WallMode
    path: ../TinyLife/World/Wall.cs
    startLine: 238
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nThis enumeration defines the possible rendering types for <xref href=\"TinyLife.World.Wallpaper\" data-throw-if-not-resolved=\"false\"></xref>.\nBy default, <xref href=\"TinyLife.World.WallMode.Full\" data-throw-if-not-resolved=\"false\"></xref> is rendered, but an <xref href=\"TinyLife.World.Opening\" data-throw-if-not-resolved=\"false\"></xref> can change the type to allow for windows, doors etc.\n"
  example: []
  syntax:
    content: public enum WallMode
    content.vb: Public Enum WallMode
  extensionMethods:
  - TinyLife.World.WallMode.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: TinyLife.World.WallMode.Full
  commentId: F:TinyLife.World.WallMode.Full
  id: Full
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: Full
  nameWithType: WallMode.Full
  fullName: TinyLife.World.WallMode.Full
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Full
    path: ../TinyLife/World/Wall.cs
    startLine: 243
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA wall mode that represents a wall that is rendered in full, without any holes in it\n"
  example: []
  syntax:
    content: Full = 0
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.WallMode.SmallWindow
  commentId: F:TinyLife.World.WallMode.SmallWindow
  id: SmallWindow
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: SmallWindow
  nameWithType: WallMode.SmallWindow
  fullName: TinyLife.World.WallMode.SmallWindow
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SmallWindow
    path: ../TinyLife/World/Wall.cs
    startLine: 247
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA wall mode that represents a wall with a small, rectanglular window in it\n"
  example: []
  syntax:
    content: SmallWindow = 1
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.WallMode.Door
  commentId: F:TinyLife.World.WallMode.Door
  id: Door
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: Door
  nameWithType: WallMode.Door
  fullName: TinyLife.World.WallMode.Door
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Door
    path: ../TinyLife/World/Wall.cs
    startLine: 251
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA wall mode that represents a wall with a door-shaped hole in it\n"
  example: []
  syntax:
    content: Door = 2
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.WallMode.Roof
  commentId: F:TinyLife.World.WallMode.Roof
  id: Roof
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: Roof
  nameWithType: WallMode.Roof
  fullName: TinyLife.World.WallMode.Roof
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Roof
    path: ../TinyLife/World/Wall.cs
    startLine: 255
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA wall mode that represents a wall used on the faces of a <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> that are straight\n"
  example: []
  syntax:
    content: Roof = 3
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.WallMode.RoofGable
  commentId: F:TinyLife.World.WallMode.RoofGable
  id: RoofGable
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: RoofGable
  nameWithType: WallMode.RoofGable
  fullName: TinyLife.World.WallMode.RoofGable
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoofGable
    path: ../TinyLife/World/Wall.cs
    startLine: 259
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA wall mode that represents a wall used on the faces of a <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> that are gabled\n"
  example: []
  syntax:
    content: RoofGable = 4
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.WallMode.RoofGableInverse
  commentId: F:TinyLife.World.WallMode.RoofGableInverse
  id: RoofGableInverse
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: RoofGableInverse
  nameWithType: WallMode.RoofGableInverse
  fullName: TinyLife.World.WallMode.RoofGableInverse
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RoofGableInverse
    path: ../TinyLife/World/Wall.cs
    startLine: 263
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA wall mode that represents a wall used on the faces of a <xref href=\"TinyLife.World.Roof\" data-throw-if-not-resolved=\"false\"></xref> that are gabled in the opposite direction as <xref href=\"TinyLife.World.WallMode.RoofGable\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: RoofGableInverse = 5
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: TinyLife.World.WallMode.LongWindow
  commentId: F:TinyLife.World.WallMode.LongWindow
  id: LongWindow
  parent: TinyLife.World.WallMode
  langs:
  - csharp
  - vb
  name: LongWindow
  nameWithType: WallMode.LongWindow
  fullName: TinyLife.World.WallMode.LongWindow
  type: Field
  source:
    remote:
      path: TinyLife/World/Wall.cs
      branch: 0.20.1
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LongWindow
    path: ../TinyLife/World/Wall.cs
    startLine: 267
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: "\nA long window with a similar width to <xref href=\"TinyLife.World.WallMode.SmallWindow\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: LongWindow = 6
    return:
      type: TinyLife.World.WallMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: TinyLife.World.Wallpaper
  commentId: T:TinyLife.World.Wallpaper
  parent: TinyLife.World
  name: Wallpaper
  nameWithType: Wallpaper
  fullName: TinyLife.World.Wallpaper
- uid: TinyLife.World.WallMode.Full
  commentId: F:TinyLife.World.WallMode.Full
  isExternal: true
- uid: TinyLife.World.Opening
  commentId: T:TinyLife.World.Opening
  parent: TinyLife.World
  name: Opening
  nameWithType: Opening
  fullName: TinyLife.World.Opening
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
- uid: TinyLife.World.WallMode.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<WallMode>()
  nameWithType: Extensions.JsonCopy<WallMode>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.WallMode>()
  nameWithType.vb: Extensions.JsonCopy(Of WallMode)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.WallMode)()
  name.vb: JsonCopy(Of WallMode)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<WallMode>
    nameWithType: Extensions.JsonCopy<WallMode>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.WallMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of WallMode)
    nameWithType: Extensions.JsonCopy(Of WallMode)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.WallMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.World.WallMode
  commentId: T:TinyLife.World.WallMode
  parent: TinyLife.World
  name: WallMode
  nameWithType: WallMode
  fullName: TinyLife.World.WallMode
- uid: TinyLife.World.Roof
  commentId: T:TinyLife.World.Roof
  parent: TinyLife.World
  name: Roof
  nameWithType: Roof
  fullName: TinyLife.World.Roof
- uid: TinyLife.World.WallMode.RoofGable
  commentId: F:TinyLife.World.WallMode.RoofGable
  isExternal: true
- uid: TinyLife.World.WallMode.SmallWindow
  commentId: F:TinyLife.World.WallMode.SmallWindow
  isExternal: true
