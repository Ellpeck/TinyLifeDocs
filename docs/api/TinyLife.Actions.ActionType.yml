### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  id: ActionType
  parent: TinyLife.Actions
  children:
  - TinyLife.Actions.ActionType.AddALittleSomething
  - TinyLife.Actions.ActionType.AddCandle
  - TinyLife.Actions.ActionType.AdmireFood
  - TinyLife.Actions.ActionType.AdmireLgbtFlag
  - TinyLife.Actions.ActionType.AdmitToBeingRomanticWithSomeoneElse
  - TinyLife.Actions.ActionType.AdoptChild
  - TinyLife.Actions.ActionType.AgeUp
  - TinyLife.Actions.ActionType.AnnouncePregnancy
  - TinyLife.Actions.ActionType.AreDating(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.ArgueAboutToyOwnership
  - TinyLife.Actions.ActionType.AskAboutCareerDreams
  - TinyLife.Actions.ActionType.AskAboutComputerSpecs
  - TinyLife.Actions.ActionType.AskAboutDay
  - TinyLife.Actions.ActionType.AskAboutFamilyWellbeing
  - TinyLife.Actions.ActionType.AskAboutFictionBooks
  - TinyLife.Actions.ActionType.AskAboutGamingRig
  - TinyLife.Actions.ActionType.AskAboutJob
  - TinyLife.Actions.ActionType.AskAboutNonfictionBooks
  - TinyLife.Actions.ActionType.AskAboutParenting
  - TinyLife.Actions.ActionType.AskAboutPersonality
  - TinyLife.Actions.ActionType.AskFood
  - TinyLife.Actions.ActionType.AskHow
  - TinyLife.Actions.ActionType.AskIfSingle
  - TinyLife.Actions.ActionType.AskMedicalHistory
  - TinyLife.Actions.ActionType.AskToCook
  - TinyLife.Actions.ActionType.AskToLeave
  - TinyLife.Actions.ActionType.AskToTakeOutOfCrib
  - TinyLife.Actions.ActionType.AskToTaste
  - TinyLife.Actions.ActionType.AskToTellStory
  - TinyLife.Actions.ActionType.AskWhy
  - TinyLife.Actions.ActionType.Babble
  - TinyLife.Actions.ActionType.BakeFood
  - TinyLife.Actions.ActionType.BatheBaby
  - TinyLife.Actions.ActionType.BeAwayFromLotEmployment
  - TinyLife.Actions.ActionType.BeEnticing
  - TinyLife.Actions.ActionType.BlowOutCandles
  - TinyLife.Actions.ActionType.BoastAboutPagesWritten
  - TinyLife.Actions.ActionType.BragAboutComputer
  - TinyLife.Actions.ActionType.BreakUp
  - TinyLife.Actions.ActionType.BrewCoffee
  - TinyLife.Actions.ActionType.BribeForFriendship
  - TinyLife.Actions.ActionType.CallOver
  - TinyLife.Actions.ActionType.CallToMeal
  - TinyLife.Actions.ActionType.CanBeSexual(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.CanExecuteAll(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionType.CanExecuteDelegate[])
  - TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  - TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean},System.Boolean)
  - TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  - TinyLife.Actions.ActionType.CanPlaceHeldItem(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.CanWorkAtDeskObject(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.CasualCompliment
  - TinyLife.Actions.ActionType.CelebrateBirthday
  - TinyLife.Actions.ActionType.ChangeDiaper
  - TinyLife.Actions.ActionType.ChangeOutfit
  - TinyLife.Actions.ActionType.ChastiseForFoodBeliefs
  - TinyLife.Actions.ActionType.Chat
  - TinyLife.Actions.ActionType.ChatWith
  - TinyLife.Actions.ActionType.Clean
  - TinyLife.Actions.ActionType.CleanDish
  - TinyLife.Actions.ActionType.CleanEverything
  - TinyLife.Actions.ActionType.CleanOutFridge
  - TinyLife.Actions.ActionType.CleanUpBaby
  - TinyLife.Actions.ActionType.CollectSunlight
  - TinyLife.Actions.ActionType.CollectTrash
  - TinyLife.Actions.ActionType.ColorColoringBook
  - TinyLife.Actions.ActionType.CompareMuscleSize
  - TinyLife.Actions.ActionType.ComparePhysicalFeatures
  - TinyLife.Actions.ActionType.ComplainAboutAdults
  - TinyLife.Actions.ActionType.ComplainAboutLife
  - TinyLife.Actions.ActionType.ComplainAboutParent
  - TinyLife.Actions.ActionType.ComplainAboutRelationship
  - TinyLife.Actions.ActionType.ComplimentLooks
  - TinyLife.Actions.ActionType.ConfideIn
  - TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
  - TinyLife.Actions.ActionType.CookChildFood
  - TinyLife.Actions.ActionType.CookFood
  - TinyLife.Actions.ActionType.CreateApp
  - TinyLife.Actions.ActionType.CriticizeDeforestation
  - TinyLife.Actions.ActionType.CryAt
  - TinyLife.Actions.ActionType.DebatePineappleOnPizza
  - TinyLife.Actions.ActionType.DebugAddToHousehold
  - TinyLife.Actions.ActionType.DebugDie
  - TinyLife.Actions.ActionType.DebugTeleport
  - TinyLife.Actions.ActionType.DebugToggleBroken
  - TinyLife.Actions.ActionType.DebugToggleDirty
  - TinyLife.Actions.ActionType.DeepCompliment
  - TinyLife.Actions.ActionType.DeliverMail
  - TinyLife.Actions.ActionType.DeliverNewspaper
  - TinyLife.Actions.ActionType.Die
  - TinyLife.Actions.ActionType.DiscussFineDining
  - TinyLife.Actions.ActionType.DiscussHomeAutomation
  - TinyLife.Actions.ActionType.DiscussNpP
  - TinyLife.Actions.ActionType.DiscussWorkoutRegimen
  - TinyLife.Actions.ActionType.DoHomework
  - TinyLife.Actions.ActionType.Drive
  - TinyLife.Actions.ActionType.Eat
  - TinyLife.Actions.ActionType.EditOutfits
  - TinyLife.Actions.ActionType.EnthuseAboutCoupons
  - TinyLife.Actions.ActionType.ExplainActivities
  - TinyLife.Actions.ActionType.ExpressFearOfCrowds
  - TinyLife.Actions.ActionType.ExpressPregnancyConcerns
  - TinyLife.Actions.ActionType.Flirt
  - TinyLife.Actions.ActionType.FlirtyJoke
  - TinyLife.Actions.ActionType.FollowAdult
  - TinyLife.Actions.ActionType.FoolAround
  - TinyLife.Actions.ActionType.GaugeRelationship
  - TinyLife.Actions.ActionType.GetBakingIngredients
  - TinyLife.Actions.ActionType.GetDisplayName(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.GetFoodFromDisplayCase
  - TinyLife.Actions.ActionType.GetFoodSomewhereElse
  - TinyLife.Actions.ActionType.GetFurnitureMail
  - TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  - TinyLife.Actions.ActionType.GetIngredientsFamily
  - TinyLife.Actions.ActionType.GetIngredientsSingle
  - TinyLife.Actions.ActionType.GetJob
  - TinyLife.Actions.ActionType.GetJobFromNewspaper
  - TinyLife.Actions.ActionType.GetLeftovers
  - TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person,TinyLife.Skills.SkillType)
  - TinyLife.Actions.ActionType.GetVarieties(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.GetWater
  - TinyLife.Actions.ActionType.GoHere
  - TinyLife.Actions.ActionType.GoHome
  - TinyLife.Actions.ActionType.GoJogging
  - TinyLife.Actions.ActionType.GrabServing
  - TinyLife.Actions.ActionType.GrillFood
  - TinyLife.Actions.ActionType.GushAboutPartner
  - TinyLife.Actions.ActionType.HackSomeone
  - TinyLife.Actions.ActionType.HasChairOrIsStandingDesk(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.HasSpaceInHousehold(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.HaveAbortion
  - TinyLife.Actions.ActionType.HaveBaby
  - TinyLife.Actions.ActionType.HaveBookPublished
  - TinyLife.Actions.ActionType.HelpBabyBook
  - TinyLife.Actions.ActionType.HelpPotty
  - TinyLife.Actions.ActionType.HelpWithTraining
  - TinyLife.Actions.ActionType.HomeworkHelp
  - TinyLife.Actions.ActionType.HowYouveGrown
  - TinyLife.Actions.ActionType.ImplyHomeSmarter
  - TinyLife.Actions.ActionType.ImplyMotherIsCamel
  - TinyLife.Actions.ActionType.InspectBaby
  - TinyLife.Actions.ActionType.Insult
  - TinyLife.Actions.ActionType.InviteIn
  - TinyLife.Actions.ActionType.InviteToHousehold
  - TinyLife.Actions.ActionType.IsActionType(System.Type)
  - TinyLife.Actions.ActionType.IsDislikedOrMean(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.IsNotEmotional(TinyLife.Actions.ActionInfo,TinyLife.Emotions.EmotionType[])
  - TinyLife.Actions.ActionType.IsNotExpired(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.IsNotHoldingPerson(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.IsNotPregnant(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo,System.Boolean)
  - TinyLife.Actions.ActionType.JoinAdvancedTournament
  - TinyLife.Actions.ActionType.JoinEasyTournament
  - TinyLife.Actions.ActionType.JokeAboutAromance
  - TinyLife.Actions.ActionType.JokeAboutAsexuality
  - TinyLife.Actions.ActionType.JokeAboutFamilyGatherings
  - TinyLife.Actions.ActionType.JokeAboutOverspending
  - TinyLife.Actions.ActionType.JokeAboutOwnUnemployment
  - TinyLife.Actions.ActionType.JokeAboutSmartHome
  - TinyLife.Actions.ActionType.JokeAboutTreadmillAccidents
  - TinyLife.Actions.ActionType.JokeAboutTrees
  - TinyLife.Actions.ActionType.JokeAboutWork
  - TinyLife.Actions.ActionType.JokeAboutWritingStyle
  - TinyLife.Actions.ActionType.Kiss
  - TinyLife.Actions.ActionType.LiftWeights
  - TinyLife.Actions.ActionType.Light
  - TinyLife.Actions.ActionType.LockDoor
  - TinyLife.Actions.ActionType.LotEmploymentIdle
  - TinyLife.Actions.ActionType.MakeFunOfBeingBadAtSchool
  - TinyLife.Actions.ActionType.MakeFunOfBeingNerd
  - TinyLife.Actions.ActionType.MakeFunOfBeingOutdoorsy
  - TinyLife.Actions.ActionType.MakeFunOfFoodIntolerance
  - TinyLife.Actions.ActionType.MakeFunOfFriends
  - TinyLife.Actions.ActionType.MakeFunOfIntroversion
  - TinyLife.Actions.ActionType.MakeFunOfLaziness
  - TinyLife.Actions.ActionType.MakeFunOfNiceness
  - TinyLife.Actions.ActionType.MakeFunOfPoorFitness
  - TinyLife.Actions.ActionType.MakeFunOfUnemployment
  - TinyLife.Actions.ActionType.MakeRisqueRemark
  - TinyLife.Actions.ActionType.MakeTea
  - TinyLife.Actions.ActionType.MixProteinShake
  - TinyLife.Actions.ActionType.ModGame
  - TinyLife.Actions.ActionType.MopPuddle
  - TinyLife.Actions.ActionType.MoveHere
  - TinyLife.Actions.ActionType.OrderCafeFood
  - TinyLife.Actions.ActionType.OrderCoffee
  - TinyLife.Actions.ActionType.OrderTea
  - TinyLife.Actions.ActionType.Paint
  - TinyLife.Actions.ActionType.PassOut
  - TinyLife.Actions.ActionType.PayBills
  - TinyLife.Actions.ActionType.PeeSelf
  - TinyLife.Actions.ActionType.PickUp
  - TinyLife.Actions.ActionType.PickUpPerson
  - TinyLife.Actions.ActionType.PlayInSandbox
  - TinyLife.Actions.ActionType.PlayOnJungleGym
  - TinyLife.Actions.ActionType.PlayOnlineGames
  - TinyLife.Actions.ActionType.PlaySingleplayerGames
  - TinyLife.Actions.ActionType.PlayTrick
  - TinyLife.Actions.ActionType.PlayWithToy
  - TinyLife.Actions.ActionType.PoseMathPuzzle
  - TinyLife.Actions.ActionType.Potty
  - TinyLife.Actions.ActionType.PracticeJokes
  - TinyLife.Actions.ActionType.PracticeProgramming
  - TinyLife.Actions.ActionType.PracticeSalesPitch
  - TinyLife.Actions.ActionType.PracticeSpeech
  - TinyLife.Actions.ActionType.PracticeWriting
  - TinyLife.Actions.ActionType.PrepareFood
  - TinyLife.Actions.ActionType.PrepareOrder
  - TinyLife.Actions.ActionType.PsychSelfUp
  - TinyLife.Actions.ActionType.PublishApp
  - TinyLife.Actions.ActionType.PutAway
  - TinyLife.Actions.ActionType.PutDown
  - TinyLife.Actions.ActionType.PutDownPerson
  - TinyLife.Actions.ActionType.PutInCrib
  - TinyLife.Actions.ActionType.PutInFridge
  - TinyLife.Actions.ActionType.Puzzle
  - TinyLife.Actions.ActionType.QuitJob
  - TinyLife.Actions.ActionType.Read
  - TinyLife.Actions.ActionType.ReadBabyBook
  - TinyLife.Actions.ActionType.ReadJokes
  - TinyLife.Actions.ActionType.ReadNewspaper
  - TinyLife.Actions.ActionType.ReadSkillBook
  - TinyLife.Actions.ActionType.ReciteLovePoem
  - TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  - TinyLife.Actions.ActionType.Repair
  - TinyLife.Actions.ActionType.ResearchBusinessPlans
  - TinyLife.Actions.ActionType.ResearchProgrammingPatterns
  - TinyLife.Actions.ActionType.Rummage
  - TinyLife.Actions.ActionType.RunAround
  - TinyLife.Actions.ActionType.RunOnTreadmill
  - TinyLife.Actions.ActionType.Scrap
  - TinyLife.Actions.ActionType.SelfPublishBook
  - TinyLife.Actions.ActionType.Sell
  - TinyLife.Actions.ActionType.Settings
  - TinyLife.Actions.ActionType.ShakeTree
  - TinyLife.Actions.ActionType.ShareIdeas
  - TinyLife.Actions.ActionType.ShooChild
  - TinyLife.Actions.ActionType.ShufflePuzzle
  - TinyLife.Actions.ActionType.Sit
  - TinyLife.Actions.ActionType.SitToilet
  - TinyLife.Actions.ActionType.Sleep
  - TinyLife.Actions.ActionType.SleepInCrib
  - TinyLife.Actions.ActionType.SourceString
  - TinyLife.Actions.ActionType.StartDating
  - TinyLife.Actions.ActionType.Starve
  - TinyLife.Actions.ActionType.Store
  - TinyLife.Actions.ActionType.StudyBook
  - TinyLife.Actions.ActionType.SuggestThriftstores
  - TinyLife.Actions.ActionType.TakeFromFridge
  - TinyLife.Actions.ActionType.TakeOutOfCrib
  - TinyLife.Actions.ActionType.TakeOutTrash
  - TinyLife.Actions.ActionType.TakeParentalLeave
  - TinyLife.Actions.ActionType.TakePregnancyTest
  - TinyLife.Actions.ActionType.TakeShower
  - TinyLife.Actions.ActionType.TakeVacationDay
  - TinyLife.Actions.ActionType.Talk
  - TinyLife.Actions.ActionType.TalkAboutBestSpots
  - TinyLife.Actions.ActionType.TalkAboutBestToy
  - TinyLife.Actions.ActionType.TalkAboutCartoons
  - TinyLife.Actions.ActionType.TalkAboutFamily
  - TinyLife.Actions.ActionType.TalkAboutFavoriteToys
  - TinyLife.Actions.ActionType.TalkAboutFeelings
  - TinyLife.Actions.ActionType.TalkAboutFood
  - TinyLife.Actions.ActionType.TalkAboutFunnyCityName
  - TinyLife.Actions.ActionType.TalkAboutNaps
  - TinyLife.Actions.ActionType.TalkAboutNatureWalks
  - TinyLife.Actions.ActionType.TalkAboutNeighborhood
  - TinyLife.Actions.ActionType.TalkAboutOutdoors
  - TinyLife.Actions.ActionType.TalkAboutPlaying
  - TinyLife.Actions.ActionType.TalkAboutSchool
  - TinyLife.Actions.ActionType.TalkAboutSpicyFood
  - TinyLife.Actions.ActionType.TalkAboutWatchingTv
  - TinyLife.Actions.ActionType.TalkAboutWork
  - TinyLife.Actions.ActionType.TeachLifeLesson
  - TinyLife.Actions.ActionType.TellComplexJoke
  - TinyLife.Actions.ActionType.TellDadJoke
  - TinyLife.Actions.ActionType.TellEngagingStory
  - TinyLife.Actions.ActionType.TellFunnyStory
  - TinyLife.Actions.ActionType.TellJoke
  - TinyLife.Actions.ActionType.TellJokeAboutSomething
  - TinyLife.Actions.ActionType.TellRidiculousStory
  - TinyLife.Actions.ActionType.TellStory
  - TinyLife.Actions.ActionType.ThisIsInappropriate
  - TinyLife.Actions.ActionType.ThrowAway
  - TinyLife.Actions.ActionType.TinkerWith
  - TinyLife.Actions.ActionType.ToggleAllLights
  - TinyLife.Actions.ActionType.ToggleLight
  - TinyLife.Actions.ActionType.ToggleNewspapers
  - TinyLife.Actions.ActionType.ToggleTryingForBaby
  - TinyLife.Actions.ActionType.Types
  - TinyLife.Actions.ActionType.UseDiaper
  - TinyLife.Actions.ActionType.VisitLot
  - TinyLife.Actions.ActionType.VisitorGoHome
  - TinyLife.Actions.ActionType.WaitForOrder
  - TinyLife.Actions.ActionType.WakeUp
  - TinyLife.Actions.ActionType.Walk
  - TinyLife.Actions.ActionType.WashHands
  - TinyLife.Actions.ActionType.WatchTv
  - TinyLife.Actions.ActionType.WatchWalkthroughs
  - TinyLife.Actions.ActionType.Woodworking
  - TinyLife.Actions.ActionType.Work
  - TinyLife.Actions.ActionType.WriteBook
  - TinyLife.Actions.ActionType.YoureSoTall
  langs:
  - csharp
  - vb
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
  type: Class
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ActionType
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 16
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nAction types are blueprints for <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> instances which can be registered using <xref href=\"TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)\" data-throw-if-not-resolved=\"false\"></xref>.\nAn action type contains information about its action and can create an instance using <xref href=\"TinyLife.Actions.ActionType.TypeSettings.ConstructedType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(StaticJsonConverter<ActionType>), new object[] { typeof(ActionType), "PrivateTypes" })]

      public class ActionType : IEmotionSource
    content.vb: >-
      <JsonConverter(GetType(StaticJsonConverter(Of ActionType)), New Object() { GetType(ActionType), "PrivateTypes" })>

      Public Class ActionType Implements IEmotionSource
  inheritance:
  - System.Object
  implements:
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.ActionType.TinyLife.Utilities.Extensions.JsonCopy``1
- uid: TinyLife.Actions.ActionType.Types
  commentId: F:TinyLife.Actions.ActionType.Types
  id: Types
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: ActionType.Types
  fullName: TinyLife.Actions.ActionType.Types
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Types
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 33
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA list of all available action types.\nTo register your own action types, use the <xref href=\"TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public static readonly ReadOnlyDictionary<string, ActionType> Types
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Actions.ActionType}
    content.vb: Public Shared ReadOnly Types As ReadOnlyDictionary(Of String, ActionType)
- uid: TinyLife.Actions.ActionType.Settings
  commentId: F:TinyLife.Actions.ActionType.Settings
  id: Settings
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: ActionType.Settings
  fullName: TinyLife.Actions.ActionType.Settings
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Settings
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 38
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nThe <xref href=\"TinyLife.Actions.ActionType.TypeSettings\" data-throw-if-not-resolved=\"false\"></xref> for this action type, which actually contain this type&apos;s properties.\n"
  example: []
  syntax:
    content: public readonly ActionType.TypeSettings Settings
    return:
      type: TinyLife.Actions.ActionType.TypeSettings
    content.vb: Public ReadOnly Settings As ActionType.TypeSettings
- uid: TinyLife.Actions.ActionType.SourceString
  commentId: P:TinyLife.Actions.ActionType.SourceString
  id: SourceString
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: ActionType.SourceString
  fullName: TinyLife.Actions.ActionType.SourceString
  type: Property
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SourceString
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 40
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA (localized) string that is displayed when hovering over an <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that has this source\n"
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.Actions.ActionType.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
- uid: TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
  commentId: M:TinyLife.Actions.ActionType.Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
  id: Construct``1(TinyLife.Actions.ActionInfo,TinyLife.Actions.ActionVariety)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Construct<T>(ActionInfo, ActionVariety)
  nameWithType: ActionType.Construct<T>(ActionInfo, ActionVariety)
  fullName: TinyLife.Actions.ActionType.Construct<T>(TinyLife.Actions.ActionInfo, TinyLife.Actions.ActionVariety)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Construct
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nCreates a new <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> instance of this <xref href=\"TinyLife.Actions.ActionType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public T Construct<T>(ActionInfo info, ActionVariety variety = null) where T : Action'
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The info that this action should be constructed with
    - id: variety
      type: TinyLife.Actions.ActionVariety
      description: The variety, or null if this action has no varieties
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: A new action instance with the given information
    content.vb: Public Function Construct(Of T As Action)(info As ActionInfo, variety As ActionVariety = Nothing) As T
  overload: TinyLife.Actions.ActionType.Construct*
  nameWithType.vb: ActionType.Construct(Of T)(ActionInfo, ActionVariety)
  fullName.vb: TinyLife.Actions.ActionType.Construct(Of T)(TinyLife.Actions.ActionInfo, TinyLife.Actions.ActionVariety)
  name.vb: Construct(Of T)(ActionInfo, ActionVariety)
- uid: TinyLife.Actions.ActionType.GetDisplayName(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.GetDisplayName(TinyLife.Actions.ActionInfo,System.Boolean)
  id: GetDisplayName(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetDisplayName(ActionInfo, bool)
  nameWithType: ActionType.GetDisplayName(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.GetDisplayName(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetDisplayName
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 70
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a localized string that explains this action type in short.\nNote that, for instantiated actions, <xref href=\"TinyLife.Actions.Action.GetDisplayName\" data-throw-if-not-resolved=\"false\"></xref> should be used.\n"
  example: []
  syntax:
    content: public string GetDisplayName(ActionInfo info, bool includeIcon = true)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info, can be null if no action info is present
    - id: includeIcon
      type: System.Boolean
      description: Whether the <xref href="TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)" data-throw-if-not-resolved="false"></xref> texture should be included at the start of the name
    return:
      type: System.String
      description: This action type&apos;s display name
    content.vb: Public Function GetDisplayName(info As ActionInfo, includeIcon As Boolean = True) As String
  overload: TinyLife.Actions.ActionType.GetDisplayName*
  nameWithType.vb: ActionType.GetDisplayName(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.GetDisplayName(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: GetDisplayName(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsActionType(System.Type)
  commentId: M:TinyLife.Actions.ActionType.IsActionType(System.Type)
  id: IsActionType(System.Type)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsActionType(Type)
  nameWithType: ActionType.IsActionType(Type)
  fullName: TinyLife.Actions.ActionType.IsActionType(System.Type)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsActionType
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 80
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns whether this action type&apos;s <xref href=\"TinyLife.Actions.ActionType.TypeSettings.ConstructedType\" data-throw-if-not-resolved=\"false\"></xref> is or extends the passed type <code data-dev-comment-type=\"paramref\" class=\"paramref\">t</code>.\nThis method is equivalent to <code>Settings.ConstructedType.IsAssignableTo(t)</code>.\n"
  example: []
  syntax:
    content: public bool IsActionType(Type t)
    parameters:
    - id: t
      type: System.Type
      description: The type to compare this action&apos;s constructed type to
    return:
      type: System.Boolean
      description: true if the passed type is a supertype of, or the same type as, this action&apos;s constructed type
    content.vb: Public Function IsActionType(t As Type) As Boolean
  overload: TinyLife.Actions.ActionType.IsActionType*
- uid: TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  id: GetIconName(TinyLife.Actions.ActionInfo)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetIconName(ActionInfo)
  nameWithType: ActionType.GetIconName(ActionInfo)
  fullName: TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetIconName
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 90
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns the name of this action type&apos;s icon, which is either the manually assigned icon (<xref href=\"TinyLife.Actions.ActionType.TypeSettings.IconName\" data-throw-if-not-resolved=\"false\"></xref>), or an automatically assigned icon based on this action type&apos;s requirements, including <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredSkill\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality\" data-throw-if-not-resolved=\"false\"></xref>.\nThe icon name can be used in a <xref href=\"MLEM.Ui.Elements.Paragraph\" data-throw-if-not-resolved=\"false\"></xref> as a <xref href=\"MLEM.Formatting.Codes.ImageCode\" data-throw-if-not-resolved=\"false\"></xref> as follows: <code>&lt;c IconName></code>\n"
  example: []
  syntax:
    content: public string GetIconName(ActionInfo info)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info, can be null if no action info is present
    return:
      type: System.String
      description: The name of this action type&apos;s icon
    content.vb: Public Function GetIconName(info As ActionInfo) As String
  overload: TinyLife.Actions.ActionType.GetIconName*
- uid: TinyLife.Actions.ActionType.GetVarieties(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.GetVarieties(TinyLife.Actions.ActionInfo,System.Boolean)
  id: GetVarieties(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetVarieties(ActionInfo, bool)
  nameWithType: ActionType.GetVarieties(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.GetVarieties(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetVarieties
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 107
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nConstructs and returns a set of <xref href=\"TinyLife.Actions.ActionType.TypeSettings.Varieties\" data-throw-if-not-resolved=\"false\"></xref> for this action.\nNote that the information specified in the <xref href=\"TinyLife.Actions.ActionType.TypeSettings.Varieties\" data-throw-if-not-resolved=\"false\"></xref> documentation applies.\nThis method also handles the appropriate error detection, so that the game does not crash when varities cause an exception.\n"
  example: []
  syntax:
    content: public IEnumerable<ActionVariety> GetVarieties(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info to create the varieties for.
    - id: automatic
      type: System.Boolean
      description: Whether the action variety should be selected automatically.
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
      description: The varieties for the given action info.
    content.vb: Public Function GetVarieties(info As ActionInfo, automatic As Boolean) As IEnumerable(Of ActionVariety)
  overload: TinyLife.Actions.ActionType.GetVarieties*
  nameWithType.vb: ActionType.GetVarieties(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.GetVarieties(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: GetVarieties(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  commentId: M:TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  id: Register(TinyLife.Actions.ActionType.TypeSettings)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Register(TypeSettings)
  nameWithType: ActionType.Register(ActionType.TypeSettings)
  fullName: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Register
    path: ../TinyLife/Actions/ActionType.cs
    startLine: 140
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nRegisters a new action type with the given <xref href=\"TinyLife.Actions.ActionType.TypeSettings\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static ActionType Register(ActionType.TypeSettings settings)
    parameters:
    - id: settings
      type: TinyLife.Actions.ActionType.TypeSettings
      description: The settings that the action type should have
    return:
      type: TinyLife.Actions.ActionType
      description: The resulting action type instance
    content.vb: Public Shared Function Register(settings As ActionType.TypeSettings) As ActionType
  overload: TinyLife.Actions.ActionType.Register*
- uid: TinyLife.Actions.ActionType.DebugTeleport
  commentId: F:TinyLife.Actions.ActionType.DebugTeleport
  id: DebugTeleport
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DebugTeleport
  nameWithType: ActionType.DebugTeleport
  fullName: TinyLife.Actions.ActionType.DebugTeleport
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DebugTeleport
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 10
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DebugTeleport
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DebugTeleport As ActionType
- uid: TinyLife.Actions.ActionType.DebugDie
  commentId: F:TinyLife.Actions.ActionType.DebugDie
  id: DebugDie
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DebugDie
  nameWithType: ActionType.DebugDie
  fullName: TinyLife.Actions.ActionType.DebugDie
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DebugDie
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 11
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DebugDie
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DebugDie As ActionType
- uid: TinyLife.Actions.ActionType.DebugAddToHousehold
  commentId: F:TinyLife.Actions.ActionType.DebugAddToHousehold
  id: DebugAddToHousehold
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DebugAddToHousehold
  nameWithType: ActionType.DebugAddToHousehold
  fullName: TinyLife.Actions.ActionType.DebugAddToHousehold
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DebugAddToHousehold
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 12
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DebugAddToHousehold
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DebugAddToHousehold As ActionType
- uid: TinyLife.Actions.ActionType.DebugToggleBroken
  commentId: F:TinyLife.Actions.ActionType.DebugToggleBroken
  id: DebugToggleBroken
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DebugToggleBroken
  nameWithType: ActionType.DebugToggleBroken
  fullName: TinyLife.Actions.ActionType.DebugToggleBroken
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DebugToggleBroken
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 13
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DebugToggleBroken
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DebugToggleBroken As ActionType
- uid: TinyLife.Actions.ActionType.DebugToggleDirty
  commentId: F:TinyLife.Actions.ActionType.DebugToggleDirty
  id: DebugToggleDirty
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DebugToggleDirty
  nameWithType: ActionType.DebugToggleDirty
  fullName: TinyLife.Actions.ActionType.DebugToggleDirty
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DebugToggleDirty
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 15
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DebugToggleDirty
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DebugToggleDirty As ActionType
- uid: TinyLife.Actions.ActionType.Walk
  commentId: F:TinyLife.Actions.ActionType.Walk
  id: Walk
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Walk
  nameWithType: ActionType.Walk
  fullName: TinyLife.Actions.ActionType.Walk
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Walk
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Walk
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Walk As ActionType
- uid: TinyLife.Actions.ActionType.Drive
  commentId: F:TinyLife.Actions.ActionType.Drive
  id: Drive
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Drive
  nameWithType: ActionType.Drive
  fullName: TinyLife.Actions.ActionType.Drive
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Drive
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Drive
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Drive As ActionType
- uid: TinyLife.Actions.ActionType.PassOut
  commentId: F:TinyLife.Actions.ActionType.PassOut
  id: PassOut
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PassOut
  nameWithType: ActionType.PassOut
  fullName: TinyLife.Actions.ActionType.PassOut
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PassOut
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 22
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PassOut
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PassOut As ActionType
- uid: TinyLife.Actions.ActionType.PeeSelf
  commentId: F:TinyLife.Actions.ActionType.PeeSelf
  id: PeeSelf
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PeeSelf
  nameWithType: ActionType.PeeSelf
  fullName: TinyLife.Actions.ActionType.PeeSelf
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PeeSelf
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 23
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PeeSelf
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PeeSelf As ActionType
- uid: TinyLife.Actions.ActionType.Starve
  commentId: F:TinyLife.Actions.ActionType.Starve
  id: Starve
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Starve
  nameWithType: ActionType.Starve
  fullName: TinyLife.Actions.ActionType.Starve
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Starve
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Starve
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Starve As ActionType
- uid: TinyLife.Actions.ActionType.BeAwayFromLotEmployment
  commentId: F:TinyLife.Actions.ActionType.BeAwayFromLotEmployment
  id: BeAwayFromLotEmployment
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BeAwayFromLotEmployment
  nameWithType: ActionType.BeAwayFromLotEmployment
  fullName: TinyLife.Actions.ActionType.BeAwayFromLotEmployment
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BeAwayFromLotEmployment
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 25
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BeAwayFromLotEmployment
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BeAwayFromLotEmployment As ActionType
- uid: TinyLife.Actions.ActionType.DeliverMail
  commentId: F:TinyLife.Actions.ActionType.DeliverMail
  id: DeliverMail
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DeliverMail
  nameWithType: ActionType.DeliverMail
  fullName: TinyLife.Actions.ActionType.DeliverMail
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DeliverMail
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DeliverMail
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DeliverMail As ActionType
- uid: TinyLife.Actions.ActionType.DeliverNewspaper
  commentId: F:TinyLife.Actions.ActionType.DeliverNewspaper
  id: DeliverNewspaper
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DeliverNewspaper
  nameWithType: ActionType.DeliverNewspaper
  fullName: TinyLife.Actions.ActionType.DeliverNewspaper
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DeliverNewspaper
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 30
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DeliverNewspaper
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DeliverNewspaper As ActionType
- uid: TinyLife.Actions.ActionType.Die
  commentId: F:TinyLife.Actions.ActionType.Die
  id: Die
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Die
  nameWithType: ActionType.Die
  fullName: TinyLife.Actions.ActionType.Die
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Die
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Die
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Die As ActionType
- uid: TinyLife.Actions.ActionType.CollectTrash
  commentId: F:TinyLife.Actions.ActionType.CollectTrash
  id: CollectTrash
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CollectTrash
  nameWithType: ActionType.CollectTrash
  fullName: TinyLife.Actions.ActionType.CollectTrash
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CollectTrash
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CollectTrash
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CollectTrash As ActionType
- uid: TinyLife.Actions.ActionType.VisitorGoHome
  commentId: F:TinyLife.Actions.ActionType.VisitorGoHome
  id: VisitorGoHome
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: VisitorGoHome
  nameWithType: ActionType.VisitorGoHome
  fullName: TinyLife.Actions.ActionType.VisitorGoHome
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: VisitorGoHome
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType VisitorGoHome
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly VisitorGoHome As ActionType
- uid: TinyLife.Actions.ActionType.GetFoodSomewhereElse
  commentId: F:TinyLife.Actions.ActionType.GetFoodSomewhereElse
  id: GetFoodSomewhereElse
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetFoodSomewhereElse
  nameWithType: ActionType.GetFoodSomewhereElse
  fullName: TinyLife.Actions.ActionType.GetFoodSomewhereElse
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetFoodSomewhereElse
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetFoodSomewhereElse
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetFoodSomewhereElse As ActionType
- uid: TinyLife.Actions.ActionType.LotEmploymentIdle
  commentId: F:TinyLife.Actions.ActionType.LotEmploymentIdle
  id: LotEmploymentIdle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: LotEmploymentIdle
  nameWithType: ActionType.LotEmploymentIdle
  fullName: TinyLife.Actions.ActionType.LotEmploymentIdle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LotEmploymentIdle
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 48
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType LotEmploymentIdle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly LotEmploymentIdle As ActionType
- uid: TinyLife.Actions.ActionType.PrepareOrder
  commentId: F:TinyLife.Actions.ActionType.PrepareOrder
  id: PrepareOrder
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PrepareOrder
  nameWithType: ActionType.PrepareOrder
  fullName: TinyLife.Actions.ActionType.PrepareOrder
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PrepareOrder
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 51
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PrepareOrder
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PrepareOrder As ActionType
- uid: TinyLife.Actions.ActionType.WaitForOrder
  commentId: F:TinyLife.Actions.ActionType.WaitForOrder
  id: WaitForOrder
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: WaitForOrder
  nameWithType: ActionType.WaitForOrder
  fullName: TinyLife.Actions.ActionType.WaitForOrder
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WaitForOrder
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType WaitForOrder
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly WaitForOrder As ActionType
- uid: TinyLife.Actions.ActionType.GetFoodFromDisplayCase
  commentId: F:TinyLife.Actions.ActionType.GetFoodFromDisplayCase
  id: GetFoodFromDisplayCase
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetFoodFromDisplayCase
  nameWithType: ActionType.GetFoodFromDisplayCase
  fullName: TinyLife.Actions.ActionType.GetFoodFromDisplayCase
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetFoodFromDisplayCase
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 53
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetFoodFromDisplayCase
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetFoodFromDisplayCase As ActionType
- uid: TinyLife.Actions.ActionType.AgeUp
  commentId: F:TinyLife.Actions.ActionType.AgeUp
  id: AgeUp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AgeUp
  nameWithType: ActionType.AgeUp
  fullName: TinyLife.Actions.ActionType.AgeUp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AgeUp
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 54
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AgeUp
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AgeUp As ActionType
- uid: TinyLife.Actions.ActionType.CelebrateBirthday
  commentId: F:TinyLife.Actions.ActionType.CelebrateBirthday
  id: CelebrateBirthday
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CelebrateBirthday
  nameWithType: ActionType.CelebrateBirthday
  fullName: TinyLife.Actions.ActionType.CelebrateBirthday
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CelebrateBirthday
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 55
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CelebrateBirthday
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CelebrateBirthday As ActionType
- uid: TinyLife.Actions.ActionType.HelpWithTraining
  commentId: F:TinyLife.Actions.ActionType.HelpWithTraining
  id: HelpWithTraining
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HelpWithTraining
  nameWithType: ActionType.HelpWithTraining
  fullName: TinyLife.Actions.ActionType.HelpWithTraining
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Internal.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HelpWithTraining
    path: ../TinyLife/Actions/ActionType.Internal.cs
    startLine: 58
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType HelpWithTraining
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly HelpWithTraining As ActionType
- uid: TinyLife.Actions.ActionType.GoHere
  commentId: F:TinyLife.Actions.ActionType.GoHere
  id: GoHere
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GoHere
  nameWithType: ActionType.GoHere
  fullName: TinyLife.Actions.ActionType.GoHere
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoHere
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GoHere
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GoHere As ActionType
- uid: TinyLife.Actions.ActionType.Sit
  commentId: F:TinyLife.Actions.ActionType.Sit
  id: Sit
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Sit
  nameWithType: ActionType.Sit
  fullName: TinyLife.Actions.ActionType.Sit
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Sit
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Sit
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Sit As ActionType
- uid: TinyLife.Actions.ActionType.SitToilet
  commentId: F:TinyLife.Actions.ActionType.SitToilet
  id: SitToilet
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: SitToilet
  nameWithType: ActionType.SitToilet
  fullName: TinyLife.Actions.ActionType.SitToilet
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SitToilet
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 32
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType SitToilet
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly SitToilet As ActionType
- uid: TinyLife.Actions.ActionType.Sleep
  commentId: F:TinyLife.Actions.ActionType.Sleep
  id: Sleep
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Sleep
  nameWithType: ActionType.Sleep
  fullName: TinyLife.Actions.ActionType.Sleep
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Sleep
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 39
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Sleep
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Sleep As ActionType
- uid: TinyLife.Actions.ActionType.TakeShower
  commentId: F:TinyLife.Actions.ActionType.TakeShower
  id: TakeShower
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakeShower
  nameWithType: ActionType.TakeShower
  fullName: TinyLife.Actions.ActionType.TakeShower
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeShower
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 47
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakeShower
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakeShower As ActionType
- uid: TinyLife.Actions.ActionType.GetIngredientsSingle
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsSingle
  id: GetIngredientsSingle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetIngredientsSingle
  nameWithType: ActionType.GetIngredientsSingle
  fullName: TinyLife.Actions.ActionType.GetIngredientsSingle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetIngredientsSingle
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 55
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetIngredientsSingle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetIngredientsSingle As ActionType
- uid: TinyLife.Actions.ActionType.GetIngredientsFamily
  commentId: F:TinyLife.Actions.ActionType.GetIngredientsFamily
  id: GetIngredientsFamily
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetIngredientsFamily
  nameWithType: ActionType.GetIngredientsFamily
  fullName: TinyLife.Actions.ActionType.GetIngredientsFamily
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetIngredientsFamily
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 56
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetIngredientsFamily
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetIngredientsFamily As ActionType
- uid: TinyLife.Actions.ActionType.GetBakingIngredients
  commentId: F:TinyLife.Actions.ActionType.GetBakingIngredients
  id: GetBakingIngredients
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetBakingIngredients
  nameWithType: ActionType.GetBakingIngredients
  fullName: TinyLife.Actions.ActionType.GetBakingIngredients
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetBakingIngredients
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 57
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetBakingIngredients
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetBakingIngredients As ActionType
- uid: TinyLife.Actions.ActionType.PutDown
  commentId: F:TinyLife.Actions.ActionType.PutDown
  id: PutDown
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PutDown
  nameWithType: ActionType.PutDown
  fullName: TinyLife.Actions.ActionType.PutDown
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PutDown
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 58
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PutDown
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PutDown As ActionType
- uid: TinyLife.Actions.ActionType.PrepareFood
  commentId: F:TinyLife.Actions.ActionType.PrepareFood
  id: PrepareFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PrepareFood
  nameWithType: ActionType.PrepareFood
  fullName: TinyLife.Actions.ActionType.PrepareFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PrepareFood
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 68
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PrepareFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PrepareFood As ActionType
- uid: TinyLife.Actions.ActionType.CookFood
  commentId: F:TinyLife.Actions.ActionType.CookFood
  id: CookFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CookFood
  nameWithType: ActionType.CookFood
  fullName: TinyLife.Actions.ActionType.CookFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CookFood
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 77
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CookFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CookFood As ActionType
- uid: TinyLife.Actions.ActionType.BakeFood
  commentId: F:TinyLife.Actions.ActionType.BakeFood
  id: BakeFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BakeFood
  nameWithType: ActionType.BakeFood
  fullName: TinyLife.Actions.ActionType.BakeFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BakeFood
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 88
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BakeFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BakeFood As ActionType
- uid: TinyLife.Actions.ActionType.PickUp
  commentId: F:TinyLife.Actions.ActionType.PickUp
  id: PickUp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PickUp
  nameWithType: ActionType.PickUp
  fullName: TinyLife.Actions.ActionType.PickUp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PickUp
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 99
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PickUp
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PickUp As ActionType
- uid: TinyLife.Actions.ActionType.Eat
  commentId: F:TinyLife.Actions.ActionType.Eat
  id: Eat
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Eat
  nameWithType: ActionType.Eat
  fullName: TinyLife.Actions.ActionType.Eat
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Eat
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 104
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Eat
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Eat As ActionType
- uid: TinyLife.Actions.ActionType.GrabServing
  commentId: F:TinyLife.Actions.ActionType.GrabServing
  id: GrabServing
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GrabServing
  nameWithType: ActionType.GrabServing
  fullName: TinyLife.Actions.ActionType.GrabServing
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GrabServing
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 129
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GrabServing
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GrabServing As ActionType
- uid: TinyLife.Actions.ActionType.CallToMeal
  commentId: F:TinyLife.Actions.ActionType.CallToMeal
  id: CallToMeal
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CallToMeal
  nameWithType: ActionType.CallToMeal
  fullName: TinyLife.Actions.ActionType.CallToMeal
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CallToMeal
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 148
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CallToMeal
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CallToMeal As ActionType
- uid: TinyLife.Actions.ActionType.PlaySingleplayerGames
  commentId: F:TinyLife.Actions.ActionType.PlaySingleplayerGames
  id: PlaySingleplayerGames
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PlaySingleplayerGames
  nameWithType: ActionType.PlaySingleplayerGames
  fullName: TinyLife.Actions.ActionType.PlaySingleplayerGames
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlaySingleplayerGames
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 155
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PlaySingleplayerGames
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PlaySingleplayerGames As ActionType
- uid: TinyLife.Actions.ActionType.PlayOnlineGames
  commentId: F:TinyLife.Actions.ActionType.PlayOnlineGames
  id: PlayOnlineGames
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PlayOnlineGames
  nameWithType: ActionType.PlayOnlineGames
  fullName: TinyLife.Actions.ActionType.PlayOnlineGames
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlayOnlineGames
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 156
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PlayOnlineGames
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PlayOnlineGames As ActionType
- uid: TinyLife.Actions.ActionType.WatchWalkthroughs
  commentId: F:TinyLife.Actions.ActionType.WatchWalkthroughs
  id: WatchWalkthroughs
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: WatchWalkthroughs
  nameWithType: ActionType.WatchWalkthroughs
  fullName: TinyLife.Actions.ActionType.WatchWalkthroughs
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WatchWalkthroughs
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 157
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType WatchWalkthroughs
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly WatchWalkthroughs As ActionType
- uid: TinyLife.Actions.ActionType.JoinEasyTournament
  commentId: F:TinyLife.Actions.ActionType.JoinEasyTournament
  id: JoinEasyTournament
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JoinEasyTournament
  nameWithType: ActionType.JoinEasyTournament
  fullName: TinyLife.Actions.ActionType.JoinEasyTournament
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JoinEasyTournament
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 158
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JoinEasyTournament
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JoinEasyTournament As ActionType
- uid: TinyLife.Actions.ActionType.JoinAdvancedTournament
  commentId: F:TinyLife.Actions.ActionType.JoinAdvancedTournament
  id: JoinAdvancedTournament
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JoinAdvancedTournament
  nameWithType: ActionType.JoinAdvancedTournament
  fullName: TinyLife.Actions.ActionType.JoinAdvancedTournament
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JoinAdvancedTournament
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 159
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JoinAdvancedTournament
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JoinAdvancedTournament As ActionType
- uid: TinyLife.Actions.ActionType.Chat
  commentId: F:TinyLife.Actions.ActionType.Chat
  id: Chat
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Chat
  nameWithType: ActionType.Chat
  fullName: TinyLife.Actions.ActionType.Chat
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Chat
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 160
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Chat
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Chat As ActionType
- uid: TinyLife.Actions.ActionType.ChatWith
  commentId: F:TinyLife.Actions.ActionType.ChatWith
  id: ChatWith
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ChatWith
  nameWithType: ActionType.ChatWith
  fullName: TinyLife.Actions.ActionType.ChatWith
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ChatWith
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 170
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ChatWith
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ChatWith As ActionType
- uid: TinyLife.Actions.ActionType.CleanDish
  commentId: F:TinyLife.Actions.ActionType.CleanDish
  id: CleanDish
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CleanDish
  nameWithType: ActionType.CleanDish
  fullName: TinyLife.Actions.ActionType.CleanDish
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CleanDish
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 174
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CleanDish
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CleanDish As ActionType
- uid: TinyLife.Actions.ActionType.ChangeOutfit
  commentId: F:TinyLife.Actions.ActionType.ChangeOutfit
  id: ChangeOutfit
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ChangeOutfit
  nameWithType: ActionType.ChangeOutfit
  fullName: TinyLife.Actions.ActionType.ChangeOutfit
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ChangeOutfit
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 183
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ChangeOutfit
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ChangeOutfit As ActionType
- uid: TinyLife.Actions.ActionType.EditOutfits
  commentId: F:TinyLife.Actions.ActionType.EditOutfits
  id: EditOutfits
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: EditOutfits
  nameWithType: ActionType.EditOutfits
  fullName: TinyLife.Actions.ActionType.EditOutfits
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EditOutfits
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 196
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType EditOutfits
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly EditOutfits As ActionType
- uid: TinyLife.Actions.ActionType.GoHome
  commentId: F:TinyLife.Actions.ActionType.GoHome
  id: GoHome
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GoHome
  nameWithType: ActionType.GoHome
  fullName: TinyLife.Actions.ActionType.GoHome
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoHome
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 199
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GoHome
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GoHome As ActionType
- uid: TinyLife.Actions.ActionType.VisitLot
  commentId: F:TinyLife.Actions.ActionType.VisitLot
  id: VisitLot
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: VisitLot
  nameWithType: ActionType.VisitLot
  fullName: TinyLife.Actions.ActionType.VisitLot
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: VisitLot
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 213
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType VisitLot
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly VisitLot As ActionType
- uid: TinyLife.Actions.ActionType.Paint
  commentId: F:TinyLife.Actions.ActionType.Paint
  id: Paint
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Paint
  nameWithType: ActionType.Paint
  fullName: TinyLife.Actions.ActionType.Paint
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Paint
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 233
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Paint
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Paint As ActionType
- uid: TinyLife.Actions.ActionType.Sell
  commentId: F:TinyLife.Actions.ActionType.Sell
  id: Sell
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Sell
  nameWithType: ActionType.Sell
  fullName: TinyLife.Actions.ActionType.Sell
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Sell
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 243
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Sell
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Sell As ActionType
- uid: TinyLife.Actions.ActionType.PracticeSpeech
  commentId: F:TinyLife.Actions.ActionType.PracticeSpeech
  id: PracticeSpeech
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PracticeSpeech
  nameWithType: ActionType.PracticeSpeech
  fullName: TinyLife.Actions.ActionType.PracticeSpeech
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PracticeSpeech
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 251
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PracticeSpeech
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PracticeSpeech As ActionType
- uid: TinyLife.Actions.ActionType.Read
  commentId: F:TinyLife.Actions.ActionType.Read
  id: Read
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Read
  nameWithType: ActionType.Read
  fullName: TinyLife.Actions.ActionType.Read
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Read
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 259
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Read
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Read As ActionType
- uid: TinyLife.Actions.ActionType.StudyBook
  commentId: F:TinyLife.Actions.ActionType.StudyBook
  id: StudyBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: StudyBook
  nameWithType: ActionType.StudyBook
  fullName: TinyLife.Actions.ActionType.StudyBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StudyBook
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 270
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType StudyBook
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly StudyBook As ActionType
- uid: TinyLife.Actions.ActionType.PutAway
  commentId: F:TinyLife.Actions.ActionType.PutAway
  id: PutAway
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PutAway
  nameWithType: ActionType.PutAway
  fullName: TinyLife.Actions.ActionType.PutAway
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PutAway
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 280
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PutAway
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PutAway As ActionType
- uid: TinyLife.Actions.ActionType.PracticeJokes
  commentId: F:TinyLife.Actions.ActionType.PracticeJokes
  id: PracticeJokes
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PracticeJokes
  nameWithType: ActionType.PracticeJokes
  fullName: TinyLife.Actions.ActionType.PracticeJokes
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PracticeJokes
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 290
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PracticeJokes
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PracticeJokes As ActionType
- uid: TinyLife.Actions.ActionType.Work
  commentId: F:TinyLife.Actions.ActionType.Work
  id: Work
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Work
  nameWithType: ActionType.Work
  fullName: TinyLife.Actions.ActionType.Work
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Work
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 298
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Work
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Work As ActionType
- uid: TinyLife.Actions.ActionType.GetJob
  commentId: F:TinyLife.Actions.ActionType.GetJob
  id: GetJob
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetJob
  nameWithType: ActionType.GetJob
  fullName: TinyLife.Actions.ActionType.GetJob
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetJob
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 307
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetJob
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetJob As ActionType
- uid: TinyLife.Actions.ActionType.TakeVacationDay
  commentId: F:TinyLife.Actions.ActionType.TakeVacationDay
  id: TakeVacationDay
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakeVacationDay
  nameWithType: ActionType.TakeVacationDay
  fullName: TinyLife.Actions.ActionType.TakeVacationDay
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeVacationDay
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 316
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakeVacationDay
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakeVacationDay As ActionType
- uid: TinyLife.Actions.ActionType.TakeParentalLeave
  commentId: F:TinyLife.Actions.ActionType.TakeParentalLeave
  id: TakeParentalLeave
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakeParentalLeave
  nameWithType: ActionType.TakeParentalLeave
  fullName: TinyLife.Actions.ActionType.TakeParentalLeave
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeParentalLeave
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 320
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakeParentalLeave
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakeParentalLeave As ActionType
- uid: TinyLife.Actions.ActionType.QuitJob
  commentId: F:TinyLife.Actions.ActionType.QuitJob
  id: QuitJob
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: QuitJob
  nameWithType: ActionType.QuitJob
  fullName: TinyLife.Actions.ActionType.QuitJob
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: QuitJob
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 324
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType QuitJob
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly QuitJob As ActionType
- uid: TinyLife.Actions.ActionType.MopPuddle
  commentId: F:TinyLife.Actions.ActionType.MopPuddle
  id: MopPuddle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MopPuddle
  nameWithType: ActionType.MopPuddle
  fullName: TinyLife.Actions.ActionType.MopPuddle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MopPuddle
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 327
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MopPuddle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MopPuddle As ActionType
- uid: TinyLife.Actions.ActionType.PracticeProgramming
  commentId: F:TinyLife.Actions.ActionType.PracticeProgramming
  id: PracticeProgramming
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PracticeProgramming
  nameWithType: ActionType.PracticeProgramming
  fullName: TinyLife.Actions.ActionType.PracticeProgramming
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PracticeProgramming
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 339
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PracticeProgramming
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PracticeProgramming As ActionType
- uid: TinyLife.Actions.ActionType.ModGame
  commentId: F:TinyLife.Actions.ActionType.ModGame
  id: ModGame
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ModGame
  nameWithType: ActionType.ModGame
  fullName: TinyLife.Actions.ActionType.ModGame
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ModGame
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 347
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] ModGame
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly ModGame As ActionType()
- uid: TinyLife.Actions.ActionType.CreateApp
  commentId: F:TinyLife.Actions.ActionType.CreateApp
  id: CreateApp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CreateApp
  nameWithType: ActionType.CreateApp
  fullName: TinyLife.Actions.ActionType.CreateApp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateApp
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 353
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] CreateApp
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly CreateApp As ActionType()
- uid: TinyLife.Actions.ActionType.PublishApp
  commentId: F:TinyLife.Actions.ActionType.PublishApp
  id: PublishApp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PublishApp
  nameWithType: ActionType.PublishApp
  fullName: TinyLife.Actions.ActionType.PublishApp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PublishApp
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 359
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PublishApp
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PublishApp As ActionType
- uid: TinyLife.Actions.ActionType.HackSomeone
  commentId: F:TinyLife.Actions.ActionType.HackSomeone
  id: HackSomeone
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HackSomeone
  nameWithType: ActionType.HackSomeone
  fullName: TinyLife.Actions.ActionType.HackSomeone
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HackSomeone
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 365
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType HackSomeone
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly HackSomeone As ActionType
- uid: TinyLife.Actions.ActionType.ResearchProgrammingPatterns
  commentId: F:TinyLife.Actions.ActionType.ResearchProgrammingPatterns
  id: ResearchProgrammingPatterns
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ResearchProgrammingPatterns
  nameWithType: ActionType.ResearchProgrammingPatterns
  fullName: TinyLife.Actions.ActionType.ResearchProgrammingPatterns
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ResearchProgrammingPatterns
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 370
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ResearchProgrammingPatterns
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ResearchProgrammingPatterns As ActionType
- uid: TinyLife.Actions.ActionType.WatchTv
  commentId: F:TinyLife.Actions.ActionType.WatchTv
  id: WatchTv
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: WatchTv
  nameWithType: ActionType.WatchTv
  fullName: TinyLife.Actions.ActionType.WatchTv
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WatchTv
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 375
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] WatchTv
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly WatchTv As ActionType()
- uid: TinyLife.Actions.ActionType.Repair
  commentId: F:TinyLife.Actions.ActionType.Repair
  id: Repair
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Repair
  nameWithType: ActionType.Repair
  fullName: TinyLife.Actions.ActionType.Repair
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Repair
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 385
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Repair
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Repair As ActionType
- uid: TinyLife.Actions.ActionType.PayBills
  commentId: F:TinyLife.Actions.ActionType.PayBills
  id: PayBills
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PayBills
  nameWithType: ActionType.PayBills
  fullName: TinyLife.Actions.ActionType.PayBills
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PayBills
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 399
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PayBills
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PayBills As ActionType
- uid: TinyLife.Actions.ActionType.PracticeWriting
  commentId: F:TinyLife.Actions.ActionType.PracticeWriting
  id: PracticeWriting
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PracticeWriting
  nameWithType: ActionType.PracticeWriting
  fullName: TinyLife.Actions.ActionType.PracticeWriting
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PracticeWriting
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 413
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PracticeWriting
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PracticeWriting As ActionType
- uid: TinyLife.Actions.ActionType.WriteBook
  commentId: F:TinyLife.Actions.ActionType.WriteBook
  id: WriteBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: WriteBook
  nameWithType: ActionType.WriteBook
  fullName: TinyLife.Actions.ActionType.WriteBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WriteBook
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 421
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] WriteBook
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly WriteBook As ActionType()
- uid: TinyLife.Actions.ActionType.SelfPublishBook
  commentId: F:TinyLife.Actions.ActionType.SelfPublishBook
  id: SelfPublishBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: SelfPublishBook
  nameWithType: ActionType.SelfPublishBook
  fullName: TinyLife.Actions.ActionType.SelfPublishBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SelfPublishBook
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 431
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType SelfPublishBook
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly SelfPublishBook As ActionType
- uid: TinyLife.Actions.ActionType.HaveBookPublished
  commentId: F:TinyLife.Actions.ActionType.HaveBookPublished
  id: HaveBookPublished
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HaveBookPublished
  nameWithType: ActionType.HaveBookPublished
  fullName: TinyLife.Actions.ActionType.HaveBookPublished
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HaveBookPublished
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 432
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType HaveBookPublished
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly HaveBookPublished As ActionType
- uid: TinyLife.Actions.ActionType.LockDoor
  commentId: F:TinyLife.Actions.ActionType.LockDoor
  id: LockDoor
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: LockDoor
  nameWithType: ActionType.LockDoor
  fullName: TinyLife.Actions.ActionType.LockDoor
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LockDoor
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 433
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType LockDoor
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly LockDoor As ActionType
- uid: TinyLife.Actions.ActionType.AdmireLgbtFlag
  commentId: F:TinyLife.Actions.ActionType.AdmireLgbtFlag
  id: AdmireLgbtFlag
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AdmireLgbtFlag
  nameWithType: ActionType.AdmireLgbtFlag
  fullName: TinyLife.Actions.ActionType.AdmireLgbtFlag
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AdmireLgbtFlag
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 438
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AdmireLgbtFlag
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AdmireLgbtFlag As ActionType
- uid: TinyLife.Actions.ActionType.GetWater
  commentId: F:TinyLife.Actions.ActionType.GetWater
  id: GetWater
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetWater
  nameWithType: ActionType.GetWater
  fullName: TinyLife.Actions.ActionType.GetWater
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetWater
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 441
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetWater
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetWater As ActionType
- uid: TinyLife.Actions.ActionType.WashHands
  commentId: F:TinyLife.Actions.ActionType.WashHands
  id: WashHands
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: WashHands
  nameWithType: ActionType.WashHands
  fullName: TinyLife.Actions.ActionType.WashHands
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WashHands
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 449
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType WashHands
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly WashHands As ActionType
- uid: TinyLife.Actions.ActionType.ToggleLight
  commentId: F:TinyLife.Actions.ActionType.ToggleLight
  id: ToggleLight
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ToggleLight
  nameWithType: ActionType.ToggleLight
  fullName: TinyLife.Actions.ActionType.ToggleLight
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ToggleLight
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 456
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ToggleLight
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ToggleLight As ActionType
- uid: TinyLife.Actions.ActionType.ToggleAllLights
  commentId: F:TinyLife.Actions.ActionType.ToggleAllLights
  id: ToggleAllLights
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ToggleAllLights
  nameWithType: ActionType.ToggleAllLights
  fullName: TinyLife.Actions.ActionType.ToggleAllLights
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ToggleAllLights
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 459
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ToggleAllLights
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ToggleAllLights As ActionType
- uid: TinyLife.Actions.ActionType.GrillFood
  commentId: F:TinyLife.Actions.ActionType.GrillFood
  id: GrillFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GrillFood
  nameWithType: ActionType.GrillFood
  fullName: TinyLife.Actions.ActionType.GrillFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GrillFood
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 471
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GrillFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GrillFood As ActionType
- uid: TinyLife.Actions.ActionType.ThrowAway
  commentId: F:TinyLife.Actions.ActionType.ThrowAway
  id: ThrowAway
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ThrowAway
  nameWithType: ActionType.ThrowAway
  fullName: TinyLife.Actions.ActionType.ThrowAway
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ThrowAway
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 481
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ThrowAway
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ThrowAway As ActionType
- uid: TinyLife.Actions.ActionType.Scrap
  commentId: F:TinyLife.Actions.ActionType.Scrap
  id: Scrap
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Scrap
  nameWithType: ActionType.Scrap
  fullName: TinyLife.Actions.ActionType.Scrap
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Scrap
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 489
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Scrap
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Scrap As ActionType
- uid: TinyLife.Actions.ActionType.CleanEverything
  commentId: F:TinyLife.Actions.ActionType.CleanEverything
  id: CleanEverything
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CleanEverything
  nameWithType: ActionType.CleanEverything
  fullName: TinyLife.Actions.ActionType.CleanEverything
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CleanEverything
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 495
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CleanEverything
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CleanEverything As ActionType
- uid: TinyLife.Actions.ActionType.Clean
  commentId: F:TinyLife.Actions.ActionType.Clean
  id: Clean
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Clean
  nameWithType: ActionType.Clean
  fullName: TinyLife.Actions.ActionType.Clean
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Clean
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 501
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Clean
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Clean As ActionType
- uid: TinyLife.Actions.ActionType.Light
  commentId: F:TinyLife.Actions.ActionType.Light
  id: Light
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Light
  nameWithType: ActionType.Light
  fullName: TinyLife.Actions.ActionType.Light
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Light
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 509
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Light
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Light As ActionType
- uid: TinyLife.Actions.ActionType.DoHomework
  commentId: F:TinyLife.Actions.ActionType.DoHomework
  id: DoHomework
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DoHomework
  nameWithType: ActionType.DoHomework
  fullName: TinyLife.Actions.ActionType.DoHomework
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DoHomework
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 518
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DoHomework
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DoHomework As ActionType
- uid: TinyLife.Actions.ActionType.PlayWithToy
  commentId: F:TinyLife.Actions.ActionType.PlayWithToy
  id: PlayWithToy
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PlayWithToy
  nameWithType: ActionType.PlayWithToy
  fullName: TinyLife.Actions.ActionType.PlayWithToy
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlayWithToy
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 530
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PlayWithToy
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PlayWithToy As ActionType
- uid: TinyLife.Actions.ActionType.CookChildFood
  commentId: F:TinyLife.Actions.ActionType.CookChildFood
  id: CookChildFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CookChildFood
  nameWithType: ActionType.CookChildFood
  fullName: TinyLife.Actions.ActionType.CookChildFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CookChildFood
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 543
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CookChildFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CookChildFood As ActionType
- uid: TinyLife.Actions.ActionType.PlayInSandbox
  commentId: F:TinyLife.Actions.ActionType.PlayInSandbox
  id: PlayInSandbox
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PlayInSandbox
  nameWithType: ActionType.PlayInSandbox
  fullName: TinyLife.Actions.ActionType.PlayInSandbox
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlayInSandbox
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 556
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PlayInSandbox
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PlayInSandbox As ActionType
- uid: TinyLife.Actions.ActionType.ShufflePuzzle
  commentId: F:TinyLife.Actions.ActionType.ShufflePuzzle
  id: ShufflePuzzle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ShufflePuzzle
  nameWithType: ActionType.ShufflePuzzle
  fullName: TinyLife.Actions.ActionType.ShufflePuzzle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShufflePuzzle
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 565
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ShufflePuzzle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ShufflePuzzle As ActionType
- uid: TinyLife.Actions.ActionType.Puzzle
  commentId: F:TinyLife.Actions.ActionType.Puzzle
  id: Puzzle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Puzzle
  nameWithType: ActionType.Puzzle
  fullName: TinyLife.Actions.ActionType.Puzzle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Puzzle
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 573
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Puzzle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Puzzle As ActionType
- uid: TinyLife.Actions.ActionType.PsychSelfUp
  commentId: F:TinyLife.Actions.ActionType.PsychSelfUp
  id: PsychSelfUp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PsychSelfUp
  nameWithType: ActionType.PsychSelfUp
  fullName: TinyLife.Actions.ActionType.PsychSelfUp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PsychSelfUp
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 581
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PsychSelfUp
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PsychSelfUp As ActionType
- uid: TinyLife.Actions.ActionType.Store
  commentId: F:TinyLife.Actions.ActionType.Store
  id: Store
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: ActionType.Store
  fullName: TinyLife.Actions.ActionType.Store
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Store
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 585
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Store
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Store As ActionType
- uid: TinyLife.Actions.ActionType.GetFurnitureMail
  commentId: F:TinyLife.Actions.ActionType.GetFurnitureMail
  id: GetFurnitureMail
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetFurnitureMail
  nameWithType: ActionType.GetFurnitureMail
  fullName: TinyLife.Actions.ActionType.GetFurnitureMail
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetFurnitureMail
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 596
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetFurnitureMail
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetFurnitureMail As ActionType
- uid: TinyLife.Actions.ActionType.GetJobFromNewspaper
  commentId: F:TinyLife.Actions.ActionType.GetJobFromNewspaper
  id: GetJobFromNewspaper
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetJobFromNewspaper
  nameWithType: ActionType.GetJobFromNewspaper
  fullName: TinyLife.Actions.ActionType.GetJobFromNewspaper
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetJobFromNewspaper
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 604
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetJobFromNewspaper
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetJobFromNewspaper As ActionType
- uid: TinyLife.Actions.ActionType.ReadNewspaper
  commentId: F:TinyLife.Actions.ActionType.ReadNewspaper
  id: ReadNewspaper
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ReadNewspaper
  nameWithType: ActionType.ReadNewspaper
  fullName: TinyLife.Actions.ActionType.ReadNewspaper
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReadNewspaper
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 612
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ReadNewspaper
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ReadNewspaper As ActionType
- uid: TinyLife.Actions.ActionType.ReadJokes
  commentId: F:TinyLife.Actions.ActionType.ReadJokes
  id: ReadJokes
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ReadJokes
  nameWithType: ActionType.ReadJokes
  fullName: TinyLife.Actions.ActionType.ReadJokes
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReadJokes
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 620
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ReadJokes
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ReadJokes As ActionType
- uid: TinyLife.Actions.ActionType.BrewCoffee
  commentId: F:TinyLife.Actions.ActionType.BrewCoffee
  id: BrewCoffee
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BrewCoffee
  nameWithType: ActionType.BrewCoffee
  fullName: TinyLife.Actions.ActionType.BrewCoffee
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BrewCoffee
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 628
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BrewCoffee
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BrewCoffee As ActionType
- uid: TinyLife.Actions.ActionType.MakeTea
  commentId: F:TinyLife.Actions.ActionType.MakeTea
  id: MakeTea
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeTea
  nameWithType: ActionType.MakeTea
  fullName: TinyLife.Actions.ActionType.MakeTea
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeTea
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 638
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeTea
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeTea As ActionType
- uid: TinyLife.Actions.ActionType.TinkerWith
  commentId: F:TinyLife.Actions.ActionType.TinkerWith
  id: TinkerWith
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TinkerWith
  nameWithType: ActionType.TinkerWith
  fullName: TinyLife.Actions.ActionType.TinkerWith
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TinkerWith
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 648
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TinkerWith
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TinkerWith As ActionType
- uid: TinyLife.Actions.ActionType.AdmireFood
  commentId: F:TinyLife.Actions.ActionType.AdmireFood
  id: AdmireFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AdmireFood
  nameWithType: ActionType.AdmireFood
  fullName: TinyLife.Actions.ActionType.AdmireFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AdmireFood
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 656
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AdmireFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AdmireFood As ActionType
- uid: TinyLife.Actions.ActionType.AddALittleSomething
  commentId: F:TinyLife.Actions.ActionType.AddALittleSomething
  id: AddALittleSomething
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AddALittleSomething
  nameWithType: ActionType.AddALittleSomething
  fullName: TinyLife.Actions.ActionType.AddALittleSomething
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AddALittleSomething
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 664
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AddALittleSomething
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AddALittleSomething As ActionType
- uid: TinyLife.Actions.ActionType.RunAround
  commentId: F:TinyLife.Actions.ActionType.RunAround
  id: RunAround
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: RunAround
  nameWithType: ActionType.RunAround
  fullName: TinyLife.Actions.ActionType.RunAround
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RunAround
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 678
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType RunAround
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly RunAround As ActionType
- uid: TinyLife.Actions.ActionType.Rummage
  commentId: F:TinyLife.Actions.ActionType.Rummage
  id: Rummage
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Rummage
  nameWithType: ActionType.Rummage
  fullName: TinyLife.Actions.ActionType.Rummage
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Rummage
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 687
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Rummage
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Rummage As ActionType
- uid: TinyLife.Actions.ActionType.AddCandle
  commentId: F:TinyLife.Actions.ActionType.AddCandle
  id: AddCandle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AddCandle
  nameWithType: ActionType.AddCandle
  fullName: TinyLife.Actions.ActionType.AddCandle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AddCandle
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 694
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AddCandle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AddCandle As ActionType
- uid: TinyLife.Actions.ActionType.BlowOutCandles
  commentId: F:TinyLife.Actions.ActionType.BlowOutCandles
  id: BlowOutCandles
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BlowOutCandles
  nameWithType: ActionType.BlowOutCandles
  fullName: TinyLife.Actions.ActionType.BlowOutCandles
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BlowOutCandles
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 700
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BlowOutCandles
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BlowOutCandles As ActionType
- uid: TinyLife.Actions.ActionType.PutInFridge
  commentId: F:TinyLife.Actions.ActionType.PutInFridge
  id: PutInFridge
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PutInFridge
  nameWithType: ActionType.PutInFridge
  fullName: TinyLife.Actions.ActionType.PutInFridge
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PutInFridge
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 704
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PutInFridge
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PutInFridge As ActionType
- uid: TinyLife.Actions.ActionType.TakeFromFridge
  commentId: F:TinyLife.Actions.ActionType.TakeFromFridge
  id: TakeFromFridge
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakeFromFridge
  nameWithType: ActionType.TakeFromFridge
  fullName: TinyLife.Actions.ActionType.TakeFromFridge
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeFromFridge
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 718
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakeFromFridge
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakeFromFridge As ActionType
- uid: TinyLife.Actions.ActionType.CleanOutFridge
  commentId: F:TinyLife.Actions.ActionType.CleanOutFridge
  id: CleanOutFridge
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CleanOutFridge
  nameWithType: ActionType.CleanOutFridge
  fullName: TinyLife.Actions.ActionType.CleanOutFridge
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CleanOutFridge
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 722
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CleanOutFridge
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CleanOutFridge As ActionType
- uid: TinyLife.Actions.ActionType.GetLeftovers
  commentId: F:TinyLife.Actions.ActionType.GetLeftovers
  id: GetLeftovers
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetLeftovers
  nameWithType: ActionType.GetLeftovers
  fullName: TinyLife.Actions.ActionType.GetLeftovers
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetLeftovers
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 733
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GetLeftovers
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GetLeftovers As ActionType
- uid: TinyLife.Actions.ActionType.AdoptChild
  commentId: F:TinyLife.Actions.ActionType.AdoptChild
  id: AdoptChild
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AdoptChild
  nameWithType: ActionType.AdoptChild
  fullName: TinyLife.Actions.ActionType.AdoptChild
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AdoptChild
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 740
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AdoptChild
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AdoptChild As ActionType
- uid: TinyLife.Actions.ActionType.ResearchBusinessPlans
  commentId: F:TinyLife.Actions.ActionType.ResearchBusinessPlans
  id: ResearchBusinessPlans
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ResearchBusinessPlans
  nameWithType: ActionType.ResearchBusinessPlans
  fullName: TinyLife.Actions.ActionType.ResearchBusinessPlans
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ResearchBusinessPlans
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 748
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ResearchBusinessPlans
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ResearchBusinessPlans As ActionType
- uid: TinyLife.Actions.ActionType.PracticeSalesPitch
  commentId: F:TinyLife.Actions.ActionType.PracticeSalesPitch
  id: PracticeSalesPitch
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PracticeSalesPitch
  nameWithType: ActionType.PracticeSalesPitch
  fullName: TinyLife.Actions.ActionType.PracticeSalesPitch
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PracticeSalesPitch
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 756
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PracticeSalesPitch
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PracticeSalesPitch As ActionType
- uid: TinyLife.Actions.ActionType.ReadSkillBook
  commentId: F:TinyLife.Actions.ActionType.ReadSkillBook
  id: ReadSkillBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ReadSkillBook
  nameWithType: ActionType.ReadSkillBook
  fullName: TinyLife.Actions.ActionType.ReadSkillBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReadSkillBook
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 764
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ReadSkillBook
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ReadSkillBook As ActionType
- uid: TinyLife.Actions.ActionType.ToggleNewspapers
  commentId: F:TinyLife.Actions.ActionType.ToggleNewspapers
  id: ToggleNewspapers
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ToggleNewspapers
  nameWithType: ActionType.ToggleNewspapers
  fullName: TinyLife.Actions.ActionType.ToggleNewspapers
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ToggleNewspapers
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 773
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ToggleNewspapers
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ToggleNewspapers As ActionType
- uid: TinyLife.Actions.ActionType.TakeOutTrash
  commentId: F:TinyLife.Actions.ActionType.TakeOutTrash
  id: TakeOutTrash
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakeOutTrash
  nameWithType: ActionType.TakeOutTrash
  fullName: TinyLife.Actions.ActionType.TakeOutTrash
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeOutTrash
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 778
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakeOutTrash
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakeOutTrash As ActionType
- uid: TinyLife.Actions.ActionType.PlayOnJungleGym
  commentId: F:TinyLife.Actions.ActionType.PlayOnJungleGym
  id: PlayOnJungleGym
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PlayOnJungleGym
  nameWithType: ActionType.PlayOnJungleGym
  fullName: TinyLife.Actions.ActionType.PlayOnJungleGym
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlayOnJungleGym
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 790
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PlayOnJungleGym
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PlayOnJungleGym As ActionType
- uid: TinyLife.Actions.ActionType.ColorColoringBook
  commentId: F:TinyLife.Actions.ActionType.ColorColoringBook
  id: ColorColoringBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ColorColoringBook
  nameWithType: ActionType.ColorColoringBook
  fullName: TinyLife.Actions.ActionType.ColorColoringBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ColorColoringBook
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 799
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ColorColoringBook
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ColorColoringBook As ActionType
- uid: TinyLife.Actions.ActionType.CollectSunlight
  commentId: F:TinyLife.Actions.ActionType.CollectSunlight
  id: CollectSunlight
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CollectSunlight
  nameWithType: ActionType.CollectSunlight
  fullName: TinyLife.Actions.ActionType.CollectSunlight
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CollectSunlight
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 808
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CollectSunlight
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CollectSunlight As ActionType
- uid: TinyLife.Actions.ActionType.GoJogging
  commentId: F:TinyLife.Actions.ActionType.GoJogging
  id: GoJogging
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GoJogging
  nameWithType: ActionType.GoJogging
  fullName: TinyLife.Actions.ActionType.GoJogging
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GoJogging
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 811
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GoJogging
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GoJogging As ActionType
- uid: TinyLife.Actions.ActionType.MoveHere
  commentId: F:TinyLife.Actions.ActionType.MoveHere
  id: MoveHere
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MoveHere
  nameWithType: ActionType.MoveHere
  fullName: TinyLife.Actions.ActionType.MoveHere
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MoveHere
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 819
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MoveHere
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MoveHere As ActionType
- uid: TinyLife.Actions.ActionType.ReadBabyBook
  commentId: F:TinyLife.Actions.ActionType.ReadBabyBook
  id: ReadBabyBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ReadBabyBook
  nameWithType: ActionType.ReadBabyBook
  fullName: TinyLife.Actions.ActionType.ReadBabyBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReadBabyBook
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 826
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ReadBabyBook
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ReadBabyBook As ActionType
- uid: TinyLife.Actions.ActionType.Potty
  commentId: F:TinyLife.Actions.ActionType.Potty
  id: Potty
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Potty
  nameWithType: ActionType.Potty
  fullName: TinyLife.Actions.ActionType.Potty
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Potty
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 838
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Potty
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Potty As ActionType
- uid: TinyLife.Actions.ActionType.UseDiaper
  commentId: F:TinyLife.Actions.ActionType.UseDiaper
  id: UseDiaper
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: UseDiaper
  nameWithType: ActionType.UseDiaper
  fullName: TinyLife.Actions.ActionType.UseDiaper
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: UseDiaper
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 850
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType UseDiaper
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly UseDiaper As ActionType
- uid: TinyLife.Actions.ActionType.FollowAdult
  commentId: F:TinyLife.Actions.ActionType.FollowAdult
  id: FollowAdult
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: FollowAdult
  nameWithType: ActionType.FollowAdult
  fullName: TinyLife.Actions.ActionType.FollowAdult
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FollowAdult
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 858
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType FollowAdult
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly FollowAdult As ActionType
- uid: TinyLife.Actions.ActionType.HaveBaby
  commentId: F:TinyLife.Actions.ActionType.HaveBaby
  id: HaveBaby
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HaveBaby
  nameWithType: ActionType.HaveBaby
  fullName: TinyLife.Actions.ActionType.HaveBaby
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HaveBaby
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 875
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType HaveBaby
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly HaveBaby As ActionType
- uid: TinyLife.Actions.ActionType.HaveAbortion
  commentId: F:TinyLife.Actions.ActionType.HaveAbortion
  id: HaveAbortion
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HaveAbortion
  nameWithType: ActionType.HaveAbortion
  fullName: TinyLife.Actions.ActionType.HaveAbortion
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HaveAbortion
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 883
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType HaveAbortion
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly HaveAbortion As ActionType
- uid: TinyLife.Actions.ActionType.TakePregnancyTest
  commentId: F:TinyLife.Actions.ActionType.TakePregnancyTest
  id: TakePregnancyTest
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakePregnancyTest
  nameWithType: ActionType.TakePregnancyTest
  fullName: TinyLife.Actions.ActionType.TakePregnancyTest
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakePregnancyTest
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 886
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakePregnancyTest
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakePregnancyTest As ActionType
- uid: TinyLife.Actions.ActionType.TakeOutOfCrib
  commentId: F:TinyLife.Actions.ActionType.TakeOutOfCrib
  id: TakeOutOfCrib
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TakeOutOfCrib
  nameWithType: ActionType.TakeOutOfCrib
  fullName: TinyLife.Actions.ActionType.TakeOutOfCrib
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TakeOutOfCrib
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 893
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TakeOutOfCrib
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TakeOutOfCrib As ActionType
- uid: TinyLife.Actions.ActionType.SleepInCrib
  commentId: F:TinyLife.Actions.ActionType.SleepInCrib
  id: SleepInCrib
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: SleepInCrib
  nameWithType: ActionType.SleepInCrib
  fullName: TinyLife.Actions.ActionType.SleepInCrib
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Misc.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SleepInCrib
    path: ../TinyLife/Actions/ActionType.Misc.cs
    startLine: 902
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType SleepInCrib
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly SleepInCrib As ActionType
- uid: TinyLife.Actions.ActionType.MixProteinShake
  commentId: F:TinyLife.Actions.ActionType.MixProteinShake
  id: MixProteinShake
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MixProteinShake
  nameWithType: ActionType.MixProteinShake
  fullName: TinyLife.Actions.ActionType.MixProteinShake
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Sets.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MixProteinShake
    path: ../TinyLife/Actions/ActionType.Sets.cs
    startLine: 11
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MixProteinShake
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MixProteinShake As ActionType
- uid: TinyLife.Actions.ActionType.Woodworking
  commentId: F:TinyLife.Actions.ActionType.Woodworking
  id: Woodworking
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Woodworking
  nameWithType: ActionType.Woodworking
  fullName: TinyLife.Actions.ActionType.Woodworking
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Sets.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Woodworking
    path: ../TinyLife/Actions/ActionType.Sets.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Woodworking
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Woodworking As ActionType
- uid: TinyLife.Actions.ActionType.ShakeTree
  commentId: F:TinyLife.Actions.ActionType.ShakeTree
  id: ShakeTree
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ShakeTree
  nameWithType: ActionType.ShakeTree
  fullName: TinyLife.Actions.ActionType.ShakeTree
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Sets.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShakeTree
    path: ../TinyLife/Actions/ActionType.Sets.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ShakeTree
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ShakeTree As ActionType
- uid: TinyLife.Actions.ActionType.RunOnTreadmill
  commentId: F:TinyLife.Actions.ActionType.RunOnTreadmill
  id: RunOnTreadmill
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: RunOnTreadmill
  nameWithType: ActionType.RunOnTreadmill
  fullName: TinyLife.Actions.ActionType.RunOnTreadmill
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Sets.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: RunOnTreadmill
    path: ../TinyLife/Actions/ActionType.Sets.cs
    startLine: 44
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType RunOnTreadmill
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly RunOnTreadmill As ActionType
- uid: TinyLife.Actions.ActionType.LiftWeights
  commentId: F:TinyLife.Actions.ActionType.LiftWeights
  id: LiftWeights
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: LiftWeights
  nameWithType: ActionType.LiftWeights
  fullName: TinyLife.Actions.ActionType.LiftWeights
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Sets.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: LiftWeights
    path: ../TinyLife/Actions/ActionType.Sets.cs
    startLine: 52
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType LiftWeights
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly LiftWeights As ActionType
- uid: TinyLife.Actions.ActionType.ConfideIn
  commentId: F:TinyLife.Actions.ActionType.ConfideIn
  id: ConfideIn
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ConfideIn
  nameWithType: ActionType.ConfideIn
  fullName: TinyLife.Actions.ActionType.ConfideIn
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ConfideIn
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 20
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ConfideIn
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ConfideIn As ActionType
- uid: TinyLife.Actions.ActionType.ComplainAboutLife
  commentId: F:TinyLife.Actions.ActionType.ComplainAboutLife
  id: ComplainAboutLife
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ComplainAboutLife
  nameWithType: ActionType.ComplainAboutLife
  fullName: TinyLife.Actions.ActionType.ComplainAboutLife
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ComplainAboutLife
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ComplainAboutLife
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ComplainAboutLife As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutFeelings
  commentId: F:TinyLife.Actions.ActionType.TalkAboutFeelings
  id: TalkAboutFeelings
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutFeelings
  nameWithType: ActionType.TalkAboutFeelings
  fullName: TinyLife.Actions.ActionType.TalkAboutFeelings
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutFeelings
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutFeelings
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutFeelings As ActionType
- uid: TinyLife.Actions.ActionType.ShareIdeas
  commentId: F:TinyLife.Actions.ActionType.ShareIdeas
  id: ShareIdeas
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ShareIdeas
  nameWithType: ActionType.ShareIdeas
  fullName: TinyLife.Actions.ActionType.ShareIdeas
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShareIdeas
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ShareIdeas
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ShareIdeas As ActionType
- uid: TinyLife.Actions.ActionType.GaugeRelationship
  commentId: F:TinyLife.Actions.ActionType.GaugeRelationship
  id: GaugeRelationship
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GaugeRelationship
  nameWithType: ActionType.GaugeRelationship
  fullName: TinyLife.Actions.ActionType.GaugeRelationship
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GaugeRelationship
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 41
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GaugeRelationship
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GaugeRelationship As ActionType
- uid: TinyLife.Actions.ActionType.AskToLeave
  commentId: F:TinyLife.Actions.ActionType.AskToLeave
  id: AskToLeave
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskToLeave
  nameWithType: ActionType.AskToLeave
  fullName: TinyLife.Actions.ActionType.AskToLeave
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskToLeave
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 63
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskToLeave
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskToLeave As ActionType
- uid: TinyLife.Actions.ActionType.CallOver
  commentId: F:TinyLife.Actions.ActionType.CallOver
  id: CallOver
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CallOver
  nameWithType: ActionType.CallOver
  fullName: TinyLife.Actions.ActionType.CallOver
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CallOver
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 69
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CallOver
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CallOver As ActionType
- uid: TinyLife.Actions.ActionType.ThisIsInappropriate
  commentId: F:TinyLife.Actions.ActionType.ThisIsInappropriate
  id: ThisIsInappropriate
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ThisIsInappropriate
  nameWithType: ActionType.ThisIsInappropriate
  fullName: TinyLife.Actions.ActionType.ThisIsInappropriate
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ThisIsInappropriate
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 75
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ThisIsInappropriate
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ThisIsInappropriate As ActionType
- uid: TinyLife.Actions.ActionType.WakeUp
  commentId: F:TinyLife.Actions.ActionType.WakeUp
  id: WakeUp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: WakeUp
  nameWithType: ActionType.WakeUp
  fullName: TinyLife.Actions.ActionType.WakeUp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: WakeUp
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 87
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType WakeUp
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly WakeUp As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutPersonality
  commentId: F:TinyLife.Actions.ActionType.AskAboutPersonality
  id: AskAboutPersonality
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutPersonality
  nameWithType: ActionType.AskAboutPersonality
  fullName: TinyLife.Actions.ActionType.AskAboutPersonality
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutPersonality
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 90
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutPersonality
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutPersonality As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutJob
  commentId: F:TinyLife.Actions.ActionType.AskAboutJob
  id: AskAboutJob
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutJob
  nameWithType: ActionType.AskAboutJob
  fullName: TinyLife.Actions.ActionType.AskAboutJob
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutJob
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 106
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutJob
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutJob As ActionType
- uid: TinyLife.Actions.ActionType.AskToTaste
  commentId: F:TinyLife.Actions.ActionType.AskToTaste
  id: AskToTaste
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskToTaste
  nameWithType: ActionType.AskToTaste
  fullName: TinyLife.Actions.ActionType.AskToTaste
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskToTaste
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 124
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskToTaste
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskToTaste As ActionType
- uid: TinyLife.Actions.ActionType.BribeForFriendship
  commentId: F:TinyLife.Actions.ActionType.BribeForFriendship
  id: BribeForFriendship
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BribeForFriendship
  nameWithType: ActionType.BribeForFriendship
  fullName: TinyLife.Actions.ActionType.BribeForFriendship
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BribeForFriendship
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 134
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BribeForFriendship
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BribeForFriendship As ActionType
- uid: TinyLife.Actions.ActionType.OrderCoffee
  commentId: F:TinyLife.Actions.ActionType.OrderCoffee
  id: OrderCoffee
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: OrderCoffee
  nameWithType: ActionType.OrderCoffee
  fullName: TinyLife.Actions.ActionType.OrderCoffee
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OrderCoffee
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 144
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType OrderCoffee
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly OrderCoffee As ActionType
- uid: TinyLife.Actions.ActionType.OrderTea
  commentId: F:TinyLife.Actions.ActionType.OrderTea
  id: OrderTea
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: OrderTea
  nameWithType: ActionType.OrderTea
  fullName: TinyLife.Actions.ActionType.OrderTea
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OrderTea
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 154
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType OrderTea
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly OrderTea As ActionType
- uid: TinyLife.Actions.ActionType.OrderCafeFood
  commentId: F:TinyLife.Actions.ActionType.OrderCafeFood
  id: OrderCafeFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: OrderCafeFood
  nameWithType: ActionType.OrderCafeFood
  fullName: TinyLife.Actions.ActionType.OrderCafeFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: OrderCafeFood
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 165
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType OrderCafeFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly OrderCafeFood As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutNonfictionBooks
  commentId: F:TinyLife.Actions.ActionType.AskAboutNonfictionBooks
  id: AskAboutNonfictionBooks
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutNonfictionBooks
  nameWithType: ActionType.AskAboutNonfictionBooks
  fullName: TinyLife.Actions.ActionType.AskAboutNonfictionBooks
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutNonfictionBooks
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 174
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutNonfictionBooks
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutNonfictionBooks As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutFictionBooks
  commentId: F:TinyLife.Actions.ActionType.AskAboutFictionBooks
  id: AskAboutFictionBooks
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutFictionBooks
  nameWithType: ActionType.AskAboutFictionBooks
  fullName: TinyLife.Actions.ActionType.AskAboutFictionBooks
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutFictionBooks
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 186
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutFictionBooks
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutFictionBooks As ActionType
- uid: TinyLife.Actions.ActionType.PickUpPerson
  commentId: F:TinyLife.Actions.ActionType.PickUpPerson
  id: PickUpPerson
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PickUpPerson
  nameWithType: ActionType.PickUpPerson
  fullName: TinyLife.Actions.ActionType.PickUpPerson
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PickUpPerson
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 198
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PickUpPerson
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PickUpPerson As ActionType
- uid: TinyLife.Actions.ActionType.PutDownPerson
  commentId: F:TinyLife.Actions.ActionType.PutDownPerson
  id: PutDownPerson
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PutDownPerson
  nameWithType: ActionType.PutDownPerson
  fullName: TinyLife.Actions.ActionType.PutDownPerson
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PutDownPerson
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 208
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PutDownPerson
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PutDownPerson As ActionType
- uid: TinyLife.Actions.ActionType.HomeworkHelp
  commentId: F:TinyLife.Actions.ActionType.HomeworkHelp
  id: HomeworkHelp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HomeworkHelp
  nameWithType: ActionType.HomeworkHelp
  fullName: TinyLife.Actions.ActionType.HomeworkHelp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HomeworkHelp
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 218
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] HomeworkHelp
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly HomeworkHelp As ActionType()
- uid: TinyLife.Actions.ActionType.AskToCook
  commentId: F:TinyLife.Actions.ActionType.AskToCook
  id: AskToCook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskToCook
  nameWithType: ActionType.AskToCook
  fullName: TinyLife.Actions.ActionType.AskToCook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskToCook
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 226
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskToCook
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskToCook As ActionType
- uid: TinyLife.Actions.ActionType.InviteIn
  commentId: F:TinyLife.Actions.ActionType.InviteIn
  id: InviteIn
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: InviteIn
  nameWithType: ActionType.InviteIn
  fullName: TinyLife.Actions.ActionType.InviteIn
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InviteIn
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 238
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType InviteIn
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly InviteIn As ActionType
- uid: TinyLife.Actions.ActionType.InspectBaby
  commentId: F:TinyLife.Actions.ActionType.InspectBaby
  id: InspectBaby
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: InspectBaby
  nameWithType: ActionType.InspectBaby
  fullName: TinyLife.Actions.ActionType.InspectBaby
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InspectBaby
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 253
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType InspectBaby
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly InspectBaby As ActionType
- uid: TinyLife.Actions.ActionType.AnnouncePregnancy
  commentId: F:TinyLife.Actions.ActionType.AnnouncePregnancy
  id: AnnouncePregnancy
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AnnouncePregnancy
  nameWithType: ActionType.AnnouncePregnancy
  fullName: TinyLife.Actions.ActionType.AnnouncePregnancy
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AnnouncePregnancy
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 258
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AnnouncePregnancy
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AnnouncePregnancy As ActionType
- uid: TinyLife.Actions.ActionType.Talk
  commentId: F:TinyLife.Actions.ActionType.Talk
  id: Talk
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Talk
  nameWithType: ActionType.Talk
  fullName: TinyLife.Actions.ActionType.Talk
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Talk
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 267
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Talk
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Talk As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutDay
  commentId: F:TinyLife.Actions.ActionType.AskAboutDay
  id: AskAboutDay
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutDay
  nameWithType: ActionType.AskAboutDay
  fullName: TinyLife.Actions.ActionType.AskAboutDay
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutDay
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 271
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutDay
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutDay As ActionType
- uid: TinyLife.Actions.ActionType.TellEngagingStory
  commentId: F:TinyLife.Actions.ActionType.TellEngagingStory
  id: TellEngagingStory
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellEngagingStory
  nameWithType: ActionType.TellEngagingStory
  fullName: TinyLife.Actions.ActionType.TellEngagingStory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellEngagingStory
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 276
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellEngagingStory
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellEngagingStory As ActionType
- uid: TinyLife.Actions.ActionType.TellStory
  commentId: F:TinyLife.Actions.ActionType.TellStory
  id: TellStory
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellStory
  nameWithType: ActionType.TellStory
  fullName: TinyLife.Actions.ActionType.TellStory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellStory
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 281
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellStory
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellStory As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutWork
  commentId: F:TinyLife.Actions.ActionType.TalkAboutWork
  id: TalkAboutWork
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutWork
  nameWithType: ActionType.TalkAboutWork
  fullName: TinyLife.Actions.ActionType.TalkAboutWork
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutWork
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 285
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutWork
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutWork As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutNeighborhood
  commentId: F:TinyLife.Actions.ActionType.TalkAboutNeighborhood
  id: TalkAboutNeighborhood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutNeighborhood
  nameWithType: ActionType.TalkAboutNeighborhood
  fullName: TinyLife.Actions.ActionType.TalkAboutNeighborhood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutNeighborhood
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 291
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutNeighborhood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutNeighborhood As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutOutdoors
  commentId: F:TinyLife.Actions.ActionType.TalkAboutOutdoors
  id: TalkAboutOutdoors
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutOutdoors
  nameWithType: ActionType.TalkAboutOutdoors
  fullName: TinyLife.Actions.ActionType.TalkAboutOutdoors
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutOutdoors
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 296
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutOutdoors
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutOutdoors As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutFood
  commentId: F:TinyLife.Actions.ActionType.TalkAboutFood
  id: TalkAboutFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutFood
  nameWithType: ActionType.TalkAboutFood
  fullName: TinyLife.Actions.ActionType.TalkAboutFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutFood
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 300
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutFood As ActionType
- uid: TinyLife.Actions.ActionType.DiscussWorkoutRegimen
  commentId: F:TinyLife.Actions.ActionType.DiscussWorkoutRegimen
  id: DiscussWorkoutRegimen
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DiscussWorkoutRegimen
  nameWithType: ActionType.DiscussWorkoutRegimen
  fullName: TinyLife.Actions.ActionType.DiscussWorkoutRegimen
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DiscussWorkoutRegimen
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 304
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DiscussWorkoutRegimen
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DiscussWorkoutRegimen As ActionType
- uid: TinyLife.Actions.ActionType.CompareMuscleSize
  commentId: F:TinyLife.Actions.ActionType.CompareMuscleSize
  id: CompareMuscleSize
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CompareMuscleSize
  nameWithType: ActionType.CompareMuscleSize
  fullName: TinyLife.Actions.ActionType.CompareMuscleSize
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CompareMuscleSize
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 311
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CompareMuscleSize
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CompareMuscleSize As ActionType
- uid: TinyLife.Actions.ActionType.GushAboutPartner
  commentId: F:TinyLife.Actions.ActionType.GushAboutPartner
  id: GushAboutPartner
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GushAboutPartner
  nameWithType: ActionType.GushAboutPartner
  fullName: TinyLife.Actions.ActionType.GushAboutPartner
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GushAboutPartner
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 318
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType GushAboutPartner
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly GushAboutPartner As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutGamingRig
  commentId: F:TinyLife.Actions.ActionType.AskAboutGamingRig
  id: AskAboutGamingRig
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutGamingRig
  nameWithType: ActionType.AskAboutGamingRig
  fullName: TinyLife.Actions.ActionType.AskAboutGamingRig
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutGamingRig
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 324
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutGamingRig
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutGamingRig As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutComputerSpecs
  commentId: F:TinyLife.Actions.ActionType.AskAboutComputerSpecs
  id: AskAboutComputerSpecs
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutComputerSpecs
  nameWithType: ActionType.AskAboutComputerSpecs
  fullName: TinyLife.Actions.ActionType.AskAboutComputerSpecs
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutComputerSpecs
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 329
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutComputerSpecs
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutComputerSpecs As ActionType
- uid: TinyLife.Actions.ActionType.BoastAboutPagesWritten
  commentId: F:TinyLife.Actions.ActionType.BoastAboutPagesWritten
  id: BoastAboutPagesWritten
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BoastAboutPagesWritten
  nameWithType: ActionType.BoastAboutPagesWritten
  fullName: TinyLife.Actions.ActionType.BoastAboutPagesWritten
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BoastAboutPagesWritten
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 334
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BoastAboutPagesWritten
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BoastAboutPagesWritten As ActionType
- uid: TinyLife.Actions.ActionType.PoseMathPuzzle
  commentId: F:TinyLife.Actions.ActionType.PoseMathPuzzle
  id: PoseMathPuzzle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PoseMathPuzzle
  nameWithType: ActionType.PoseMathPuzzle
  fullName: TinyLife.Actions.ActionType.PoseMathPuzzle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PoseMathPuzzle
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 340
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PoseMathPuzzle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PoseMathPuzzle As ActionType
- uid: TinyLife.Actions.ActionType.ExpressFearOfCrowds
  commentId: F:TinyLife.Actions.ActionType.ExpressFearOfCrowds
  id: ExpressFearOfCrowds
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ExpressFearOfCrowds
  nameWithType: ActionType.ExpressFearOfCrowds
  fullName: TinyLife.Actions.ActionType.ExpressFearOfCrowds
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ExpressFearOfCrowds
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 345
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ExpressFearOfCrowds
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ExpressFearOfCrowds As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutNaps
  commentId: F:TinyLife.Actions.ActionType.TalkAboutNaps
  id: TalkAboutNaps
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutNaps
  nameWithType: ActionType.TalkAboutNaps
  fullName: TinyLife.Actions.ActionType.TalkAboutNaps
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutNaps
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 350
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutNaps
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutNaps As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutWatchingTv
  commentId: F:TinyLife.Actions.ActionType.TalkAboutWatchingTv
  id: TalkAboutWatchingTv
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutWatchingTv
  nameWithType: ActionType.TalkAboutWatchingTv
  fullName: TinyLife.Actions.ActionType.TalkAboutWatchingTv
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutWatchingTv
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 356
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutWatchingTv
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutWatchingTv As ActionType
- uid: TinyLife.Actions.ActionType.InviteToHousehold
  commentId: F:TinyLife.Actions.ActionType.InviteToHousehold
  id: InviteToHousehold
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: InviteToHousehold
  nameWithType: ActionType.InviteToHousehold
  fullName: TinyLife.Actions.ActionType.InviteToHousehold
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: InviteToHousehold
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 361
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType InviteToHousehold
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly InviteToHousehold As ActionType
- uid: TinyLife.Actions.ActionType.AskToTellStory
  commentId: F:TinyLife.Actions.ActionType.AskToTellStory
  id: AskToTellStory
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskToTellStory
  nameWithType: ActionType.AskToTellStory
  fullName: TinyLife.Actions.ActionType.AskToTellStory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskToTellStory
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 366
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskToTellStory
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskToTellStory As ActionType
- uid: TinyLife.Actions.ActionType.ComplainAboutAdults
  commentId: F:TinyLife.Actions.ActionType.ComplainAboutAdults
  id: ComplainAboutAdults
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ComplainAboutAdults
  nameWithType: ActionType.ComplainAboutAdults
  fullName: TinyLife.Actions.ActionType.ComplainAboutAdults
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ComplainAboutAdults
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 372
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ComplainAboutAdults
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ComplainAboutAdults As ActionType
- uid: TinyLife.Actions.ActionType.ComplainAboutParent
  commentId: F:TinyLife.Actions.ActionType.ComplainAboutParent
  id: ComplainAboutParent
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ComplainAboutParent
  nameWithType: ActionType.ComplainAboutParent
  fullName: TinyLife.Actions.ActionType.ComplainAboutParent
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ComplainAboutParent
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 377
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ComplainAboutParent
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ComplainAboutParent As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutCartoons
  commentId: F:TinyLife.Actions.ActionType.TalkAboutCartoons
  id: TalkAboutCartoons
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutCartoons
  nameWithType: ActionType.TalkAboutCartoons
  fullName: TinyLife.Actions.ActionType.TalkAboutCartoons
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutCartoons
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 382
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutCartoons
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutCartoons As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutSchool
  commentId: F:TinyLife.Actions.ActionType.TalkAboutSchool
  id: TalkAboutSchool
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutSchool
  nameWithType: ActionType.TalkAboutSchool
  fullName: TinyLife.Actions.ActionType.TalkAboutSchool
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutSchool
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 387
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutSchool
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutSchool As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutFavoriteToys
  commentId: F:TinyLife.Actions.ActionType.TalkAboutFavoriteToys
  id: TalkAboutFavoriteToys
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutFavoriteToys
  nameWithType: ActionType.TalkAboutFavoriteToys
  fullName: TinyLife.Actions.ActionType.TalkAboutFavoriteToys
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutFavoriteToys
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 392
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutFavoriteToys
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutFavoriteToys As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutFamilyWellbeing
  commentId: F:TinyLife.Actions.ActionType.AskAboutFamilyWellbeing
  id: AskAboutFamilyWellbeing
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutFamilyWellbeing
  nameWithType: ActionType.AskAboutFamilyWellbeing
  fullName: TinyLife.Actions.ActionType.AskAboutFamilyWellbeing
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutFamilyWellbeing
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 397
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutFamilyWellbeing
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutFamilyWellbeing As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutFamily
  commentId: F:TinyLife.Actions.ActionType.TalkAboutFamily
  id: TalkAboutFamily
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutFamily
  nameWithType: ActionType.TalkAboutFamily
  fullName: TinyLife.Actions.ActionType.TalkAboutFamily
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutFamily
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 403
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutFamily
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutFamily As ActionType
- uid: TinyLife.Actions.ActionType.DebatePineappleOnPizza
  commentId: F:TinyLife.Actions.ActionType.DebatePineappleOnPizza
  id: DebatePineappleOnPizza
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DebatePineappleOnPizza
  nameWithType: ActionType.DebatePineappleOnPizza
  fullName: TinyLife.Actions.ActionType.DebatePineappleOnPizza
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DebatePineappleOnPizza
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 409
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DebatePineappleOnPizza
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DebatePineappleOnPizza As ActionType
- uid: TinyLife.Actions.ActionType.DiscussFineDining
  commentId: F:TinyLife.Actions.ActionType.DiscussFineDining
  id: DiscussFineDining
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DiscussFineDining
  nameWithType: ActionType.DiscussFineDining
  fullName: TinyLife.Actions.ActionType.DiscussFineDining
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DiscussFineDining
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 415
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DiscussFineDining
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DiscussFineDining As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutSpicyFood
  commentId: F:TinyLife.Actions.ActionType.TalkAboutSpicyFood
  id: TalkAboutSpicyFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutSpicyFood
  nameWithType: ActionType.TalkAboutSpicyFood
  fullName: TinyLife.Actions.ActionType.TalkAboutSpicyFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutSpicyFood
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 420
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutSpicyFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutSpicyFood As ActionType
- uid: TinyLife.Actions.ActionType.AskMedicalHistory
  commentId: F:TinyLife.Actions.ActionType.AskMedicalHistory
  id: AskMedicalHistory
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskMedicalHistory
  nameWithType: ActionType.AskMedicalHistory
  fullName: TinyLife.Actions.ActionType.AskMedicalHistory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskMedicalHistory
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 425
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskMedicalHistory
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskMedicalHistory As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutNatureWalks
  commentId: F:TinyLife.Actions.ActionType.TalkAboutNatureWalks
  id: TalkAboutNatureWalks
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutNatureWalks
  nameWithType: ActionType.TalkAboutNatureWalks
  fullName: TinyLife.Actions.ActionType.TalkAboutNatureWalks
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutNatureWalks
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 430
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutNatureWalks
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutNatureWalks As ActionType
- uid: TinyLife.Actions.ActionType.CriticizeDeforestation
  commentId: F:TinyLife.Actions.ActionType.CriticizeDeforestation
  id: CriticizeDeforestation
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CriticizeDeforestation
  nameWithType: ActionType.CriticizeDeforestation
  fullName: TinyLife.Actions.ActionType.CriticizeDeforestation
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CriticizeDeforestation
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 435
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CriticizeDeforestation
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CriticizeDeforestation As ActionType
- uid: TinyLife.Actions.ActionType.DiscussNpP
  commentId: F:TinyLife.Actions.ActionType.DiscussNpP
  id: DiscussNpP
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DiscussNpP
  nameWithType: ActionType.DiscussNpP
  fullName: TinyLife.Actions.ActionType.DiscussNpP
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DiscussNpP
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 440
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DiscussNpP
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DiscussNpP As ActionType
- uid: TinyLife.Actions.ActionType.BragAboutComputer
  commentId: F:TinyLife.Actions.ActionType.BragAboutComputer
  id: BragAboutComputer
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BragAboutComputer
  nameWithType: ActionType.BragAboutComputer
  fullName: TinyLife.Actions.ActionType.BragAboutComputer
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BragAboutComputer
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 445
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BragAboutComputer
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BragAboutComputer As ActionType
- uid: TinyLife.Actions.ActionType.DiscussHomeAutomation
  commentId: F:TinyLife.Actions.ActionType.DiscussHomeAutomation
  id: DiscussHomeAutomation
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DiscussHomeAutomation
  nameWithType: ActionType.DiscussHomeAutomation
  fullName: TinyLife.Actions.ActionType.DiscussHomeAutomation
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DiscussHomeAutomation
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 450
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DiscussHomeAutomation
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DiscussHomeAutomation As ActionType
- uid: TinyLife.Actions.ActionType.AskIfSingle
  commentId: F:TinyLife.Actions.ActionType.AskIfSingle
  id: AskIfSingle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskIfSingle
  nameWithType: ActionType.AskIfSingle
  fullName: TinyLife.Actions.ActionType.AskIfSingle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskIfSingle
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 455
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskIfSingle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskIfSingle As ActionType
- uid: TinyLife.Actions.ActionType.SuggestThriftstores
  commentId: F:TinyLife.Actions.ActionType.SuggestThriftstores
  id: SuggestThriftstores
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: SuggestThriftstores
  nameWithType: ActionType.SuggestThriftstores
  fullName: TinyLife.Actions.ActionType.SuggestThriftstores
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SuggestThriftstores
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 466
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType SuggestThriftstores
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly SuggestThriftstores As ActionType
- uid: TinyLife.Actions.ActionType.EnthuseAboutCoupons
  commentId: F:TinyLife.Actions.ActionType.EnthuseAboutCoupons
  id: EnthuseAboutCoupons
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: EnthuseAboutCoupons
  nameWithType: ActionType.EnthuseAboutCoupons
  fullName: TinyLife.Actions.ActionType.EnthuseAboutCoupons
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: EnthuseAboutCoupons
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 471
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType EnthuseAboutCoupons
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly EnthuseAboutCoupons As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutBestSpots
  commentId: F:TinyLife.Actions.ActionType.TalkAboutBestSpots
  id: TalkAboutBestSpots
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutBestSpots
  nameWithType: ActionType.TalkAboutBestSpots
  fullName: TinyLife.Actions.ActionType.TalkAboutBestSpots
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutBestSpots
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 476
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutBestSpots
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutBestSpots As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutBestToy
  commentId: F:TinyLife.Actions.ActionType.TalkAboutBestToy
  id: TalkAboutBestToy
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutBestToy
  nameWithType: ActionType.TalkAboutBestToy
  fullName: TinyLife.Actions.ActionType.TalkAboutBestToy
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutBestToy
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 481
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutBestToy
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutBestToy As ActionType
- uid: TinyLife.Actions.ActionType.TeachLifeLesson
  commentId: F:TinyLife.Actions.ActionType.TeachLifeLesson
  id: TeachLifeLesson
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TeachLifeLesson
  nameWithType: ActionType.TeachLifeLesson
  fullName: TinyLife.Actions.ActionType.TeachLifeLesson
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TeachLifeLesson
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 486
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TeachLifeLesson
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TeachLifeLesson As ActionType
- uid: TinyLife.Actions.ActionType.HowYouveGrown
  commentId: F:TinyLife.Actions.ActionType.HowYouveGrown
  id: HowYouveGrown
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HowYouveGrown
  nameWithType: ActionType.HowYouveGrown
  fullName: TinyLife.Actions.ActionType.HowYouveGrown
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HowYouveGrown
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 492
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType HowYouveGrown
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly HowYouveGrown As ActionType
- uid: TinyLife.Actions.ActionType.ComparePhysicalFeatures
  commentId: F:TinyLife.Actions.ActionType.ComparePhysicalFeatures
  id: ComparePhysicalFeatures
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ComparePhysicalFeatures
  nameWithType: ActionType.ComparePhysicalFeatures
  fullName: TinyLife.Actions.ActionType.ComparePhysicalFeatures
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ComparePhysicalFeatures
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 497
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ComparePhysicalFeatures
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ComparePhysicalFeatures As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutCareerDreams
  commentId: F:TinyLife.Actions.ActionType.AskAboutCareerDreams
  id: AskAboutCareerDreams
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutCareerDreams
  nameWithType: ActionType.AskAboutCareerDreams
  fullName: TinyLife.Actions.ActionType.AskAboutCareerDreams
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutCareerDreams
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 503
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutCareerDreams
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutCareerDreams As ActionType
- uid: TinyLife.Actions.ActionType.AskAboutParenting
  commentId: F:TinyLife.Actions.ActionType.AskAboutParenting
  id: AskAboutParenting
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskAboutParenting
  nameWithType: ActionType.AskAboutParenting
  fullName: TinyLife.Actions.ActionType.AskAboutParenting
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskAboutParenting
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 509
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskAboutParenting
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskAboutParenting As ActionType
- uid: TinyLife.Actions.ActionType.ExplainActivities
  commentId: F:TinyLife.Actions.ActionType.ExplainActivities
  id: ExplainActivities
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ExplainActivities
  nameWithType: ActionType.ExplainActivities
  fullName: TinyLife.Actions.ActionType.ExplainActivities
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ExplainActivities
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 517
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] ExplainActivities
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly ExplainActivities As ActionType()
- uid: TinyLife.Actions.ActionType.ExpressPregnancyConcerns
  commentId: F:TinyLife.Actions.ActionType.ExpressPregnancyConcerns
  id: ExpressPregnancyConcerns
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ExpressPregnancyConcerns
  nameWithType: ActionType.ExpressPregnancyConcerns
  fullName: TinyLife.Actions.ActionType.ExpressPregnancyConcerns
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ExpressPregnancyConcerns
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 524
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ExpressPregnancyConcerns
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ExpressPregnancyConcerns As ActionType
- uid: TinyLife.Actions.ActionType.TellJoke
  commentId: F:TinyLife.Actions.ActionType.TellJoke
  id: TellJoke
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellJoke
  nameWithType: ActionType.TellJoke
  fullName: TinyLife.Actions.ActionType.TellJoke
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellJoke
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 534
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellJoke
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellJoke As ActionType
- uid: TinyLife.Actions.ActionType.TellFunnyStory
  commentId: F:TinyLife.Actions.ActionType.TellFunnyStory
  id: TellFunnyStory
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellFunnyStory
  nameWithType: ActionType.TellFunnyStory
  fullName: TinyLife.Actions.ActionType.TellFunnyStory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellFunnyStory
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 538
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellFunnyStory
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellFunnyStory As ActionType
- uid: TinyLife.Actions.ActionType.TellRidiculousStory
  commentId: F:TinyLife.Actions.ActionType.TellRidiculousStory
  id: TellRidiculousStory
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellRidiculousStory
  nameWithType: ActionType.TellRidiculousStory
  fullName: TinyLife.Actions.ActionType.TellRidiculousStory
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellRidiculousStory
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 542
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellRidiculousStory
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellRidiculousStory As ActionType
- uid: TinyLife.Actions.ActionType.TellComplexJoke
  commentId: F:TinyLife.Actions.ActionType.TellComplexJoke
  id: TellComplexJoke
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellComplexJoke
  nameWithType: ActionType.TellComplexJoke
  fullName: TinyLife.Actions.ActionType.TellComplexJoke
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellComplexJoke
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 546
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellComplexJoke
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellComplexJoke As ActionType
- uid: TinyLife.Actions.ActionType.PlayTrick
  commentId: F:TinyLife.Actions.ActionType.PlayTrick
  id: PlayTrick
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PlayTrick
  nameWithType: ActionType.PlayTrick
  fullName: TinyLife.Actions.ActionType.PlayTrick
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PlayTrick
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 550
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType PlayTrick
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly PlayTrick As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutWork
  commentId: F:TinyLife.Actions.ActionType.JokeAboutWork
  id: JokeAboutWork
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutWork
  nameWithType: ActionType.JokeAboutWork
  fullName: TinyLife.Actions.ActionType.JokeAboutWork
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutWork
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 554
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutWork
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutWork As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutOwnUnemployment
  commentId: F:TinyLife.Actions.ActionType.JokeAboutOwnUnemployment
  id: JokeAboutOwnUnemployment
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutOwnUnemployment
  nameWithType: ActionType.JokeAboutOwnUnemployment
  fullName: TinyLife.Actions.ActionType.JokeAboutOwnUnemployment
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutOwnUnemployment
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 560
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutOwnUnemployment
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutOwnUnemployment As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutTreadmillAccidents
  commentId: F:TinyLife.Actions.ActionType.JokeAboutTreadmillAccidents
  id: JokeAboutTreadmillAccidents
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutTreadmillAccidents
  nameWithType: ActionType.JokeAboutTreadmillAccidents
  fullName: TinyLife.Actions.ActionType.JokeAboutTreadmillAccidents
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutTreadmillAccidents
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 566
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutTreadmillAccidents
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutTreadmillAccidents As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutWritingStyle
  commentId: F:TinyLife.Actions.ActionType.JokeAboutWritingStyle
  id: JokeAboutWritingStyle
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutWritingStyle
  nameWithType: ActionType.JokeAboutWritingStyle
  fullName: TinyLife.Actions.ActionType.JokeAboutWritingStyle
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutWritingStyle
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 571
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutWritingStyle
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutWritingStyle As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutAromance
  commentId: F:TinyLife.Actions.ActionType.JokeAboutAromance
  id: JokeAboutAromance
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutAromance
  nameWithType: ActionType.JokeAboutAromance
  fullName: TinyLife.Actions.ActionType.JokeAboutAromance
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutAromance
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 576
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutAromance
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutAromance As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutAsexuality
  commentId: F:TinyLife.Actions.ActionType.JokeAboutAsexuality
  id: JokeAboutAsexuality
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutAsexuality
  nameWithType: ActionType.JokeAboutAsexuality
  fullName: TinyLife.Actions.ActionType.JokeAboutAsexuality
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutAsexuality
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 581
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutAsexuality
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutAsexuality As ActionType
- uid: TinyLife.Actions.ActionType.TellJokeAboutSomething
  commentId: F:TinyLife.Actions.ActionType.TellJokeAboutSomething
  id: TellJokeAboutSomething
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellJokeAboutSomething
  nameWithType: ActionType.TellJokeAboutSomething
  fullName: TinyLife.Actions.ActionType.TellJokeAboutSomething
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellJokeAboutSomething
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 586
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] TellJokeAboutSomething
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly TellJokeAboutSomething As ActionType()
- uid: TinyLife.Actions.ActionType.TellDadJoke
  commentId: F:TinyLife.Actions.ActionType.TellDadJoke
  id: TellDadJoke
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TellDadJoke
  nameWithType: ActionType.TellDadJoke
  fullName: TinyLife.Actions.ActionType.TellDadJoke
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TellDadJoke
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 595
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TellDadJoke
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TellDadJoke As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutFamilyGatherings
  commentId: F:TinyLife.Actions.ActionType.JokeAboutFamilyGatherings
  id: JokeAboutFamilyGatherings
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutFamilyGatherings
  nameWithType: ActionType.JokeAboutFamilyGatherings
  fullName: TinyLife.Actions.ActionType.JokeAboutFamilyGatherings
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutFamilyGatherings
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 601
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutFamilyGatherings
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutFamilyGatherings As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutTrees
  commentId: F:TinyLife.Actions.ActionType.JokeAboutTrees
  id: JokeAboutTrees
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutTrees
  nameWithType: ActionType.JokeAboutTrees
  fullName: TinyLife.Actions.ActionType.JokeAboutTrees
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutTrees
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 607
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutTrees
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutTrees As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutSmartHome
  commentId: F:TinyLife.Actions.ActionType.JokeAboutSmartHome
  id: JokeAboutSmartHome
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutSmartHome
  nameWithType: ActionType.JokeAboutSmartHome
  fullName: TinyLife.Actions.ActionType.JokeAboutSmartHome
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutSmartHome
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 612
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutSmartHome
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutSmartHome As ActionType
- uid: TinyLife.Actions.ActionType.JokeAboutOverspending
  commentId: F:TinyLife.Actions.ActionType.JokeAboutOverspending
  id: JokeAboutOverspending
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: JokeAboutOverspending
  nameWithType: ActionType.JokeAboutOverspending
  fullName: TinyLife.Actions.ActionType.JokeAboutOverspending
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: JokeAboutOverspending
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 617
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType JokeAboutOverspending
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly JokeAboutOverspending As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutFunnyCityName
  commentId: F:TinyLife.Actions.ActionType.TalkAboutFunnyCityName
  id: TalkAboutFunnyCityName
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutFunnyCityName
  nameWithType: ActionType.TalkAboutFunnyCityName
  fullName: TinyLife.Actions.ActionType.TalkAboutFunnyCityName
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutFunnyCityName
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 622
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutFunnyCityName
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutFunnyCityName As ActionType
- uid: TinyLife.Actions.ActionType.Insult
  commentId: F:TinyLife.Actions.ActionType.Insult
  id: Insult
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Insult
  nameWithType: ActionType.Insult
  fullName: TinyLife.Actions.ActionType.Insult
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Insult
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 629
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Insult
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Insult As ActionType
- uid: TinyLife.Actions.ActionType.ImplyMotherIsCamel
  commentId: F:TinyLife.Actions.ActionType.ImplyMotherIsCamel
  id: ImplyMotherIsCamel
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ImplyMotherIsCamel
  nameWithType: ActionType.ImplyMotherIsCamel
  fullName: TinyLife.Actions.ActionType.ImplyMotherIsCamel
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ImplyMotherIsCamel
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 634
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ImplyMotherIsCamel
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ImplyMotherIsCamel As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfUnemployment
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfUnemployment
  id: MakeFunOfUnemployment
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfUnemployment
  nameWithType: ActionType.MakeFunOfUnemployment
  fullName: TinyLife.Actions.ActionType.MakeFunOfUnemployment
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfUnemployment
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 638
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfUnemployment
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfUnemployment As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfLaziness
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfLaziness
  id: MakeFunOfLaziness
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfLaziness
  nameWithType: ActionType.MakeFunOfLaziness
  fullName: TinyLife.Actions.ActionType.MakeFunOfLaziness
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfLaziness
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 644
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfLaziness
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfLaziness As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfIntroversion
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfIntroversion
  id: MakeFunOfIntroversion
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfIntroversion
  nameWithType: ActionType.MakeFunOfIntroversion
  fullName: TinyLife.Actions.ActionType.MakeFunOfIntroversion
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfIntroversion
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 649
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfIntroversion
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfIntroversion As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfNiceness
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfNiceness
  id: MakeFunOfNiceness
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfNiceness
  nameWithType: ActionType.MakeFunOfNiceness
  fullName: TinyLife.Actions.ActionType.MakeFunOfNiceness
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfNiceness
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 654
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfNiceness
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfNiceness As ActionType
- uid: TinyLife.Actions.ActionType.ComplainAboutRelationship
  commentId: F:TinyLife.Actions.ActionType.ComplainAboutRelationship
  id: ComplainAboutRelationship
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ComplainAboutRelationship
  nameWithType: ActionType.ComplainAboutRelationship
  fullName: TinyLife.Actions.ActionType.ComplainAboutRelationship
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ComplainAboutRelationship
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 659
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ComplainAboutRelationship
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ComplainAboutRelationship As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfPoorFitness
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfPoorFitness
  id: MakeFunOfPoorFitness
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfPoorFitness
  nameWithType: ActionType.MakeFunOfPoorFitness
  fullName: TinyLife.Actions.ActionType.MakeFunOfPoorFitness
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfPoorFitness
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 664
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfPoorFitness
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfPoorFitness As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfFriends
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfFriends
  id: MakeFunOfFriends
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfFriends
  nameWithType: ActionType.MakeFunOfFriends
  fullName: TinyLife.Actions.ActionType.MakeFunOfFriends
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfFriends
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 670
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfFriends
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfFriends As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfBeingNerd
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfBeingNerd
  id: MakeFunOfBeingNerd
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfBeingNerd
  nameWithType: ActionType.MakeFunOfBeingNerd
  fullName: TinyLife.Actions.ActionType.MakeFunOfBeingNerd
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfBeingNerd
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 675
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfBeingNerd
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfBeingNerd As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfBeingBadAtSchool
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfBeingBadAtSchool
  id: MakeFunOfBeingBadAtSchool
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfBeingBadAtSchool
  nameWithType: ActionType.MakeFunOfBeingBadAtSchool
  fullName: TinyLife.Actions.ActionType.MakeFunOfBeingBadAtSchool
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfBeingBadAtSchool
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 680
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfBeingBadAtSchool
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfBeingBadAtSchool As ActionType
- uid: TinyLife.Actions.ActionType.ShooChild
  commentId: F:TinyLife.Actions.ActionType.ShooChild
  id: ShooChild
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ShooChild
  nameWithType: ActionType.ShooChild
  fullName: TinyLife.Actions.ActionType.ShooChild
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ShooChild
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 685
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ShooChild
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ShooChild As ActionType
- uid: TinyLife.Actions.ActionType.MakeFunOfFoodIntolerance
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfFoodIntolerance
  id: MakeFunOfFoodIntolerance
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfFoodIntolerance
  nameWithType: ActionType.MakeFunOfFoodIntolerance
  fullName: TinyLife.Actions.ActionType.MakeFunOfFoodIntolerance
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfFoodIntolerance
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 691
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] MakeFunOfFoodIntolerance
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly MakeFunOfFoodIntolerance As ActionType()
- uid: TinyLife.Actions.ActionType.ChastiseForFoodBeliefs
  commentId: F:TinyLife.Actions.ActionType.ChastiseForFoodBeliefs
  id: ChastiseForFoodBeliefs
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ChastiseForFoodBeliefs
  nameWithType: ActionType.ChastiseForFoodBeliefs
  fullName: TinyLife.Actions.ActionType.ChastiseForFoodBeliefs
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ChastiseForFoodBeliefs
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 697
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] ChastiseForFoodBeliefs
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly ChastiseForFoodBeliefs As ActionType()
- uid: TinyLife.Actions.ActionType.MakeFunOfBeingOutdoorsy
  commentId: F:TinyLife.Actions.ActionType.MakeFunOfBeingOutdoorsy
  id: MakeFunOfBeingOutdoorsy
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeFunOfBeingOutdoorsy
  nameWithType: ActionType.MakeFunOfBeingOutdoorsy
  fullName: TinyLife.Actions.ActionType.MakeFunOfBeingOutdoorsy
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeFunOfBeingOutdoorsy
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 703
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeFunOfBeingOutdoorsy
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeFunOfBeingOutdoorsy As ActionType
- uid: TinyLife.Actions.ActionType.ImplyHomeSmarter
  commentId: F:TinyLife.Actions.ActionType.ImplyHomeSmarter
  id: ImplyHomeSmarter
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ImplyHomeSmarter
  nameWithType: ActionType.ImplyHomeSmarter
  fullName: TinyLife.Actions.ActionType.ImplyHomeSmarter
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ImplyHomeSmarter
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 708
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ImplyHomeSmarter
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ImplyHomeSmarter As ActionType
- uid: TinyLife.Actions.ActionType.ArgueAboutToyOwnership
  commentId: F:TinyLife.Actions.ActionType.ArgueAboutToyOwnership
  id: ArgueAboutToyOwnership
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ArgueAboutToyOwnership
  nameWithType: ActionType.ArgueAboutToyOwnership
  fullName: TinyLife.Actions.ActionType.ArgueAboutToyOwnership
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ArgueAboutToyOwnership
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 713
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ArgueAboutToyOwnership
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ArgueAboutToyOwnership As ActionType
- uid: TinyLife.Actions.ActionType.Flirt
  commentId: F:TinyLife.Actions.ActionType.Flirt
  id: Flirt
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Flirt
  nameWithType: ActionType.Flirt
  fullName: TinyLife.Actions.ActionType.Flirt
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Flirt
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 720
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Flirt
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Flirt As ActionType
- uid: TinyLife.Actions.ActionType.ComplimentLooks
  commentId: F:TinyLife.Actions.ActionType.ComplimentLooks
  id: ComplimentLooks
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ComplimentLooks
  nameWithType: ActionType.ComplimentLooks
  fullName: TinyLife.Actions.ActionType.ComplimentLooks
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ComplimentLooks
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 724
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ComplimentLooks
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ComplimentLooks As ActionType
- uid: TinyLife.Actions.ActionType.MakeRisqueRemark
  commentId: F:TinyLife.Actions.ActionType.MakeRisqueRemark
  id: MakeRisqueRemark
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: MakeRisqueRemark
  nameWithType: ActionType.MakeRisqueRemark
  fullName: TinyLife.Actions.ActionType.MakeRisqueRemark
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MakeRisqueRemark
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 728
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType MakeRisqueRemark
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly MakeRisqueRemark As ActionType
- uid: TinyLife.Actions.ActionType.BeEnticing
  commentId: F:TinyLife.Actions.ActionType.BeEnticing
  id: BeEnticing
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BeEnticing
  nameWithType: ActionType.BeEnticing
  fullName: TinyLife.Actions.ActionType.BeEnticing
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BeEnticing
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 734
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BeEnticing
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BeEnticing As ActionType
- uid: TinyLife.Actions.ActionType.CasualCompliment
  commentId: F:TinyLife.Actions.ActionType.CasualCompliment
  id: CasualCompliment
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CasualCompliment
  nameWithType: ActionType.CasualCompliment
  fullName: TinyLife.Actions.ActionType.CasualCompliment
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CasualCompliment
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 739
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CasualCompliment
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CasualCompliment As ActionType
- uid: TinyLife.Actions.ActionType.ReciteLovePoem
  commentId: F:TinyLife.Actions.ActionType.ReciteLovePoem
  id: ReciteLovePoem
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ReciteLovePoem
  nameWithType: ActionType.ReciteLovePoem
  fullName: TinyLife.Actions.ActionType.ReciteLovePoem
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ReciteLovePoem
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 744
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ReciteLovePoem
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ReciteLovePoem As ActionType
- uid: TinyLife.Actions.ActionType.DeepCompliment
  commentId: F:TinyLife.Actions.ActionType.DeepCompliment
  id: DeepCompliment
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: DeepCompliment
  nameWithType: ActionType.DeepCompliment
  fullName: TinyLife.Actions.ActionType.DeepCompliment
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: DeepCompliment
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 749
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType DeepCompliment
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly DeepCompliment As ActionType
- uid: TinyLife.Actions.ActionType.FlirtyJoke
  commentId: F:TinyLife.Actions.ActionType.FlirtyJoke
  id: FlirtyJoke
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: FlirtyJoke
  nameWithType: ActionType.FlirtyJoke
  fullName: TinyLife.Actions.ActionType.FlirtyJoke
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FlirtyJoke
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 754
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType FlirtyJoke
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly FlirtyJoke As ActionType
- uid: TinyLife.Actions.ActionType.StartDating
  commentId: F:TinyLife.Actions.ActionType.StartDating
  id: StartDating
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: StartDating
  nameWithType: ActionType.StartDating
  fullName: TinyLife.Actions.ActionType.StartDating
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: StartDating
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 760
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType StartDating
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly StartDating As ActionType
- uid: TinyLife.Actions.ActionType.FoolAround
  commentId: F:TinyLife.Actions.ActionType.FoolAround
  id: FoolAround
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: FoolAround
  nameWithType: ActionType.FoolAround
  fullName: TinyLife.Actions.ActionType.FoolAround
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: FoolAround
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 777
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType FoolAround
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly FoolAround As ActionType
- uid: TinyLife.Actions.ActionType.Kiss
  commentId: F:TinyLife.Actions.ActionType.Kiss
  id: Kiss
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Kiss
  nameWithType: ActionType.Kiss
  fullName: TinyLife.Actions.ActionType.Kiss
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Kiss
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 790
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Kiss
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Kiss As ActionType
- uid: TinyLife.Actions.ActionType.AdmitToBeingRomanticWithSomeoneElse
  commentId: F:TinyLife.Actions.ActionType.AdmitToBeingRomanticWithSomeoneElse
  id: AdmitToBeingRomanticWithSomeoneElse
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AdmitToBeingRomanticWithSomeoneElse
  nameWithType: ActionType.AdmitToBeingRomanticWithSomeoneElse
  fullName: TinyLife.Actions.ActionType.AdmitToBeingRomanticWithSomeoneElse
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AdmitToBeingRomanticWithSomeoneElse
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 801
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AdmitToBeingRomanticWithSomeoneElse
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AdmitToBeingRomanticWithSomeoneElse As ActionType
- uid: TinyLife.Actions.ActionType.BreakUp
  commentId: F:TinyLife.Actions.ActionType.BreakUp
  id: BreakUp
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BreakUp
  nameWithType: ActionType.BreakUp
  fullName: TinyLife.Actions.ActionType.BreakUp
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BreakUp
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 814
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType BreakUp
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly BreakUp As ActionType
- uid: TinyLife.Actions.ActionType.ToggleTryingForBaby
  commentId: F:TinyLife.Actions.ActionType.ToggleTryingForBaby
  id: ToggleTryingForBaby
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ToggleTryingForBaby
  nameWithType: ActionType.ToggleTryingForBaby
  fullName: TinyLife.Actions.ActionType.ToggleTryingForBaby
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ToggleTryingForBaby
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 832
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType ToggleTryingForBaby
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly ToggleTryingForBaby As ActionType
- uid: TinyLife.Actions.ActionType.Babble
  commentId: F:TinyLife.Actions.ActionType.Babble
  id: Babble
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: Babble
  nameWithType: ActionType.Babble
  fullName: TinyLife.Actions.ActionType.Babble
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Babble
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 855
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType Babble
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly Babble As ActionType
- uid: TinyLife.Actions.ActionType.CryAt
  commentId: F:TinyLife.Actions.ActionType.CryAt
  id: CryAt
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CryAt
  nameWithType: ActionType.CryAt
  fullName: TinyLife.Actions.ActionType.CryAt
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CryAt
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 861
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType CryAt
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly CryAt As ActionType
- uid: TinyLife.Actions.ActionType.AskWhy
  commentId: F:TinyLife.Actions.ActionType.AskWhy
  id: AskWhy
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskWhy
  nameWithType: ActionType.AskWhy
  fullName: TinyLife.Actions.ActionType.AskWhy
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskWhy
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 867
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskWhy
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskWhy As ActionType
- uid: TinyLife.Actions.ActionType.AskHow
  commentId: F:TinyLife.Actions.ActionType.AskHow
  id: AskHow
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskHow
  nameWithType: ActionType.AskHow
  fullName: TinyLife.Actions.ActionType.AskHow
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskHow
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 872
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskHow
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskHow As ActionType
- uid: TinyLife.Actions.ActionType.TalkAboutPlaying
  commentId: F:TinyLife.Actions.ActionType.TalkAboutPlaying
  id: TalkAboutPlaying
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: TalkAboutPlaying
  nameWithType: ActionType.TalkAboutPlaying
  fullName: TinyLife.Actions.ActionType.TalkAboutPlaying
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TalkAboutPlaying
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 877
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType TalkAboutPlaying
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly TalkAboutPlaying As ActionType
- uid: TinyLife.Actions.ActionType.YoureSoTall
  commentId: F:TinyLife.Actions.ActionType.YoureSoTall
  id: YoureSoTall
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: YoureSoTall
  nameWithType: ActionType.YoureSoTall
  fullName: TinyLife.Actions.ActionType.YoureSoTall
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: YoureSoTall
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 882
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType YoureSoTall
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly YoureSoTall As ActionType
- uid: TinyLife.Actions.ActionType.HelpBabyBook
  commentId: F:TinyLife.Actions.ActionType.HelpBabyBook
  id: HelpBabyBook
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HelpBabyBook
  nameWithType: ActionType.HelpBabyBook
  fullName: TinyLife.Actions.ActionType.HelpBabyBook
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HelpBabyBook
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 887
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] HelpBabyBook
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly HelpBabyBook As ActionType()
- uid: TinyLife.Actions.ActionType.HelpPotty
  commentId: F:TinyLife.Actions.ActionType.HelpPotty
  id: HelpPotty
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HelpPotty
  nameWithType: ActionType.HelpPotty
  fullName: TinyLife.Actions.ActionType.HelpPotty
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HelpPotty
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 900
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] HelpPotty
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly HelpPotty As ActionType()
- uid: TinyLife.Actions.ActionType.ChangeDiaper
  commentId: F:TinyLife.Actions.ActionType.ChangeDiaper
  id: ChangeDiaper
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: ChangeDiaper
  nameWithType: ActionType.ChangeDiaper
  fullName: TinyLife.Actions.ActionType.ChangeDiaper
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ChangeDiaper
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 907
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] ChangeDiaper
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly ChangeDiaper As ActionType()
- uid: TinyLife.Actions.ActionType.CleanUpBaby
  commentId: F:TinyLife.Actions.ActionType.CleanUpBaby
  id: CleanUpBaby
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CleanUpBaby
  nameWithType: ActionType.CleanUpBaby
  fullName: TinyLife.Actions.ActionType.CleanUpBaby
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CleanUpBaby
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 919
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] CleanUpBaby
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly CleanUpBaby As ActionType()
- uid: TinyLife.Actions.ActionType.BatheBaby
  commentId: F:TinyLife.Actions.ActionType.BatheBaby
  id: BatheBaby
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: BatheBaby
  nameWithType: ActionType.BatheBaby
  fullName: TinyLife.Actions.ActionType.BatheBaby
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: BatheBaby
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 926
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] BatheBaby
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly BatheBaby As ActionType()
- uid: TinyLife.Actions.ActionType.PutInCrib
  commentId: F:TinyLife.Actions.ActionType.PutInCrib
  id: PutInCrib
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: PutInCrib
  nameWithType: ActionType.PutInCrib
  fullName: TinyLife.Actions.ActionType.PutInCrib
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: PutInCrib
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 933
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType[] PutInCrib
    return:
      type: TinyLife.Actions.ActionType[]
    content.vb: Public Shared ReadOnly PutInCrib As ActionType()
- uid: TinyLife.Actions.ActionType.AskToTakeOutOfCrib
  commentId: F:TinyLife.Actions.ActionType.AskToTakeOutOfCrib
  id: AskToTakeOutOfCrib
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskToTakeOutOfCrib
  nameWithType: ActionType.AskToTakeOutOfCrib
  fullName: TinyLife.Actions.ActionType.AskToTakeOutOfCrib
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskToTakeOutOfCrib
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 940
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskToTakeOutOfCrib
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskToTakeOutOfCrib As ActionType
- uid: TinyLife.Actions.ActionType.AskFood
  commentId: F:TinyLife.Actions.ActionType.AskFood
  id: AskFood
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AskFood
  nameWithType: ActionType.AskFood
  fullName: TinyLife.Actions.ActionType.AskFood
  type: Field
  source:
    remote:
      path: TinyLife/Actions/ActionType.Social.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AskFood
    path: ../TinyLife/Actions/ActionType.Social.cs
    startLine: 954
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  syntax:
    content: public static readonly ActionType AskFood
    return:
      type: TinyLife.Actions.ActionType
    content.vb: Public Shared ReadOnly AskFood As ActionType
- uid: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  id: CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanPickUpOrIsHoldingForTarget(ActionInfo, ObjectCategory, Func<Furniture, bool>, CanExecuteResult?, bool, bool)
  nameWithType: ActionType.CanPickUpOrIsHoldingForTarget(ActionInfo, ObjectCategory, Func<Furniture, bool>, CanExecuteResult?, bool, bool)
  fullName: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, System.Func<TinyLife.Objects.Furniture, bool>, TinyLife.Actions.CanExecuteResult?, bool, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanPickUpOrIsHoldingForTarget
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 34
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that returns <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> in the following cases:\n<ul><li>The held object <code data-dev-comment-type=\"paramref\" class=\"paramref\">isAllowed</code> and the action object matches the <code data-dev-comment-type=\"paramref\" class=\"paramref\">goalParent</code> category</li><li>The held object is null and the action objectt <code data-dev-comment-type=\"paramref\" class=\"paramref\">isAllowed</code></li></ul>\nThis helper method is useful in cases like <xref href=\"TinyLife.Actions.ActionType.Eat\" data-throw-if-not-resolved=\"false\"></xref>, where the action should be allowed if the person is holding a food plate and clicking a chair, or if a person is clicking the food plate itself.\n<xref href=\"TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.ObjectCategory%2cTinyLife.Objects.ObjectCategory%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> provides a <xref href=\"TinyLife.Actions.MultiAction\" data-throw-if-not-resolved=\"false\"></xref> requivalent to this method.\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanPickUpOrIsHoldingForTarget(ActionInfo info, ObjectCategory goalParent, Func<Furniture, bool> isAllowed, CanExecuteResult? parentNotFoundResult = null, bool allowAnyInvolved = false, bool needsObjectSpot = false)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: goalParent
      type: TinyLife.Objects.ObjectCategory
      description: The object that the required item should be a child of
    - id: isAllowed
      type: System.Func{TinyLife.Objects.Furniture,System.Boolean}
      description: A predicate that checks if the given item is the one searched for
    - id: parentNotFoundResult
      type: System.Nullable{TinyLife.Actions.CanExecuteResult}
      description: If the parent furniture has to be visible somewhere, even if the action object is being held, this <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> is returned if it&apos;s not around. If this value is null, no parent has to exist.
    - id: allowAnyInvolved
      type: System.Boolean
      description: Whether any <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> should be passed to <code data-dev-comment-type="paramref" class="paramref">isAllowed</code>, instead of just the action object
    - id: needsObjectSpot
      type: System.Boolean
      description: Whether a free object spot on the <code data-dev-comment-type="paramref" class="paramref">goalParent</code> is required in the area. If there isn&apos;t one around, a special execution result is returned.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A result that represents the validity of the action
    content.vb: Public Shared Function CanPickUpOrIsHoldingForTarget(info As ActionInfo, goalParent As ObjectCategory, isAllowed As Func(Of Furniture, Boolean), parentNotFoundResult As CanExecuteResult? = Nothing, allowAnyInvolved As Boolean = False, needsObjectSpot As Boolean = False) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget*
  nameWithType.vb: ActionType.CanPickUpOrIsHoldingForTarget(ActionInfo, ObjectCategory, Func(Of Furniture, Boolean), CanExecuteResult?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, System.Func(Of TinyLife.Objects.Furniture, Boolean), TinyLife.Actions.CanExecuteResult?, Boolean, Boolean)
  name.vb: CanPickUpOrIsHoldingForTarget(ActionInfo, ObjectCategory, Func(Of Furniture, Boolean), CanExecuteResult?, Boolean, Boolean)
- uid: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  id: CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean},System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Nullable{TinyLife.Actions.CanExecuteResult},System.Boolean,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanPickUpOrIsHoldingForTarget(ActionInfo, Func<(Furniture Parent, Furniture Item), bool>, Func<Furniture, bool>, CanExecuteResult?, bool, bool)
  nameWithType: ActionType.CanPickUpOrIsHoldingForTarget(ActionInfo, Func<(Furniture Parent, Furniture Item), bool>, Func<Furniture, bool>, CanExecuteResult?, bool, bool)
  fullName: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo, System.Func<(TinyLife.Objects.Furniture Parent, TinyLife.Objects.Furniture Item), bool>, System.Func<TinyLife.Objects.Furniture, bool>, TinyLife.Actions.CanExecuteResult?, bool, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanPickUpOrIsHoldingForTarget
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 54
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that returns <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> in the following cases:\n<ul><li>The held object <code data-dev-comment-type=\"paramref\" class=\"paramref\">isAllowed</code> and the action object matches the <code data-dev-comment-type=\"paramref\" class=\"paramref\">isParentAllowed</code> condition</li><li>The held object is null and the action objectt <code data-dev-comment-type=\"paramref\" class=\"paramref\">isAllowed</code></li></ul>\nThis helper method is useful in cases like <xref href=\"TinyLife.Actions.ActionType.Eat\" data-throw-if-not-resolved=\"false\"></xref>, where the action should be allowed if the person is holding a food plate and clicking a chair, or if a person is clicking the food plate itself.\n<xref href=\"TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo%2cTinyLife.Objects.ObjectCategory%2cTinyLife.Objects.ObjectCategory%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> provides a <xref href=\"TinyLife.Actions.MultiAction\" data-throw-if-not-resolved=\"false\"></xref> requivalent to this method.\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanPickUpOrIsHoldingForTarget(ActionInfo info, Func<(Furniture Parent, Furniture Item), bool> isParentAllowed, Func<Furniture, bool> isAllowed, CanExecuteResult? parentNotFoundResult = null, bool allowAnyInvolved = false, bool needsObjectSpot = false)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: isParentAllowed
      type: System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean}
      description: Whether the object that the required item should be a child of, or placed onto, is correct
    - id: isAllowed
      type: System.Func{TinyLife.Objects.Furniture,System.Boolean}
      description: A predicate that checks if the given item is the one searched for
    - id: parentNotFoundResult
      type: System.Nullable{TinyLife.Actions.CanExecuteResult}
      description: If the parent furniture has to be visible somewhere, even if the action object is being held, this <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> is returned if it&apos;s not around. If this value is null, no parent has to exist.
    - id: allowAnyInvolved
      type: System.Boolean
      description: Whether any <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> should be passed to <code data-dev-comment-type="paramref" class="paramref">isAllowed</code>, instead of just the action object
    - id: needsObjectSpot
      type: System.Boolean
      description: Whether a free object spot on the goal parent is required in the area. If there isn&apos;t one around, <code data-dev-comment-type="paramref" class="paramref">parentNotFoundResult</code> is returned.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A result that represents the validity of the action
    content.vb: Public Shared Function CanPickUpOrIsHoldingForTarget(info As ActionInfo, isParentAllowed As Func(Of (Parent As Furniture, Item As Furniture), Boolean), isAllowed As Func(Of Furniture, Boolean), parentNotFoundResult As CanExecuteResult? = Nothing, allowAnyInvolved As Boolean = False, needsObjectSpot As Boolean = False) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget*
  nameWithType.vb: ActionType.CanPickUpOrIsHoldingForTarget(ActionInfo, Func(Of (Parent As Furniture, Item As Furniture), Boolean), Func(Of Furniture, Boolean), CanExecuteResult?, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo, System.Func(Of (Parent As TinyLife.Objects.Furniture, Item As TinyLife.Objects.Furniture), Boolean), System.Func(Of TinyLife.Objects.Furniture, Boolean), TinyLife.Actions.CanExecuteResult?, Boolean, Boolean)
  name.vb: CanPickUpOrIsHoldingForTarget(ActionInfo, Func(Of (Parent As Furniture, Item As Furniture), Boolean), Func(Of Furniture, Boolean), CanExecuteResult?, Boolean, Boolean)
- uid: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean},System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean},System.Boolean)
  id: CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo,System.Func{TinyLife.Objects.Furniture,System.Boolean},System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean},System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanPickUpOrIsHoldingForTarget(ActionInfo, Func<Furniture, bool>, Func<(Person Person, Furniture Item), bool>, bool)
  nameWithType: ActionType.CanPickUpOrIsHoldingForTarget(ActionInfo, Func<Furniture, bool>, Func<(Person Person, Furniture Item), bool>, bool)
  fullName: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo, System.Func<TinyLife.Objects.Furniture, bool>, System.Func<(TinyLife.Objects.Person Person, TinyLife.Objects.Furniture Item), bool>, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanPickUpOrIsHoldingForTarget
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that returns <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> in the following cases:\n<ul><li>The held object <code data-dev-comment-type=\"paramref\" class=\"paramref\">isAllowed</code> and the action object matches the <code data-dev-comment-type=\"paramref\" class=\"paramref\">isPersonAllowed</code> condition</li><li>The held object is null and the action objectt <code data-dev-comment-type=\"paramref\" class=\"paramref\">isAllowed</code></li></ul>\nThis helper method is useful in cases like <xref href=\"TinyLife.Actions.ActionType.AskToTaste\" data-throw-if-not-resolved=\"false\"></xref>, where the action should be allowed if the person is holding a food plate and clicking a chair, or if a person is clicking the food plate itself.\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanPickUpOrIsHoldingForTarget(ActionInfo info, Func<Furniture, bool> isAllowed, Func<(Person Person, Furniture Item), bool> isPersonAllowed = null, bool allowAnyInvolved = false)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: isAllowed
      type: System.Func{TinyLife.Objects.Furniture,System.Boolean}
      description: A predicate that checks if the given item is the one searched for
    - id: isPersonAllowed
      type: System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean}
      description: Whether the object that the required item should be a child of, or placed onto, is correct
    - id: allowAnyInvolved
      type: System.Boolean
      description: Whether any <xref href="TinyLife.Actions.ActionInfo.GetInvolvedObjects%60%601(TinyLife.Objects.ObjectCategory%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> should be passed to <code data-dev-comment-type="paramref" class="paramref">isAllowed</code>, instead of just the action object
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A result that represents the validity of the action
    content.vb: Public Shared Function CanPickUpOrIsHoldingForTarget(info As ActionInfo, isAllowed As Func(Of Furniture, Boolean), isPersonAllowed As Func(Of (Person As Person, Item As Furniture), Boolean) = Nothing, allowAnyInvolved As Boolean = False) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget*
  nameWithType.vb: ActionType.CanPickUpOrIsHoldingForTarget(ActionInfo, Func(Of Furniture, Boolean), Func(Of (Person As Person, Item As Furniture), Boolean), Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget(TinyLife.Actions.ActionInfo, System.Func(Of TinyLife.Objects.Furniture, Boolean), System.Func(Of (Person As TinyLife.Objects.Person, Item As TinyLife.Objects.Furniture), Boolean), Boolean)
  name.vb: CanPickUpOrIsHoldingForTarget(ActionInfo, Func(Of Furniture, Boolean), Func(Of (Person As Person, Item As Furniture), Boolean), Boolean)
- uid: TinyLife.Actions.ActionType.CanPlaceHeldItem(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanPlaceHeldItem(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanPlaceHeldItem(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanPlaceHeldItem(ActionInfo, bool)
  nameWithType: ActionType.CanPlaceHeldItem(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.CanPlaceHeldItem(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanPlaceHeldItem
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 124
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether or not the item that is currently held by the given person can be placed in an object spot on the given object.\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanPlaceHeldItem(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether or not this action is started automatically. This property is unused, but present for ease of use with <xref href="TinyLife.Actions.ActionType.TypeSettings.CanExecute" data-throw-if-not-resolved="false"></xref>
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if the object has a free object spot, otherwise <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function CanPlaceHeldItem(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanPlaceHeldItem*
  nameWithType.vb: ActionType.CanPlaceHeldItem(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanPlaceHeldItem(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanPlaceHeldItem(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.HasChairOrIsStandingDesk(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.HasChairOrIsStandingDesk(TinyLife.Actions.ActionInfo,System.Boolean)
  id: HasChairOrIsStandingDesk(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HasChairOrIsStandingDesk(ActionInfo, bool)
  nameWithType: ActionType.HasChairOrIsStandingDesk(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.HasChairOrIsStandingDesk(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HasChairOrIsStandingDesk
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 145
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if the given object is sat on a table or desk that has a chair or sat on a standing desk that doesn&apos;t need a chair\n"
  example: []
  syntax:
    content: public static CanExecuteResult HasChairOrIsStandingDesk(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether or not this action is started automatically. This property is unused, but present for ease of use with <xref href="TinyLife.Actions.ActionType.TypeSettings.CanExecute" data-throw-if-not-resolved="false"></xref>
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if there is a chair, a <xref href="TinyLife.Actions.CanExecuteResult.ResultType.Invalid" data-throw-if-not-resolved="false"></xref> result if there is no valid chair
    content.vb: Public Shared Function HasChairOrIsStandingDesk(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.HasChairOrIsStandingDesk*
  nameWithType.vb: ActionType.HasChairOrIsStandingDesk(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.HasChairOrIsStandingDesk(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: HasChairOrIsStandingDesk(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsDislikedOrMean(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsDislikedOrMean(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsDislikedOrMean(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsDislikedOrMean(ActionInfo, bool)
  nameWithType: ActionType.IsDislikedOrMean(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsDislikedOrMean(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsDislikedOrMean
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 161
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if the action is executed manually, the given <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>&apos;s person has the <xref href=\"TinyLife.PersonalityType.Mean\" data-throw-if-not-resolved=\"false\"></xref> personality type, or if the interaction partner has the <xref href=\"TinyLife.RelationshipType.Disliked\" data-throw-if-not-resolved=\"false\"></xref> relationship type (or lower).\nIf the person&apos;s current <xref href=\"TinyLife.Objects.Person.Emotion\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"TinyLife.Emotions.EmotionType.Angry\" data-throw-if-not-resolved=\"false\"></xref>, this method also returns <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsDislikedOrMean(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if any of the conditions are met, otherwise <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function IsDislikedOrMean(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsDislikedOrMean*
  nameWithType.vb: ActionType.IsDislikedOrMean(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsDislikedOrMean(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsDislikedOrMean(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsReadyForRomance(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsReadyForRomance(ActionInfo, bool)
  nameWithType: ActionType.IsReadyForRomance(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsReadyForRomance
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 180
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if the <xref href=\"TinyLife.Actions.ActionInfo.Person\" data-throw-if-not-resolved=\"false\"></xref> and their interaction partner are ready to engage in romantic activities.\nTwo people are considered ready if they are <xref href=\"TinyLife.GenealogyType.Unrelated\" data-throw-if-not-resolved=\"false\"></xref>, both <xref href=\"TinyLife.Objects.AgeGroup.Adult\" data-throw-if-not-resolved=\"false\"></xref> or older, and when the action is either started manually, or they have a high enough <xref href=\"TinyLife.Relationship.FriendLevel\" data-throw-if-not-resolved=\"false\"></xref> and either an existing romantic relationship or <xref href=\"TinyLife.PerSaveOptions.AiRelationships\" data-throw-if-not-resolved=\"false\"></xref> is enabled.\nThis method will also return a &quot;TooSad&quot; result if the person is currently feeling <xref href=\"TinyLife.Emotions.EmotionType.Sad\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method should be used for <xref href=\"TinyLife.Actions.SocialAction\" data-throw-if-not-resolved=\"false\"></xref> actions that are romantic in nature.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsReadyForRomance(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if any of the conditions are met, otherwise <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function IsReadyForRomance(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsReadyForRomance*
  nameWithType.vb: ActionType.IsReadyForRomance(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsReadyForRomance(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsReadyForRomance(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsNotEmotional(TinyLife.Actions.ActionInfo,TinyLife.Emotions.EmotionType[])
  commentId: M:TinyLife.Actions.ActionType.IsNotEmotional(TinyLife.Actions.ActionInfo,TinyLife.Emotions.EmotionType[])
  id: IsNotEmotional(TinyLife.Actions.ActionInfo,TinyLife.Emotions.EmotionType[])
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsNotEmotional(ActionInfo, params EmotionType[])
  nameWithType: ActionType.IsNotEmotional(ActionInfo, params EmotionType[])
  fullName: TinyLife.Actions.ActionType.IsNotEmotional(TinyLife.Actions.ActionInfo, params TinyLife.Emotions.EmotionType[])
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsNotEmotional
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 218
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if the <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> has any of the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">emotions</code>, and returns a <xref href=\"TinyLife.Actions.CanExecuteResult\" data-throw-if-not-resolved=\"false\"></xref> to indicate as such.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsNotEmotional(ActionInfo info, params EmotionType[] emotions)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: emotions
      type: TinyLife.Emotions.EmotionType[]
      description: The emotions that should be queried. If an entry is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, it will simply be ignored.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> that is invalid based on one of the given <code data-dev-comment-type="paramref" class="paramref">emotions</code>, or <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if none of the emotions are present.
    content.vb: Public Shared Function IsNotEmotional(info As ActionInfo, ParamArray emotions As EmotionType()) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsNotEmotional*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown if the <code data-dev-comment-type="paramref" class="paramref">emotions</code> array has no entries.
  nameWithType.vb: ActionType.IsNotEmotional(ActionInfo, ParamArray EmotionType())
  fullName.vb: TinyLife.Actions.ActionType.IsNotEmotional(TinyLife.Actions.ActionInfo, ParamArray TinyLife.Emotions.EmotionType())
  name.vb: IsNotEmotional(ActionInfo, ParamArray EmotionType())
- uid: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsEmptyHanded(ActionInfo, bool)
  nameWithType: ActionType.IsEmptyHanded(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsEmptyHanded
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 234
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if the person is not holding an item or a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsEmptyHanded(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic (unused)
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if the person&apos;s hands are empty, a &quot;HoldingItem&quot; result otherwise
    content.vb: Public Shared Function IsEmptyHanded(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsEmptyHanded*
  nameWithType.vb: ActionType.IsEmptyHanded(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsEmptyHanded(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsEmptyHandedOrHoldingActionObject(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsEmptyHandedOrHoldingActionObject(ActionInfo, bool)
  nameWithType: ActionType.IsEmptyHandedOrHoldingActionObject(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsEmptyHandedOrHoldingActionObject
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 245
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether the person is empty-handed (using <xref href=\"TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>) or currently holding the <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>&apos;s action object.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsEmptyHandedOrHoldingActionObject(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic (unused)
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if the person&apos;s hands are empty or they&apos;re holding the action object, a &quot;HoldingItem&quot; result otherwise
    content.vb: Public Shared Function IsEmptyHandedOrHoldingActionObject(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject*
  nameWithType.vb: ActionType.IsEmptyHandedOrHoldingActionObject(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsEmptyHandedOrHoldingActionObject(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsNotHoldingPerson(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsNotHoldingPerson(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsNotHoldingPerson(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsNotHoldingPerson(ActionInfo, bool)
  nameWithType: ActionType.IsNotHoldingPerson(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsNotHoldingPerson(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsNotHoldingPerson
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 255
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether the person is currently holding another person.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsNotHoldingPerson(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic (unused)
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if the person is not holding another person, a &quot;HoldingPerson&quot; <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> otherwise.
    content.vb: Public Shared Function IsNotHoldingPerson(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsNotHoldingPerson*
  nameWithType.vb: ActionType.IsNotHoldingPerson(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsNotHoldingPerson(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsNotHoldingPerson(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.CanWorkAtDeskObject(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanWorkAtDeskObject(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanWorkAtDeskObject(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanWorkAtDeskObject(ActionInfo, bool)
  nameWithType: ActionType.CanWorkAtDeskObject(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.CanWorkAtDeskObject(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanWorkAtDeskObject
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 265
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if the action object (which is expected to be a desk object like a computer) meets all of the criteria for working at it\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanWorkAtDeskObject(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic (unused)
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if the desk object can be worked at, several possible results like a &quot;NoChair&quot; and a &quot;HoldingItem&quot; result otherwise
    content.vb: Public Shared Function CanWorkAtDeskObject(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanWorkAtDeskObject*
  nameWithType.vb: ActionType.CanWorkAtDeskObject(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanWorkAtDeskObject(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanWorkAtDeskObject(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsNotExpired(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsNotExpired(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsNotExpired(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsNotExpired(ActionInfo, bool)
  nameWithType: ActionType.IsNotExpired(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsNotExpired(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsNotExpired
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 275
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether the action object or any involved objects are expired, and returns an &quot;Expired&quot; result if it is\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsNotExpired(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic (unused)
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if the action object is not expired, an &quot;Expired&quot; result otherwise
    content.vb: Public Shared Function IsNotExpired(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsNotExpired*
  nameWithType.vb: ActionType.IsNotExpired(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsNotExpired(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsNotExpired(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanDoImportantAction(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanDoImportantAction(ActionInfo, bool)
  nameWithType: ActionType.CanDoImportantAction(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanDoImportantAction
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 286
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether an important action can be executed.\nAn important action can be executed if it is manual, not in the current household, or the per-save option <xref href=\"TinyLife.PerSaveOptions.AiImportantActions\" data-throw-if-not-resolved=\"false\"></xref> is true.\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanDoImportantAction(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if an important action can be executed, <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref> otherwise
    content.vb: Public Shared Function CanDoImportantAction(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanDoImportantAction*
  nameWithType.vb: ActionType.CanDoImportantAction(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanDoImportantAction(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanDoImportantAction(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanDoSocialAction(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanDoSocialAction(ActionInfo, bool)
  nameWithType: ActionType.CanDoSocialAction(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanDoSocialAction
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 298
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether a person is currently able to do a social action with the <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>&apos;s action object.\nThis method returns <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> if the action is manual (<code data-dev-comment-type=\"paramref\" class=\"paramref\">automatic</code> is false), or if <xref href=\"TinyLife.PerSaveOptions.AiRelationships\" data-throw-if-not-resolved=\"false\"></xref> is true, or if there is an existing relationship between the two parties.\nThis method is automatically called when <xref href=\"TinyLife.Actions.TalkAction\" data-throw-if-not-resolved=\"false\"></xref> is used.\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanDoSocialAction(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if a social action can be executed, <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref> otherwise
    content.vb: Public Shared Function CanDoSocialAction(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanDoSocialAction*
  nameWithType.vb: ActionType.CanDoSocialAction(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanDoSocialAction(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanDoSocialAction(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.AreDating(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.AreDating(TinyLife.Actions.ActionInfo,System.Boolean)
  id: AreDating(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: AreDating(ActionInfo, bool)
  nameWithType: ActionType.AreDating(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.AreDating(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: AreDating
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 311
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether the person and the interaction partner are currently dating\n"
  example: []
  syntax:
    content: public static CanExecuteResult AreDating(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether the action is automatic (unused)
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if they are dating, <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref> otherwise
    content.vb: Public Shared Function AreDating(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.AreDating*
  nameWithType.vb: ActionType.AreDating(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.AreDating(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: AreDating(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.CanExecuteAll(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionType.CanExecuteDelegate[])
  commentId: M:TinyLife.Actions.ActionType.CanExecuteAll(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionType.CanExecuteDelegate[])
  id: CanExecuteAll(TinyLife.Actions.ActionInfo,System.Boolean,TinyLife.Actions.ActionType.CanExecuteDelegate[])
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanExecuteAll(ActionInfo, bool, params CanExecuteDelegate[])
  nameWithType: ActionType.CanExecuteAll(ActionInfo, bool, params ActionType.CanExecuteDelegate[])
  fullName: TinyLife.Actions.ActionType.CanExecuteAll(TinyLife.Actions.ActionInfo, bool, params TinyLife.Actions.ActionType.CanExecuteDelegate[])
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanExecuteAll
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 328
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines if all of the passed <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> checks pass.\nIf one of the passed checks does not pass, its result is returned. If all of them pass, <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref> is returned. In the context of this method, a null <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> counts as <xref href=\"TinyLife.Actions.CanExecuteResult.Valid\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method is designed to be used with the other helper methods in this class, for example:\n<pre><code>CanExecuteAll(info, automatic, HasChair, IsFunctional, IsEmptyHanded)</code></pre>\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanExecuteAll(ActionInfo info, bool automatic, params ActionType.CanExecuteDelegate[] conditions)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic
    - id: conditions
      type: TinyLife.Actions.ActionType.CanExecuteDelegate[]
      description: The conditions that should be checked
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> if all of the conditions are valid, else the first invalid result
    content.vb: Public Shared Function CanExecuteAll(info As ActionInfo, automatic As Boolean, ParamArray conditions As ActionType.CanExecuteDelegate()) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanExecuteAll*
  nameWithType.vb: ActionType.CanExecuteAll(ActionInfo, Boolean, ParamArray ActionType.CanExecuteDelegate())
  fullName.vb: TinyLife.Actions.ActionType.CanExecuteAll(TinyLife.Actions.ActionInfo, Boolean, ParamArray TinyLife.Actions.ActionType.CanExecuteDelegate())
  name.vb: CanExecuteAll(ActionInfo, Boolean, ParamArray CanExecuteDelegate())
- uid: TinyLife.Actions.ActionType.CanBeSexual(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.CanBeSexual(TinyLife.Actions.ActionInfo,System.Boolean)
  id: CanBeSexual(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: CanBeSexual(ActionInfo, bool)
  nameWithType: ActionType.CanBeSexual(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.CanBeSexual(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CanBeSexual
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 344
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether a person can invoke a sexual activity.\nA <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> can invoke such an activity iff they&apos;re not a <xref href=\"TinyLife.Objects.AgeGroup.Child\" data-throw-if-not-resolved=\"false\"></xref> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">automatic</code> is either false or the person is not asexual (<xref href=\"TinyLife.PersonalityType.Asexual\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public static CanExecuteResult CanBeSexual(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: <xref href="TinyLife.Actions.CanExecuteResult.Hidden" data-throw-if-not-resolved="false"></xref> if the person cannot be sexual, <xref href="TinyLife.Actions.CanExecuteResult.Valid" data-throw-if-not-resolved="false"></xref> otherwise
    content.vb: Public Shared Function CanBeSexual(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.CanBeSexual*
  nameWithType.vb: ActionType.CanBeSexual(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.CanBeSexual(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: CanBeSexual(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.HasSpaceInHousehold(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.HasSpaceInHousehold(TinyLife.Actions.ActionInfo,System.Boolean)
  id: HasSpaceInHousehold(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: HasSpaceInHousehold(ActionInfo, bool)
  nameWithType: ActionType.HasSpaceInHousehold(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.HasSpaceInHousehold(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: HasSpaceInHousehold
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 356
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether an action info&apos;s <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"TinyLife.World.Household\" data-throw-if-not-resolved=\"false\"></xref> has space for another household member.\n"
  example: []
  syntax:
    content: public static CanExecuteResult HasSpaceInHousehold(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic, which is unused in this method.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> that indicates whether there is space in the active household.
    content.vb: Public Shared Function HasSpaceInHousehold(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.HasSpaceInHousehold*
  nameWithType.vb: ActionType.HasSpaceInHousehold(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.HasSpaceInHousehold(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: HasSpaceInHousehold(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.IsNotPregnant(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsNotPregnant(TinyLife.Actions.ActionInfo,System.Boolean)
  id: IsNotPregnant(TinyLife.Actions.ActionInfo,System.Boolean)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: IsNotPregnant(ActionInfo, bool)
  nameWithType: ActionType.IsNotPregnant(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsNotPregnant(TinyLife.Actions.ActionInfo, bool)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: IsNotPregnant
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 368
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nA helper method intended to be used with <xref href=\"TinyLife.Actions.ActionType.CanExecuteDelegate\" data-throw-if-not-resolved=\"false\"></xref> that determines whether an action info&apos;s <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> is not currently pregnant.\n"
  example: []
  syntax:
    content: public static CanExecuteResult IsNotPregnant(ActionInfo info, bool automatic)
    parameters:
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The action info.
    - id: automatic
      type: System.Boolean
      description: Whether this action is automatic, which is unused in this method.
    return:
      type: TinyLife.Actions.CanExecuteResult
      description: A <xref href="TinyLife.Actions.CanExecuteResult" data-throw-if-not-resolved="false"></xref> that indicates whether the person is not pregnant.
    content.vb: Public Shared Function IsNotPregnant(info As ActionInfo, automatic As Boolean) As CanExecuteResult
  overload: TinyLife.Actions.ActionType.IsNotPregnant*
  nameWithType.vb: ActionType.IsNotPregnant(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsNotPregnant(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsNotPregnant(ActionInfo, Boolean)
- uid: TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person,TinyLife.Skills.SkillType)
  commentId: M:TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person,TinyLife.Skills.SkillType)
  id: GetSkillPriorityMod(TinyLife.Objects.Person,TinyLife.Skills.SkillType)
  parent: TinyLife.Actions.ActionType
  langs:
  - csharp
  - vb
  name: GetSkillPriorityMod(Person, SkillType)
  nameWithType: ActionType.GetSkillPriorityMod(Person, SkillType)
  fullName: TinyLife.Actions.ActionType.GetSkillPriorityMod(TinyLife.Objects.Person, TinyLife.Skills.SkillType)
  type: Method
  source:
    remote:
      path: TinyLife/Actions/ActionType.Utilities.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: GetSkillPriorityMod
    path: ../TinyLife/Actions/ActionType.Utilities.cs
    startLine: 384
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions
  summary: "\nReturns a modifier based on whether the person&apos;s <xref href=\"TinyLife.PersonalityType\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TinyLife.Goals.Job\" data-throw-if-not-resolved=\"false\"></xref> or existing <xref href=\"TinyLife.Skills.Skill\" data-throw-if-not-resolved=\"false\"></xref> boost or require the passed skill, which can be used for <xref href=\"TinyLife.Actions.ActionType.AiSettings.PassivePriority\" data-throw-if-not-resolved=\"false\"></xref> if an action involves a skill building activity.\nActions like <xref href=\"TinyLife.Actions.ActionType.PracticeWriting\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Actions.ActionType.PracticeProgramming\" data-throw-if-not-resolved=\"false\"></xref> use this to make sure that they are only executed if <xref href=\"TinyLife.PerSaveOptions.AiSkillBuilding\" data-throw-if-not-resolved=\"false\"></xref> is enabled and if the person could use the skill.\nThe modifier returned can be multiplied with a constant, default passive priority.\n"
  example: []
  syntax:
    content: public static float GetSkillPriorityMod(Person person, SkillType skill)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person to execute an action.
    - id: skill
      type: TinyLife.Skills.SkillType
      description: The skill whose building is involved in the action.
    return:
      type: System.Single
      description: A modifier that is between 0 and 1, based on whether the person&apos;s personality or existing skills boost or require the passed skill.
    content.vb: Public Shared Function GetSkillPriorityMod(person As Person, skill As SkillType) As Single
  overload: TinyLife.Actions.ActionType.GetSkillPriorityMod*
references:
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  commentId: M:TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  name: Register(TypeSettings)
  nameWithType: ActionType.Register(ActionType.TypeSettings)
  fullName: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
    name: Register
  - name: (
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.Register(TinyLife.Actions.ActionType.TypeSettings)
    name: Register
  - name: (
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  - name: )
- uid: TinyLife.Actions.ActionType.TypeSettings.ConstructedType
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.ConstructedType
  name: ConstructedType
  nameWithType: ActionType.TypeSettings.ConstructedType
  fullName: TinyLife.Actions.ActionType.TypeSettings.ConstructedType
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionType.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<ActionType>(ActionType)
  nameWithType: Extensions.JsonCopy<ActionType>(ActionType)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.ActionType>(TinyLife.Actions.ActionType)
  nameWithType.vb: Extensions.JsonCopy(Of ActionType)(ActionType)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.ActionType)(TinyLife.Actions.ActionType)
  name.vb: JsonCopy(Of ActionType)(ActionType)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionType)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Actions.ActionType)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Emotions
    name: Emotions
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Actions.ActionType}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,TinyLife.Actions.ActionType}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, ActionType>
  nameWithType: ReadOnlyDictionary<string, ActionType>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, TinyLife.Actions.ActionType>
  nameWithType.vb: ReadOnlyDictionary(Of String, ActionType)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, TinyLife.Actions.ActionType)
  name.vb: ReadOnlyDictionary(Of String, ActionType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: TinyLife.Actions.ActionType.TypeSettings
  commentId: T:TinyLife.Actions.ActionType.TypeSettings
  parent: TinyLife.Actions
  name: ActionType.TypeSettings
  nameWithType: ActionType.TypeSettings
  fullName: TinyLife.Actions.ActionType.TypeSettings
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.TypeSettings
    name: TypeSettings
- uid: TinyLife.Actions.ActionType.SourceString*
  commentId: Overload:TinyLife.Actions.ActionType.SourceString
  name: SourceString
  nameWithType: ActionType.SourceString
  fullName: TinyLife.Actions.ActionType.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TinyLife.Actions.ActionType
  commentId: T:TinyLife.Actions.ActionType
  parent: TinyLife.Actions
  name: ActionType
  nameWithType: ActionType
  fullName: TinyLife.Actions.ActionType
- uid: TinyLife.Actions.ActionType.Construct*
  commentId: Overload:TinyLife.Actions.ActionType.Construct
  name: Construct
  nameWithType: ActionType.Construct
  fullName: TinyLife.Actions.ActionType.Construct
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Actions.ActionVariety
  commentId: T:TinyLife.Actions.ActionVariety
  parent: TinyLife.Actions
  name: ActionVariety
  nameWithType: ActionVariety
  fullName: TinyLife.Actions.ActionVariety
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TinyLife.Actions.Action.GetDisplayName
  commentId: M:TinyLife.Actions.Action.GetDisplayName
  parent: TinyLife.Actions.Action
  name: GetDisplayName()
  nameWithType: Action.GetDisplayName()
  fullName: TinyLife.Actions.Action.GetDisplayName()
  spec.csharp:
  - uid: TinyLife.Actions.Action.GetDisplayName
    name: GetDisplayName
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.GetDisplayName
    name: GetDisplayName
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  commentId: M:TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  name: GetIconName(ActionInfo)
  nameWithType: ActionType.GetIconName(ActionInfo)
  fullName: TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
    name: GetIconName
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.GetIconName(TinyLife.Actions.ActionInfo)
    name: GetIconName
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: )
- uid: TinyLife.Actions.ActionType.GetDisplayName*
  commentId: Overload:TinyLife.Actions.ActionType.GetDisplayName
  name: GetDisplayName
  nameWithType: ActionType.GetDisplayName
  fullName: TinyLife.Actions.ActionType.GetDisplayName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Actions.ActionType.IsActionType*
  commentId: Overload:TinyLife.Actions.ActionType.IsActionType
  name: IsActionType
  nameWithType: ActionType.IsActionType
  fullName: TinyLife.Actions.ActionType.IsActionType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: TinyLife.Actions.ActionType.TypeSettings.IconName
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.IconName
  name: IconName
  nameWithType: ActionType.TypeSettings.IconName
  fullName: TinyLife.Actions.ActionType.TypeSettings.IconName
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredSkill
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredSkill
  name: RequiredSkill
  nameWithType: ActionType.TypeSettings.RequiredSkill
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredSkill
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion
  name: RequiredEmotion
  nameWithType: ActionType.TypeSettings.RequiredEmotion
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredEmotion
- uid: TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality
  name: RequiredPersonality
  nameWithType: ActionType.TypeSettings.RequiredPersonality
  fullName: TinyLife.Actions.ActionType.TypeSettings.RequiredPersonality
- uid: MLEM.Ui.Elements.Paragraph
  commentId: T:MLEM.Ui.Elements.Paragraph
  parent: MLEM.Ui.Elements
  isExternal: true
  name: Paragraph
  nameWithType: Paragraph
  fullName: MLEM.Ui.Elements.Paragraph
- uid: MLEM.Formatting.Codes.ImageCode
  commentId: T:MLEM.Formatting.Codes.ImageCode
  isExternal: true
  name: ImageCode
  nameWithType: ImageCode
  fullName: MLEM.Formatting.Codes.ImageCode
- uid: TinyLife.Actions.ActionType.GetIconName*
  commentId: Overload:TinyLife.Actions.ActionType.GetIconName
  name: GetIconName
  nameWithType: ActionType.GetIconName
  fullName: TinyLife.Actions.ActionType.GetIconName
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  isExternal: true
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Ui
    name: Ui
    isExternal: true
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    isExternal: true
- uid: TinyLife.Actions.ActionType.TypeSettings.Varieties
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.Varieties
  name: Varieties
  nameWithType: ActionType.TypeSettings.Varieties
  fullName: TinyLife.Actions.ActionType.TypeSettings.Varieties
- uid: TinyLife.Actions.ActionType.GetVarieties*
  commentId: Overload:TinyLife.Actions.ActionType.GetVarieties
  name: GetVarieties
  nameWithType: ActionType.GetVarieties
  fullName: TinyLife.Actions.ActionType.GetVarieties
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.ActionVariety}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ActionVariety>
  nameWithType: IEnumerable<ActionVariety>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.ActionVariety>
  nameWithType.vb: IEnumerable(Of ActionVariety)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.ActionVariety)
  name.vb: IEnumerable(Of ActionVariety)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Actions.ActionVariety
    name: ActionVariety
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TinyLife.Actions.ActionType.Register*
  commentId: Overload:TinyLife.Actions.ActionType.Register
  name: Register
  nameWithType: ActionType.Register
  fullName: TinyLife.Actions.ActionType.Register
- uid: TinyLife.Actions.ActionType[]
  isExternal: true
  name: ActionType[]
  nameWithType: ActionType[]
  fullName: TinyLife.Actions.ActionType[]
  nameWithType.vb: ActionType()
  fullName.vb: TinyLife.Actions.ActionType()
  name.vb: ActionType()
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate
  commentId: T:TinyLife.Actions.ActionType.CanExecuteDelegate
  parent: TinyLife.Actions
  name: ActionType.CanExecuteDelegate
  nameWithType: ActionType.CanExecuteDelegate
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate
  spec.csharp:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  spec.vb:
  - uid: TinyLife.Actions.ActionType
    name: ActionType
  - name: .
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
- uid: TinyLife.Actions.CanExecuteResult.Valid
  commentId: F:TinyLife.Actions.CanExecuteResult.Valid
  name: Valid
  nameWithType: CanExecuteResult.Valid
  fullName: TinyLife.Actions.CanExecuteResult.Valid
- uid: TinyLife.Actions.ActionType.Eat
  commentId: F:TinyLife.Actions.ActionType.Eat
  name: Eat
  nameWithType: ActionType.Eat
  fullName: TinyLife.Actions.ActionType.Eat
- uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  commentId: M:TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
  parent: TinyLife.Actions.Action
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, bool)
  nameWithType: Action.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, bool)
  fullName: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, bool)
  nameWithType.vb: Action.PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  fullName.vb: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo, TinyLife.Objects.ObjectCategory, TinyLife.Objects.ObjectCategory, Boolean)
  name.vb: PickUpAndGoTo(ActionInfo, ObjectCategory, ObjectCategory, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.Action.PickUpAndGoTo(TinyLife.Actions.ActionInfo,TinyLife.Objects.ObjectCategory,TinyLife.Objects.ObjectCategory,System.Boolean)
    name: PickUpAndGoTo
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.MultiAction
  commentId: T:TinyLife.Actions.MultiAction
  parent: TinyLife.Actions
  name: MultiAction
  nameWithType: MultiAction
  fullName: TinyLife.Actions.MultiAction
- uid: TinyLife.Actions.CanExecuteResult
  commentId: T:TinyLife.Actions.CanExecuteResult
  parent: TinyLife.Actions
  name: CanExecuteResult
  nameWithType: CanExecuteResult
  fullName: TinyLife.Actions.CanExecuteResult
- uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
  commentId: M:TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: GetInvolvedObjects<T>(ObjectCategory, bool, bool)
  nameWithType: ActionInfo.GetInvolvedObjects<T>(ObjectCategory, bool, bool)
  fullName: TinyLife.Actions.ActionInfo.GetInvolvedObjects<T>(TinyLife.Objects.ObjectCategory, bool, bool)
  nameWithType.vb: ActionInfo.GetInvolvedObjects(Of T)(ObjectCategory, Boolean, Boolean)
  fullName.vb: TinyLife.Actions.ActionInfo.GetInvolvedObjects(Of T)(TinyLife.Objects.ObjectCategory, Boolean, Boolean)
  name.vb: GetInvolvedObjects(Of T)(ObjectCategory, Boolean, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
    name: GetInvolvedObjects
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionInfo.GetInvolvedObjects``1(TinyLife.Objects.ObjectCategory,System.Boolean,System.Boolean)
    name: GetInvolvedObjects
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Objects.ObjectCategory
    name: ObjectCategory
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget*
  commentId: Overload:TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget
  name: CanPickUpOrIsHoldingForTarget
  nameWithType: ActionType.CanPickUpOrIsHoldingForTarget
  fullName: TinyLife.Actions.ActionType.CanPickUpOrIsHoldingForTarget
- uid: TinyLife.Objects.ObjectCategory
  commentId: T:TinyLife.Objects.ObjectCategory
  parent: TinyLife.Objects
  name: ObjectCategory
  nameWithType: ObjectCategory
  fullName: TinyLife.Objects.ObjectCategory
- uid: System.Func{TinyLife.Objects.Furniture,System.Boolean}
  commentId: T:System.Func{TinyLife.Objects.Furniture,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Furniture, bool>
  nameWithType: Func<Furniture, bool>
  fullName: System.Func<TinyLife.Objects.Furniture, bool>
  nameWithType.vb: Func(Of Furniture, Boolean)
  fullName.vb: System.Func(Of TinyLife.Objects.Furniture, Boolean)
  name.vb: Func(Of Furniture, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Nullable{TinyLife.Actions.CanExecuteResult}
  commentId: T:System.Nullable{TinyLife.Actions.CanExecuteResult}
  parent: System
  definition: System.Nullable`1
  name: CanExecuteResult?
  nameWithType: CanExecuteResult?
  fullName: TinyLife.Actions.CanExecuteResult?
  spec.csharp:
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
  spec.vb:
  - uid: TinyLife.Actions.CanExecuteResult
    name: CanExecuteResult
  - name: '?'
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture},System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(Furniture Parent, Furniture Item), bool>
  nameWithType: Func<(Furniture Parent, Furniture Item), bool>
  fullName: System.Func<(TinyLife.Objects.Furniture Parent, TinyLife.Objects.Furniture Item), bool>
  nameWithType.vb: Func(Of (Parent As Furniture, Item As Furniture), Boolean)
  fullName.vb: System.Func(Of (Parent As TinyLife.Objects.Furniture, Item As TinyLife.Objects.Furniture), Boolean)
  name.vb: Func(Of (Parent As Furniture, Item As Furniture), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture}.Parent
    name: Parent
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.furniture-.parent
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture}.Item
    name: Item
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.furniture-.item
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture}.Parent
    name: Parent
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.furniture-.parent
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Furniture,TinyLife.Objects.Furniture}.Item
    name: Item
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.furniture,tinylife.objects.furniture-.item
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.AskToTaste
  commentId: F:TinyLife.Actions.ActionType.AskToTaste
  name: AskToTaste
  nameWithType: ActionType.AskToTaste
  fullName: TinyLife.Actions.ActionType.AskToTaste
- uid: System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean}
  commentId: T:System.Func{System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture},System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<(Person Person, Furniture Item), bool>
  nameWithType: Func<(Person Person, Furniture Item), bool>
  fullName: System.Func<(TinyLife.Objects.Person Person, TinyLife.Objects.Furniture Item), bool>
  nameWithType.vb: Func(Of (Person As Person, Item As Furniture), Boolean)
  fullName.vb: System.Func(Of (Person As TinyLife.Objects.Person, Item As TinyLife.Objects.Furniture), Boolean)
  name.vb: Func(Of (Person As Person, Item As Furniture), Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: (
  - uid: TinyLife.Objects.Person
    name: Person
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.person,tinylife.objects.furniture-.person
  - name: ','
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture}.Item
    name: Item
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.person,tinylife.objects.furniture-.item
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture}.Person
    name: Person
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.person,tinylife.objects.furniture-.person
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Person
    name: Person
  - name: ','
  - name: " "
  - uid: System.ValueTuple{TinyLife.Objects.Person,TinyLife.Objects.Furniture}.Item
    name: Item
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-tinylife.objects.person,tinylife.objects.furniture-.item
  - name: " "
  - name: As
  - name: " "
  - uid: TinyLife.Objects.Furniture
    name: Furniture
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.TypeSettings.CanExecute
  commentId: F:TinyLife.Actions.ActionType.TypeSettings.CanExecute
  name: CanExecute
  nameWithType: ActionType.TypeSettings.CanExecute
  fullName: TinyLife.Actions.ActionType.TypeSettings.CanExecute
- uid: TinyLife.Actions.CanExecuteResult.Hidden
  commentId: F:TinyLife.Actions.CanExecuteResult.Hidden
  name: Hidden
  nameWithType: CanExecuteResult.Hidden
  fullName: TinyLife.Actions.CanExecuteResult.Hidden
- uid: TinyLife.Actions.ActionType.CanPlaceHeldItem*
  commentId: Overload:TinyLife.Actions.ActionType.CanPlaceHeldItem
  name: CanPlaceHeldItem
  nameWithType: ActionType.CanPlaceHeldItem
  fullName: TinyLife.Actions.ActionType.CanPlaceHeldItem
- uid: TinyLife.Actions.CanExecuteResult.ResultType.Invalid
  commentId: F:TinyLife.Actions.CanExecuteResult.ResultType.Invalid
  name: Invalid
  nameWithType: CanExecuteResult.ResultType.Invalid
  fullName: TinyLife.Actions.CanExecuteResult.ResultType.Invalid
- uid: TinyLife.Actions.ActionType.HasChairOrIsStandingDesk*
  commentId: Overload:TinyLife.Actions.ActionType.HasChairOrIsStandingDesk
  name: HasChairOrIsStandingDesk
  nameWithType: ActionType.HasChairOrIsStandingDesk
  fullName: TinyLife.Actions.ActionType.HasChairOrIsStandingDesk
- uid: TinyLife.PersonalityType.Mean
  commentId: F:TinyLife.PersonalityType.Mean
  name: Mean
  nameWithType: PersonalityType.Mean
  fullName: TinyLife.PersonalityType.Mean
- uid: TinyLife.RelationshipType.Disliked
  commentId: F:TinyLife.RelationshipType.Disliked
  name: Disliked
  nameWithType: RelationshipType.Disliked
  fullName: TinyLife.RelationshipType.Disliked
- uid: TinyLife.Objects.Person.Emotion
  commentId: P:TinyLife.Objects.Person.Emotion
  name: Emotion
  nameWithType: Person.Emotion
  fullName: TinyLife.Objects.Person.Emotion
- uid: TinyLife.Emotions.EmotionType.Angry
  commentId: F:TinyLife.Emotions.EmotionType.Angry
  name: Angry
  nameWithType: EmotionType.Angry
  fullName: TinyLife.Emotions.EmotionType.Angry
- uid: TinyLife.Actions.ActionType.IsDislikedOrMean*
  commentId: Overload:TinyLife.Actions.ActionType.IsDislikedOrMean
  name: IsDislikedOrMean
  nameWithType: ActionType.IsDislikedOrMean
  fullName: TinyLife.Actions.ActionType.IsDislikedOrMean
- uid: TinyLife.Actions.ActionInfo.Person
  commentId: P:TinyLife.Actions.ActionInfo.Person
  name: Person
  nameWithType: ActionInfo.Person
  fullName: TinyLife.Actions.ActionInfo.Person
- uid: TinyLife.GenealogyType.Unrelated
  commentId: F:TinyLife.GenealogyType.Unrelated
  name: Unrelated
  nameWithType: GenealogyType.Unrelated
  fullName: TinyLife.GenealogyType.Unrelated
- uid: TinyLife.Objects.AgeGroup.Adult
  commentId: F:TinyLife.Objects.AgeGroup.Adult
  name: Adult
  nameWithType: AgeGroup.Adult
  fullName: TinyLife.Objects.AgeGroup.Adult
- uid: TinyLife.Relationship.FriendLevel
  commentId: P:TinyLife.Relationship.FriendLevel
  name: FriendLevel
  nameWithType: Relationship.FriendLevel
  fullName: TinyLife.Relationship.FriendLevel
- uid: TinyLife.PerSaveOptions.AiRelationships
  commentId: F:TinyLife.PerSaveOptions.AiRelationships
  name: AiRelationships
  nameWithType: PerSaveOptions.AiRelationships
  fullName: TinyLife.PerSaveOptions.AiRelationships
- uid: TinyLife.Emotions.EmotionType.Sad
  commentId: F:TinyLife.Emotions.EmotionType.Sad
  name: Sad
  nameWithType: EmotionType.Sad
  fullName: TinyLife.Emotions.EmotionType.Sad
- uid: TinyLife.Actions.SocialAction
  commentId: T:TinyLife.Actions.SocialAction
  parent: TinyLife.Actions
  name: SocialAction
  nameWithType: SocialAction
  fullName: TinyLife.Actions.SocialAction
- uid: TinyLife.Actions.ActionType.IsReadyForRomance*
  commentId: Overload:TinyLife.Actions.ActionType.IsReadyForRomance
  name: IsReadyForRomance
  nameWithType: ActionType.IsReadyForRomance
  fullName: TinyLife.Actions.ActionType.IsReadyForRomance
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: TinyLife.Actions.ActionType.IsNotEmotional*
  commentId: Overload:TinyLife.Actions.ActionType.IsNotEmotional
  name: IsNotEmotional
  nameWithType: ActionType.IsNotEmotional
  fullName: TinyLife.Actions.ActionType.IsNotEmotional
- uid: TinyLife.Emotions.EmotionType[]
  isExternal: true
  name: EmotionType[]
  nameWithType: EmotionType[]
  fullName: TinyLife.Emotions.EmotionType[]
  nameWithType.vb: EmotionType()
  fullName.vb: TinyLife.Emotions.EmotionType()
  name.vb: EmotionType()
  spec.csharp:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Emotions.EmotionType
    name: EmotionType
  - name: (
  - name: )
- uid: TinyLife.Actions.ActionType.IsEmptyHanded*
  commentId: Overload:TinyLife.Actions.ActionType.IsEmptyHanded
  name: IsEmptyHanded
  nameWithType: ActionType.IsEmptyHanded
  fullName: TinyLife.Actions.ActionType.IsEmptyHanded
- uid: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
  commentId: M:TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: IsEmptyHanded(ActionInfo, bool)
  nameWithType: ActionType.IsEmptyHanded(ActionInfo, bool)
  fullName: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo, bool)
  nameWithType.vb: ActionType.IsEmptyHanded(ActionInfo, Boolean)
  fullName.vb: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo, Boolean)
  name.vb: IsEmptyHanded(ActionInfo, Boolean)
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
    name: IsEmptyHanded
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: TinyLife.Actions.ActionType.IsEmptyHanded(TinyLife.Actions.ActionInfo,System.Boolean)
    name: IsEmptyHanded
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject*
  commentId: Overload:TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject
  name: IsEmptyHandedOrHoldingActionObject
  nameWithType: ActionType.IsEmptyHandedOrHoldingActionObject
  fullName: TinyLife.Actions.ActionType.IsEmptyHandedOrHoldingActionObject
- uid: TinyLife.Actions.ActionType.IsNotHoldingPerson*
  commentId: Overload:TinyLife.Actions.ActionType.IsNotHoldingPerson
  name: IsNotHoldingPerson
  nameWithType: ActionType.IsNotHoldingPerson
  fullName: TinyLife.Actions.ActionType.IsNotHoldingPerson
- uid: TinyLife.Actions.ActionType.CanWorkAtDeskObject*
  commentId: Overload:TinyLife.Actions.ActionType.CanWorkAtDeskObject
  name: CanWorkAtDeskObject
  nameWithType: ActionType.CanWorkAtDeskObject
  fullName: TinyLife.Actions.ActionType.CanWorkAtDeskObject
- uid: TinyLife.Actions.ActionType.IsNotExpired*
  commentId: Overload:TinyLife.Actions.ActionType.IsNotExpired
  name: IsNotExpired
  nameWithType: ActionType.IsNotExpired
  fullName: TinyLife.Actions.ActionType.IsNotExpired
- uid: TinyLife.PerSaveOptions.AiImportantActions
  commentId: F:TinyLife.PerSaveOptions.AiImportantActions
  name: AiImportantActions
  nameWithType: PerSaveOptions.AiImportantActions
  fullName: TinyLife.PerSaveOptions.AiImportantActions
- uid: TinyLife.Actions.ActionType.CanDoImportantAction*
  commentId: Overload:TinyLife.Actions.ActionType.CanDoImportantAction
  name: CanDoImportantAction
  nameWithType: ActionType.CanDoImportantAction
  fullName: TinyLife.Actions.ActionType.CanDoImportantAction
- uid: TinyLife.Actions.TalkAction
  commentId: T:TinyLife.Actions.TalkAction
  name: TalkAction
  nameWithType: TalkAction
  fullName: TinyLife.Actions.TalkAction
- uid: TinyLife.Actions.ActionType.CanDoSocialAction*
  commentId: Overload:TinyLife.Actions.ActionType.CanDoSocialAction
  name: CanDoSocialAction
  nameWithType: ActionType.CanDoSocialAction
  fullName: TinyLife.Actions.ActionType.CanDoSocialAction
- uid: TinyLife.Actions.ActionType.AreDating*
  commentId: Overload:TinyLife.Actions.ActionType.AreDating
  name: AreDating
  nameWithType: ActionType.AreDating
  fullName: TinyLife.Actions.ActionType.AreDating
- uid: TinyLife.Actions.ActionType.CanExecuteAll*
  commentId: Overload:TinyLife.Actions.ActionType.CanExecuteAll
  name: CanExecuteAll
  nameWithType: ActionType.CanExecuteAll
  fullName: TinyLife.Actions.ActionType.CanExecuteAll
- uid: TinyLife.Actions.ActionType.CanExecuteDelegate[]
  isExternal: true
  name: CanExecuteDelegate[]
  nameWithType: ActionType.CanExecuteDelegate[]
  fullName: TinyLife.Actions.ActionType.CanExecuteDelegate[]
  nameWithType.vb: ActionType.CanExecuteDelegate()
  fullName.vb: TinyLife.Actions.ActionType.CanExecuteDelegate()
  name.vb: CanExecuteDelegate()
  spec.csharp:
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TinyLife.Actions.ActionType.CanExecuteDelegate
    name: CanExecuteDelegate
  - name: (
  - name: )
- uid: TinyLife.Objects.AgeGroup.Child
  commentId: F:TinyLife.Objects.AgeGroup.Child
  name: Child
  nameWithType: AgeGroup.Child
  fullName: TinyLife.Objects.AgeGroup.Child
- uid: TinyLife.PersonalityType.Asexual
  commentId: F:TinyLife.PersonalityType.Asexual
  name: Asexual
  nameWithType: PersonalityType.Asexual
  fullName: TinyLife.PersonalityType.Asexual
- uid: TinyLife.Actions.ActionType.CanBeSexual*
  commentId: Overload:TinyLife.Actions.ActionType.CanBeSexual
  name: CanBeSexual
  nameWithType: ActionType.CanBeSexual
  fullName: TinyLife.Actions.ActionType.CanBeSexual
- uid: TinyLife.World.Household
  commentId: T:TinyLife.World.Household
  parent: TinyLife.World
  name: Household
  nameWithType: Household
  fullName: TinyLife.World.Household
- uid: TinyLife.Actions.ActionType.HasSpaceInHousehold*
  commentId: Overload:TinyLife.Actions.ActionType.HasSpaceInHousehold
  name: HasSpaceInHousehold
  nameWithType: ActionType.HasSpaceInHousehold
  fullName: TinyLife.Actions.ActionType.HasSpaceInHousehold
- uid: TinyLife.World
  commentId: N:TinyLife.World
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.World
    name: World
- uid: TinyLife.Actions.ActionType.IsNotPregnant*
  commentId: Overload:TinyLife.Actions.ActionType.IsNotPregnant
  name: IsNotPregnant
  nameWithType: ActionType.IsNotPregnant
  fullName: TinyLife.Actions.ActionType.IsNotPregnant
- uid: TinyLife.PersonalityType
  commentId: T:TinyLife.PersonalityType
  parent: TinyLife
  name: PersonalityType
  nameWithType: PersonalityType
  fullName: TinyLife.PersonalityType
- uid: TinyLife.Goals.Job
  commentId: T:TinyLife.Goals.Job
  parent: TinyLife.Goals
  name: Job
  nameWithType: Job
  fullName: TinyLife.Goals.Job
- uid: TinyLife.Skills.Skill
  commentId: T:TinyLife.Skills.Skill
  parent: TinyLife.Skills
  name: Skill
  nameWithType: Skill
  fullName: TinyLife.Skills.Skill
- uid: TinyLife.Actions.ActionType.AiSettings.PassivePriority
  commentId: F:TinyLife.Actions.ActionType.AiSettings.PassivePriority
  name: PassivePriority
  nameWithType: ActionType.AiSettings.PassivePriority
  fullName: TinyLife.Actions.ActionType.AiSettings.PassivePriority
- uid: TinyLife.Actions.ActionType.PracticeWriting
  commentId: F:TinyLife.Actions.ActionType.PracticeWriting
  name: PracticeWriting
  nameWithType: ActionType.PracticeWriting
  fullName: TinyLife.Actions.ActionType.PracticeWriting
- uid: TinyLife.Actions.ActionType.PracticeProgramming
  commentId: F:TinyLife.Actions.ActionType.PracticeProgramming
  name: PracticeProgramming
  nameWithType: ActionType.PracticeProgramming
  fullName: TinyLife.Actions.ActionType.PracticeProgramming
- uid: TinyLife.PerSaveOptions.AiSkillBuilding
  commentId: F:TinyLife.PerSaveOptions.AiSkillBuilding
  name: AiSkillBuilding
  nameWithType: PerSaveOptions.AiSkillBuilding
  fullName: TinyLife.PerSaveOptions.AiSkillBuilding
- uid: TinyLife.Actions.ActionType.GetSkillPriorityMod*
  commentId: Overload:TinyLife.Actions.ActionType.GetSkillPriorityMod
  name: GetSkillPriorityMod
  nameWithType: ActionType.GetSkillPriorityMod
  fullName: TinyLife.Actions.ActionType.GetSkillPriorityMod
- uid: TinyLife.Skills.SkillType
  commentId: T:TinyLife.Skills.SkillType
  parent: TinyLife.Skills
  name: SkillType
  nameWithType: SkillType
  fullName: TinyLife.Skills.SkillType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TinyLife
  commentId: N:TinyLife
  name: TinyLife
  nameWithType: TinyLife
  fullName: TinyLife
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
- uid: TinyLife.Skills
  commentId: N:TinyLife.Skills
  name: TinyLife.Skills
  nameWithType: TinyLife.Skills
  fullName: TinyLife.Skills
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Skills
    name: Skills
