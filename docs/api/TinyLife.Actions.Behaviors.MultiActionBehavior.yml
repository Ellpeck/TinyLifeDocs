### YamlMime:ManagedReference
items:
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior
  commentId: T:TinyLife.Actions.Behaviors.MultiActionBehavior
  id: MultiActionBehavior
  parent: TinyLife.Actions.Behaviors
  children:
  - TinyLife.Actions.Behaviors.MultiActionBehavior.#ctor(TinyLife.Actions.Action)
  - TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  - TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions
  langs:
  - csharp
  - vb
  name: MultiActionBehavior
  nameWithType: MultiActionBehavior
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior
  type: Class
  source:
    remote:
      path: TinyLife/Actions/Behaviors/ActionBehavior.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: MultiActionBehavior
    path: ../TinyLife/Actions/Behaviors/ActionBehavior.cs
    startLine: 95
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nA multi action behavior is an <xref href=\"TinyLife.Actions.Behaviors.ActionBehavior\" data-throw-if-not-resolved=\"false\"></xref> that allows a set of first actions to be created.\nThis class is intended to be used with <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref>, which is a <xref href=\"TinyLife.Actions.MultiAction\" data-throw-if-not-resolved=\"false\"></xref> that makes use of a behavior.\nNote that action behaviors do not have the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref>, which means they are not saved to disk. This differentiates them from the various action handlers in <xref href=\"TinyLife.Actions.Handlers\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class MultiActionBehavior : ActionBehavior'
    content.vb: >-
      Public MustInherit Class MultiActionBehavior
          Inherits ActionBehavior
  inheritance:
  - System.Object
  - TinyLife.Actions.Behaviors.ActionBehavior
  derivedClasses:
  - TinyLife.Actions.Behaviors.GetAndSitDownBehavior
  - TinyLife.Actions.Behaviors.SinkBehavior
  - TinyLife.Actions.Behaviors.WorkAtDeskObjectBehavior
  inheritedMembers:
  - TinyLife.Actions.Behaviors.ActionBehavior.Action
  - TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  - TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  - TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  - TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Actions.Behaviors.MultiActionBehavior.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.#ctor(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Behaviors.MultiActionBehavior.#ctor(TinyLife.Actions.Action)
  id: '#ctor(TinyLife.Actions.Action)'
  parent: TinyLife.Actions.Behaviors.MultiActionBehavior
  langs:
  - csharp
  - vb
  name: MultiActionBehavior(Action)
  nameWithType: MultiActionBehavior.MultiActionBehavior(Action)
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.MultiActionBehavior(TinyLife.Actions.Action)
  type: Constructor
  source:
    remote:
      path: TinyLife/Actions/Behaviors/ActionBehavior.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Actions/Behaviors/ActionBehavior.cs
    startLine: 98
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nCreates a new action behavior with the given underlying action.\nTo create an action behavior of a given type automatically, use <xref href=\"TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance%60%601(TinyLife.Actions.Action)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected MultiActionBehavior(Action action)
    parameters:
    - id: action
      type: TinyLife.Actions.Action
      description: The action that this behavior is acting upon
    content.vb: Protected Sub New(action As Action)
  overload: TinyLife.Actions.Behaviors.MultiActionBehavior.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  commentId: M:TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  id: CreateFirstActions
  parent: TinyLife.Actions.Behaviors.MultiActionBehavior
  langs:
  - csharp
  - vb
  name: CreateFirstActions()
  nameWithType: MultiActionBehavior.CreateFirstActions()
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/ActionBehavior.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateFirstActions
    path: ../TinyLife/Actions/Behaviors/ActionBehavior.cs
    startLine: 105
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nCreates a set of actions that should be executed before the main <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> starts.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.BehaviorMultiAction%601.CreateFirstActions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Action> CreateFirstActions()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
      description: ''
    content.vb: Public MustOverride Function CreateFirstActions As IEnumerable(Of Action)
  overload: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions
  commentId: M:TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions
  id: CreateLastActions
  parent: TinyLife.Actions.Behaviors.MultiActionBehavior
  langs:
  - csharp
  - vb
  name: CreateLastActions()
  nameWithType: MultiActionBehavior.CreateLastActions()
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions()
  type: Method
  source:
    remote:
      path: TinyLife/Actions/Behaviors/ActionBehavior.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CreateLastActions
    path: ../TinyLife/Actions/Behaviors/ActionBehavior.cs
    startLine: 112
  assemblies:
  - Tiny Life
  namespace: TinyLife.Actions.Behaviors
  summary: "\nCreates a set of actions that should be executed after the main <xref href=\"TinyLife.Actions.Action\" data-throw-if-not-resolved=\"false\"></xref> finished.\nThis method is automatically called when using <xref href=\"TinyLife.Actions.BehaviorMultiAction%601\" data-throw-if-not-resolved=\"false\"></xref> in <xref href=\"TinyLife.Actions.BehaviorMultiAction%601.CreateLastActions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Action> CreateLastActions()
    return:
      type: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
      description: ''
    content.vb: Public Overridable Function CreateLastActions As IEnumerable(Of Action)
  overload: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: TinyLife.Actions.Behaviors.ActionBehavior
  commentId: T:TinyLife.Actions.Behaviors.ActionBehavior
  parent: TinyLife.Actions.Behaviors
  name: ActionBehavior
  nameWithType: ActionBehavior
  fullName: TinyLife.Actions.Behaviors.ActionBehavior
- uid: TinyLife.Actions.BehaviorMultiAction`1
  commentId: T:TinyLife.Actions.BehaviorMultiAction`1
  name: BehaviorMultiAction<T>
  nameWithType: BehaviorMultiAction<T>
  fullName: TinyLife.Actions.BehaviorMultiAction<T>
  nameWithType.vb: BehaviorMultiAction(Of T)
  fullName.vb: TinyLife.Actions.BehaviorMultiAction(Of T)
  name.vb: BehaviorMultiAction(Of T)
  spec.csharp:
  - uid: TinyLife.Actions.BehaviorMultiAction`1
    name: BehaviorMultiAction
    nameWithType: BehaviorMultiAction
    fullName: TinyLife.Actions.BehaviorMultiAction
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TinyLife.Actions.BehaviorMultiAction`1
    name: BehaviorMultiAction
    nameWithType: BehaviorMultiAction
    fullName: TinyLife.Actions.BehaviorMultiAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.MultiAction
  commentId: T:TinyLife.Actions.MultiAction
  parent: TinyLife.Actions
  name: MultiAction
  nameWithType: MultiAction
  fullName: TinyLife.Actions.MultiAction
- uid: System.Runtime.Serialization.DataContractAttribute
  commentId: T:System.Runtime.Serialization.DataContractAttribute
  parent: System.Runtime.Serialization
  isExternal: true
  name: DataContractAttribute
  nameWithType: DataContractAttribute
  fullName: System.Runtime.Serialization.DataContractAttribute
- uid: TinyLife.Actions.Handlers
  commentId: N:TinyLife.Actions.Handlers
  name: TinyLife.Actions.Handlers
  nameWithType: TinyLife.Actions.Handlers
  fullName: TinyLife.Actions.Handlers
- uid: TinyLife.Actions.Behaviors
  commentId: N:TinyLife.Actions.Behaviors
  name: TinyLife.Actions.Behaviors
  nameWithType: TinyLife.Actions.Behaviors
  fullName: TinyLife.Actions.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TinyLife.Actions.Behaviors.ActionBehavior.Action
  commentId: F:TinyLife.Actions.Behaviors.ActionBehavior.Action
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: Action
  nameWithType: ActionBehavior.Action
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.Action
- uid: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: Initialize()
  nameWithType: ActionBehavior.Initialize()
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.Initialize()
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
    name: Initialize
    nameWithType: ActionBehavior.Initialize
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
    name: Initialize
    nameWithType: ActionBehavior.Initialize
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  isExternal: true
  name: Update(GameTime, TimeSpan, Single)
  nameWithType: ActionBehavior.Update(GameTime, TimeSpan, Single)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, System.Single)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: ActionBehavior.Update
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
    nameWithType: ActionBehavior.Update
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    nameWithType: GameTime
    fullName: Microsoft.Xna.Framework.GameTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: GetIconObject()
  nameWithType: ActionBehavior.GetIconObject()
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject()
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
    name: GetIconObject
    nameWithType: ActionBehavior.GetIconObject
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
    name: GetIconObject
    nameWithType: ActionBehavior.GetIconObject
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetIconObject
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: OnCompleted(CompletionType)
  nameWithType: ActionBehavior.OnCompleted(CompletionType)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    nameWithType: ActionBehavior.OnCompleted
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted(TinyLife.Actions.CompletionType)
    name: OnCompleted
    nameWithType: ActionBehavior.OnCompleted
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.OnCompleted
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: GetNextAction(CompletionType)
  nameWithType: ActionBehavior.GetNextAction(CompletionType)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
    nameWithType: ActionBehavior.GetNextAction
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction(TinyLife.Actions.CompletionType)
    name: GetNextAction
    nameWithType: ActionBehavior.GetNextAction
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.GetNextAction
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.CompletionType
    name: CompletionType
    nameWithType: CompletionType
    fullName: TinyLife.Actions.CompletionType
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
  commentId: M:TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
  parent: TinyLife.Actions.Behaviors.ActionBehavior
  name: CreateDefaultInstance<T>(Action)
  nameWithType: ActionBehavior.CreateDefaultInstance<T>(Action)
  fullName: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance<T>(TinyLife.Actions.Action)
  nameWithType.vb: ActionBehavior.CreateDefaultInstance(Of T)(Action)
  fullName.vb: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance(Of T)(TinyLife.Actions.Action)
  name.vb: CreateDefaultInstance(Of T)(Action)
  spec.csharp:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
    name: CreateDefaultInstance<T>
    nameWithType: ActionBehavior.CreateDefaultInstance<T>
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance``1(TinyLife.Actions.Action)
    name: CreateDefaultInstance(Of T)
    nameWithType: ActionBehavior.CreateDefaultInstance(Of T)
    fullName: TinyLife.Actions.Behaviors.ActionBehavior.CreateDefaultInstance(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<MultiActionBehavior>()
  nameWithType: Extensions.JsonCopy<MultiActionBehavior>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Behaviors.MultiActionBehavior>()
  nameWithType.vb: Extensions.JsonCopy(Of MultiActionBehavior)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Behaviors.MultiActionBehavior)()
  name.vb: JsonCopy(Of MultiActionBehavior)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<MultiActionBehavior>
    nameWithType: Extensions.JsonCopy<MultiActionBehavior>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Actions.Behaviors.MultiActionBehavior>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of MultiActionBehavior)
    nameWithType: Extensions.JsonCopy(Of MultiActionBehavior)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Actions.Behaviors.MultiActionBehavior)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.#ctor*
  commentId: Overload:TinyLife.Actions.Behaviors.MultiActionBehavior.#ctor
  name: MultiActionBehavior
  nameWithType: MultiActionBehavior.MultiActionBehavior
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.MultiActionBehavior
- uid: TinyLife.Actions.Action
  commentId: T:TinyLife.Actions.Action
  parent: TinyLife.Actions
  name: Action
  nameWithType: Action
  fullName: TinyLife.Actions.Action
- uid: TinyLife.Actions.BehaviorMultiAction`1.CreateFirstActions
  commentId: M:TinyLife.Actions.BehaviorMultiAction`1.CreateFirstActions
  isExternal: true
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions*
  commentId: Overload:TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
  name: CreateFirstActions
  nameWithType: MultiActionBehavior.CreateFirstActions
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateFirstActions
- uid: System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  commentId: T:System.Collections.Generic.IEnumerable{TinyLife.Actions.Action}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Action>
  nameWithType: IEnumerable<Action>
  fullName: System.Collections.Generic.IEnumerable<TinyLife.Actions.Action>
  nameWithType.vb: IEnumerable(Of Action)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TinyLife.Actions.Action)
  name.vb: IEnumerable(Of Action)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TinyLife.Actions.Action
    name: Action
    nameWithType: Action
    fullName: TinyLife.Actions.Action
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TinyLife.Actions.BehaviorMultiAction`1.CreateLastActions
  commentId: M:TinyLife.Actions.BehaviorMultiAction`1.CreateLastActions
  isExternal: true
- uid: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions*
  commentId: Overload:TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions
  name: CreateLastActions
  nameWithType: MultiActionBehavior.CreateLastActions
  fullName: TinyLife.Actions.Behaviors.MultiActionBehavior.CreateLastActions
