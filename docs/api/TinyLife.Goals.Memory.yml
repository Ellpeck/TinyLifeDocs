### YamlMime:ManagedReference
items:
- uid: TinyLife.Goals.Memory
  commentId: T:TinyLife.Goals.Memory
  id: Memory
  parent: TinyLife.Goals
  children:
  - TinyLife.Goals.Memory.#ctor(TinyLife.Goals.MemoryType,TinyLife.Actions.ActionInfo,System.TimeSpan)
  - TinyLife.Goals.Memory.Info
  - TinyLife.Goals.Memory.TimeOccured
  - TinyLife.Goals.Memory.TimeSinceOccured
  - TinyLife.Goals.Memory.Type
  - TinyLife.Goals.Memory.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  - TinyLife.Goals.Memory.Validate(TinyLife.Objects.Person)
  langs:
  - csharp
  - vb
  name: Memory
  nameWithType: Memory
  fullName: TinyLife.Goals.Memory
  type: Class
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Memory
    path: ../TinyLife/Goals/Memory.cs
    startLine: 14
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA memory is a set of information that a <xref href=\"TinyLife.Objects.Person\" data-throw-if-not-resolved=\"false\"></xref> can store, related to an activity or event that has happened at a given type.\nA memory is constructed from an underlying <xref href=\"TinyLife.Goals.MemoryType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Memory : JsonTypeSafeGenericDataHolder, IGenericDataHolder
    content.vb: >-
      <DataContract>

      Public Class Memory Inherits JsonTypeSafeGenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  - MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Goals.Memory.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Memory.Type
  commentId: F:TinyLife.Goals.Memory.Type
  id: Type
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Memory.Type
  fullName: TinyLife.Goals.Memory.Type
  type: Field
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Type
    path: ../TinyLife/Goals/Memory.cs
    startLine: 21
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe type of this memory.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public readonly MemoryType Type
    return:
      type: TinyLife.Goals.MemoryType
    content.vb: >-
      <DataMember>

      Public ReadOnly Type As MemoryType
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Memory.TimeOccured
  commentId: P:TinyLife.Goals.Memory.TimeOccured
  id: TimeOccured
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: TimeOccured
  nameWithType: Memory.TimeOccured
  fullName: TinyLife.Goals.Memory.TimeOccured
  type: Property
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TimeOccured
    path: ../TinyLife/Goals/Memory.cs
    startLine: 26
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThe in-game time that this event occured at.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public TimeSpan TimeOccured { get; protected set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: >-
      <DataMember>

      Public Property TimeOccured As TimeSpan
  overload: TinyLife.Goals.Memory.TimeOccured*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Memory.Info
  commentId: P:TinyLife.Goals.Memory.Info
  id: Info
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: Memory.Info
  fullName: TinyLife.Goals.Memory.Info
  type: Property
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Info
    path: ../TinyLife/Goals/Memory.cs
    startLine: 31
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nThis memory&apos;s <xref href=\"TinyLife.Actions.ActionInfo\" data-throw-if-not-resolved=\"false\"></xref>, which contains information about when and how this memory was gained.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public ActionInfo Info { get; protected set; }
    parameters: []
    return:
      type: TinyLife.Actions.ActionInfo
    content.vb: >-
      <DataMember>

      Public Property Info As ActionInfo
  overload: TinyLife.Goals.Memory.Info*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: TinyLife.Goals.Memory.TimeSinceOccured
  commentId: P:TinyLife.Goals.Memory.TimeSinceOccured
  id: TimeSinceOccured
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: TimeSinceOccured
  nameWithType: Memory.TimeSinceOccured
  fullName: TinyLife.Goals.Memory.TimeSinceOccured
  type: Property
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: TimeSinceOccured
    path: ../TinyLife/Goals/Memory.cs
    startLine: 36
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nReturns the time since this memory occured. This uses <xref href=\"TinyLife.World.Map.Time\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TinyLife.Goals.Memory.TimeOccured\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TimeSpan TimeSinceOccured { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property TimeSinceOccured As TimeSpan
  overload: TinyLife.Goals.Memory.TimeSinceOccured*
- uid: TinyLife.Goals.Memory.#ctor(TinyLife.Goals.MemoryType,TinyLife.Actions.ActionInfo,System.TimeSpan)
  commentId: M:TinyLife.Goals.Memory.#ctor(TinyLife.Goals.MemoryType,TinyLife.Actions.ActionInfo,System.TimeSpan)
  id: '#ctor(TinyLife.Goals.MemoryType,TinyLife.Actions.ActionInfo,System.TimeSpan)'
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: Memory(MemoryType, ActionInfo, TimeSpan)
  nameWithType: Memory.Memory(MemoryType, ActionInfo, TimeSpan)
  fullName: TinyLife.Goals.Memory.Memory(TinyLife.Goals.MemoryType, TinyLife.Actions.ActionInfo, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Goals/Memory.cs
    startLine: 45
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nCreates a new memory with the given settings.\nIn most cases, <xref href=\"TinyLife.Goals.MemoryType.Construct%60%601(TinyLife.Actions.ActionInfo%2cSystem.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> should be used instead.\n"
  example: []
  syntax:
    content: public Memory(MemoryType type, ActionInfo info, TimeSpan timeOccured)
    parameters:
    - id: type
      type: TinyLife.Goals.MemoryType
      description: The type of this memory.
    - id: info
      type: TinyLife.Actions.ActionInfo
      description: The <xref href="TinyLife.Actions.ActionInfo" data-throw-if-not-resolved="false"></xref> that contains information about this memory.
    - id: timeOccured
      type: System.TimeSpan
      description: The in-game time that this event occured at.
    content.vb: Public Sub New(type As MemoryType, info As ActionInfo, timeOccured As TimeSpan)
  overload: TinyLife.Goals.Memory.#ctor*
  nameWithType.vb: Memory.New(MemoryType, ActionInfo, TimeSpan)
  fullName.vb: TinyLife.Goals.Memory.New(TinyLife.Goals.MemoryType, TinyLife.Actions.ActionInfo, System.TimeSpan)
  name.vb: New(MemoryType, ActionInfo, TimeSpan)
- uid: TinyLife.Goals.Memory.Validate(TinyLife.Objects.Person)
  commentId: M:TinyLife.Goals.Memory.Validate(TinyLife.Objects.Person)
  id: Validate(TinyLife.Objects.Person)
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: Validate(Person)
  nameWithType: Memory.Validate(Person)
  fullName: TinyLife.Goals.Memory.Validate(TinyLife.Objects.Person)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Validate
    path: ../TinyLife/Goals/Memory.cs
    startLine: 58
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nValidates this memory when the game is loaded. This method is claled in <xref href=\"TinyLife.Objects.Person.Validate\" data-throw-if-not-resolved=\"false\"></xref>.\nThis method reutrns <a href=\"https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool\">false</a> if this memory is invalid in some way, causing it to be removed.\n"
  example: []
  syntax:
    content: public virtual bool Validate(Person person)
    parameters:
    - id: person
      type: TinyLife.Objects.Person
      description: The person that has this memory.
    return:
      type: System.Boolean
      description: Whether this memory is valid.
    content.vb: Public Overridable Function Validate(person As Person) As Boolean
  overload: TinyLife.Goals.Memory.Validate*
- uid: TinyLife.Goals.Memory.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Goals.Memory.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  id: Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  parent: TinyLife.Goals.Memory
  langs:
  - csharp
  - vb
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Memory.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Goals.Memory.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  type: Method
  source:
    remote:
      path: TinyLife/Goals/Memory.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Update
    path: ../TinyLife/Goals/Memory.cs
    startLine: 71
  assemblies:
  - Tiny Life
  namespace: TinyLife.Goals
  summary: "\nA method that is called in <xref href=\"TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime%2cSystem.TimeSpan%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> for a person who has this memory.\n"
  example: []
  syntax:
    content: public virtual void Update(GameTime time, TimeSpan passedInGame, float speedMultiplier)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game&apos;s time
    - id: passedInGame
      type: System.TimeSpan
      description: The amount of time that has passed since the last call
    - id: speedMultiplier
      type: System.Single
      description: The game speed multiplier, which represents how fast things should happen, which is usually determined by <xref href="TinyLife.GameImpl.Speed" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub Update(time As GameTime, passedInGame As TimeSpan, speedMultiplier As Single)
  overload: TinyLife.Goals.Memory.Update*
  nameWithType.vb: Memory.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Goals.Memory.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
references:
- uid: TinyLife.Objects.Person
  commentId: T:TinyLife.Objects.Person
  parent: TinyLife.Objects
  name: Person
  nameWithType: Person
  fullName: TinyLife.Objects.Person
- uid: TinyLife.Goals.MemoryType
  commentId: T:TinyLife.Goals.MemoryType
  parent: TinyLife.Goals
  name: MemoryType
  nameWithType: MemoryType
  fullName: TinyLife.Goals.MemoryType
- uid: TinyLife.Goals
  commentId: N:TinyLife.Goals
  name: TinyLife.Goals
  nameWithType: TinyLife.Goals
  fullName: TinyLife.Goals
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Goals
    name: Goals
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  commentId: T:MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  parent: MLEM.Data.Json
  isExternal: true
  name: JsonTypeSafeGenericDataHolder
  nameWithType: JsonTypeSafeGenericDataHolder
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  isExternal: true
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData(string, object)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData(string, object)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(string, object)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(String, Object)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(String, Object)
  name.vb: SetData(String, Object)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(System.String,System.Object)
    name: SetData
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  definition: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetData<T>(string)
  nameWithType: JsonTypeSafeGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData<T>(string)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetData``1(System.String)
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
  parent: MLEM.Data.Json.JsonTypeSafeGenericDataHolder
  isExternal: true
  name: GetDataKeys()
  nameWithType: JsonTypeSafeGenericDataHolder.GetDataKeys()
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.GetDataKeys
    name: GetDataKeys
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TinyLife.Goals.Memory.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<Memory>(Memory)
  nameWithType: Extensions.JsonCopy<Memory>(Memory)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Goals.Memory>(TinyLife.Goals.Memory)
  nameWithType.vb: Extensions.JsonCopy(Of Memory)(Memory)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Goals.Memory)(TinyLife.Goals.Memory)
  name.vb: JsonCopy(Of Memory)(Memory)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Memory)
    name: JsonCopy
  - name: <
  - uid: TinyLife.Goals.Memory
    name: Memory
  - name: '>'
  - name: (
  - uid: TinyLife.Goals.Memory
    name: Memory
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.Goals.Memory)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.Goals.Memory
    name: Memory
  - name: )
  - name: (
  - uid: TinyLife.Goals.Memory
    name: Memory
  - name: )
- uid: TinyLife.Objects
  commentId: N:TinyLife.Objects
  name: TinyLife.Objects
  nameWithType: TinyLife.Objects
  fullName: TinyLife.Objects
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Objects
    name: Objects
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.Json
  commentId: N:MLEM.Data.Json
  isExternal: true
  name: MLEM.Data.Json
  nameWithType: MLEM.Data.Json
  fullName: MLEM.Data.Json
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Data
    name: Data
    isExternal: true
  - name: .
  - uid: MLEM.Data.Json
    name: Json
    isExternal: true
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  isExternal: true
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
  spec.vb:
  - uid: MLEM
    name: MLEM
    isExternal: true
  - name: .
  - uid: MLEM.Misc
    name: Misc
    isExternal: true
- uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetData<T>(string, T)
  nameWithType: JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Data.Json.JsonTypeSafeGenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
- uid: TinyLife.Goals.Memory.TimeOccured*
  commentId: Overload:TinyLife.Goals.Memory.TimeOccured
  name: TimeOccured
  nameWithType: Memory.TimeOccured
  fullName: TinyLife.Goals.Memory.TimeOccured
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: TinyLife.Actions.ActionInfo
  commentId: T:TinyLife.Actions.ActionInfo
  parent: TinyLife.Actions
  name: ActionInfo
  nameWithType: ActionInfo
  fullName: TinyLife.Actions.ActionInfo
- uid: TinyLife.Goals.Memory.Info*
  commentId: Overload:TinyLife.Goals.Memory.Info
  name: Info
  nameWithType: Memory.Info
  fullName: TinyLife.Goals.Memory.Info
- uid: TinyLife.Actions
  commentId: N:TinyLife.Actions
  name: TinyLife.Actions
  nameWithType: TinyLife.Actions
  fullName: TinyLife.Actions
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
  spec.vb:
  - uid: TinyLife
    name: TinyLife
  - name: .
  - uid: TinyLife.Actions
    name: Actions
- uid: TinyLife.World.Map.Time
  commentId: P:TinyLife.World.Map.Time
  name: Time
  nameWithType: Map.Time
  fullName: TinyLife.World.Map.Time
- uid: TinyLife.Goals.Memory.TimeOccured
  commentId: P:TinyLife.Goals.Memory.TimeOccured
  name: TimeOccured
  nameWithType: Memory.TimeOccured
  fullName: TinyLife.Goals.Memory.TimeOccured
- uid: TinyLife.Goals.Memory.TimeSinceOccured*
  commentId: Overload:TinyLife.Goals.Memory.TimeSinceOccured
  name: TimeSinceOccured
  nameWithType: Memory.TimeSinceOccured
  fullName: TinyLife.Goals.Memory.TimeSinceOccured
- uid: TinyLife.Goals.MemoryType.Construct``1(TinyLife.Actions.ActionInfo,System.TimeSpan)
  commentId: M:TinyLife.Goals.MemoryType.Construct``1(TinyLife.Actions.ActionInfo,System.TimeSpan)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Construct<T>(ActionInfo, TimeSpan)
  nameWithType: MemoryType.Construct<T>(ActionInfo, TimeSpan)
  fullName: TinyLife.Goals.MemoryType.Construct<T>(TinyLife.Actions.ActionInfo, System.TimeSpan)
  nameWithType.vb: MemoryType.Construct(Of T)(ActionInfo, TimeSpan)
  fullName.vb: TinyLife.Goals.MemoryType.Construct(Of T)(TinyLife.Actions.ActionInfo, System.TimeSpan)
  name.vb: Construct(Of T)(ActionInfo, TimeSpan)
  spec.csharp:
  - uid: TinyLife.Goals.MemoryType.Construct``1(TinyLife.Actions.ActionInfo,System.TimeSpan)
    name: Construct
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  spec.vb:
  - uid: TinyLife.Goals.MemoryType.Construct``1(TinyLife.Actions.ActionInfo,System.TimeSpan)
    name: Construct
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: TinyLife.Actions.ActionInfo
    name: ActionInfo
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: TinyLife.Goals.Memory.#ctor*
  commentId: Overload:TinyLife.Goals.Memory.#ctor
  name: Memory
  nameWithType: Memory.Memory
  fullName: TinyLife.Goals.Memory.Memory
  nameWithType.vb: Memory.New
  fullName.vb: TinyLife.Goals.Memory.New
  name.vb: New
- uid: TinyLife.Objects.Person.Validate
  commentId: M:TinyLife.Objects.Person.Validate
  name: Validate()
  nameWithType: Person.Validate()
  fullName: TinyLife.Objects.Person.Validate()
  spec.csharp:
  - uid: TinyLife.Objects.Person.Validate
    name: Validate
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.Validate
    name: Validate
  - name: (
  - name: )
- uid: TinyLife.Goals.Memory.Validate*
  commentId: Overload:TinyLife.Goals.Memory.Validate
  name: Validate
  nameWithType: Memory.Validate
  fullName: TinyLife.Goals.Memory.Validate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  commentId: M:TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Update(GameTime, TimeSpan, float)
  nameWithType: Person.Update(GameTime, TimeSpan, float)
  fullName: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, float)
  nameWithType.vb: Person.Update(GameTime, TimeSpan, Single)
  fullName.vb: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime, System.TimeSpan, Single)
  name.vb: Update(GameTime, TimeSpan, Single)
  spec.csharp:
  - uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: TinyLife.Objects.Person.Update(Microsoft.Xna.Framework.GameTime,System.TimeSpan,System.Single)
    name: Update
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TinyLife.GameImpl.Speed
  commentId: P:TinyLife.GameImpl.Speed
  name: Speed
  nameWithType: GameImpl.Speed
  fullName: TinyLife.GameImpl.Speed
- uid: TinyLife.Goals.Memory.Update*
  commentId: Overload:TinyLife.Goals.Memory.Update
  name: Update
  nameWithType: Memory.Update
  fullName: TinyLife.Goals.Memory.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
