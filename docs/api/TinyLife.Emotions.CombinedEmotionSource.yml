### YamlMime:ManagedReference
items:
- uid: TinyLife.Emotions.CombinedEmotionSource
  commentId: T:TinyLife.Emotions.CombinedEmotionSource
  id: CombinedEmotionSource
  parent: TinyLife.Emotions
  children:
  - TinyLife.Emotions.CombinedEmotionSource.#ctor(TinyLife.Emotions.IEmotionSource[])
  - TinyLife.Emotions.CombinedEmotionSource.SourceString
  langs:
  - csharp
  - vb
  name: CombinedEmotionSource
  nameWithType: CombinedEmotionSource
  fullName: TinyLife.Emotions.CombinedEmotionSource
  type: Class
  source:
    remote:
      path: TinyLife/Emotions/IEmotionSource.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: CombinedEmotionSource
    path: ../TinyLife/Emotions/IEmotionSource.cs
    startLine: 24
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA combined emotion source is an <xref href=\"TinyLife.Emotions.IEmotionSource\" data-throw-if-not-resolved=\"false\"></xref> that combines multiple underlying emotion sources together.\nA combined emotion source is displayed as multiple lines in the <xref href=\"TinyLife.Emotions.CombinedEmotionSource.SourceString\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class CombinedEmotionSource : IEmotionSource'
    content.vb: >-
      Public Class CombinedEmotionSource
          Implements IEmotionSource
  inheritance:
  - System.Object
  implements:
  - TinyLife.Emotions.IEmotionSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - TinyLife.Emotions.CombinedEmotionSource.TinyLife.Utilities.Extensions.JsonCopy``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TinyLife.Emotions.CombinedEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.CombinedEmotionSource.SourceString
  id: SourceString
  parent: TinyLife.Emotions.CombinedEmotionSource
  langs:
  - csharp
  - vb
  name: SourceString
  nameWithType: CombinedEmotionSource.SourceString
  fullName: TinyLife.Emotions.CombinedEmotionSource.SourceString
  type: Property
  source:
    remote:
      path: TinyLife/Emotions/IEmotionSource.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: SourceString
    path: ../TinyLife/Emotions/IEmotionSource.cs
    startLine: 27
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nA (localized) string that is displayed when hovering over an <xref href=\"TinyLife.Emotions.EmotionModifier\" data-throw-if-not-resolved=\"false\"></xref> that has this source\n"
  example: []
  syntax:
    content: public string SourceString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SourceString As String
  overload: TinyLife.Emotions.CombinedEmotionSource.SourceString*
  implements:
  - TinyLife.Emotions.IEmotionSource.SourceString
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TinyLife.Emotions.CombinedEmotionSource.#ctor(TinyLife.Emotions.IEmotionSource[])
  commentId: M:TinyLife.Emotions.CombinedEmotionSource.#ctor(TinyLife.Emotions.IEmotionSource[])
  id: '#ctor(TinyLife.Emotions.IEmotionSource[])'
  parent: TinyLife.Emotions.CombinedEmotionSource
  langs:
  - csharp
  - vb
  name: CombinedEmotionSource(IEmotionSource[])
  nameWithType: CombinedEmotionSource.CombinedEmotionSource(IEmotionSource[])
  fullName: TinyLife.Emotions.CombinedEmotionSource.CombinedEmotionSource(TinyLife.Emotions.IEmotionSource[])
  type: Constructor
  source:
    remote:
      path: TinyLife/Emotions/IEmotionSource.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: .ctor
    path: ../TinyLife/Emotions/IEmotionSource.cs
    startLine: 35
  assemblies:
  - Tiny Life
  namespace: TinyLife.Emotions
  summary: "\nCreates a new combined emotion source with the given underlying sources.\n"
  example: []
  syntax:
    content: public CombinedEmotionSource(params IEmotionSource[] sources)
    parameters:
    - id: sources
      type: TinyLife.Emotions.IEmotionSource[]
      description: The underlying sources to combine.
    content.vb: Public Sub New(ParamArray sources As IEmotionSource())
  overload: TinyLife.Emotions.CombinedEmotionSource.#ctor*
  nameWithType.vb: CombinedEmotionSource.CombinedEmotionSource(IEmotionSource())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TinyLife.Emotions.CombinedEmotionSource.CombinedEmotionSource(TinyLife.Emotions.IEmotionSource())
  name.vb: CombinedEmotionSource(IEmotionSource())
references:
- uid: TinyLife.Emotions.IEmotionSource
  commentId: T:TinyLife.Emotions.IEmotionSource
  parent: TinyLife.Emotions
  name: IEmotionSource
  nameWithType: IEmotionSource
  fullName: TinyLife.Emotions.IEmotionSource
- uid: TinyLife.Emotions.CombinedEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.CombinedEmotionSource.SourceString
  isExternal: true
- uid: TinyLife.Emotions
  commentId: N:TinyLife.Emotions
  name: TinyLife.Emotions
  nameWithType: TinyLife.Emotions
  fullName: TinyLife.Emotions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Emotions.CombinedEmotionSource.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<CombinedEmotionSource>()
  nameWithType: Extensions.JsonCopy<CombinedEmotionSource>()
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.CombinedEmotionSource>()
  nameWithType.vb: Extensions.JsonCopy(Of CombinedEmotionSource)()
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.CombinedEmotionSource)()
  name.vb: JsonCopy(Of CombinedEmotionSource)()
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy<CombinedEmotionSource>
    nameWithType: Extensions.JsonCopy<CombinedEmotionSource>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.Emotions.CombinedEmotionSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1
    name: JsonCopy(Of CombinedEmotionSource)
    nameWithType: Extensions.JsonCopy(Of CombinedEmotionSource)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.Emotions.CombinedEmotionSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy<T>
    nameWithType: Extensions.JsonCopy<T>
    fullName: TinyLife.Utilities.Extensions.JsonCopy<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy(Of T)
    nameWithType: Extensions.JsonCopy(Of T)
    fullName: TinyLife.Utilities.Extensions.JsonCopy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
- uid: TinyLife.Emotions.CombinedEmotionSource.SourceString*
  commentId: Overload:TinyLife.Emotions.CombinedEmotionSource.SourceString
  name: SourceString
  nameWithType: CombinedEmotionSource.SourceString
  fullName: TinyLife.Emotions.CombinedEmotionSource.SourceString
- uid: TinyLife.Emotions.IEmotionSource.SourceString
  commentId: P:TinyLife.Emotions.IEmotionSource.SourceString
  parent: TinyLife.Emotions.IEmotionSource
  name: SourceString
  nameWithType: IEmotionSource.SourceString
  fullName: TinyLife.Emotions.IEmotionSource.SourceString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TinyLife.Emotions.CombinedEmotionSource.#ctor*
  commentId: Overload:TinyLife.Emotions.CombinedEmotionSource.#ctor
  name: CombinedEmotionSource
  nameWithType: CombinedEmotionSource.CombinedEmotionSource
  fullName: TinyLife.Emotions.CombinedEmotionSource.CombinedEmotionSource
- uid: TinyLife.Emotions.IEmotionSource[]
  isExternal: true
  name: IEmotionSource[]
  nameWithType: IEmotionSource[]
  fullName: TinyLife.Emotions.IEmotionSource[]
  nameWithType.vb: IEmotionSource()
  fullName.vb: TinyLife.Emotions.IEmotionSource()
  name.vb: IEmotionSource()
  spec.csharp:
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    nameWithType: IEmotionSource
    fullName: TinyLife.Emotions.IEmotionSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: TinyLife.Emotions.IEmotionSource
    name: IEmotionSource
    nameWithType: IEmotionSource
    fullName: TinyLife.Emotions.IEmotionSource
  - name: ()
    nameWithType: ()
    fullName: ()
