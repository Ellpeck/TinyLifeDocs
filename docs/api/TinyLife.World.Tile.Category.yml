### YamlMime:ManagedReference
items:
- uid: TinyLife.World.Tile.Category
  commentId: T:TinyLife.World.Tile.Category
  id: Tile.Category
  parent: TinyLife.World
  children:
  - TinyLife.World.Tile.Category.Natural
  - TinyLife.World.Tile.Category.None
  - TinyLife.World.Tile.Category.Road
  - TinyLife.World.Tile.Category.ValidExitPoint
  - TinyLife.World.Tile.Category.Water
  langs:
  - csharp
  - vb
  name: Tile.Category
  nameWithType: Tile.Category
  fullName: TinyLife.World.Tile.Category
  type: Enum
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Category
    path: ../TinyLife/World/Tile.cs
    startLine: 362
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: A set of enumeration flags used by <xref href="TinyLife.World.Tile" data-throw-if-not-resolved="false"></xref> to determine a set of settings for it.
  example: []
  syntax:
    content: >-
      [Flags]

      public enum Tile.Category
    content.vb: >-
      <Flags>

      Public Enum Tile.Category
  extensionMethods:
  - TinyLife.World.Tile.Category.TinyLife.Utilities.Extensions.JsonCopy``1
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: TinyLife.World.Tile.Category.None
  commentId: F:TinyLife.World.Tile.Category.None
  id: None
  parent: TinyLife.World.Tile.Category
  langs:
  - csharp
  - vb
  name: None
  nameWithType: Tile.Category.None
  fullName: TinyLife.World.Tile.Category.None
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: None
    path: ../TinyLife/World/Tile.cs
    startLine: 368
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: No special categories.
  example: []
  syntax:
    content: None = 0
    return:
      type: TinyLife.World.Tile.Category
- uid: TinyLife.World.Tile.Category.Natural
  commentId: F:TinyLife.World.Tile.Category.Natural
  id: Natural
  parent: TinyLife.World.Tile.Category
  langs:
  - csharp
  - vb
  name: Natural
  nameWithType: Tile.Category.Natural
  fullName: TinyLife.World.Tile.Category.Natural
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Natural
    path: ../TinyLife/World/Tile.cs
    startLine: 372
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: A natural tile category, which refers to tiles that can hold plants, trees, etc.
  example: []
  syntax:
    content: Natural = 1
    return:
      type: TinyLife.World.Tile.Category
- uid: TinyLife.World.Tile.Category.Water
  commentId: F:TinyLife.World.Tile.Category.Water
  id: Water
  parent: TinyLife.World.Tile.Category
  langs:
  - csharp
  - vb
  name: Water
  nameWithType: Tile.Category.Water
  fullName: TinyLife.World.Tile.Category.Water
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Water
    path: ../TinyLife/World/Tile.cs
    startLine: 376
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: A water tile category, which refers to tiles that are considered to be water.
  example: []
  syntax:
    content: Water = 2
    return:
      type: TinyLife.World.Tile.Category
- uid: TinyLife.World.Tile.Category.ValidExitPoint
  commentId: F:TinyLife.World.Tile.Category.ValidExitPoint
  id: ValidExitPoint
  parent: TinyLife.World.Tile.Category
  langs:
  - csharp
  - vb
  name: ValidExitPoint
  nameWithType: Tile.Category.ValidExitPoint
  fullName: TinyLife.World.Tile.Category.ValidExitPoint
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: ValidExitPoint
    path: ../TinyLife/World/Tile.cs
    startLine: 381
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    A tile category for tiles that should create an exit point if placed at the border of a map.

    Tiles of this category can be queried using <xref href="TinyLife.World.Map.GetExitPoints" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: ValidExitPoint = 4
    return:
      type: TinyLife.World.Tile.Category
- uid: TinyLife.World.Tile.Category.Road
  commentId: F:TinyLife.World.Tile.Category.Road
  id: Road
  parent: TinyLife.World.Tile.Category
  langs:
  - csharp
  - vb
  name: Road
  nameWithType: Tile.Category.Road
  fullName: TinyLife.World.Tile.Category.Road
  type: Field
  source:
    remote:
      path: TinyLife/World/Tile.cs
      branch: main
      repo: https://git.ellpeck.de/Ellpeck/TinyLife
    id: Road
    path: ../TinyLife/World/Tile.cs
    startLine: 386
  assemblies:
  - Tiny Life
  namespace: TinyLife.World
  summary: >-
    A tile category for roads, which are tiles that automatically generate a road if placed with a width of five tiles.

    Roads can be queried using <xref href="TinyLife.World.Map.GetRoads" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Road = 8
    return:
      type: TinyLife.World.Tile.Category
references:
- uid: TinyLife.World.Tile
  commentId: T:TinyLife.World.Tile
  parent: TinyLife.World
  href: TinyLife.World.Tile.html
  name: Tile
  nameWithType: Tile
  fullName: TinyLife.World.Tile
- uid: TinyLife.World
  commentId: N:TinyLife.World
  href: TinyLife.html
  name: TinyLife.World
  nameWithType: TinyLife.World
  fullName: TinyLife.World
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.World
    name: World
    href: TinyLife.World.html
- uid: TinyLife.World.Tile.Category.TinyLife.Utilities.Extensions.JsonCopy``1
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  parent: TinyLife.Utilities.Extensions
  definition: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<Category>(Category)
  nameWithType: Extensions.JsonCopy<Tile.Category>(Tile.Category)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<TinyLife.World.Tile.Category>(TinyLife.World.Tile.Category)
  nameWithType.vb: Extensions.JsonCopy(Of Tile.Category)(Tile.Category)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of TinyLife.World.Tile.Category)(TinyLife.World.Tile.Category)
  name.vb: JsonCopy(Of Category)(Category)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Tile.Category)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - uid: TinyLife.World.Tile.Category
    name: Category
    href: TinyLife.World.Tile.Category.html
  - name: '>'
  - name: (
  - uid: TinyLife.World.Tile.Category
    name: Category
    href: TinyLife.World.Tile.Category.html
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(TinyLife.World.Tile.Category)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: TinyLife.World.Tile.Category
    name: Category
    href: TinyLife.World.Tile.Category.html
  - name: )
  - name: (
  - uid: TinyLife.World.Tile.Category
    name: Category
    href: TinyLife.World.Tile.Category.html
  - name: )
- uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  commentId: M:TinyLife.Utilities.Extensions.JsonCopy``1(``0)
  href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  name: JsonCopy<T>(T)
  nameWithType: Extensions.JsonCopy<T>(T)
  fullName: TinyLife.Utilities.Extensions.JsonCopy<T>(T)
  nameWithType.vb: Extensions.JsonCopy(Of T)(T)
  fullName.vb: TinyLife.Utilities.Extensions.JsonCopy(Of T)(T)
  name.vb: JsonCopy(Of T)(T)
  spec.csharp:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: TinyLife.Utilities.Extensions.JsonCopy``1(``0)
    name: JsonCopy
    href: TinyLife.Utilities.Extensions.html#TinyLife_Utilities_Extensions_JsonCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: TinyLife.Utilities.Extensions
  commentId: T:TinyLife.Utilities.Extensions
  parent: TinyLife.Utilities
  href: TinyLife.Utilities.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: TinyLife.Utilities.Extensions
- uid: TinyLife.Utilities
  commentId: N:TinyLife.Utilities
  href: TinyLife.html
  name: TinyLife.Utilities
  nameWithType: TinyLife.Utilities
  fullName: TinyLife.Utilities
  spec.csharp:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
  spec.vb:
  - uid: TinyLife
    name: TinyLife
    href: TinyLife.html
  - name: .
  - uid: TinyLife.Utilities
    name: Utilities
    href: TinyLife.Utilities.html
- uid: TinyLife.World.Tile.Category
  commentId: T:TinyLife.World.Tile.Category
  parent: TinyLife.World
  href: TinyLife.World.Tile.html
  name: Tile.Category
  nameWithType: Tile.Category
  fullName: TinyLife.World.Tile.Category
  spec.csharp:
  - uid: TinyLife.World.Tile
    name: Tile
    href: TinyLife.World.Tile.html
  - name: .
  - uid: TinyLife.World.Tile.Category
    name: Category
    href: TinyLife.World.Tile.Category.html
  spec.vb:
  - uid: TinyLife.World.Tile
    name: Tile
    href: TinyLife.World.Tile.html
  - name: .
  - uid: TinyLife.World.Tile.Category
    name: Category
    href: TinyLife.World.Tile.Category.html
- uid: TinyLife.World.Map.GetExitPoints
  commentId: M:TinyLife.World.Map.GetExitPoints
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetExitPoints
  name: GetExitPoints()
  nameWithType: Map.GetExitPoints()
  fullName: TinyLife.World.Map.GetExitPoints()
  spec.csharp:
  - uid: TinyLife.World.Map.GetExitPoints
    name: GetExitPoints
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetExitPoints
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetExitPoints
    name: GetExitPoints
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetExitPoints
  - name: (
  - name: )
- uid: TinyLife.World.Map.GetRoads
  commentId: M:TinyLife.World.Map.GetRoads
  href: TinyLife.World.Map.html#TinyLife_World_Map_GetRoads
  name: GetRoads()
  nameWithType: Map.GetRoads()
  fullName: TinyLife.World.Map.GetRoads()
  spec.csharp:
  - uid: TinyLife.World.Map.GetRoads
    name: GetRoads
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetRoads
  - name: (
  - name: )
  spec.vb:
  - uid: TinyLife.World.Map.GetRoads
    name: GetRoads
    href: TinyLife.World.Map.html#TinyLife_World_Map_GetRoads
  - name: (
  - name: )
